(function () {
  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  (self["webpackChunksheriff"] = self["webpackChunksheriff"] || []).push([["main"], {
    /***/
    98255:
    /*!*******************************************************!*\
      !*** ./$_lazy_route_resources/ lazy namespace object ***!
      \*******************************************************/

    /***/
    function _(module) {
      function webpackEmptyAsyncContext(req) {
        // Here Promise.resolve().then() is used instead of new Promise() to prevent
        // uncaught exception popping up in devtools
        return Promise.resolve().then(function () {
          var e = new Error("Cannot find module '" + req + "'");
          e.code = 'MODULE_NOT_FOUND';
          throw e;
        });
      }

      webpackEmptyAsyncContext.keys = function () {
        return [];
      };

      webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
      webpackEmptyAsyncContext.id = 98255;
      module.exports = webpackEmptyAsyncContext;
      /***/
    },

    /***/
    63074:
    /*!*************************************!*\
      !*** ./src/app/animations/index.ts ***!
      \*************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "getIonPageElement": function getIonPageElement() {
          return (
            /* binding */
            _getIonPageElement
          );
        },

        /* harmony export */
        "fancyAnimation": function fancyAnimation() {
          return (
            /* binding */
            _fancyAnimation
          );
        },

        /* harmony export */
        "modalEnterAnimation": function modalEnterAnimation() {
          return (
            /* binding */
            _modalEnterAnimation
          );
        },

        /* harmony export */
        "modalLeaveAnimation": function modalLeaveAnimation() {
          return (
            /* binding */
            _modalLeaveAnimation
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @ionic/angular */
      80476);

      var animationCtrl = new _ionic_angular__WEBPACK_IMPORTED_MODULE_0__.AnimationController();

      var _getIonPageElement = function _getIonPageElement(element) {
        if (element.classList.contains('ion-page')) {
          return element;
        }

        var ionPage = element.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs');

        if (ionPage) {
          return ionPage;
        } // idk, return the original element so at least something animates and we don't have a null pointer


        return element;
      };

      var _fancyAnimation = function _fancyAnimation(_, opts) {
        var backDirection = opts.direction === 'back';
        var enteringEl = opts.enteringEl;
        var leavingEl = opts.leavingEl;

        var enteringPageEl = _getIonPageElement(enteringEl);

        var rootTransition = animationCtrl.create();
        var enterTransition = animationCtrl.create();
        var leavingTransition = animationCtrl.create();
        leavingTransition.addElement(_getIonPageElement(leavingEl)).duration(250);
        enterTransition.addElement(enteringPageEl).duration(250).fill('both').beforeRemoveClass('ion-page-invisible');

        if (!backDirection) {
          enterTransition.beforeStyles({
            border: 'thin solid black'
          }).keyframes([{
            offset: 0,
            transform: 'scale(0)'
          }, {
            offset: 1,
            transform: 'scale(1)'
          }]).afterClearStyles(['border']);
          leavingTransition.keyframes([{
            offset: 0,
            opacity: 1
          }, {
            offset: 1,
            opacity: 0.1
          }]);
        } else {
          enterTransition.keyframes([{
            offset: 0,
            opacity: 0.1
          }, {
            offset: 1,
            opacity: 1
          }]);
          leavingTransition.beforeStyles({
            border: 'thin solid black'
          }).keyframes([{
            offset: 0,
            transform: 'scale(1)'
          }, {
            offset: 1,
            transform: 'scale(0)'
          }]).afterClearStyles(['border']);
        }

        rootTransition.addAnimation([enterTransition, leavingTransition]);
        return rootTransition;
      };

      var _modalEnterAnimation = function _modalEnterAnimation(baseEl) {
        var backdropAnimation = animationCtrl.create().addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', '0.01', '0.9').duration(500);
        var wrapperAnimation = animationCtrl.create().addElement(baseEl.querySelector('.modal-wrapper')).delay(500).keyframes([{
          offset: 0,
          opacity: '0',
          transform: 'scale(0)'
        }, {
          offset: 1,
          opacity: '0.99',
          transform: 'scale(1)'
        }]).duration(250);
        return animationCtrl.create().addElement(baseEl).easing('ease-out').addAnimation([backdropAnimation, wrapperAnimation]);
      };

      var _modalLeaveAnimation = function _modalLeaveAnimation(baseEl) {
        return _modalEnterAnimation(baseEl).direction('reverse');
      };
      /***/

    },

    /***/
    90158:
    /*!***************************************!*\
      !*** ./src/app/app-routing.module.ts ***!
      \***************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "AppRoutingModule": function AppRoutingModule() {
          return (
            /* binding */
            _AppRoutingModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/router */
      39895);
      /* harmony import */


      var _auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./auth/auth.guard */
      3870); ////////////////////////////////////////////////////////////////////////////////////////////


      var routes = [{
        path: '',
        redirectTo: '/auth',
        pathMatch: 'full'
      }, ///// AUTH /////
      {
        path: 'auth',
        loadChildren: function loadChildren() {
          return __webpack_require__.e(
          /*! import() */
          "src_app_auth_auth_module_ts").then(__webpack_require__.bind(__webpack_require__,
          /*! ./auth/auth.module */
          71674)).then(function (m) {
            return m.AuthPageModule;
          });
        }
      }, ///// TABS /////
      {
        path: 'tabs',
        loadChildren: function loadChildren() {
          return Promise.all(
          /*! import() */
          [__webpack_require__.e("default-node_modules_ng-circle-progress___ivy_ngcc___fesm2015_ng-circle-progress_js"), __webpack_require__.e("src_app_tabs_tabs_module_ts")]).then(__webpack_require__.bind(__webpack_require__,
          /*! ./tabs/tabs.module */
          15564)).then(function (m) {
            return m.TabsPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, ///// PAGES /////
      {
        path: 'settings',
        loadChildren: function loadChildren() {
          return Promise.all(
          /*! import() */
          [__webpack_require__.e("default-node_modules_ng-circle-progress___ivy_ngcc___fesm2015_ng-circle-progress_js"), __webpack_require__.e("src_app_settings_settings_module_ts")]).then(__webpack_require__.bind(__webpack_require__,
          /*! ./settings/settings.module */
          27075)).then(function (m) {
            return m.SettingsPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'profile',
        loadChildren: function loadChildren() {
          return Promise.all(
          /*! import() */
          [__webpack_require__.e("default-node_modules_ng-circle-progress___ivy_ngcc___fesm2015_ng-circle-progress_js"), __webpack_require__.e("src_app_profile_profile_module_ts")]).then(__webpack_require__.bind(__webpack_require__,
          /*! ./profile/profile.module */
          84523)).then(function (m) {
            return m.ProfilePageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'people',
        loadChildren: function loadChildren() {
          return Promise.all(
          /*! import() */
          [__webpack_require__.e("default-node_modules_ng-circle-progress___ivy_ngcc___fesm2015_ng-circle-progress_js"), __webpack_require__.e("src_app_people_people_people_module_ts")]).then(__webpack_require__.bind(__webpack_require__,
          /*! ./people/people/people.module */
          38710)).then(function (m) {
            return m.PeoplePageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'pay',
        loadChildren: function loadChildren() {
          return Promise.all(
          /*! import() */
          [__webpack_require__.e("default-node_modules_ng-circle-progress___ivy_ngcc___fesm2015_ng-circle-progress_js"), __webpack_require__.e("src_app_pay_pay_module_ts")]).then(__webpack_require__.bind(__webpack_require__,
          /*! ./pay/pay.module */
          59485)).then(function (m) {
            return m.PayPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'serverlog',
        loadChildren: function loadChildren() {
          return Promise.all(
          /*! import() */
          [__webpack_require__.e("default-node_modules_ng-circle-progress___ivy_ngcc___fesm2015_ng-circle-progress_js"), __webpack_require__.e("src_app_serverlog_serverlog_module_ts")]).then(__webpack_require__.bind(__webpack_require__,
          /*! ./serverlog/serverlog.module */
          36958)).then(function (m) {
            return m.ServerlogPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'snoop',
        loadChildren: function loadChildren() {
          return Promise.all(
          /*! import() */
          [__webpack_require__.e("default-node_modules_ng-circle-progress___ivy_ngcc___fesm2015_ng-circle-progress_js"), __webpack_require__.e("src_app_snoop_snoop_module_ts")]).then(__webpack_require__.bind(__webpack_require__,
          /*! ./snoop/snoop.module */
          47607)).then(function (m) {
            return m.SnoopPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, ///// MODALS /////  
      // FirstRun
      {
        path: 'firstrun',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/firstrun/firstrun.module */
          5628)).then(function (m) {
            return m.FirstRunPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, // DateRange
      {
        path: 'daterange',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/daterange/daterange.module */
          71369)).then(function (m) {
            return m.DateRangePageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, // TSheets
      {
        path: 'tsheet-detail',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/tsheet-detail/tsheet-detail.module */
          77963)).then(function (m) {
            return m.TSheetDetailPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'tsheet-add',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/tsheet-detail/tsheet-add/tsheet-add.module */
          3690)).then(function (m) {
            return m.TSheetAddPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'tsheet-breaks',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/tsheet-detail/tsheet-breaks/tsheet-breaks.module */
          91806)).then(function (m) {
            return m.TSheetBreaksPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'tsheet-history',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/tsheet-detail/tsheet-history/tsheet-history.module */
          29080)).then(function (m) {
            return m.TSheetHistoryPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, // Rosters
      {
        path: 'roster-detail',
        loadChildren: function loadChildren() {
          return __webpack_require__.e(
          /*! import() */
          "src_app_modals_detail_roster-detail_roster-detail_module_ts").then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/roster-detail/roster-detail.module */
          22191)).then(function (m) {
            return m.RosterDetailPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, // Tasks
      {
        path: 'task-add',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/task-add/task-add.module */
          43357)).then(function (m) {
            return m.TaskAddPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'taskassignee',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/task-add/taskassignee/taskassignee.module */
          46361)).then(function (m) {
            return m.TaskAssigneePageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, // News/Memos
      {
        path: 'news-detail',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/news-detail/news-detail.module */
          43175)).then(function (m) {
            return m.NewsDetailPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'news-add',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/news-detail/news-add/news-add.module */
          48990)).then(function (m) {
            return m.NewsAddPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }, {
        path: 'recipients',
        loadChildren: function loadChildren() {
          return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,
          /*! ./modals/detail/news-detail/news-add/recipients/recipients.module */
          76356)).then(function (m) {
            return m.RecipientsPageModule;
          });
        },
        canLoad: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
      }]; ////////////////////////////////////////////////////////////////////////////////////////////

      var _AppRoutingModule = function AppRoutingModule() {
        _classCallCheck(this, AppRoutingModule);
      };

      _AppRoutingModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule.forRoot(routes, {
          preloadingStrategy: _angular_router__WEBPACK_IMPORTED_MODULE_3__.PreloadAllModules,
          enableTracing: false
        })],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule]
      })], _AppRoutingModule); ////////////////////////////////////////////////////////////////////////////////////////////

      /***/
    },

    /***/
    55041:
    /*!**********************************!*\
      !*** ./src/app/app.component.ts ***!
      \**********************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "AppComponent": function AppComponent() {
          return (
            /* binding */
            _AppComponent
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_app_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./app.component.html */
      91106);
      /* harmony import */


      var _app_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./app.component.scss */
      43069);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
      /*! @angular/router */
      39895);
      /* harmony import */


      var _services_deputy_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./services/deputy.service */
      22092);
      /* harmony import */


      var _services_events_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./services/events.service */
      80106);
      /* harmony import */


      var _services_detail_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./services/detail.service */
      52153);
      /* harmony import */


      var _services_storage_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./services/storage.service */
      71188);
      /* harmony import */


      var _services_sqlite_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./services/sqlite.service */
      90636);
      /* harmony import */


      var _services_datetime_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./services/datetime.service */
      12826);
      /* harmony import */


      var _services_app_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./services/app.service */
      66475);
      /* harmony import */


      var _services_calendar_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ./services/calendar.service */
      49603);
      /* harmony import */


      var _services_notifications_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./services/notifications.service */
      79744);
      /* harmony import */


      var _services_push_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./services/push.service */
      52314);
      /* harmony import */


      var _services_firebase_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ./services/firebase.service */
      19446);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! rxjs/operators */
      45435);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _capacitor_status_bar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! @capacitor/status-bar */
      64909);
      /* harmony import */


      var _capacitor_splash_screen__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! @capacitor/splash-screen */
      88592);
      /* harmony import */


      var _capacitor_app__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! @capacitor/app */
      42138);
      /* harmony import */


      var _capacitor_dialog__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! @capacitor/dialog */
      63540);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! jquery */
      91704);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_17__);
      /* harmony import */


      var lodash__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! lodash */
      23815);
      /* harmony import */


      var lodash__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_18__); //////////////////////////////////////////////////////////////////////////////////////


      var _AppComponent = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function AppComponent(platform, menu, navController, evServ, router, logger, deputy, detailServ, sqlServ, storeServ, dT, noteServ, appServ, calServ, fireServ, pushServ) {
          _classCallCheck(this, AppComponent);

          this.platform = platform;
          this.menu = menu;
          this.navController = navController;
          this.evServ = evServ;
          this.router = router;
          this.logger = logger;
          this.deputy = deputy;
          this.detailServ = detailServ;
          this.sqlServ = sqlServ;
          this.storeServ = storeServ;
          this.dT = dT;
          this.noteServ = noteServ;
          this.appServ = appServ;
          this.calServ = calServ;
          this.fireServ = fireServ;
          this.pushServ = pushServ;
          this.tabLinksShowing = false;
          this.menuBioInfoDone = false;
          this.shouldSaveShield = false;
          this.appInitDone = false;
          this.fb_login_method = null;
          this.fct_token = null;
          this.fe_token = null;
          this.fct_expires = null;
          this.deputyRefresh = null;
          this.sserverRefresh = null;
          this.doShowIAPBubble = false;
          this.iapBubbleData = null;

          if (localStorage.getItem('myDoReload') !== null) {
            localStorage.removeItem('myDoReload');
          }

          ;
          this.initApp();
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(AppComponent, [{
          key: "initApp",
          value: function initApp() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
              var _this = this;

              return regeneratorRuntime.wrap(function _callee4$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      this.logger.info('[App|initApp] ()...');
                      this.platform.ready().then(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(_this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
                          var _this2 = this;

                          var initSub, menuEASub;
                          return regeneratorRuntime.wrap(function _callee3$(_context3) {
                            while (1) {
                              switch (_context3.prev = _context3.next) {
                                case 0:
                                  _capacitor_splash_screen__WEBPACK_IMPORTED_MODULE_14__.SplashScreen.hide({
                                    fadeOutDuration: 250
                                  });

                                  _capacitor_status_bar__WEBPACK_IMPORTED_MODULE_13__.StatusBar.setOverlaysWebView({
                                    overlay: true
                                  });

                                  _capacitor_status_bar__WEBPACK_IMPORTED_MODULE_13__.StatusBar.setBackgroundColor({
                                    color: '#00000000'
                                  });

                                  _context3.next = 5;
                                  return this.detailServ.getHasNetConn();

                                case 5:
                                  this.initNavMon();
                                  this.initAppPluginListeners();
                                  this.FCTFns('init');
                                  this.initIAPBubbleListen();
                                  this.logger.info('[App|initApp|eventServ] ➕👂 [LISTEN] for "setAuthGVarsDone"...');
                                  initSub = this.evServ.subscribe('setAuthGVarsDone', function (dpAuthSetRes) {
                                    return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(_this2, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                                      var _this3 = this;

                                      var doAInits, entAppSub;
                                      return regeneratorRuntime.wrap(function _callee$(_context) {
                                        while (1) {
                                          switch (_context.prev = _context.next) {
                                            case 0:
                                              this.logger.info('[App|initApp|eventServ] 📥👂 (IN) [EVENT] for "setAuthGVarsDone".');

                                              if (dpAuthSetRes.result) {
                                                this.initSyncAuth(dpAuthSetRes.data);
                                              }

                                              ;

                                              doAInits = function doAInits() {
                                                _this3.logger.info('[App|initApp|eventServ) ➕👂 [LISTEN] for "doPushNoteInit"...');

                                                _this3.evServ.subscribe('doPushNoteInit', function (tf) {
                                                  _this3.logger.info('[App|initApp|eventServ] 📥👂 (IN) [EVENT] for "doPushNoteInit".');

                                                  if (tf) {
                                                    _this3.pushServ.doPushNoteInit();
                                                  }

                                                  ;

                                                  _this3.logger.info('[App|initApp|eventServ) 🧨👂 [DESTROY] for "doPushNoteInit".');

                                                  _this3.evServ.destroy('doPushNoteInit');
                                                });

                                                _this3.noteServ.doNoteInit();

                                                _this3.calServ.doInitCal();

                                                _this3.logger.info('[App|initApp] (EventServ) ➖👂 [LISTEN] for "setAuthGVarsDone".');

                                                initSub.unsubscribe();

                                                _this3.postInitTokenListen();
                                              }; // IF FR-SETUP DONE INIT


                                              _context.next = 6;
                                              return this.detailServ.getFRSetupDone();

                                            case 6:
                                              if (!_context.sent) {
                                                _context.next = 11;
                                                break;
                                              }

                                              this.logger.info('[App|initApp|eventServ) ➕👂 [LISTEN] for "EnteringApp"...');
                                              entAppSub = this.evServ.subscribe('EnteringApp', function () {
                                                _this3.logger.info('[App|initApp|eventServ] 📥👂 (IN) [EVENT] for "EnteringApp".');

                                                _this3.logger.info('[App|doAInits] 🟩 INIT = IMMEDIATE...');

                                                doAInits();

                                                _this3.logger.info('[App|initApp] (EventServ) ➖👂 [LISTEN] for "EntertingApp".');

                                                entAppSub.unsubscribe();
                                              }); // IF FIRST-RUN INIT

                                              _context.next = 13;
                                              break;

                                            case 11:
                                              this.logger.info('[App|initApp|eventServ) ➕👂 [LISTEN] for "doDelayedAppInits"...');
                                              this.evServ.subscribe('doDelayedAppInits', function (dbWasImported) {
                                                _this3.logger.info('[App|initApp|eventServ] 📥👂 (IN) [EVENT] for "doDelayedAppInits".');

                                                if (!dbWasImported) {
                                                  _this3.logger.info('[App|initApp|eventServ) ➕👂 [LISTEN] for "EnteringApp"...');

                                                  var _entAppSub = _this3.evServ.subscribe('EnteringApp', function () {
                                                    _this3.logger.info('[App|initApp|eventServ] 📥👂 (IN) [EVENT] for "EnteringApp".');

                                                    _this3.logger.info('[App|doAInits] 🟧 INIT > FIRSTRUN (DB!=Import)...');

                                                    doAInits();

                                                    _this3.logger.info('[App|initApp] (EventServ) ➖👂 [LISTEN] for "EntertingApp".');

                                                    _entAppSub.unsubscribe();
                                                  });

                                                  _this3.logger.info('[App|initApp|eventServ) 🧨👂 [DESTROY] for "doDelayedAppInits".');

                                                  _this3.evServ.destroy('doDelayedAppInits');
                                                } else if (dbWasImported) {
                                                  _this3.logger.info('[App|initApp|eventServ) ➕👂 [LISTEN] for "delayedSyncDone"...');

                                                  _this3.evServ.subscribe('delayedSyncDone', function () {
                                                    _this3.logger.info('[App|initApp|eventServ] 📥👂 (IN) [EVENT] for "delayedSyncDone".');

                                                    _this3.logger.info('[App|doAInits] 🟨 INIT > SYNC (DB=Import)...');

                                                    doAInits();

                                                    _this3.logger.info('[App|initApp|eventServ) 🧨👂 [DESTROY] for "delayedSyncDone".');

                                                    _this3.evServ.destroy('delayedSyncDone');
                                                  });

                                                  _this3.logger.info('[App|initApp|eventServ) 🧨👂 [DESTROY] for "doDelayedAppInits".');

                                                  _this3.evServ.destroy('doDelayedAppInits');
                                                }
                                              });

                                            case 13:
                                              ;

                                            case 14:
                                            case "end":
                                              return _context.stop();
                                          }
                                        }
                                      }, _callee, this);
                                    }));
                                  });
                                  window.addEventListener('readyLR', function () {
                                    return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(_this2, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
                                      var closeDBRes;
                                      return regeneratorRuntime.wrap(function _callee2$(_context2) {
                                        while (1) {
                                          switch (_context2.prev = _context2.next) {
                                            case 0:
                                              this.logger.info("[App|initApp] (\u26A1LiveReload\u267B) >>>>> QUICK CLOSE SQLite DB <<<<<");
                                              _context2.next = 3;
                                              return this.sqlServ.lrQC();

                                            case 3:
                                              closeDBRes = _context2.sent;

                                              if (closeDBRes) {
                                                localStorage.setItem('myDoReload', 'true');
                                              }

                                            case 5:
                                            case "end":
                                              return _context2.stop();
                                          }
                                        }
                                      }, _callee2, this);
                                    }));
                                  });
                                  this.logger.info('[App|initApp|eventServ) ➕👂 [LISTEN] for "EnteringApp"...');
                                  menuEASub = this.evServ.subscribe('EnteringApp', function () {
                                    _this2.logger.info('[App|initApp|eventServ] 📥👂 (IN) [EVENT] for "EnteringApp".');

                                    _this2.menuBioInfo();

                                    _this2.logger.info('[App|initApp] (EventServ) ➖👂 [LISTEN] for "EntertingApp".');

                                    menuEASub.unsubscribe();
                                  });

                                case 14:
                                case "end":
                                  return _context3.stop();
                              }
                            }
                          }, _callee3, this);
                        }));
                      });

                    case 2:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, _callee4, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "FCTFns",
          value: function FCTFns(mode) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
              var _this4 = this;

              var doSuccess, doFail, loutRes, lCTRes, upRes, upLogRes;
              return regeneratorRuntime.wrap(function _callee5$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      doSuccess = function doSuccess() {
                        _this4.sserverRefresh = 'success';
                        setTimeout(function () {
                          _this4.sserverRefresh = null;
                        }, 1500);
                      };

                      doFail = function doFail() {
                        _this4.sserverRefresh = 'fail';
                        setTimeout(function () {
                          _this4.sserverRefresh = null;
                        }, 1500);
                      };

                      if (!(mode === 'init')) {
                        _context5.next = 7;
                        break;
                      }

                      this.logger.info('[App|newFCTListener|eventServ] ➕👂 [LISTEN] for "fbUserAccount"...');
                      this.evServ.subscribe('fbUserAccount', function () {
                        _this4.logger.info('[App|newFCTListener|eventServ] 📥👂 (IN) [EVENT] for "fbUserAccount".');

                        _this4.checkSServerInfo();
                      });
                      _context5.next = 37;
                      break;

                    case 7:
                      this.sserverRefresh = 'inprog';
                      this.fb_login_method = '...';
                      this.fct_token = '...';
                      this.fe_token = '...';
                      this.fct_expires = '...';
                      _context5.next = 14;
                      return this.fireServ.logoutUser();

                    case 14:
                      loutRes = _context5.sent;

                      if (!loutRes) {
                        _context5.next = 36;
                        break;
                      }

                      _context5.next = 18;
                      return this.fireServ.loginCustomToken();

                    case 18:
                      lCTRes = _context5.sent;

                      if (!lCTRes) {
                        _context5.next = 23;
                        break;
                      }

                      doSuccess();
                      _context5.next = 34;
                      break;

                    case 23:
                      _context5.next = 25;
                      return this.sqlServ.getADBItem('up');

                    case 25:
                      upRes = _context5.sent;

                      if (!upRes.result) {
                        _context5.next = 33;
                        break;
                      }

                      _context5.next = 29;
                      return this.fireServ.loginUserEmail(upRes.data);

                    case 29:
                      upLogRes = _context5.sent;

                      if (upLogRes) {
                        doSuccess();
                      } else {
                        doFail();
                      }

                      _context5.next = 34;
                      break;

                    case 33:
                      doFail();

                    case 34:
                      _context5.next = 37;
                      break;

                    case 36:
                      doSuccess();

                    case 37:
                      ;
                      this.checkSServerInfo();

                    case 39:
                    case "end":
                      return _context5.stop();
                  }
                }
              }, _callee5, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "postInitTokenListen",
          value: function postInitTokenListen() {
            var _this5 = this;

            this.logger.info('[App|postInitTokenListen] ()...');
            this.logger.info('[App|postInitTokenListen|eventServ] ➕👂 [LISTEN] for "setAuthGVarsDone"...');
            this.evServ.subscribe('setAuthGVarsDone', function (newDPAuthRes) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(_this5, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                  while (1) {
                    switch (_context6.prev = _context6.next) {
                      case 0:
                        this.logger.info('[App|postInitTokenListen|eventServ] 📥👂 (IN) [EVENT] for "setAuthGVarsDone".');

                        if (newDPAuthRes.result) {
                          this.initSyncAuth(newDPAuthRes.data);
                        } else {
                          this.logger.info('[App|postInitTokenListen->setAuthGVars] (❌ERROR) - !setAuthGVars.result');
                        }

                        ;

                      case 3:
                      case "end":
                        return _context6.stop();
                    }
                  }
                }, _callee6, this);
              }));
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initSyncAuth",
          value: function initSyncAuth(dpAuth) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
              var myDiff, sqlAuth, fireAuth, diffObj, updateDPAuthDB, _diffObj, updateDPAuthFire;

              return regeneratorRuntime.wrap(function _callee8$(_context8) {
                while (1) {
                  switch (_context8.prev = _context8.next) {
                    case 0:
                      myDiff = function _myDiff(object, base) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
                          var changes;
                          return regeneratorRuntime.wrap(function _callee7$(_context7) {
                            while (1) {
                              switch (_context7.prev = _context7.next) {
                                case 0:
                                  changes = function _changes(object, base) {
                                    return lodash__WEBPACK_IMPORTED_MODULE_18__.transform(object, function (result, value, key) {
                                      if (!lodash__WEBPACK_IMPORTED_MODULE_18__.isEqual(value, base[key])) {
                                        result[key] = lodash__WEBPACK_IMPORTED_MODULE_18__.isObject(value) && lodash__WEBPACK_IMPORTED_MODULE_18__.isObject(base[key]) ? changes(value, base[key]) : value;
                                      }
                                    });
                                  };

                                  ;
                                  return _context7.abrupt("return", changes(object, base));

                                case 3:
                                case "end":
                                  return _context7.stop();
                              }
                            }
                          }, _callee7);
                        }));
                      };

                      ;
                      _context8.next = 4;
                      return this.detailServ.getADBSetupDone();

                    case 4:
                      if (!_context8.sent) {
                        _context8.next = 14;
                        break;
                      }

                      if (this.detailServ.getADBIsOpen()) {
                        _context8.next = 8;
                        break;
                      }

                      _context8.next = 8;
                      return this.sqlServ.openAuth();

                    case 8:
                      ;
                      _context8.next = 11;
                      return this.sqlServ.getADBItem('auth');

                    case 11:
                      sqlAuth = _context8.sent;
                      _context8.next = 16;
                      break;

                    case 14:
                      sqlAuth = {
                        result: false
                      };
                      this.logger.info('[App|initUpdateAuthDB] - initSyncAuth() - sqlAuth ERROR = dS.getADBSetupDone() = false');

                    case 16:
                      ;
                      _context8.next = 19;
                      return this.detailServ.getHasNetConn();

                    case 19:
                      if (!_context8.sent) {
                        _context8.next = 30;
                        break;
                      }

                      if (!this.fireServ.fbLoggedIn) {
                        _context8.next = 26;
                        break;
                      }

                      _context8.next = 23;
                      return this.fireServ.getFireUserAuth();

                    case 23:
                      fireAuth = _context8.sent;
                      _context8.next = 28;
                      break;

                    case 26:
                      fireAuth = {
                        result: false
                      };
                      this.logger.info('[App|initUpdateAuthDB] - initSyncAuth() - FireAuth ERROR = fireServ.fbLoggedIn = false');

                    case 28:
                      _context8.next = 32;
                      break;

                    case 30:
                      fireAuth = {
                        result: false
                      };
                      this.logger.info('[App|initUpdateAuthDB] - initSyncAuth() - FireAuth ERROR = dS.getHasNetConn = false');

                    case 32:
                      ; // -----------------------------------

                      if (!sqlAuth.result) {
                        _context8.next = 51;
                        break;
                      }

                      if (lodash__WEBPACK_IMPORTED_MODULE_18__.isEqual(sqlAuth.data, dpAuth)) {
                        _context8.next = 47;
                        break;
                      }

                      this.logger.info('[App|initUpdateAuthDB] (🟡UPDATING): DB!==DP Auth Values - Updating ADBItem for Fields:');
                      _context8.next = 38;
                      return myDiff(dpAuth, sqlAuth.data);

                    case 38:
                      diffObj = _context8.sent;
                      this.logger.info(diffObj);
                      _context8.next = 42;
                      return this.sqlServ.setADBItem(null, dpAuth);

                    case 42:
                      updateDPAuthDB = _context8.sent;
                      this.sqlServ.closeAuth();
                      updateDPAuthDB ? this.logger.info('[App|initUpdateAuthDB] (✅SUCCESS) - Auth Database Updated') : this.logger.info('[App|initUpdateAuthDB] (❌ERROR) - Auth Database NOT Updated');
                      _context8.next = 49;
                      break;

                    case 47:
                      this.logger.info('[App|initUpdateAuthDB] (🟢SKIP): DB===DP Auth Values - No Update Required');
                      this.sqlServ.closeAuth();

                    case 49:
                      _context8.next = 53;
                      break;

                    case 51:
                      this.logger.info('[App|initSyncAuth] (❌ERROR) - Failed to Retrieve AuthObj from SQL');
                      this.sqlServ.closeAuth();

                    case 53:
                      ; // -----------------------------------

                      if (!fireAuth.result) {
                        _context8.next = 70;
                        break;
                      }

                      if (lodash__WEBPACK_IMPORTED_MODULE_18__.isEqual(fireAuth.data, dpAuth)) {
                        _context8.next = 67;
                        break;
                      }

                      this.logger.info('[App|initUpdateAuthDB] (🟡UPDATING): FIRE!==DP Auth Values - Updating fireUserDoc for Fields: ');
                      _context8.next = 59;
                      return myDiff(dpAuth, fireAuth.data);

                    case 59:
                      _diffObj = _context8.sent;
                      this.logger.info(_diffObj);
                      _context8.next = 63;
                      return this.fireServ.setFireUserDoc(this.deputy.userEmail, dpAuth);

                    case 63:
                      updateDPAuthFire = _context8.sent;

                      if (updateDPAuthFire) {
                        this.logger.info('[App|initUpdateAuthDB] (✅SUCCESS) - Firebase AuthDoc Updated');
                      } else {
                        this.logger.info('[App|initUpdateAuthDB] (❌ERROR) - Firebase AuthDoc NOT Updated');
                      }

                      _context8.next = 68;
                      break;

                    case 67:
                      this.logger.info('[App|initUpdateAuthDB] (🟢SKIP): FIRE===DP Auth Values - No Update Required');

                    case 68:
                      _context8.next = 71;
                      break;

                    case 70:
                      this.logger.info('[App|initUpdateAuthDB] (❌ERROR) - Firebase AuthDoc NOT FOUND/UPDATED');

                    case 71:
                    case "end":
                      return _context8.stop();
                  }
                }
              }, _callee8, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initAppPluginListeners",
          value: function initAppPluginListeners() {
            var _this6 = this;

            this.logger.info('[App|initAppPluginListeners] ()...');

            if (this.appInitDone === false) {
              this.appInitDone = true;
              this.evServ.subscribe('myAppStateActive', function (tf) {
                _this6.logger.info("[App|AppPlugin|AppState] \u269C (isActive?): " + tf.toString().toUpperCase());
              });
              this.evServ.subscribe('myAppRestoredResult', function (data) {
                if (data) {
                  _this6.logger.info('[App|AppPlugin|AppRestored] - Data:');

                  _this6.logger.info("[App|AppPlugin|RestoredResult] \u269C (Result): ");

                  _this6.logger.info("\u269C pluginId:   " + data.pluginId);

                  _this6.logger.info("\u269C methodName: " + data.methodName);

                  _this6.logger.info("\u269C data:       " + data.data);
                } else {
                  _this6.logger.info('[App|AppPlugin|AppRestored] - No Data Returned');
                }
              });
              this.evServ.subscribe('myAppCanGoBack', function (tf) {
                _this6.logger.info("[App|AppPlugin|AppCanGoBack] \u269C (appCanGoBack?): " + tf.toString().toUpperCase());
              });
              this.appServ.doAppInit();
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initNavMon",
          value: function initNavMon() {
            var _this7 = this;

            this.logger.info('[App|initNavMon] ()...');
            this.startNavPipe = this.router.events.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.filter)(function (evt) {
              return evt instanceof _angular_router__WEBPACK_IMPORTED_MODULE_21__.NavigationStart;
            }));
            this.endNavPipe = this.router.events.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.filter)(function (evt) {
              return evt instanceof _angular_router__WEBPACK_IMPORTED_MODULE_21__.NavigationEnd;
            }));
            var eV = this.evServ;
            this.startNavPipe.subscribe(function () {
              var oldURLStr = _this7.router.url;
              var oldURLArr = oldURLStr.split('/');
              var oldURLArrNo = oldURLArr.length;
              var oldPageIndex = oldURLArrNo - 1;
              var oldPage = oldURLArr[oldPageIndex];
              eV.subscribe('gotNewPage', function (newPage) {
                if (oldPage !== newPage) {
                  jquery__WEBPACK_IMPORTED_MODULE_17__('.sheriff-mainmenu-topitem').removeClass('isactivemenulink');
                  jquery__WEBPACK_IMPORTED_MODULE_17__('#mainmenu-' + newPage).addClass('isactivemenulink');
                }

                ;
                eV.destroy('gotNewPage');
              });
            });
            this.endNavPipe.subscribe(function () {
              var newURLStr = _this7.router.url;
              var newURLArr = newURLStr.split('/');
              var newURLArrNo = newURLArr.length;
              var newPageIndex = newURLArrNo - 1;
              var newPage = newURLArr[newPageIndex];

              if (newPage) {
                var cPageObj = {
                  url: newURLStr,
                  lName: newPage,
                  cName: "".concat(newPage[0].toUpperCase()).concat(newPage.slice(1))
                };

                _this7.evServ.currentPageName(cPageObj);

                eV.publish('gotNewPage', newPage);
              }
            });
          } ///////////////////////////////////////////////////////////////////////

        }, {
          key: "checkSServerInfo",
          value: function checkSServerInfo() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
              var _this8 = this;

              var gPKeys, nEAt, loginMethodTxt, fbLIMethodKey, i, _i;

              return regeneratorRuntime.wrap(function _callee9$(_context9) {
                while (1) {
                  switch (_context9.prev = _context9.next) {
                    case 0:
                      this.logger.info('[App|checkSServerInfo] ()...');
                      gPKeys = ['fct_token', 'fe_token', 'fct_expires'];

                      nEAt = function nEAt(exAtUTS) {
                        var expD = _this8.dT.Dut(exAtUTS);

                        return _this8.dT.format(expD, 'd MMM h:mma');
                      };

                      loginMethodTxt = {
                        notsignedin: 'Not Signed In',
                        uplogin: 'Username/Password (Login)',
                        upregister: 'Username/Password (Register)',
                        fctokenfet: 'Custom Token (FET)',
                        fctokendpt: 'Custom Token (DPT)'
                      };
                      fbLIMethodKey = this.fireServ.loginMethodKey;
                      this.fb_login_method = loginMethodTxt[fbLIMethodKey];

                      if (fbLIMethodKey === 'notsignedin') {
                        for (i = 0; i < gPKeys.length; i++) {
                          this[gPKeys[i]] = '-';
                        }
                      } else if (fbLIMethodKey === 'uplogin' || fbLIMethodKey === 'upregister') {
                        for (_i = 0; _i < gPKeys.length; _i++) {
                          this[gPKeys[_i]] = 'N/A';
                        }
                      } else if (fbLIMethodKey === 'fctokenfet' || fbLIMethodKey === 'fctokendpt') {
                        this.fct_token = this.deputy.SServer.FCT.custom_token.substring(0, 16) + '...';
                        this.fe_token = this.deputy.SServer.FCT.fe_token.substring(0, 16) + '...';
                        this.fct_expires = nEAt(Number(this.deputy.SServer.FCT.expires_at));
                      }

                      ;

                    case 8:
                    case "end":
                      return _context9.stop();
                  }
                }
              }, _callee9, this);
            }));
          } ///////////////////////////////////////////////////////////////////////

        }, {
          key: "initIAPBubbleListen",
          value: function initIAPBubbleListen() {
            var _this9 = this;

            this.logger.info('[App|toggleIAPBubble] ()...');
            this.evServ.subscribe('iapBubble', function (iapB) {
              if (_this9.doShowIAPBubble) {
                _this9.doShowIAPBubble = false;
              }

              ;

              if (typeof iapB === 'object') {
                _this9.iapBubbleData = iapB;
              }

              ;

              if (_this9.iapBubbleData !== null) {
                if (!_this9.doShowIAPBubble) {
                  _this9.doShowIAPBubble = true;
                }

                ;
                setTimeout(function () {
                  _this9.doShowIAPBubble = false;
                }, 5000);
              } else {
                _this9.evServ.showToast('warning', 'No Prior Notification');
              }
            });
          } ///////////////////////////////////////////////////////////////////////

        }, {
          key: "mainMenu",
          value: function mainMenu(action) {
            this.logger.info('[App|MenuCtrl] Main Menu ' + action.toString().toUpperCase());

            if (action === 'opened') {
              jquery__WEBPACK_IMPORTED_MODULE_17__('.sheriff-menu-button').addClass('sheriff-menu-open');
              var actLinkLabel = jquery__WEBPACK_IMPORTED_MODULE_17__('#mainmenu-' + this.currentPageKey + ' > div.sheriff-mainmenu-topitem-label');
              var actLinkIco = jquery__WEBPACK_IMPORTED_MODULE_17__('#mainmenu-' + this.currentPageKey + ' > div.sheriff-mainmenu-topitem-label > ion-icon');
              jquery__WEBPACK_IMPORTED_MODULE_17__('#mainmenu-' + this.currentPageKey).addClass('animate__animated animate__headShake animate__fast');
              jquery__WEBPACK_IMPORTED_MODULE_17__(actLinkLabel).addClass('isactivemenulink');
              jquery__WEBPACK_IMPORTED_MODULE_17__(actLinkIco).addClass('isactivemenulink');
            }

            ;

            if (action === 'closed') {
              jquery__WEBPACK_IMPORTED_MODULE_17__('.sheriff-menu-button').removeClass('sheriff-menu-open');
            }

            ;

            if (action === 'willopen') {
              this.checkSServerInfo();
              this.checkShouldSave();
              jquery__WEBPACK_IMPORTED_MODULE_17__('.sheriff-mainmenu-topitem').removeClass('animate__animated animate__headShake animate__fast');
              jquery__WEBPACK_IMPORTED_MODULE_17__('.sheriff-mainmenu-topitem-label').removeClass('isactivemenulink');
              jquery__WEBPACK_IMPORTED_MODULE_17__('.sheriff-mainmenu-linkico').removeClass('isactivemenulink');

              if (!this.router.url.includes('auth')) {
                if (this.router.url.includes('tabs')) {
                  this.currentPageKey = 'tabs';
                } else {
                  var localCurrentPageKey = this.router.url.replace('/', '');
                  this.currentPageKey = localCurrentPageKey;
                }
              }
            }
          } ///////////////////////////////////////////////////////////////////////

        }, {
          key: "checkShouldSave",
          value: function checkShouldSave() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
              return regeneratorRuntime.wrap(function _callee10$(_context10) {
                while (1) {
                  switch (_context10.prev = _context10.next) {
                    case 0:
                      this.detailServ.shouldSave.value ? this.shouldSaveShield = true : this.shouldSaveShield = false;

                    case 1:
                    case "end":
                      return _context10.stop();
                  }
                }
              }, _callee10, this);
            }));
          } ///////////////////////////////////////////////////////////////////////

        }, {
          key: "promptShouldSave",
          value: function promptShouldSave(navPath) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
              var _yield$_capacitor_dia, value;

              return regeneratorRuntime.wrap(function _callee11$(_context11) {
                while (1) {
                  switch (_context11.prev = _context11.next) {
                    case 0:
                      this.logger.info('[App|promptShouldSave] (' + navPath + ')...');
                      _context11.next = 3;
                      return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_16__.Dialog.confirm({
                        title: 'Save/Discard ' + this.detailServ.shouldSave.data + ' Details?',
                        message: '𝗦𝗮𝘃𝗲 updated details to Deputy or 𝗗𝗶𝘀𝗰𝗮𝗿𝗱 changes?',
                        okButtonTitle: "\uD83D\uDCBE Save",
                        cancelButtonTitle: "\u274C Discard"
                      });

                    case 3:
                      _yield$_capacitor_dia = _context11.sent;
                      value = _yield$_capacitor_dia.value;

                      if (value) {
                        this.menu.close();
                        this.logger.info('[App|promptShouldSave|eventServ] 📤👂 (OUT) [EVENT] for "menuShieldSave".');
                        this.evServ.publish('menuShieldSave', navPath);
                      } else {
                        this.detailServ.setShouldSave(false, null);
                        this.shouldSaveShield = false;

                        if (navPath === 'logout') {
                          this.onLogout();
                        } else if (navPath === 'exit') {
                          this.onExit('noprompt');
                        } else {
                          this.navController.navigateRoot(navPath);
                        }
                      }

                    case 6:
                    case "end":
                      return _context11.stop();
                  }
                }
              }, _callee11, this);
            }));
          } ///////////////////////////////////////////////////////////////////////

        }, {
          key: "onLogout",
          value: function onLogout() {
            var _this10 = this;

            if (!this.shouldSaveShield) {
              this.detailServ.setAuthLogout(true);
              jquery__WEBPACK_IMPORTED_MODULE_17__('#sheriff-auth-networkstatus-wrapper').removeClass('adjust-for-auth-toolbar-overlay');

              var myAniCSS = function myAniCSS(jqEle, animName) {
                return new Promise(function (resolve) {
                  var animClassStr = 'animate__animated animate__' + animName + ' animate__faster';
                  jquery__WEBPACK_IMPORTED_MODULE_17__(jqEle).addClass(animClassStr);
                  jquery__WEBPACK_IMPORTED_MODULE_17__(jqEle).on('animationend', function () {
                    jquery__WEBPACK_IMPORTED_MODULE_17__(jqEle).removeClass(animClassStr);
                    resolve('done');
                  });
                });
              };

              myAniCSS('#sheriff-custom-splash-wrapper', 'fadeIn').then(function () {
                return jquery__WEBPACK_IMPORTED_MODULE_17__('#sheriff-custom-splash-wrapper').show();
              });
              jquery__WEBPACK_IMPORTED_MODULE_17__('#sheriff-custom-splash-logo-img').addClass('animate__animated animate__headShake animate__infinite');
              jquery__WEBPACK_IMPORTED_MODULE_17__('#sheriff-custom-splash-titletexttop-wrapper').removeClass('animate__animated animate__slideOutUp animate__faster');
              jquery__WEBPACK_IMPORTED_MODULE_17__('#sheriff-custom-splash-zer0ne-wrapper').removeClass('animate__animated animate__slideOutDown animate__faster');
              jquery__WEBPACK_IMPORTED_MODULE_17__('.bar-horizontal').removeClass('finished');
              jquery__WEBPACK_IMPORTED_MODULE_17__('#sheriff-custom-splash-logo-img').prop('src', '../assets/img/lilheader-s.png');
              jquery__WEBPACK_IMPORTED_MODULE_17__('.sheriff-cutom-splash-text-wrapper.texttop').removeClass('animate__slideOutLeft').addClass('animate__slideInLeft');
              jquery__WEBPACK_IMPORTED_MODULE_17__('.sheriff-cutom-splash-text-wrapper.textbottom').removeClass('animate__slideOutRight').addClass('animate__slideInRight');
              jquery__WEBPACK_IMPORTED_MODULE_17__('#sheriff-custom-splash-wrapper, .sheriff-col.custom-splash-col.middlelogocol').css('background', '#121212');
              this.menu.close().then(function () {
                _this10.navController.navigateRoot('/auth');
              });
            } else {
              this.promptShouldSave('logout');
            }
          } ///////////////////////////////////////////////////////////////////////

        }, {
          key: "onExit",
          value: function onExit(mode) {
            var _this11 = this;

            this.logger.info('[App|onExit] (' + mode + ')...');

            if (!this.shouldSaveShield) {
              var exitPromptOpts = {
                title: 'Exiting Sheriff',
                message: 'Are you sure?',
                okButtonTitle: 'OK',
                cancelButtonTitle: 'Cancel'
              };

              if (mode === 'noprompt') {
                _capacitor_app__WEBPACK_IMPORTED_MODULE_15__.App.exitApp();
              } else {
                _capacitor_dialog__WEBPACK_IMPORTED_MODULE_16__.Dialog.confirm(exitPromptOpts).then(function (wasConfirmed) {
                  return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(_this11, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
                    return regeneratorRuntime.wrap(function _callee12$(_context12) {
                      while (1) {
                        switch (_context12.prev = _context12.next) {
                          case 0:
                            if (wasConfirmed.value) {
                              _capacitor_app__WEBPACK_IMPORTED_MODULE_15__.App.exitApp();
                            } else {
                              this.menu.close();
                            }

                          case 1:
                          case "end":
                            return _context12.stop();
                        }
                      }
                    }, _callee12, this);
                  }));
                });
              }
            } else {
              this.promptShouldSave('exit');
            }
          } ////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "menuBioInfo",
          value: function menuBioInfo() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
              var mBIFields, i, eAtD;
              return regeneratorRuntime.wrap(function _callee13$(_context13) {
                while (1) {
                  switch (_context13.prev = _context13.next) {
                    case 0:
                      this.logger.info('[App|menuBioInfo] ()...');
                      mBIFields = ['access_token', 'refresh_token', 'expires_at', 'meName', 'meEmail', 'mePhone', 'workCode', 'workAva', 'meAva'];

                      for (i = 0; i < mBIFields.length; i++) {
                        if (i < 2) {
                          this[mBIFields[i]] = this.deputy.Client.auth[mBIFields[i]];
                        } else if (i === 2) {
                          eAtD = this.dT.Dut(this.deputy.Client.auth[mBIFields[i]]);
                          this.expires_time = this.dT.format(eAtD, 'd MMM h:mma');
                        } else {
                          this[mBIFields[i]] = this.detailServ[mBIFields[i]];
                        }
                      }

                      ;
                      this.menuBioInfoDone = true;

                    case 5:
                    case "end":
                      return _context13.stop();
                  }
                }
              }, _callee13, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "menuDeputyRefresh",
          value: function menuDeputyRefresh() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
              var _this12 = this;

              return regeneratorRuntime.wrap(function _callee15$(_context15) {
                while (1) {
                  switch (_context15.prev = _context15.next) {
                    case 0:
                      this.logger.info('[TabsShifts|localDoRefresh] ()...');
                      this.deputyRefresh = 'inprog';
                      this.access_token = '...';
                      this.refresh_token = '...';
                      this.expires_time = '...';
                      this.evServ.subscribe('setAuthGVarsDone', function (refreshRes) {
                        if (refreshRes.result) {
                          _this12.deputyRefresh = 'success';
                          setTimeout(function () {
                            return (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__awaiter)(_this12, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
                              var eAtD;
                              return regeneratorRuntime.wrap(function _callee14$(_context14) {
                                while (1) {
                                  switch (_context14.prev = _context14.next) {
                                    case 0:
                                      this.access_token = this.deputy.Client.auth.access_token;
                                      this.refresh_token = this.deputy.Client.auth.refresh_token;
                                      eAtD = this.dT.Dut(this.deputy.Client.auth.expires_at);
                                      this.expires_time = this.dT.format(eAtD, 'd MMM h:mma');
                                      this.deputyRefresh = null;
                                      this.evServ.destroy('setAuthGVarsDone');

                                    case 6:
                                    case "end":
                                      return _context14.stop();
                                  }
                                }
                              }, _callee14, this);
                            }));
                          }, 1500);
                        } else {
                          _this12.deputyRefresh = 'fail';
                          setTimeout(function () {
                            _this12.deputyRefresh = null;

                            _this12.evServ.destroy('setAuthGVarsDone');
                          }, 1500);
                        }
                      });
                      this.deputy.setAuthGVars(false);

                    case 7:
                    case "end":
                      return _context15.stop();
                  }
                }
              }, _callee15, this);
            }));
          }
        }]);

        return AppComponent;
      }();

      _AppComponent.ctorParameters = function () {
        return [{
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_22__.Platform
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_22__.MenuController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_22__.NavController
        }, {
          type: _services_events_service__WEBPACK_IMPORTED_MODULE_3__.EventsService
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_21__.Router
        }, {
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_23__.NGXLogger
        }, {
          type: _services_deputy_service__WEBPACK_IMPORTED_MODULE_2__.DeputyService
        }, {
          type: _services_detail_service__WEBPACK_IMPORTED_MODULE_4__.DetailService
        }, {
          type: _services_sqlite_service__WEBPACK_IMPORTED_MODULE_6__.SQLiteService
        }, {
          type: _services_storage_service__WEBPACK_IMPORTED_MODULE_5__.StorageService
        }, {
          type: _services_datetime_service__WEBPACK_IMPORTED_MODULE_7__.DateTimeService
        }, {
          type: _services_notifications_service__WEBPACK_IMPORTED_MODULE_10__.NotificationsService
        }, {
          type: _services_app_service__WEBPACK_IMPORTED_MODULE_8__.AppService
        }, {
          type: _services_calendar_service__WEBPACK_IMPORTED_MODULE_9__.CalendarService
        }, {
          type: _services_firebase_service__WEBPACK_IMPORTED_MODULE_12__.FirebaseService
        }, {
          type: _services_push_service__WEBPACK_IMPORTED_MODULE_11__.PushService
        }];
      };

      _AppComponent = (0, tslib__WEBPACK_IMPORTED_MODULE_19__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_24__.Component)({
        selector: 'app-root',
        template: _raw_loader_app_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_app_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _AppComponent);
      /***/
    },

    /***/
    36747:
    /*!*******************************!*\
      !*** ./src/app/app.module.ts ***!
      \*******************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "AppModule": function AppModule() {
          return (
            /* binding */
            _AppModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _modals_inapp_pushnote_inapp_pushnote_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./modals/inapp-pushnote/inapp-pushnote.module */
      20811);
      /* harmony import */


      var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./../environments/environment */
      92340);
      /* harmony import */


      var _modals_detail_tsheet_detail_tsheet_add_tsheet_add_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./modals/detail/tsheet-detail/tsheet-add/tsheet-add.module */
      3690);
      /* harmony import */


      var _modals_detail_task_add_task_add_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./modals/detail/task-add/task-add.module */
      43357);
      /* harmony import */


      var _modals_detail_task_add_taskassignee_taskassignee_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./modals/detail/task-add/taskassignee/taskassignee.module */
      46361);
      /* harmony import */


      var _modals_detail_news_detail_news_add_news_add_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./modals/detail/news-detail/news-add/news-add.module */
      48990);
      /* harmony import */


      var _modals_detail_news_detail_news_add_recipients_recipients_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./modals/detail/news-detail/news-add/recipients/recipients.module */
      76356);
      /* harmony import */


      var _modals_detail_tsheet_detail_tsheet_breaks_tsheet_breaks_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./modals/detail/tsheet-detail/tsheet-breaks/tsheet-breaks.module */
      91806);
      /* harmony import */


      var _modals_detail_tsheet_detail_tsheet_history_tsheet_history_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./modals/detail/tsheet-detail/tsheet-history/tsheet-history.module */
      29080);
      /* harmony import */


      var _popovers_detailmenu_detailmenu_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ./popovers/detailmenu/detailmenu.component */
      70518);
      /* harmony import */


      var _modals_detail_tsheet_detail_tsheet_detail_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./modals/detail/tsheet-detail/tsheet-detail.module */
      77963);
      /* harmony import */


      var _modals_detail_news_detail_news_detail_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./modals/detail/news-detail/news-detail.module */
      43175);
      /* harmony import */


      var _popovers_datepresets_datepresets_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ./popovers/datepresets/datepresets.component */
      51568);
      /* harmony import */


      var _popovers_peopledetail_peopledetail_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./popovers/peopledetail/peopledetail.component */
      2925);
      /* harmony import */


      var _modals_alertschedule_alertschedule_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./modals/alertschedule/alertschedule.module */
      88987);
      /* harmony import */


      var _modals_profilecsselect_profilecsselect_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./modals/profilecsselect/profilecsselect.module */
      67170);
      /* harmony import */


      var _modals_daterange_daterange_module__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! ./modals/daterange/daterange.module */
      71369);
      /* harmony import */


      var _modals_firstrun_firstrun_module__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! ./modals/firstrun/firstrun.module */
      5628);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _animations__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! ./animations */
      63074);
      /* harmony import */


      var _app_routing_module__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! ./app-routing.module */
      90158);
      /* harmony import */


      var _app_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! ./app.component */
      55041);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
      /*! @angular/router */
      39895);
      /* harmony import */


      var _ionic_native_splash_screen_ngx__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
      /*! @ionic-native/splash-screen/ngx */
      51524);
      /* harmony import */


      var _ionic_native_status_bar_ngx__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
      /*! @ionic-native/status-bar/ngx */
      73494);
      /* harmony import */


      var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
      /*! @ionic-native/http/ngx */
      68589);
      /* harmony import */


      var _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
      /*! @ionic-native/in-app-browser/ngx */
      53760);
      /* harmony import */


      var _ionic_native_calendar_ngx__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
      /*! @ionic-native/calendar/ngx */
      20287);
      /* harmony import */


      var _ionic_native_file_ngx__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
      /*! @ionic-native/file/ngx */
      20138);
      /* harmony import */


      var _ionic_native_file_path_ngx__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
      /*! @ionic-native/file-path/ngx */
      59865);
      /* harmony import */


      var _ionic_native_file_transfer_ngx__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
      /*! @ionic-native/file-transfer/ngx */
      97905);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _ionic_native_file_chooser_ngx__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
      /*! @ionic-native/file-chooser/ngx */
      81953);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _services_sqlite_service__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
      /*! ./services/sqlite.service */
      90636);
      /* harmony import */


      var _services_detail_service__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
      /*! ./services/detail.service */
      52153);
      /* harmony import */


      var _ionic_native_date_picker_ngx__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
      /*! @ionic-native/date-picker/ngx */
      61194);
      /* harmony import */


      var swiper_angular__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
      /*! swiper/angular */
      52635);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var ionic2_calendar__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
      /*! ionic2-calendar */
      87732);
      /* harmony import */


      var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
      /*! @angular/platform-browser/animations */
      75835);
      /* harmony import */


      var _angular_fire_compat__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
      /*! @angular/fire/compat */
      88939);
      /* harmony import */


      var _angular_fire_compat_database__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
      /*! @angular/fire/compat/database */
      79978);
      /* harmony import */


      var _angular_fire_compat_auth__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
      /*! @angular/fire/compat/auth */
      1325);
      /* harmony import */


      var _angular_fire_compat_storage__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
      /*! @angular/fire/compat/storage */
      43893);
      /* harmony import */


      var _angular_fire_compat_messaging__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
      /*! @angular/fire/compat/messaging */
      52577);

      var _AppModule = function AppModule() {
        _classCallCheck(this, AppModule);
      };

      _AppModule = (0, tslib__WEBPACK_IMPORTED_MODULE_33__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_34__.NgModule)({
        declarations: [_app_component__WEBPACK_IMPORTED_MODULE_20__.AppComponent, _popovers_datepresets_datepresets_component__WEBPACK_IMPORTED_MODULE_12__.DatePresetsComponent, _popovers_detailmenu_detailmenu_component__WEBPACK_IMPORTED_MODULE_9__.DetailMenuComponent, _popovers_peopledetail_peopledetail_component__WEBPACK_IMPORTED_MODULE_13__.PeopleDetailComponent],
        entryComponents: [_popovers_datepresets_datepresets_component__WEBPACK_IMPORTED_MODULE_12__.DatePresetsComponent, _popovers_detailmenu_detailmenu_component__WEBPACK_IMPORTED_MODULE_9__.DetailMenuComponent, _popovers_peopledetail_peopledetail_component__WEBPACK_IMPORTED_MODULE_13__.PeopleDetailComponent],
        imports: [_angular_fire_compat__WEBPACK_IMPORTED_MODULE_35__.AngularFireModule.initializeApp(_environments_environment__WEBPACK_IMPORTED_MODULE_1__.environment.firebase), _angular_fire_compat_auth__WEBPACK_IMPORTED_MODULE_36__.AngularFireAuthModule, _angular_fire_compat_database__WEBPACK_IMPORTED_MODULE_37__.AngularFireDatabaseModule, _angular_fire_compat_storage__WEBPACK_IMPORTED_MODULE_38__.AngularFireStorageModule, _angular_fire_compat_messaging__WEBPACK_IMPORTED_MODULE_39__.AngularFireMessagingModule, _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_40__.BrowserAnimationsModule, ionic2_calendar__WEBPACK_IMPORTED_MODULE_41__.NgCalendarModule, _modals_detail_tsheet_detail_tsheet_add_tsheet_add_module__WEBPACK_IMPORTED_MODULE_2__.TSheetAddPageModule, _modals_detail_news_detail_news_add_news_add_module__WEBPACK_IMPORTED_MODULE_5__.NewsAddPageModule, _modals_detail_task_add_task_add_module__WEBPACK_IMPORTED_MODULE_3__.TaskAddPageModule, _modals_detail_news_detail_news_add_recipients_recipients_module__WEBPACK_IMPORTED_MODULE_6__.RecipientsPageModule, _modals_detail_task_add_taskassignee_taskassignee_module__WEBPACK_IMPORTED_MODULE_4__.TaskAssigneePageModule, _modals_detail_tsheet_detail_tsheet_breaks_tsheet_breaks_module__WEBPACK_IMPORTED_MODULE_7__.TSheetBreaksPageModule, _modals_detail_tsheet_detail_tsheet_history_tsheet_history_module__WEBPACK_IMPORTED_MODULE_8__.TSheetHistoryPageModule, _modals_alertschedule_alertschedule_module__WEBPACK_IMPORTED_MODULE_14__.AlertSchedulePageModule, _modals_inapp_pushnote_inapp_pushnote_module__WEBPACK_IMPORTED_MODULE_0__.InAppPushNoteModalModule, _modals_profilecsselect_profilecsselect_module__WEBPACK_IMPORTED_MODULE_15__.ProfileCSSelectPageModule, _modals_detail_tsheet_detail_tsheet_detail_module__WEBPACK_IMPORTED_MODULE_10__.TSheetDetailPageModule, _modals_detail_news_detail_news_detail_module__WEBPACK_IMPORTED_MODULE_11__.NewsDetailPageModule, _modals_firstrun_firstrun_module__WEBPACK_IMPORTED_MODULE_17__.FirstRunPageModule, _modals_daterange_daterange_module__WEBPACK_IMPORTED_MODULE_16__.DateRangePageModule, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_42__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_43__.CommonModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_44__.IonicModule.forRoot({
          navAnimation: _animations__WEBPACK_IMPORTED_MODULE_18__.fancyAnimation,
          scrollPadding: false,
          scrollAssist: true
        }), _app_routing_module__WEBPACK_IMPORTED_MODULE_19__.AppRoutingModule, ngx_logger__WEBPACK_IMPORTED_MODULE_45__.LoggerModule.forRoot(_environments_environment__WEBPACK_IMPORTED_MODULE_1__.environment.logging), _angular_common__WEBPACK_IMPORTED_MODULE_43__.CommonModule, swiper_angular__WEBPACK_IMPORTED_MODULE_46__.SwiperModule, _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_40__.BrowserAnimationsModule],
        providers: [_services_sqlite_service__WEBPACK_IMPORTED_MODULE_30__.SQLiteService, _services_detail_service__WEBPACK_IMPORTED_MODULE_31__.DetailService, _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_23__.HTTP, _ionic_angular__WEBPACK_IMPORTED_MODULE_44__.NavParams, _ionic_native_file_chooser_ngx__WEBPACK_IMPORTED_MODULE_29__.FileChooser, ngx_logger__WEBPACK_IMPORTED_MODULE_45__.NGXLogger, _ionic_native_file_ngx__WEBPACK_IMPORTED_MODULE_26__.File, _ionic_native_file_transfer_ngx__WEBPACK_IMPORTED_MODULE_28__.FileTransfer, _ionic_native_file_path_ngx__WEBPACK_IMPORTED_MODULE_27__.FilePath, _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_24__.InAppBrowser, _ionic_angular__WEBPACK_IMPORTED_MODULE_44__.Platform, _ionic_angular__WEBPACK_IMPORTED_MODULE_44__.AlertController, _ionic_native_calendar_ngx__WEBPACK_IMPORTED_MODULE_25__.Calendar, _ionic_native_status_bar_ngx__WEBPACK_IMPORTED_MODULE_22__.StatusBar, _ionic_native_splash_screen_ngx__WEBPACK_IMPORTED_MODULE_21__.SplashScreen, {
          provide: _angular_router__WEBPACK_IMPORTED_MODULE_47__.RouteReuseStrategy,
          useClass: _ionic_angular__WEBPACK_IMPORTED_MODULE_44__.IonicRouteStrategy
        }, _ionic_native_date_picker_ngx__WEBPACK_IMPORTED_MODULE_32__.DatePicker],
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_20__.AppComponent],
        exports: [_angular_common__WEBPACK_IMPORTED_MODULE_43__.CommonModule]
      })], _AppModule);
      /***/
    },

    /***/
    3870:
    /*!************************************!*\
      !*** ./src/app/auth/auth.guard.ts ***!
      \************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "AuthGuard": function AuthGuard() {
          return (
            /* binding */
            _AuthGuard
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _services_deputy_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../services/deputy.service */
      22092);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! rxjs/operators */
      15257);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs/operators */
      88002);

      var _AuthGuard = /*#__PURE__*/function () {
        function AuthGuard(navController, deputy) {
          _classCallCheck(this, AuthGuard);

          this.navController = navController;
          this.deputy = deputy;
        } ////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(AuthGuard, [{
          key: "canLoad",
          value: function canLoad() {
            var _this13 = this;

            return this.deputy.isAuthenticated.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.take)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(function (isAuthenticated) {
              if (isAuthenticated) {
                return true;
              } else {
                _this13.navController.navigateRoot('/auth');

                return false;
              }
            }));
          }
        }]);

        return AuthGuard;
      }();

      _AuthGuard.ctorParameters = function () {
        return [{
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.NavController
        }, {
          type: _services_deputy_service__WEBPACK_IMPORTED_MODULE_0__.DeputyService
        }];
      };

      _AuthGuard = (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable)({
        providedIn: 'root'
      }) ////////////////////////////////////////////////////////////////////////////////////////////
      ], _AuthGuard);
      /***/
    },

    /***/
    88987:
    /*!**************************************************************!*\
      !*** ./src/app/modals/alertschedule/alertschedule.module.ts ***!
      \**************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "AlertSchedulePageModule": function AlertSchedulePageModule() {
          return (
            /* binding */
            _AlertSchedulePageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _alertschedule_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./alertschedule.page */
      20060);

      var _AlertSchedulePageModule = function AlertSchedulePageModule() {
        _classCallCheck(this, AlertSchedulePageModule);
      };

      _AlertSchedulePageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_alertschedule_page__WEBPACK_IMPORTED_MODULE_0__.AlertSchedulePage]
      })], _AlertSchedulePageModule);
      /***/
    },

    /***/
    20060:
    /*!************************************************************!*\
      !*** ./src/app/modals/alertschedule/alertschedule.page.ts ***!
      \************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "AlertSchedulePage": function AlertSchedulePage() {
          return (
            /* binding */
            _AlertSchedulePage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_alertschedule_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./alertschedule.page.html */
      29511);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var src_app_services_datetime_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! src/app/services/datetime.service */
      12826);
      /* harmony import */


      var src_app_services_notifications_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! src/app/services/notifications.service */
      79744);
      /* harmony import */


      var src_app_services_events_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! src/app/services/events.service */
      80106);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! jquery */
      91704);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_4__); ////////////////////////////////////////////////////////////////////////////////////////////////////


      var _AlertSchedulePage = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        function AlertSchedulePage(logger, modalCtrl, navParams, dT, noteServ, evServ, plt) {
          _classCallCheck(this, AlertSchedulePage);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.navParams = navParams;
          this.dT = dT;
          this.noteServ = noteServ;
          this.evServ = evServ;
          this.plt = plt;
          this.rawAlertList = [];
          this.alertsList = [];
          this.noAlerts = null;
          this.tMode = false;
          this.hasTestable = false;
        } ////////////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(AlertSchedulePage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|AlertSchedule|ngOnInit] ()...');
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            var _this14 = this;

            this.plt.ready().then(function () {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(_this14, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
                var rawListForSort, modalEl, testableCount, i, rawAlertOb, niceAlertOb;
                return regeneratorRuntime.wrap(function _callee16$(_context16) {
                  while (1) {
                    switch (_context16.prev = _context16.next) {
                      case 0:
                        rawListForSort = [];
                        _context16.next = 3;
                        return this.modalCtrl.getTop();

                      case 3:
                        modalEl = _context16.sent;
                        this.modalId = modalEl.id;
                        this.rawAlertList = [];
                        this.alertsList = [];
                        this.rawAlertList = this.navParams.get('rawAlertList');
                        testableCount = 0;

                        if (this.rawAlertList.length > 0) {
                          this.logger.info('[Modal|AlertSchedule] [' + this.rawAlertList.length + '] Alerts Found...');

                          for (i = 0; i < this.rawAlertList.length; i++) {
                            rawAlertOb = this.rawAlertList[i];
                            niceAlertOb = rawAlertOb;
                            niceAlertOb['eventatNiceDate'] = this.dT.format(rawAlertOb.eventat, 'dd/MM/yy');
                            niceAlertOb['eventatNiceTime'] = this.dT.format(rawAlertOb.eventat, 'h:mmaaa');
                            niceAlertOb['alertatNiceDate'] = this.dT.format(rawAlertOb.alertat, 'dd/MM/yy');
                            niceAlertOb['alertatNiceTime'] = this.dT.format(rawAlertOb.alertat, 'h:mmaaa');

                            if (rawAlertOb.methods.phone) {
                              this.hasTestable = true;
                            }

                            ;
                            rawListForSort.push(niceAlertOb);
                          }

                          ; //const sortByEvDate=(a:any,b:any)=>{if(a.evD<b.evD){return -1};if(a.evD>b.evD){return 1};return 0};

                          this.alertsList = rawListForSort; //.sort(sortByEvDate);

                          this.noAlerts = false;
                        } else {
                          this.logger.info('[Modal|AlertSchedule] rawAlertList = NIL Length.');
                          this.noAlerts = true;
                        }

                        ;

                      case 11:
                      case "end":
                        return _context16.stop();
                    }
                  }
                }, _callee16, this);
              }));
            });
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "deleteAlert",
          value: function deleteAlert(deleteId) {
            var _this15 = this;

            this.logger.info('[Modal|AlertsSchedule|deleteNote] (' + deleteId + ')...');
            this.evServ.subscribe('delDone', function (delRes) {
              _this15.logger.info('[Modal|AlertsSchedule|deleteNote] (EVENT): Result: ' + delRes);

              _this15.evServ.destroy('delDone');

              if (delRes) {
                var lessDelObj = _this15.alertsList.filter(function (a) {
                  return a.id !== deleteId;
                });

                _this15.alertsList = lessDelObj;

                if (_this15.alertsList.length === 0) {
                  _this15.noAlerts = true;
                } else {
                  _this15.noAlerts = false;
                }
              }
            });
            setTimeout(function () {
              _this15.noteServ.noteCancel(deleteId);
            }, 500);
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "testNote",
          value: function testNote(testId) {
            var _this16 = this;

            this.logger.info('[Modal|AlertSchedule|testNote] (' + testId + ')...');
            var schedOK = false;
            var schedTId;
            this.evServ.subscribe('testRes', function (tR) {
              console.log(tR);

              if (tR.stage === 'sched') {
                schedOK = true;
                var tN = tR.data;
                schedTId = tN.id;

                _this16.evServ.showToast('warning', 'Test Note (#' + tN.id + ') in 5s...');

                var tNObj = {
                  type: tN.extra.type,
                  uctype: tN.extra.uctype,
                  id: tN.id,
                  eventat: tN.extra.evdate,
                  alertat: tN.schedule.at,
                  methods: {
                    phone: true
                  }
                };

                var niceEvAt = _this16.dT.pISO(tNObj.eventat);

                tNObj['isTest'] = true;
                tNObj['eventatNiceDate'] = _this16.dT.format(niceEvAt, 'dd/MM/yy');
                tNObj['eventatNiceTime'] = _this16.dT.format(niceEvAt, 'h:mmaaa');
                tNObj['alertatNiceDate'] = 'Test Alert';
                tNObj['alertatNiceTime'] = 'Now + 5s';

                _this16.alertsList.push(tNObj);
              } else if (tR.stage === 'gottest') {
                setTimeout(function () {
                  _this16.evServ.destroy('testRes');

                  _this16.evServ.showToast('success', 'Test Note (#' + schedTId + ') RECEIVED OK');

                  var lessDelObj = _this16.alertsList.filter(function (a) {
                    return a.id !== schedTId;
                  });

                  _this16.alertsList = lessDelObj;

                  if (_this16.alertsList.length === 0) {
                    _this16.noAlerts = true;
                  } else {
                    _this16.noAlerts = false;
                  }

                  ;
                  jquery__WEBPACK_IMPORTED_MODULE_4__('.sheriff-btn.settings-alertschedule-testmode-btn.deactivate').click();
                }, 500);
              } else {
                _this16.evServ.destroy('testRes');

                if (schedOK) {
                  _this16.evServ.showToast('error', 'Failed to Receive Test Alert');

                  _this16.alertsList.filter(function (n) {
                    return n.id !== schedTId;
                  });
                } else {
                  _this16.evServ.showToast('error', 'Failed to Schedule Test Alert');
                }

                ;
              }
            });
            this.noteServ.testNote(testId);
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeModal",
          value: function closeModal() {
            var _this17 = this;

            this.logger.info('[Modal|AlertSchedule|closeModal] ()...');

            if (this.tMode) {
              this.tMode = false;
              setTimeout(function () {
                _this17.modalCtrl.dismiss(null, 'dismiss', 'alert-schedule-modal');
              }, 500);
            } else {
              this.modalCtrl.dismiss(null, 'dismiss', 'alert-schedule-modal');
            }
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "testMode",
          value: function testMode() {
            this.logger.info('[Modal|AlertSchedule|testMode] ()...');
            !this.tMode ? this.tMode = true : this.tMode = false;
          }
        }]);

        return AlertSchedulePage;
      }();

      _AlertSchedulePage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_6__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.NavParams
        }, {
          type: src_app_services_datetime_service__WEBPACK_IMPORTED_MODULE_1__.DateTimeService
        }, {
          type: src_app_services_notifications_service__WEBPACK_IMPORTED_MODULE_2__.NotificationsService
        }, {
          type: src_app_services_events_service__WEBPACK_IMPORTED_MODULE_3__.EventsService
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.Platform
        }];
      };

      _AlertSchedulePage = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
        selector: 'app-alertschedule',
        template: _raw_loader_alertschedule_page_html__WEBPACK_IMPORTED_MODULE_0__["default"]
      }) ////////////////////////////////////////////////////////////////////////////////////////////////////
      ], _AlertSchedulePage);
      /***/
    },

    /***/
    71369:
    /*!******************************************************!*\
      !*** ./src/app/modals/daterange/daterange.module.ts ***!
      \******************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "DateRangePageModule": function DateRangePageModule() {
          return (
            /* binding */
            _DateRangePageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _daterange_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./daterange.page */
      34476);

      var _DateRangePageModule = function DateRangePageModule() {
        _classCallCheck(this, DateRangePageModule);
      };

      _DateRangePageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_daterange_page__WEBPACK_IMPORTED_MODULE_0__.DateRangePage]
      })], _DateRangePageModule);
      /***/
    },

    /***/
    34476:
    /*!****************************************************!*\
      !*** ./src/app/modals/daterange/daterange.page.ts ***!
      \****************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "DateRangePage": function DateRangePage() {
          return (
            /* binding */
            _DateRangePage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_daterange_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./daterange.page.html */
      95375);
      /* harmony import */


      var _daterange_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./daterange.page.scss */
      60372);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _services_datetime_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./../../services/datetime.service */
      12826);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! jquery */
      91704);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__); //////////////////////////////////////////////////////////////////////////////////////


      var _DateRangePage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function DateRangePage(logger, dT, modalCtrl, navP) {
          _classCallCheck(this, DateRangePage);

          this.logger = logger;
          this.dT = dT;
          this.modalCtrl = modalCtrl;
          this.navP = navP;
          this.sDIsToday = false;
          this.eDIsToday = false;
          this.drIsValid = true;
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(DateRangePage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {
              var _this$navP$data, list, dates, mms, rawDur;

              return regeneratorRuntime.wrap(function _callee17$(_context17) {
                while (1) {
                  switch (_context17.prev = _context17.next) {
                    case 0:
                      this.logger.info('[Modal|OnInit] - ' + this.navP.data.list);
                      _context17.next = 3;
                      return this.modalCtrl.getTop();

                    case 3:
                      this.modalId = _context17.sent.id;
                      console.log(this.navP.data);
                      _this$navP$data = this.navP.data, list = _this$navP$data.list, dates = _this$navP$data.dates, mms = _this$navP$data.mms;
                      this.listName = list;
                      this.sDate = this.dT.Id(dates.start);
                      this.exSDate = dates.start;
                      this.checkValidToday('start', this.exSDate);
                      this.eDate = this.dT.Id(dates.end);
                      this.exEDate = dates.end;
                      this.checkValidToday('end', this.exEDate);
                      rawDur = this.dT.DifDurStr(this.exEDate, this.exSDate);

                      if (rawDur.includes('year')) {
                        rawDur.replace(' year', 'y');
                        rawDur.replace(' month', 'm');
                        rawDur.replace(' day', 'd');
                      }

                      this.rangeDur = rawDur;
                      this.minDate = mms.min;
                      this.exMinDate = this.dT.Dut(mms.min);
                      this.maxDate = mms.max;
                      this.exMaxDate = this.dT.Dut(mms.max);

                    case 20:
                    case "end":
                      return _context17.stop();
                  }
                }
              }, _callee17, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "checkValidToday",
          value: function checkValidToday(startOrEnd, testDate) {
            console.log('Checking ' + startOrEnd + ' ... ' + testDate);
            var todayIndic;
            startOrEnd === 'start' ? todayIndic = 'sDIsToday' : todayIndic = 'eDIsToday';

            if (this.dT.isSD(testDate, new Date())) {
              this[todayIndic] = true;
            } else {
              this[todayIndic] = false;
            }

            ;
            var valSDate;
            var valEDate;

            if (startOrEnd === 'start') {
              valSDate = testDate;
              valEDate = this.dT.Di(this.eDate);
            } else {
              valEDate = testDate;
              valSDate = this.dT.Di(this.sDate);
            }

            ;

            if (this.dT.isSD(valSDate, valEDate)) {
              jquery__WEBPACK_IMPORTED_MODULE_3__('.dr-modal-button.done').prop('disabled', false);
              this.drIsValid = true;
              this.rangeError = '';
            } else {
              if (startOrEnd === 'start') {
                if (!this.dT.isB(valSDate, valEDate)) {
                  jquery__WEBPACK_IMPORTED_MODULE_3__('.dr-modal-button.done').prop('disabled', true);
                  this.drIsValid = false;
                  this.rangeError = 'Start Date > End Date';
                } else {
                  jquery__WEBPACK_IMPORTED_MODULE_3__('.dr-modal-button.done').prop('disabled', false);
                  this.drIsValid = true;
                  this.rangeError = '';
                }
              } else {
                if (!this.dT.isA(valEDate, valSDate)) {
                  jquery__WEBPACK_IMPORTED_MODULE_3__('.dr-modal-button.done').prop('disabled', true);
                  this.drIsValid = false;
                  this.rangeError = 'End Date < Start Date';
                } else {
                  jquery__WEBPACK_IMPORTED_MODULE_3__('.dr-modal-button.done').prop('disabled', false);
                  this.drIsValid = true;
                  this.rangeError = '';
                }
              }
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "openDateRange",
          value: function openDateRange(startOrEnd, action, gVarInputName, gVarDateName, gVarDateValue) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {
              var _this18 = this;

              return regeneratorRuntime.wrap(function _callee18$(_context18) {
                while (1) {
                  switch (_context18.prev = _context18.next) {
                    case 0:
                      this.logger.info('[Modal|updateRange] (' + startOrEnd + ',' + action + ',' + gVarInputName + ',' + gVarDateName + ',' + gVarDateValue + ')...');
                      this.dT.openDRPicker(this.listName, startOrEnd, this.dT.Di(gVarDateValue), this.minDate * 1000, Number(this.dT.UTSd(new Date()))).then(function (newD) {
                        _this18[gVarDateName] = _this18.dT.Id(newD);

                        _this18.checkValidToday(startOrEnd, newD);

                        var rawDur = _this18.dT.DifDurStr(_this18.dT.Di(_this18.eDate), _this18.dT.Di(_this18.sDate));

                        if (rawDur.includes('year')) {
                          console.log('includes "year" true');
                          rawDur = rawDur.replace(' year', 'y');
                          rawDur = rawDur.replace(' month', 'm');
                          rawDur = rawDur.replace(' day', 'd');
                          _this18.rangeDur = rawDur;
                        } else {
                          _this18.rangeDur = rawDur;
                        }
                      }, function (dpErr) {
                        console.log(dpErr);
                      });

                    case 2:
                    case "end":
                      return _context18.stop();
                  }
                }
              }, _callee18, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "cancelDateRange",
          value: function cancelDateRange() {
            this.logger.info('[TabsTSheets|cancelDateRange] ()...');
            this.modalCtrl.dismiss({
              start: null,
              end: null
            }, 'backdrop', this.modalId);
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "drModalAction",
          value: function drModalAction(action) {
            this.logger.info('[Modal|drModalAction] (' + action + ')...');

            if (action === 'cancel') {
              this.modalCtrl.dismiss({
                start: null,
                end: null
              }, null, this.modalId);
            } else if (action === 'done') {
              if (!this.sDate || !this.eDate) {
                this.modalCtrl.dismiss('nochange');
              } else {
                var newSDate = this.dT.Di(this.sDate);
                var newEDate = this.dT.Di(this.eDate);

                if (newSDate === this.exSDate && newEDate === this.exEDate) {
                  this.modalCtrl.dismiss('nochange');
                } else {
                  this.modalCtrl.dismiss({
                    start: newSDate,
                    end: newEDate
                  }, null, this.modalId);
                }
              }
            }
          } ////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "useTodayDate",
          value: function useTodayDate(input) {
            this.logger.info('[TabsTSheets|useTodayDate] (' + input + ')...');
            var checkStr;
            input.charAt(0) === 's' ? checkStr = 'start' : checkStr = 'end';
            this[input] = this.dT.Id(new Date());
            this.checkValidToday(checkStr, new Date());
          }
        }]);

        return DateRangePage;
      }();

      _DateRangePage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_5__.NGXLogger
        }, {
          type: _services_datetime_service__WEBPACK_IMPORTED_MODULE_2__.DateTimeService
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.NavParams
        }];
      };

      _DateRangePage.propDecorators = {
        sDateIn: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.ViewChild,
          args: ['drStart']
        }],
        eDateIn: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.ViewChild,
          args: ['drEnd']
        }]
      };
      _DateRangePage = (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
        selector: 'app-daterange',
        template: _raw_loader_daterange_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_daterange_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _DateRangePage);
      /***/
    },

    /***/
    48990:
    /*!***********************************************************************!*\
      !*** ./src/app/modals/detail/news-detail/news-add/news-add.module.ts ***!
      \***********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "NewsAddPageModule": function NewsAddPageModule() {
          return (
            /* binding */
            _NewsAddPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _news_add_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./news-add.page */
      97124);

      var _NewsAddPageModule = function NewsAddPageModule() {
        _classCallCheck(this, NewsAddPageModule);
      };

      _NewsAddPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_news_add_page__WEBPACK_IMPORTED_MODULE_0__.NewsAddPage]
      })], _NewsAddPageModule);
      /***/
    },

    /***/
    97124:
    /*!*********************************************************************!*\
      !*** ./src/app/modals/detail/news-detail/news-add/news-add.page.ts ***!
      \*********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "NewsAddPage": function NewsAddPage() {
          return (
            /* binding */
            _NewsAddPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_news_add_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./news-add.page.html */
      14010);
      /* harmony import */


      var _news_add_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./news-add.page.scss */
      34259);
      /* harmony import */


      var _services_events_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../../../../services/events.service */
      80106);
      /* harmony import */


      var _services_deputy_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../../../../services/deputy.service */
      22092);
      /* harmony import */


      var src_app_services_filesystem_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! src/app/services/filesystem.service */
      22904);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _recipients_recipients_page__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./recipients/recipients.page */
      73731);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _capacitor_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @capacitor/dialog */
      63540);
      /* harmony import */


      var _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @capacitor/keyboard */
      87730);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! jquery */
      91704);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_8__); //////////////////////////////////////////////////////////////////////////////////////


      var _NewsAddPage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function NewsAddPage(logger, modalCtrl, navP, plt, deputy, evServ, fileServ) {
          _classCallCheck(this, NewsAddPage);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.navP = navP;
          this.plt = plt;
          this.deputy = deputy;
          this.evServ = evServ;
          this.fileServ = fileServ;
          this.addRecModalOpts = {
            animated: false,
            showBackdrop: true,
            backdropDismiss: false,
            cssClass: 'memo-recipients-modal-class',
            component: _recipients_recipients_page__WEBPACK_IMPORTED_MODULE_5__.RecipientsPage,
            keyboardClose: true
          };
          this.addRecModalOpen = false;
          this.meAvatar = this.navP.data.meAva;
          this.meObj = this.navP.data.me;
          this.myObj = this.navP.data.my;
          this.workColor = this.navP.data.work.color;
          this.workName = this.navP.data.work.code;
          this.incBright = this.navP.data.work.bright;
          this.myPpl = this.navP.data.ppl; // Memo Box

          this.mbIgnore = false;
          this.mbStatus = {
            type: null,
            ico: null,
            name: null,
            text: ''
          };
          this.mbCount = 0;
          this.mbFocus = false; // Recipient List

          this.recList = [];
          this.recListReady = false;
          this.recShowHead = []; // Memo Contents

          this.memoTitle = null;
          this.memoContentReady = false;
          this.memoFiles = [];
          this.memoUrls = [];
          this.memoReqConf = false;
          this.isNegH = false;
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(NewsAddPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|News-Add|OnInit]');
            this.initPrefs();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "adjustKB",
          value: function adjustKB(kbE, kbHeight) {
            this.logger.info('[Modal|News-Add|adjustKB] (' + kbE + ',' + kbHeight + ')...');

            if (kbE === 'show') {
              var kbTop = this.scH - kbHeight;
              var mbDiv = this.newMemoBoxWrap.nativeElement.getBoundingClientRect();
              var mbBot = mbDiv.bottom;
              var diffH = kbTop - mbBot - 25;
              var mSD = Math.sign(diffH);

              if (mSD === 1) {
                this.logger.info('[Modal|News-Add|adjustKB] (Positive Adjust) @ ' + diffH + 'px');
                this.isNegH = false;
                var fitH = (mbDiv.height + diffH).toString() + 'px';
                this.newMemoBoxWrap.nativeElement.style.height = fitH;
              } else if (mSD === -1) {
                this.logger.info('[Modal|News-Add|adjustKB] (Negative Adjust) @ ' + diffH + 'px');
                this.isNegH = true;
                this.negH = diffH + 'px';
                this.newMemoBoxWrap.nativeElement.style.height = 'auto';
              } else {
                this.logger.info('[Modal|News-Add|adjustKB] (No Adjust) @ ' + diffH + 'px');
                this.isNegH = false;
                this.newMemoBoxWrap.nativeElement.style.height = 'auto';
              }
            } else if (kbE === 'hide') {
              this.isNegH = false;
              this.newMemoBoxWrap.nativeElement.style.height = 'auto';
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initPrefs",
          value: function initPrefs() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {
              var _this19 = this;

              return regeneratorRuntime.wrap(function _callee20$(_context20) {
                while (1) {
                  switch (_context20.prev = _context20.next) {
                    case 0:
                      this.logger.info('[Modal|News-Add|initPrefs]');
                      this.plt.ready().then(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(_this19, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {
                          var modalEl, i, p;
                          return regeneratorRuntime.wrap(function _callee19$(_context19) {
                            while (1) {
                              switch (_context19.prev = _context19.next) {
                                case 0:
                                  _context19.next = 2;
                                  return this.modalCtrl.getTop();

                                case 2:
                                  modalEl = _context19.sent;
                                  this.modalId = modalEl.id;
                                  this.meEmpId = this.meObj.EmployeeId;

                                  for (i = 0; i < this.myPpl.length; i++) {
                                    p = this.myPpl[i];

                                    if (p.EmpId !== this.meEmpId) {
                                      this.recList.push({
                                        id: p.EmpId,
                                        name: p.FirstName,
                                        ava: p.Photo,
                                        isChecked: false
                                      });
                                    }
                                  }

                                  ;
                                  this.recShowHead = [];
                                  this.recListReady = this.checkRecListReady();

                                case 9:
                                case "end":
                                  return _context19.stop();
                              }
                            }
                          }, _callee19, this);
                        }));
                      });

                    case 2:
                    case "end":
                      return _context20.stop();
                  }
                }
              }, _callee20, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            var _this20 = this;

            this.logger.info('[Modal|News-Add|ionViewDidEnter]');
            this.scH = this.plt.height();

            _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_7__.Keyboard.removeAllListeners();

            _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_7__.Keyboard.addListener('keyboardDidShow', function (info) {
              jquery__WEBPACK_IMPORTED_MODULE_8__('.news-addmemo-typedata-grid').css('display', 'block');
              var lKBH = info.keyboardHeight;

              _this20.adjustKB('show', lKBH);
            });

            _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_7__.Keyboard.addListener('keyboardDidHide', function () {
              jquery__WEBPACK_IMPORTED_MODULE_8__('.news-addmemo-typedata-grid').css('display', 'none');

              _this20.adjustKB('hide', null);
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewWillLeave",
          value: function ionViewWillLeave() {
            this.logger.info('[Modal|News-Add|ionViewWillLeave] ()...');

            _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_7__.Keyboard.removeAllListeners();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "memoBoxEvent",
          value: function memoBoxEvent(ev, val) {
            var _this21 = this;

            this.logger.info('[Modal|News-Add|memoBoxInput] (' + ev + ',' + val + ')...');

            if (!this.mbIgnore) {
              var cbS = {
                n: {
                  type: null,
                  ico: null,
                  name: null,
                  text: ''
                },
                f: {
                  type: 'icon',
                  ico: 'forward',
                  name: 'chevron-forward',
                  text: 'Typing Memo...'
                },
                b: {
                  type: 'icon',
                  ico: 'back',
                  name: 'backspace',
                  text: 'Editing Memo...'
                },
                w: {
                  type: 'icon',
                  ico: 'wait',
                  name: 'ellipsis-horizontal',
                  text: 'Waiting...'
                },
                c: {
                  type: 'icon',
                  ico: 'clear',
                  name: 'trash',
                  text: 'Content Cleared.'
                },
                s: {
                  type: 'icon',
                  ico: 'sent',
                  name: 'checkmark',
                  text: 'Memo Posted!'
                },
                sp: {
                  type: 'spinner',
                  ico: 'spin',
                  name: 'dots',
                  text: 'Posting Memo - Please Wait...'
                }
              };

              if (ev === 'focus') {
                this.logger.info('[Modal|News-Add|memoBoxEvent] (FOCUS)...');
                this.mbFocus = true;
                this.mbStatus = cbS.w;

                if (this.mbCount !== val.length) {
                  this.mbCount = val.length;
                }
              }

              ;
              val.length > 0 ? this.memoContentReady = true : this.memoContentReady = false;

              if (ev === 'blur') {
                this.logger.info('[Modal|News-Add|memoBoxEvent] (BLUR)...');
                this.mbFocus = false;
                this.mbStatus = cbS.n;

                if (this.mbCount !== val.length) {
                  this.mbCount = val.length;
                }
              }

              ;
              val.length > 0 ? this.memoContentReady = true : this.memoContentReady = false;

              if (ev === 'input') {
                this.logger.info('[Modal|News-Add|memoBoxEvent] (INPUT)...');
                var oldVLen = this.mbCount;
                var newVLen = val.length;
                var vDiff = newVLen - oldVLen;
                var vS = Math.sign(vDiff);

                if (vS === 1) {
                  this.mbStatus = cbS.f;
                  this.mbCount = newVLen;
                } else if (vS === -1) {
                  this.mbStatus = cbS.b;
                  this.mbCount = newVLen;
                } else {
                  this.mbStatus = cbS.w;
                  this.mbCount = newVLen;
                }

                ;
                val.length > 0 ? this.memoContentReady = true : this.memoContentReady = false;
              }

              if (ev === 'send') {
                this.logger.info('[Modal|News-Add|memoBoxEvent] (SEND/POST)...');
                val.length > 0 ? this.memoContentReady = true : this.memoContentReady = false;
                this.recListReady = this.checkRecListReady();
                this.logger.info('[Post Required Field Check]: (Recipients)=' + this.recListReady + ' | (Memo Content)=' + this.memoContentReady);

                if (this.recListReady && this.memoContentReady) {
                  this.mbIgnore = true;
                  this.mbStatus = cbS.sp;
                  this.newMemoBox.disabled = true;
                  var pMemoObj = {
                    title: null,
                    body: val,
                    file: null,
                    url: null,
                    reqconf: false
                  };

                  if (this.memoTitle !== null) {
                    pMemoObj.title = this.memoTitle;
                  }

                  ;

                  if (this.memoFiles.length > 0) {
                    pMemoObj.file = this.memoFiles[0];
                  }

                  ;

                  if (this.memoUrls.length > 0) {
                    pMemoObj.file = this.memoUrls[0];
                  }

                  ;

                  if (this.memoReqConf) {
                    pMemoObj.reqconf = true;
                  }

                  ;
                  var testMode = true; //API LOGIC HERE...
                  //showFrom:Date|null,active:boolean|null,showTill:Date|null,title:string|null,content:string,fileId:number|null,url:string|null,reqConfirm:boolean

                  if (!testMode) {
                    var postMemoRes = this.deputy.postMemo(null, true, null, pMemoObj.title, pMemoObj.body, pMemoObj.file, pMemoObj.url, pMemoObj.reqconf);
                    this.logger.info('[Modal|Add-News|memoBoxInput] (Post Memo) [API]...');
                    console.log(postMemoRes);
                  } else {
                    setTimeout(function () {
                      _this21.evServ.showToast('success', 'Memo Posted Successfully');

                      _this21.newMemoBox.value = '';
                      _this21.mbStatus = cbS.s;
                      _this21.newMemoBox.disabled = false;
                      _this21.mbIgnore = false;
                      setTimeout(function () {
                        _this21.mbStatus = cbS.n;
                      }, 1500);
                    }, 3000);
                  }
                } else {
                  var missingStr;
                  var missingAni = '';

                  if (!this.recListReady && !this.memoContentReady) {
                    missingStr = 'Recipients & Memo Content';
                    missingAni = 'b';
                  } else if (!this.recListReady && this.memoContentReady) {
                    missingStr = 'Recipients';
                    missingAni = 'r';
                  } else {
                    missingStr = 'Memo Content';
                    missingAni = 'm';
                  }

                  ;

                  if (missingAni === 'b') {
                    this.noRecipientsAni();
                    this.noMemoContentAni();
                  }

                  ;

                  if (missingAni === 'r') {
                    this.noRecipientsAni();
                  }

                  ;

                  if (missingAni === 'm') {
                    this.noMemoContentAni();
                  }

                  ;
                  this.evServ.showToast('error', 'Missing: ' + missingStr);
                }
              }
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "checkRecListReady",
          value: function checkRecListReady() {
            this.logger.info('[Modal|Add-News|checkRecListReady] ()...');
            var isReady;
            this.recShowHead.length > 0 ? isReady = true : isReady = false;
            return isReady;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "noRecipientsAni",
          value: function noRecipientsAni() {
            this.logger.info('[Modal|Add-News|noRecpientsAni] ()...');

            var doAni = function doAni() {
              return new Promise(function (resolve) {
                var aniStr = 'animate__animated animate__rubberBand animDel-1000 animDur-750';
                var aniEle = jquery__WEBPACK_IMPORTED_MODULE_8__('.news-addmemo-no-add.recipients');
                jquery__WEBPACK_IMPORTED_MODULE_8__(aniEle).on('animationend', function () {
                  jquery__WEBPACK_IMPORTED_MODULE_8__(aniEle).removeClass(aniStr);
                  resolve(true);
                });
                jquery__WEBPACK_IMPORTED_MODULE_8__(aniEle).addClass(aniStr);
              });
            };

            doAni();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "noMemoContentAni",
          value: function noMemoContentAni() {
            this.logger.info('[Modal|Add-News|noMemoContentAni] ()...');

            var doAni = function doAni() {
              return new Promise(function (resolve) {
                var aniStr = 'animate__animated animate__flash animDel-1750 animDur-750';
                var aniEle = jquery__WEBPACK_IMPORTED_MODULE_8__('.news-addmemo-messagebox');
                jquery__WEBPACK_IMPORTED_MODULE_8__(aniEle).on('animationend', function () {
                  jquery__WEBPACK_IMPORTED_MODULE_8__(aniEle).removeClass(aniStr);
                  resolve(true);
                });
                jquery__WEBPACK_IMPORTED_MODULE_8__(aniEle).addClass(aniStr);
              });
            };

            doAni();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "addRecipients",
          value: function addRecipients() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {
              var _this22 = this;

              var thisAddRecModalOpts, modalORList, addRecModal;
              return regeneratorRuntime.wrap(function _callee21$(_context21) {
                while (1) {
                  switch (_context21.prev = _context21.next) {
                    case 0:
                      this.logger.info('[Modal|News-Add|addRecipients] ()...');
                      this.logger.info('[Modal|Add-News|addRecipients] ()...');
                      thisAddRecModalOpts = this.addRecModalOpts;
                      modalORList = this.recList;
                      thisAddRecModalOpts['componentProps'] = {
                        mORL: modalORList
                      };
                      _context21.next = 7;
                      return this.modalCtrl.create(thisAddRecModalOpts);

                    case 7:
                      addRecModal = _context21.sent;
                      document.addEventListener('ionModalDidPresent', function () {
                        _this22.addRecModalOpen = true;

                        _this22.logger.info('[Modal|Add-News|addRecipients] (ionModalDidPresent)');
                      });
                      addRecModal.onDidDismiss().then(function (_ref) {
                        var data = _ref.data,
                            role = _ref.role;

                        _this22.logger.info('[Modal|Add-News|addRecipients] (ionModalDidDismiss) >>> (Role): ' + role + ' ...');

                        setTimeout(function () {
                          var oArrLen = _this22.recShowHead.length;

                          var upsert = function upsert(item) {
                            var rI = _this22.recShowHead.findIndex(function (_item) {
                              return _item.id === item.id;
                            });

                            if (rI > -1) _this22.recShowHead[rI] = item;else _this22.recShowHead.push(item);
                          };

                          if (role === 'all') {
                            _this22.recShowHead = [];
                            var allArr = [];

                            for (var i = 0; i < _this22.recList.length; i++) {
                              var rPO = _this22.recList[i];
                              rPO.isChecked = true;

                              _this22.recShowHead.push(rPO);

                              allArr.push(rPO);
                            }

                            _this22.recList = allArr;
                          } else if (role === 'none') {
                            _this22.recShowHead = [];
                            var noneArr = [];

                            for (var _i2 = 0; _i2 < _this22.recList.length; _i2++) {
                              var _rPO = _this22.recList[_i2];
                              _rPO.isChecked = false;
                              noneArr.push(_rPO);
                            }

                            _this22.recList = noneArr;
                          } else if (role === 'update') {
                            _this22.recList = data;

                            var _loop = function _loop(_i3) {
                              if (_this22.recList[_i3].isChecked) {
                                upsert(_this22.recList[_i3]);
                              } else {
                                var dI = _this22.recShowHead.findIndex(function (p) {
                                  return p.id === _this22.recList[_i3].id;
                                });

                                if (dI !== -1) {
                                  _this22.recShowHead.splice(dI, 1);
                                }
                              }
                            };

                            for (var _i3 = 0; _i3 < _this22.recList.length; _i3++) {
                              _loop(_i3);
                            }

                            ;
                            var nArrLen = _this22.recShowHead.length;
                            _this22.recListReady = _this22.checkRecListReady();

                            if (oArrLen === nArrLen) {
                              _this22.evServ.showToast('warning', 'No Change to List');
                            } else {
                              _this22.evServ.showToast('success', 'Recipient List Updated');
                            }
                          } else if (role === 'cancel') {
                            _this22.evServ.showToast('cross', 'Cancelled');
                          }
                        }, 500);
                      });
                      _context21.next = 12;
                      return addRecModal.present();

                    case 12:
                      return _context21.abrupt("return", _context21.sent);

                    case 13:
                    case "end":
                      return _context21.stop();
                  }
                }
              }, _callee21, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "removeRP",
          value: function removeRP(rpIndex) {
            this.logger.info('[Modal|News-Add|removeRP] (' + rpIndex + ')');
            var sHId = this.recShowHead[rpIndex].id;
            this.recShowHead = this.recShowHead.filter(function (p) {
              return p.id !== sHId;
            });

            for (var i = 0; i < this.recList.length; i++) {
              if (this.recList[i].id === sHId) {
                this.recList[i].isChecked = false;
              }
            }

            this.recListReady = this.checkRecListReady();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "updateMemoTitle",
          value: function updateMemoTitle(titleTxt) {
            this.logger.info('[Modal|News-Add|updateMemoTitle] (' + titleTxt + ')');
            titleTxt.length > 0 ? this.memoTitle = titleTxt : this.memoTitle = null;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "addFiles",
          value: function addFiles() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {
              var tFileName;
              return regeneratorRuntime.wrap(function _callee22$(_context22) {
                while (1) {
                  switch (_context22.prev = _context22.next) {
                    case 0:
                      this.logger.info('[Modal|News-Add|addFiles] ()...');
                      tFileName = 'File' + (this.memoFiles.length + 1);
                      this.memoFiles.push({
                        name: tFileName,
                        id: ''
                      });

                    case 3:
                    case "end":
                      return _context22.stop();
                  }
                }
              }, _callee22, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "removeMemoFile",
          value: function removeMemoFile(mfIndex) {
            this.logger.info('[Modal|News-Add|removeMemoFile] (' + mfIndex + ')');
            var newMFList = [];

            for (var i = 0; i < this.memoFiles.length; i++) {
              if (i !== mfIndex) {
                newMFList.push(this.memoFiles[i]);
              }
            }

            ;
            this.memoFiles = newMFList;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "addUrls",
          value: function addUrls() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {
              var _yield$_capacitor_dia2, value, cancelled, urlName, tUrlStr;

              return regeneratorRuntime.wrap(function _callee23$(_context23) {
                while (1) {
                  switch (_context23.prev = _context23.next) {
                    case 0:
                      this.logger.info('[Modal|News-Add|addUrls] ()...');
                      _context23.next = 3;
                      return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_6__.Dialog.prompt({
                        title: 'Add URL to Memo',
                        message: 'Enter full URL',
                        okButtonTitle: 'Add URL',
                        cancelButtonTitle: 'Cancel',
                        inputPlaceholder: 'e.g. https://mylink.com/article'
                      });

                    case 3:
                      _yield$_capacitor_dia2 = _context23.sent;
                      value = _yield$_capacitor_dia2.value;
                      cancelled = _yield$_capacitor_dia2.cancelled;

                      if (cancelled) {
                        this.logger.info('[Modal|News-Add|addUrls] (CANCELLED)');
                        this.evServ.showToast('warning', 'Cancelled');
                      } else {
                        urlName = 'Link' + (this.memoUrls.length + 1);
                        tUrlStr = JSON.stringify(value);
                        this.memoUrls.push({
                          name: urlName,
                          url: tUrlStr
                        });
                        this.logger.info('[Modal|News-Add|addUrls] (ADDED): ' + value);
                        this.evServ.showToast('success', 'Added URL to Memo');
                      }

                      ;

                    case 8:
                    case "end":
                      return _context23.stop();
                  }
                }
              }, _callee23, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "removeMemoUrl",
          value: function removeMemoUrl(muIndex) {
            this.logger.info('[Modal|News-Add|removeMemoUrl] (' + muIndex + ')');
            var newMUList = [];

            for (var i = 0; i < this.memoUrls.length; i++) {
              if (i !== muIndex) {
                newMUList.push(this.memoUrls[i]);
              }
            }

            ;
            this.memoUrls = newMUList;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "reqConfChange",
          value: function reqConfChange() {
            this.logger.info('[Modal|News-Add|reqConfChange] ()...');
            this.memoReqConf ? this.memoReqConf = false : this.memoReqConf = true;
            this.logger.info('[Modal|News-Add|reqConfChange] (REQUIRE CONFIRMATION) [CHANGED TO]: ' + this.memoReqConf);
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeAddNews",
          value: function closeAddNews() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {
              return regeneratorRuntime.wrap(function _callee24$(_context24) {
                while (1) {
                  switch (_context24.prev = _context24.next) {
                    case 0:
                      this.logger.info('[Modal|News-Add|closeAddNews] ()...');
                      this.modalCtrl.dismiss({
                        data: null,
                        role: null,
                        id: this.modalId
                      });

                    case 2:
                    case "end":
                      return _context24.stop();
                  }
                }
              }, _callee24, this);
            }));
          }
        }]);

        return NewsAddPage;
      }();

      _NewsAddPage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_10__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_11__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_11__.NavParams
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_11__.Platform
        }, {
          type: _services_deputy_service__WEBPACK_IMPORTED_MODULE_3__.DeputyService
        }, {
          type: _services_events_service__WEBPACK_IMPORTED_MODULE_2__.EventsService
        }, {
          type: src_app_services_filesystem_service__WEBPACK_IMPORTED_MODULE_4__.FileSystemService
        }];
      };

      _NewsAddPage.propDecorators = {
        newMemoBox: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_12__.ViewChild,
          args: ['newMemoBox']
        }],
        newMemoBoxWrap: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_12__.ViewChild,
          args: ['newMemoBoxWrap']
        }],
        newMemoTitle: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_12__.ViewChild,
          args: ['newMemoTitle']
        }]
      };
      _NewsAddPage = (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_12__.Component)({
        selector: 'app-news-add',
        template: _raw_loader_news_add_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_news_add_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _NewsAddPage);
      /***/
    },

    /***/
    76356:
    /*!************************************************************************************!*\
      !*** ./src/app/modals/detail/news-detail/news-add/recipients/recipients.module.ts ***!
      \************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "RecipientsPageModule": function RecipientsPageModule() {
          return (
            /* binding */
            _RecipientsPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _recipients_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./recipients.page */
      73731);

      var _RecipientsPageModule = function RecipientsPageModule() {
        _classCallCheck(this, RecipientsPageModule);
      };

      _RecipientsPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_recipients_page__WEBPACK_IMPORTED_MODULE_0__.RecipientsPage]
      })], _RecipientsPageModule);
      /***/
    },

    /***/
    73731:
    /*!**********************************************************************************!*\
      !*** ./src/app/modals/detail/news-detail/news-add/recipients/recipients.page.ts ***!
      \**********************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "RecipientsPage": function RecipientsPage() {
          return (
            /* binding */
            _RecipientsPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_recipients_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./recipients.page.html */
      82472);
      /* harmony import */


      var _recipients_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./recipients.page.scss */
      39921);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ngx-logger */
      62740); //////////////////////////////////////////////////////////////////////////////////////


      var _RecipientsPage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function RecipientsPage(logger, modalCtrl, navP) {
          _classCallCheck(this, RecipientsPage);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.navP = navP;
          this.modalRecList = [];
          this.modalORecList = [];
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(RecipientsPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|Recipients|OnInit] ()...');
            this.initRecipientsData();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initRecipientsData",
          value: function initRecipientsData() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {
              var modalEl, oList, rList;
              return regeneratorRuntime.wrap(function _callee25$(_context25) {
                while (1) {
                  switch (_context25.prev = _context25.next) {
                    case 0:
                      this.logger.info('[Modal|Memo-Recipients|initRecipientsData] ()...');
                      _context25.next = 3;
                      return this.modalCtrl.getTop();

                    case 3:
                      modalEl = _context25.sent;
                      this.recModalId = modalEl.id;
                      oList = this.navP.get('mORL');
                      rList = oList;
                      this.modalORecList = oList;
                      this.modalRecList = rList;

                    case 9:
                    case "end":
                      return _context25.stop();
                  }
                }
              }, _callee25, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "bulkSelectRec",
          value: function bulkSelectRec(allNone) {
            this.logger.info('[Modal-Memo-Recipients|bulkSelect] (' + allNone + ')...');

            if (allNone === 'all') {
              this.modalCtrl.dismiss(null, 'all', this.recModalId);
            } else {
              this.modalCtrl.dismiss(null, 'none', this.recModalId);
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "recChange",
          value: function recChange(rpIndex) {
            this.logger.info('[Modal|Memo-Recipients|recChange] (' + rpIndex + ')...');
            var selStr;
            var oState = this.modalRecList[rpIndex].isChecked;
            oState ? this.modalRecList[rpIndex].isChecked = false : this.modalRecList[rpIndex].isChecked = true;
            var nState = this.modalRecList[rpIndex].isChecked;
            nState ? selStr = 'Selected' : selStr = 'Not Selected';
            this.logger.info('(Change): ' + this.modalRecList[rpIndex].name + ' [CHANGED TO] ' + selStr);
            this.logger.info(this.modalRecList);
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "updateCancelList",
          value: function updateCancelList(closeRole) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {
              return regeneratorRuntime.wrap(function _callee26$(_context26) {
                while (1) {
                  switch (_context26.prev = _context26.next) {
                    case 0:
                      this.logger.info('[Modal|Memo-Recipients|updateCancelList] (' + closeRole + ')...');

                      if (closeRole === 'update') {
                        this.modalCtrl.dismiss(this.modalRecList, 'update', this.recModalId);
                      } else {
                        this.modalCtrl.dismiss(this.modalORecList, 'cancel', this.recModalId);
                      }

                    case 2:
                    case "end":
                      return _context26.stop();
                  }
                }
              }, _callee26, this);
            }));
          }
        }]);

        return RecipientsPage;
      }();

      _RecipientsPage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_3__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__.NavParams
        }];
      };

      _RecipientsPage = (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'app-recipients',
        template: _raw_loader_recipients_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_recipients_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _RecipientsPage);
      /***/
    },

    /***/
    43175:
    /*!*****************************************************************!*\
      !*** ./src/app/modals/detail/news-detail/news-detail.module.ts ***!
      \*****************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "NewsDetailPageModule": function NewsDetailPageModule() {
          return (
            /* binding */
            _NewsDetailPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _news_detail_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./news-detail.page */
      85800);

      var _NewsDetailPageModule = function NewsDetailPageModule() {
        _classCallCheck(this, NewsDetailPageModule);
      };

      _NewsDetailPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_news_detail_page__WEBPACK_IMPORTED_MODULE_0__.NewsDetailPage]
      })], _NewsDetailPageModule);
      /***/
    },

    /***/
    85800:
    /*!***************************************************************!*\
      !*** ./src/app/modals/detail/news-detail/news-detail.page.ts ***!
      \***************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "NewsDetailPage": function NewsDetailPage() {
          return (
            /* binding */
            _NewsDetailPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_news_detail_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./news-detail.page.html */
      61150);
      /* harmony import */


      var _news_detail_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./news-detail.page.scss */
      2388);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _services_datetime_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./../../../services/datetime.service */
      12826);
      /* harmony import */


      var _services_events_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./../../../services/events.service */
      80106);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var src_app_popovers_peopledetail_peopledetail_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! src/app/popovers/peopledetail/peopledetail.component */
      2925);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _capacitor_share__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @capacitor/share */
      16380);
      /* harmony import */


      var _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @capacitor/keyboard */
      87730);
      /* harmony import */


      var _capacitor_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @capacitor/dialog */
      63540);
      /* harmony import */


      var _capacitor_app__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! @capacitor/app */
      42138);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! jquery */
      91704);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_9__); //////////////////////////////////////////////////////////////////////////////////////


      var _NewsDetailPage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function NewsDetailPage(logger, dT, evServ, modalCtrl, popCtrl, navP, plt) {
          _classCallCheck(this, NewsDetailPage);

          this.logger = logger;
          this.dT = dT;
          this.evServ = evServ;
          this.modalCtrl = modalCtrl;
          this.popCtrl = popCtrl;
          this.navP = navP;
          this.plt = plt;
          this.meObj = null;
          this.myObj = null; // Memo Vars

          this.memo = null; // ChatBox

          this.cbStatus = {
            type: null,
            ico: null,
            name: null,
            text: ''
          };
          this.cbCount = 0;
          this.cbIgnore = false; // Header Detail Menu

          this.popOpen = false;
          this.kbO = false;
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(NewsDetailPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this23 = this;

            this.logger.info('[Modal|Memo-Detail|OnInit]');

            _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_6__.Keyboard.removeAllListeners();

            _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_6__.Keyboard.addListener("keyboardDidShow", function (info) {
              _this23.kbH = info.keyboardHeight.toString() + 'px';
              _this23.kbO = true;
            });

            _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_6__.Keyboard.addListener("keyboardDidHide", function () {
              _this23.kbO = false;
            });

            this.initMemoDetailData();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initMemoDetailData",
          value: function initMemoDetailData() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {
              var _this24 = this;

              return regeneratorRuntime.wrap(function _callee27$(_context27) {
                while (1) {
                  switch (_context27.prev = _context27.next) {
                    case 0:
                      this.logger.info('[Modal|Memo-Detail|InitMemoData] ()...');
                      this.memo = this.navP.data.memo;
                      this.meAvatar = this.navP.data.meAva;
                      this.meObj = this.navP.data.me;
                      this.myObj = this.navP.data.my;
                      this.workColor = this.navP.data.work.color;
                      this.workName = this.navP.data.work.code;
                      this.incBright = this.navP.data.work.bright;
                      this.plt.ready().then(function () {
                        _this24.formatComments();
                      });

                    case 9:
                    case "end":
                      return _context27.stop();
                  }
                }
              }, _callee27, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "formatComments",
          value: function formatComments() {
            this.logger.info('[Modal|News-Detail|formatComments] ()...');

            for (var i = 0; i < this.memo._DPMetaData.Comments.length; i++) {
              var tCO = this.memo._DPMetaData.Comments[i];
              var nCreated = this.dT.format(this.dT.pISO(tCO.Created), 'd MMM yyyy h:mmaaa');
              this.memo._DPMetaData.Comments[i]['Created'] = nCreated;
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "chatBoxInput",
          value: function chatBoxInput(ev, val) {
            var _this25 = this;

            this.logger.info('[Modal|News-Detail|chatBoxInput] (' + ev + ',' + val + ')...');

            if (!this.cbIgnore) {
              var cbS = {
                n: {
                  type: null,
                  ico: null,
                  name: null,
                  text: ''
                },
                f: {
                  type: 'icon',
                  ico: 'forward',
                  name: 'chevron-forward',
                  text: 'Typing Comment...'
                },
                b: {
                  type: 'icon',
                  ico: 'back',
                  name: 'backspace',
                  text: 'Editing Comment...'
                },
                w: {
                  type: 'icon',
                  ico: 'wait',
                  name: 'ellipsis-horizontal',
                  text: 'Waiting...'
                },
                c: {
                  type: 'icon',
                  ico: 'clear',
                  name: 'trash',
                  text: 'Content Cleared.'
                },
                s: {
                  type: 'icon',
                  ico: 'sent',
                  name: 'checkmark',
                  text: 'Comment Sent Successfully!'
                },
                sp: {
                  type: 'spinner',
                  ico: 'spin',
                  name: 'dots',
                  text: 'Sending Comment - Please Wait...'
                }
              };

              if (ev === 'focus') {
                this.cbStatus = cbS.w;

                if (this.cbCount !== val.length) {
                  this.cbCount = val.length;
                }
              }

              ;

              if (ev === 'blur') {
                this.cbStatus = cbS.n;

                if (this.cbCount !== val.length) {
                  this.cbCount = val.length;
                }
              }

              ;

              if (ev === 'clear') {
                this.cbStatus = cbS.c;
                this.cbCount = 0;
              }

              ;

              if (ev === 'input') {
                var oldVLen = this.cbCount;
                console.log('Old Input Count: ' + oldVLen);
                var newVLen = val.length;
                console.log('New Input Count: ' + newVLen);
                var vDiff = newVLen - oldVLen;
                console.log('vDiff: ' + vDiff);
                var vS = Math.sign(vDiff);
                console.log('vS: ' + vS);

                if (vS === 1) {
                  this.cbStatus = cbS.f;
                  this.cbCount = newVLen;
                  console.log('Do F');
                } else if (vS === -1) {
                  this.cbStatus = cbS.b;
                  this.cbCount = newVLen;
                  console.log('Do B');
                } else {
                  this.cbStatus = cbS.w;
                  this.cbCount = newVLen;
                  console.log('Do W');
                }
              }

              if (ev === 'send') {
                this.cbIgnore = true;
                this.cbStatus = cbS.sp;
                this.cbInput.disabled = true; //API LOGIC HERE...

                setTimeout(function () {
                  _this25.evServ.showToast('success', 'Comment Posted Successfully');

                  _this25.cbInput.value = '';
                  _this25.cbStatus = cbS.s;
                  _this25.cbInput.disabled = false;
                  _this25.cbIgnore = false;
                  setTimeout(function () {
                    _this25.cbStatus = cbS.n;
                  }, 1500);
                }, 3000);
              }
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "deleteMemo",
          value: function deleteMemo() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {
              var delConfOpts, _yield$_capacitor_dia3, value;

              return regeneratorRuntime.wrap(function _callee28$(_context28) {
                while (1) {
                  switch (_context28.prev = _context28.next) {
                    case 0:
                      this.logger.info('[Modal|Memo-Detail|deleteMemo] ()...');

                      if (!this.memo._DPMetaData.CanDelete) {
                        _context28.next = 10;
                        break;
                      }

                      delConfOpts = {
                        title: 'Confirm Memo Delete',
                        message: 'Deleting a Memo cannot be undone. Are you sure?',
                        okButtonTitle: 'DELETE',
                        cancelButtonTitle: 'CANCEL'
                      };
                      _context28.next = 5;
                      return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_7__.Dialog.confirm(delConfOpts);

                    case 5:
                      _yield$_capacitor_dia3 = _context28.sent;
                      value = _yield$_capacitor_dia3.value;

                      if (value) {
                        this.closeDetail('delete');
                      } else {
                        this.evServ.showToast('cancel', 'Cancelled - Did NOT Delete Memo');
                      }

                      _context28.next = 11;
                      break;

                    case 10:
                      this.evServ.showToast('error', 'Permission Error - Not Your Memo');

                    case 11:
                    case "end":
                      return _context28.stop();
                  }
                }
              }, _callee28, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "showPeoplePop",
          value: function showPeoplePop(event) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee29() {
              var pdPopOpts, pdPop, _yield$pdPop$onDidDis, role;

              return regeneratorRuntime.wrap(function _callee29$(_context29) {
                while (1) {
                  switch (_context29.prev = _context29.next) {
                    case 0:
                      this.logger.info('[Modal|News-Detail|showPeoplePop] (event)...');
                      pdPopOpts = {
                        component: src_app_popovers_peopledetail_peopledetail_component__WEBPACK_IMPORTED_MODULE_4__.PeopleDetailComponent,
                        componentProps: {
                          people: [],
                          logs: [],
                          confReqs: null,
                          me: {}
                        },
                        showBackdrop: false,
                        backdropDismiss: true,
                        cssClass: 'pop-peopledetail',
                        event: event,
                        animated: true,
                        mode: 'md',
                        keyboardClose: true
                      };
                      pdPopOpts.componentProps.people = this.memo._DPMetaData.AssignedUsers;
                      pdPopOpts.componentProps.logs = this.memo._DPMetaData.MemoLogs;
                      pdPopOpts.componentProps.confReq = this.memo._DPMetaData.RequireConfirmation;
                      pdPopOpts.componentProps.meConf = this.memo._DPMetaData.RequireMyConfirm ? false : true;
                      pdPopOpts.componentProps.me = {
                        ava: this.meAvatar,
                        obj: this.meObj
                      };
                      _context29.next = 9;
                      return this.popCtrl.create(pdPopOpts);

                    case 9:
                      pdPop = _context29.sent;
                      _context29.next = 12;
                      return pdPop.present();

                    case 12:
                      _context29.next = 14;
                      return pdPop.onDidDismiss();

                    case 14:
                      _yield$pdPop$onDidDis = _context29.sent;
                      role = _yield$pdPop$onDidDis.role;
                      this.logger.info('[Modal|News-Detail|showPeoplePop] (DISMISSED): With Role: ' + role);

                    case 17:
                    case "end":
                      return _context29.stop();
                  }
                }
              }, _callee29, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "confirmMemo",
          value: function confirmMemo() {
            this.logger.info('[Modal|News-Detail|confirmMemo] ()...');
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "shareMemo",
          value: function shareMemo() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {
              var exportTxt, shareRes;
              return regeneratorRuntime.wrap(function _callee30$(_context30) {
                while (1) {
                  switch (_context30.prev = _context30.next) {
                    case 0:
                      this.logger.info('[Modal|Memo-Detail|shareMemo] ()...');
                      jquery__WEBPACK_IMPORTED_MODULE_9__('.sheriff-detail-header-btn-wrapper.share-btn').addClass('detail-sharebtn-active');

                      _capacitor_app__WEBPACK_IMPORTED_MODULE_8__.App.addListener('appStateChange', function (_ref2) {
                        var isActive = _ref2.isActive;

                        if (isActive) {
                          jquery__WEBPACK_IMPORTED_MODULE_9__('.sheriff-detail-header-btn-wrapper.share-btn').removeClass('detail-sharebtn-active');
                        }
                      });

                      exportTxt = 'Timesheet #' + this.memo.Id + ' - ' + this.memo.nDate + ':\n';
                      Object.entries(this.memo).forEach(function (_ref3) {
                        var _ref4 = _slicedToArray(_ref3, 2),
                            key = _ref4[0],
                            value = _ref4[1];

                        var newLine = "".concat(key, ": ").concat(value, "\n");
                        exportTxt = exportTxt.concat(newLine);
                      });
                      _context30.prev = 5;
                      _context30.next = 8;
                      return _capacitor_share__WEBPACK_IMPORTED_MODULE_5__.Share.share({
                        title: 'Export Memo #' + this.memo.Id,
                        text: exportTxt,
                        url: null,
                        dialogTitle: 'Export Memo #' + this.memo.Id
                      });

                    case 8:
                      shareRes = _context30.sent;
                      this.evServ.showToast('success', 'Shared via ' + shareRes.activityType);
                      this.didExport = true;
                      this.exportVia = shareRes.activityType;
                      this.logger.info('[Modal|Memo-Detail|shareMemo] (Result): ' + shareRes.activityType);
                      _context30.next = 19;
                      break;

                    case 15:
                      _context30.prev = 15;
                      _context30.t0 = _context30["catch"](5);
                      this.evServ.showToast('error', 'Share Failed');
                      this.logger.info('[Modal|Memo-Detail|shareTS] (Error): ' + _context30.t0);

                    case 19:
                    case "end":
                      return _context30.stop();
                  }
                }
              }, _callee30, this, [[5, 15]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeDetail",
          value: function closeDetail(closeRole) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee31() {
              var cD;
              return regeneratorRuntime.wrap(function _callee31$(_context31) {
                while (1) {
                  switch (_context31.prev = _context31.next) {
                    case 0:
                      if (closeRole === 'delete') {
                        cD = this.memo.Id;
                      } else if (closeRole === 'dismiss') {
                        cD = null;
                      } else {
                        cD = null;
                      }

                      ;
                      this.modalCtrl.dismiss({
                        role: closeRole,
                        data: cD
                      });

                    case 3:
                    case "end":
                      return _context31.stop();
                  }
                }
              }, _callee31, this);
            }));
          }
        }]);

        return NewsDetailPage;
      }();

      _NewsDetailPage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_11__.NGXLogger
        }, {
          type: _services_datetime_service__WEBPACK_IMPORTED_MODULE_2__.DateTimeService
        }, {
          type: _services_events_service__WEBPACK_IMPORTED_MODULE_3__.EventsService
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_12__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_12__.PopoverController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_12__.NavParams
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_12__.Platform
        }];
      };

      _NewsDetailPage.propDecorators = {
        cbInput: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_13__.ViewChild,
          args: ['cbInput']
        }]
      };
      _NewsDetailPage = (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_13__.Component)({
        selector: 'app-news-detail',
        template: _raw_loader_news_detail_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_news_detail_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _NewsDetailPage);
      /***/
    },

    /***/
    43357:
    /*!***********************************************************!*\
      !*** ./src/app/modals/detail/task-add/task-add.module.ts ***!
      \***********************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TaskAddPageModule": function TaskAddPageModule() {
          return (
            /* binding */
            _TaskAddPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _task_add_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./task-add.page */
      81900);

      var _TaskAddPageModule = function TaskAddPageModule() {
        _classCallCheck(this, TaskAddPageModule);
      };

      _TaskAddPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_task_add_page__WEBPACK_IMPORTED_MODULE_0__.TaskAddPage]
      })], _TaskAddPageModule);
      /***/
    },

    /***/
    81900:
    /*!*********************************************************!*\
      !*** ./src/app/modals/detail/task-add/task-add.page.ts ***!
      \*********************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TaskAddPage": function TaskAddPage() {
          return (
            /* binding */
            _TaskAddPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_task_add_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./task-add.page.html */
      4425);
      /* harmony import */


      var _task_add_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./task-add.page.scss */
      79497);
      /* harmony import */


      var _services_events_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./../../../services/events.service */
      80106);
      /* harmony import */


      var _services_deputy_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../../../services/deputy.service */
      22092);
      /* harmony import */


      var _services_datetime_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../../../services/datetime.service */
      12826);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _taskassignee_taskassignee_page__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./taskassignee/taskassignee.page */
      58857);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _capacitor_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @capacitor/dialog */
      63540);
      /* harmony import */


      var _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @capacitor/keyboard */
      87730);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ngx-logger */
      62740); //////////////////////////////////////////////////////////////////////////////////////


      var _TaskAddPage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function TaskAddPage(logger, modalCtrl, loadCtrl, navP, plt, dT, deputy, evServ) {
          _classCallCheck(this, TaskAddPage);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.loadCtrl = loadCtrl;
          this.navP = navP;
          this.plt = plt;
          this.dT = dT;
          this.deputy = deputy;
          this.evServ = evServ;
          this.myEmpId = 0;
          this.pplArr = [];
          this.submitReady = false;
          this.didSubmit = false;
          this.addForm = {
            title: {
              input: 'atiTitle',
              required: true,
              focus: false,
              valid: null,
              value: null
            },
            assign: {
              required: true,
              focus: false,
              valid: null,
              value: null
            },
            duedate: {
              required: false,
              focus: false,
              valid: null,
              value: null,
              txt: null,
              ts: null
            },
            notes: {
              input: 'atiNotes',
              required: false,
              focus: false,
              valid: null,
              value: null
            }
          };
          this.assList = [];
          this.assSelModalOpts = {
            animated: false,
            showBackdrop: true,
            backdropDismiss: false,
            cssClass: 'memo-recipients-modal-class',
            component: _taskassignee_taskassignee_page__WEBPACK_IMPORTED_MODULE_5__.TaskAssigneePage,
            keyboardClose: true
          };
          this.assSelIsOpen = false;
          this.dateSelIsOpen = false;
          this.dateOD = false;
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(TaskAddPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|Tasks-Add|OnInit]');
            this.initPrefs();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initPrefs",
          value: function initPrefs() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee32() {
              var _this26 = this;

              var assignMeArr;
              return regeneratorRuntime.wrap(function _callee32$(_context32) {
                while (1) {
                  switch (_context32.prev = _context32.next) {
                    case 0:
                      this.logger.info('[Modal|Tasks-Add|initPrefs] ()...');

                      _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_7__.Keyboard.removeAllListeners();

                      this.modalNavData = this.navP.data;
                      this.meObj = this.modalNavData.me;
                      this.myObj = this.modalNavData.my;
                      this.meAvatar = this.modalNavData.meAva;
                      this.workAvatar = this.modalNavData.workAva;
                      this.myEmpId = this.modalNavData.meEmpId;
                      this.pplArr = this.modalNavData.ppl;
                      this.assList = this.modalNavData.ppl;
                      this.myTasksListLen = this.modalNavData.myTListLen;
                      this.assTasksListLen = this.modalNavData.assTListLen;

                      if (this.myEmpId > 0) {
                        assignMeArr = this.modalNavData.ppl.filter(function (p) {
                          return p.EmpId === _this26.myEmpId;
                        });

                        if (assignMeArr.length > 0) {
                          this.addForm.assign.value = assignMeArr[0];
                          this.addForm.assign.valid = true;
                        }
                      }

                    case 13:
                    case "end":
                      return _context32.stop();
                  }
                }
              }, _callee32, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            var _this27 = this;

            this.logger.info('[Modal|Tasks-Add|ionViewDidEnter]');
            this.plt.ready().then(function () {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(_this27, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee33() {
                var modalEl;
                return regeneratorRuntime.wrap(function _callee33$(_context33) {
                  while (1) {
                    switch (_context33.prev = _context33.next) {
                      case 0:
                        _context33.next = 2;
                        return this.modalCtrl.getTop();

                      case 2:
                        modalEl = _context33.sent;
                        this.modalId = modalEl.id;

                      case 4:
                      case "end":
                        return _context33.stop();
                    }
                  }
                }, _callee33, this);
              }));
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "actionATField",
          value: function actionATField(fieldAction, formPtyName, fieldVal) {
            var _this28 = this;

            this.logger.info('[TabTasks|actionATField] (' + fieldAction + ',' + formPtyName + ',' + fieldVal + ')...');

            var getPH = function getPH() {
              if (_this28.addForm[formPtyName].required) {
                return 'Required';
              } else {
                return 'Optional';
              }
            };

            var allValidCheck = function allValidCheck() {
              if (_this28.addForm.title.valid && _this28.addForm.assign.valid) {
                return true;
              } else {
                return false;
              }
            };

            if (fieldAction === 'blur') {
              this.addForm[formPtyName].focus = false;
              var inputEleStr = this.addForm[formPtyName].input;
              this[inputEleStr].placeholder = getPH();
              fieldVal === '' || fieldVal.length < 1 ? this.addForm[formPtyName].value = null : this.addForm[formPtyName].value = fieldVal;

              if (formPtyName === 'title') {
                if (this.addForm.title.value === null) {
                  this.addForm.title.valid = false;
                } else {
                  this.addForm.title.valid = true;
                }
              } else {
                this.addForm.notes.valid = true;
              }

              ;

              if (allValidCheck()) {
                this.submitReady = true;
              } else {
                this.submitReady = false;
              }
            } else {
              this.addForm[formPtyName].focus = true;
              var _inputEleStr = this.addForm[formPtyName].input;
              this[_inputEleStr].placeholder = '';
              this.addForm[formPtyName].valid = null;
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeAddTask",
          value: function closeAddTask() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee34() {
              var addDiscardTaskOpts, _yield$_capacitor_dia4, value;

              return regeneratorRuntime.wrap(function _callee34$(_context34) {
                while (1) {
                  switch (_context34.prev = _context34.next) {
                    case 0:
                      this.logger.info('[Modal|Task-Add|closeAddTask] ()...');

                      if (!(this.submitReady && !this.didSubmit)) {
                        _context34.next = 10;
                        break;
                      }

                      addDiscardTaskOpts = {
                        title: 'Add New Task?',
                        message: 'Add or Discard New Task?',
                        okButtonTitle: 'Add Task',
                        cancelButtonTitle: 'Discard'
                      };
                      _context34.next = 5;
                      return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_6__.Dialog.confirm(addDiscardTaskOpts);

                    case 5:
                      _yield$_capacitor_dia4 = _context34.sent;
                      value = _yield$_capacitor_dia4.value;

                      if (value) {
                        this.submitAddTask();
                      } else {
                        this.modalCtrl.dismiss(null, 'cancel', this.modalId);
                      }

                      _context34.next = 11;
                      break;

                    case 10:
                      this.modalCtrl.dismiss(null, 'cancel', this.modalId);

                    case 11:
                    case "end":
                      return _context34.stop();
                  }
                }
              }, _callee34, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "submitAddTask",
          value: function submitAddTask() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee35() {
              var submitTaskLoader, tSOrder, myAss, submitTAPiRes;
              return regeneratorRuntime.wrap(function _callee35$(_context35) {
                while (1) {
                  switch (_context35.prev = _context35.next) {
                    case 0:
                      this.logger.info('[Modal|Task-Add|submitTaskAdd] ()...');
                      _context35.next = 3;
                      return this.loadCtrl.create({
                        spinner: 'dots',
                        cssClass: 'sheriff-loader-class',
                        message: 'Adding New Task'
                      });

                    case 3:
                      submitTaskLoader = _context35.sent;
                      _context35.next = 6;
                      return submitTaskLoader.present();

                    case 6:
                      if (this.addForm.duedate.value !== null) {
                        this.addForm.duedate.ts = this.dT.UTSd(this.addForm.duedate.value);
                      }

                      ;

                      if (this.addForm.assign.value === this.myEmpId) {
                        myAss = 'my';
                        tSOrder = this.myTasksListLen + 1;
                      } else {
                        myAss = 'ass';
                        tSOrder = this.assTasksListLen + 1;
                      }

                      ;
                      _context35.next = 12;
                      return this.deputy.createTask(myAss, this.myEmpId, this.addForm.assign.value.EmpId, this.addForm.title.value, tSOrder, this.addForm.duedate.value, this.addForm.notes.value);

                    case 12:
                      submitTAPiRes = _context35.sent;

                      if (submitTAPiRes.result) {
                        submitTaskLoader.dismiss();
                        this.modalCtrl.dismiss(submitTAPiRes.data, 'success', this.modalId);
                        this.didSubmit = true;
                      } else {
                        submitTaskLoader.dismiss();
                        this.didSubmit = false;
                      }

                    case 14:
                    case "end":
                      return _context35.stop();
                  }
                }
              }, _callee35, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "openDP",
          value: function openDP() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee36() {
              var _this29 = this;

              var isDate, addUpdate, openDate;
              return regeneratorRuntime.wrap(function _callee36$(_context36) {
                while (1) {
                  switch (_context36.prev = _context36.next) {
                    case 0:
                      this.logger.info('[Modal|Task-Add|openDP] ()...');
                      this.dateSelIsOpen = true;

                      isDate = function isDate(d) {
                        if (Object.prototype.toString.call(d) === '[object Date]') return true;
                        return false;
                      };

                      if (this.addForm.duedate.value === null) {
                        openDate = new Date();
                        addUpdate = 'Added';
                      } else {
                        openDate = this.addForm.duedate.value;
                        addUpdate = 'Updated';
                      }

                      ;
                      this.dT.dpDateOnly(openDate).then(function (newD) {
                        _this29.dateSelIsOpen = false;

                        if (isDate(newD)) {
                          _this29.addForm.duedate.value = newD;
                          _this29.addForm.duedate.txt = _this29.dT.format(newD, 'EEE, d MMM yyyy');
                          _this29.addForm.duedate.valid = true;

                          if (_this29.dT.isB(newD, new Date())) {
                            _this29.dateOD = true;
                          } else {
                            _this29.dateOD = false;
                          }

                          ;

                          _this29.logger.info('[Modal|TSheet-Add|DueDatePicker] (Success): Date ' + addUpdate + '.');
                        } else {
                          _this29.dateSelIsOpen = false;

                          _this29.logger.info('[Modal|Task-Add|DueDatePicker] (ERROR): Selection NOT VALID Date Object.');
                        }
                      })["catch"](function (newDErr) {
                        _this29.dateSelIsOpen = false;
                        var errMsg;
                        addUpdate === 'Added' ? errMsg = 'No Due Date' : errMsg = 'Using Old Due Date';

                        if (newDErr === 'cancel') {
                          _this29.logger.info('[Modal|Task-Add|DueDatePicker] (Cancelled): User Cancelled');
                        } else {
                          _this29.logger.info('[Modal|Task-Add|DueDatePicker] (Error): ' + newDErr);
                        }

                        ;
                      });

                    case 6:
                    case "end":
                      return _context36.stop();
                  }
                }
              }, _callee36, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "clearDueDate",
          value: function clearDueDate() {
            this.logger.info('[Modal|Task-Add|clearDueDate] ()...');
            this.addForm.duedate.value = null;
            this.addForm.duedate.txt = null;
            this.addForm.duedate.valid = null;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "openAssignSelect",
          value: function openAssignSelect() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee37() {
              var _this30 = this;

              var assSelOpts, assModalList, currentSelEmpId, assSelModal;
              return regeneratorRuntime.wrap(function _callee37$(_context37) {
                while (1) {
                  switch (_context37.prev = _context37.next) {
                    case 0:
                      this.logger.info('[Modal|Task-Add|openAssignSelect] ()...');
                      assSelOpts = this.assSelModalOpts;
                      assModalList = this.assList;
                      currentSelEmpId = this.addForm.assign.value.EmpId;
                      assSelOpts['componentProps'] = {
                        assList: assModalList
                      };
                      _context37.next = 7;
                      return this.modalCtrl.create(assSelOpts);

                    case 7:
                      assSelModal = _context37.sent;
                      document.addEventListener('ionModalDidPresent', function () {
                        _this30.assSelIsOpen = true;
                        _this30.addForm.title.focus === true;

                        _this30.logger.info('[Modal|Task-Add|openAssignSelect] (ionModalDidPresent)');
                      });
                      assSelModal.onDidDismiss().then(function (_ref5) {
                        var data = _ref5.data,
                            role = _ref5.role;
                        _this30.assSelIsOpen = false;

                        _this30.logger.info('[Modal|Task-Add|openAssignSelect] (ionModalDidDismiss) >>> (Role): ' + role + ' ...');

                        if (role === 'cancel') {
                          _this30.logger.info('[Modal|Task-Add|openAssignSelect] (CANCELLED) User Cancelled Selection');
                        } else {
                          var newAssSel = data;

                          if (newAssSel.EmpId === currentSelEmpId) {
                            _this30.logger.info('[Modal|Task-Add|openAssignSelect] (UNCHANGED) Same Person Selected - Unchanged Assignee');
                          } else {
                            _this30.addForm.assign.value = newAssSel;
                            _this30.addForm.assign.valid = true;
                          }
                        }
                      });
                      _context37.next = 12;
                      return assSelModal.present();

                    case 12:
                    case "end":
                      return _context37.stop();
                  }
                }
              }, _callee37, this);
            }));
          }
        }]);

        return TaskAddPage;
      }();

      _TaskAddPage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_9__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_10__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_10__.LoadingController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_10__.NavParams
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_10__.Platform
        }, {
          type: _services_datetime_service__WEBPACK_IMPORTED_MODULE_4__.DateTimeService
        }, {
          type: _services_deputy_service__WEBPACK_IMPORTED_MODULE_3__.DeputyService
        }, {
          type: _services_events_service__WEBPACK_IMPORTED_MODULE_2__.EventsService
        }];
      };

      _TaskAddPage.propDecorators = {
        atiTitle: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ViewChild,
          args: [_ionic_angular__WEBPACK_IMPORTED_MODULE_10__.IonInput, {
            "static": false
          }]
        }],
        atiNotes: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ViewChild,
          args: [_ionic_angular__WEBPACK_IMPORTED_MODULE_10__.IonTextarea, {
            "static": false
          }]
        }]
      };
      _TaskAddPage = (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_11__.Component)({
        selector: 'app-task-add',
        template: _raw_loader_task_add_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_task_add_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _TaskAddPage);
      /***/
    },

    /***/
    46361:
    /*!****************************************************************************!*\
      !*** ./src/app/modals/detail/task-add/taskassignee/taskassignee.module.ts ***!
      \****************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TaskAssigneePageModule": function TaskAssigneePageModule() {
          return (
            /* binding */
            _TaskAssigneePageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _taskassignee_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./taskassignee.page */
      58857);

      var _TaskAssigneePageModule = function TaskAssigneePageModule() {
        _classCallCheck(this, TaskAssigneePageModule);
      };

      _TaskAssigneePageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_taskassignee_page__WEBPACK_IMPORTED_MODULE_0__.TaskAssigneePage]
      })], _TaskAssigneePageModule);
      /***/
    },

    /***/
    58857:
    /*!**************************************************************************!*\
      !*** ./src/app/modals/detail/task-add/taskassignee/taskassignee.page.ts ***!
      \**************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TaskAssigneePage": function TaskAssigneePage() {
          return (
            /* binding */
            _TaskAssigneePage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_taskassignee_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./taskassignee.page.html */
      15295);
      /* harmony import */


      var _taskassignee_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./taskassignee.page.scss */
      27379);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ngx-logger */
      62740); //////////////////////////////////////////////////////////////////////////////////////


      var _TaskAssigneePage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function TaskAssigneePage(logger, modalCtrl, navP) {
          _classCallCheck(this, TaskAssigneePage);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.navP = navP;
          this.modalAssList = [];
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(TaskAssigneePage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|TaskAssignee|OnInit] ()...');
            this.initRecipientsData();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initRecipientsData",
          value: function initRecipientsData() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee38() {
              var modalEl, modalAssList;
              return regeneratorRuntime.wrap(function _callee38$(_context38) {
                while (1) {
                  switch (_context38.prev = _context38.next) {
                    case 0:
                      this.logger.info('[Modal|TaskAssignee|initRecipientsData] ()...');
                      _context38.next = 3;
                      return this.modalCtrl.getTop();

                    case 3:
                      modalEl = _context38.sent;
                      this.assModalId = modalEl.id;
                      modalAssList = this.navP.get('assList');
                      this.modalAssList = modalAssList;

                    case 7:
                    case "end":
                      return _context38.stop();
                  }
                }
              }, _callee38, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "assSelChange",
          value: function assSelChange(assIndex) {
            this.logger.info('[Modal|TaskAssignee|assSelChange] (' + assIndex + ')...');
            var newSelAssObj = this.modalAssList[assIndex];
            this.logger.info('[Modal|TaskAssignee|assSelChange] (New Selection): ' + newSelAssObj.DisplayName + ' (EmpId ' + newSelAssObj.EmpId + ')');
            this.modalCtrl.dismiss(newSelAssObj, 'changed', this.assModalId);
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "assSelCancel",
          value: function assSelCancel() {
            this.logger.info('[Modal|TaskAssignee|assSelCancel] ()...');
            this.modalCtrl.dismiss(null, 'cancel', this.assModalId);
          }
        }]);

        return TaskAssigneePage;
      }();

      _TaskAssigneePage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_3__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__.NavParams
        }];
      };

      _TaskAssigneePage = (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'app-taskassignee',
        template: _raw_loader_taskassignee_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_taskassignee_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _TaskAssigneePage);
      /***/
    },

    /***/
    3690:
    /*!*****************************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-add/tsheet-add.module.ts ***!
      \*****************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TSheetAddPageModule": function TSheetAddPageModule() {
          return (
            /* binding */
            _TSheetAddPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _tsheet_add_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./tsheet-add.page */
      11628);

      var _TSheetAddPageModule = function TSheetAddPageModule() {
        _classCallCheck(this, TSheetAddPageModule);
      };

      _TSheetAddPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_tsheet_add_page__WEBPACK_IMPORTED_MODULE_0__.TSheetAddPage]
      })], _TSheetAddPageModule);
      /***/
    },

    /***/
    11628:
    /*!***************************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-add/tsheet-add.page.ts ***!
      \***************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TSheetAddPage": function TSheetAddPage() {
          return (
            /* binding */
            _TSheetAddPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_tsheet_add_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./tsheet-add.page.html */
      56439);
      /* harmony import */


      var _tsheet_add_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./tsheet-add.page.scss */
      62301);
      /* harmony import */


      var _services_events_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./../../../../services/events.service */
      80106);
      /* harmony import */


      var _services_deputy_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../../../../services/deputy.service */
      22092);
      /* harmony import */


      var src_app_services_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! src/app/services/storage.service */
      71188);
      /* harmony import */


      var _services_datetime_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../../../../services/datetime.service */
      12826);
      /* harmony import */


      var src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! src/app/services/detail.service */
      52153);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @capacitor/action-sheet */
      54025);
      /* harmony import */


      var _tsheet_breaks_tsheet_breaks_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ../tsheet-breaks/tsheet-breaks.page */
      51354);
      /* harmony import */


      var _tsheet_history_tsheet_history_page__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ../tsheet-history/tsheet-history.page */
      89370);
      /* harmony import */


      var _capacitor_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! @capacitor/dialog */
      63540);
      /* harmony import */


      var _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! @capacitor/keyboard */
      87730);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! jquery */
      91704);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_12__);

      var myls = localStorage; //////////////////////////////////////////////////////////////////////////////////////

      var _TSheetAddPage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function TSheetAddPage(logger, modalCtrl, loadCtrl, navP, plt, dT, deputy, detailServ, evServ, storeServ) {
          _classCallCheck(this, TSheetAddPage);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.loadCtrl = loadCtrl;
          this.navP = navP;
          this.plt = plt;
          this.dT = dT;
          this.deputy = deputy;
          this.detailServ = detailServ;
          this.evServ = evServ;
          this.storeServ = storeServ;
          this.tsBreaksModalOpts = {
            animated: false,
            showBackdrop: false,
            backdropDismiss: false,
            cssClass: 'tsheet-detail-breaks-class',
            component: _tsheet_breaks_tsheet_breaks_page__WEBPACK_IMPORTED_MODULE_8__.TSheetBreaksPage,
            keyboardClose: true
          };
          this.tsHistoryModalOpts = {
            animated: false,
            showBackdrop: false,
            backdropDismiss: false,
            cssClass: 'tsheet-detail-history-class',
            component: _tsheet_history_tsheet_history_page__WEBPACK_IMPORTED_MODULE_9__.TSheetHistoryPage,
            keyboardClose: true
          };
          this.dpDateOpen = false;
          this.dpSTimeOpen = false;
          this.dpETimeOpen = false;
          this.workAreas = [];
          this.pplArr = [];
          this.addTSFormData = {
            companyId: null,
            companyName: null,
            areaId: 0,
            areaName: '',
            date: {
              date: new Date(),
              txt: this.dT.LNd(new Date())
            },
            stime: {
              date: null,
              txt: null
            },
            etime: {
              date: null,
              txt: null
            },
            breaks: {
              values: {
                summary: {
                  r: 0,
                  m: 0,
                  dur: {
                    hours: 0,
                    minutes: 0
                  }
                },
                slots: [{
                  start: null,
                  end: null,
                  dur: {
                    hours: 0,
                    minutes: 0
                  },
                  type: ''
                }]
              },
              slotsConfig: [{
                SlotValue: 'M',
                SlotLabel: 'Meal Break (Unpaid)',
                SlotName: 'Meal Break'
              }, {
                SlotValue: 'R',
                SlotLabel: 'Rest Break (Paid)',
                SlotName: 'Rest Break'
              }]
            },
            ttime: {
              hours: 0,
              minutes: 0
            },
            comments: {
              content: '',
              pholder: 'Add Comment?'
            }
          };
          this.newBreaks = [];
          this.showTTLBreakMins = true;
          this.shouldSave = false;
          this.errorSave = false;
          this.newTSInputErr = null;
          this.breakMOpen = false;
          this.wasChanged = false;
          this.updateSaveBannerTxt = 'updated';
          this.aSheetOpen = false;
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(TSheetAddPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|TSheet-Add|OnInit]');
            this.initPrefs();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initPrefs",
          value: function initPrefs() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee39() {
              return regeneratorRuntime.wrap(function _callee39$(_context39) {
                while (1) {
                  switch (_context39.prev = _context39.next) {
                    case 0:
                      this.meAvatar = this.detailServ.meAva;
                      this.workAvatar = this.detailServ.workAva;
                      this.meObj = this.detailServ.meObj;
                      this.myObj = this.detailServ.myObj;
                      this.myEmpId = this.detailServ.meEmpId;
                      this.myDisplayName = this.detailServ.meName;
                      this.pplArr = this.detailServ.pplArr;
                      this.addTSFormData.companyId = this.meObj.Company;
                      this.addTSFormData.companyName = this.meObj.CompanyObject.CompanyName;
                      this.initTSAddData();

                      _capacitor_keyboard__WEBPACK_IMPORTED_MODULE_11__.Keyboard.removeAllListeners();

                    case 11:
                    case "end":
                      return _context39.stop();
                  }
                }
              }, _callee39, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            var _this31 = this;

            this.logger.info('[Modal|TSheet-Add|ionViewDidEnter]');
            this.plt.ready().then(function () {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(_this31, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee40() {
                var modalEl;
                return regeneratorRuntime.wrap(function _callee40$(_context40) {
                  while (1) {
                    switch (_context40.prev = _context40.next) {
                      case 0:
                        _context40.next = 2;
                        return this.modalCtrl.getTop();

                      case 2:
                        modalEl = _context40.sent;
                        this.modalId = modalEl.id;

                      case 4:
                      case "end":
                        return _context40.stop();
                    }
                  }
                }, _callee40, this);
              }));
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initTSAddData",
          value: function initTSAddData() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee41() {
              var _this32 = this;

              return regeneratorRuntime.wrap(function _callee41$(_context41) {
                while (1) {
                  switch (_context41.prev = _context41.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Add|initTSAddData]');
                      this.addTSPs = this.navP.data;
                      this.workAreas = this.navP.data.wareas.list;
                      this.addTSFormData.areaId = this.navP.data.wareas.lastId;
                      this.addTSFormData.areaName = this.workAreas.filter(function (wa) {
                        return wa.Id === _this32.addTSFormData.areaId;
                      })[0].OperationalUnitName;

                    case 5:
                    case "end":
                      return _context41.stop();
                  }
                }
              }, _callee41, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeAddTSheet",
          value: function closeAddTSheet() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee42() {
              var doSaveConfOpts, _yield$_capacitor_dia5, value;

              return regeneratorRuntime.wrap(function _callee42$(_context42) {
                while (1) {
                  switch (_context42.prev = _context42.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Add|closeAddTSheet] ()...');

                      if (!this.errorSave) {
                        _context42.next = 5;
                        break;
                      }

                      this.errorWarning('error');
                      _context42.next = 15;
                      break;

                    case 5:
                      if (!this.shouldSave) {
                        _context42.next = 14;
                        break;
                      }

                      doSaveConfOpts = {
                        title: 'Save New Timesheet?',
                        message: 'Save & Add or Discard Your New TimesheetNew?',
                        okButtonTitle: 'Save/Add',
                        cancelButtonTitle: 'Discard'
                      };
                      _context42.next = 9;
                      return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_10__.Dialog.confirm(doSaveConfOpts);

                    case 9:
                      _yield$_capacitor_dia5 = _context42.sent;
                      value = _yield$_capacitor_dia5.value;

                      if (value) {
                        this.saveNewTSheet(true);
                      } else {
                        this.modalCtrl.dismiss({
                          data: null,
                          role: 'unchanged',
                          id: this.modalId
                        });
                      }

                      _context42.next = 15;
                      break;

                    case 14:
                      if (this.wasChanged) {
                        this.modalCtrl.dismiss({
                          data: {
                            newTSFormData: this.addTSFormData,
                            newTSAPIObj: this.newTSAPIObj
                          },
                          role: 'changed',
                          id: this.modalId
                        });
                      } else {
                        this.modalCtrl.dismiss({
                          data: null,
                          role: 'unchanged',
                          id: this.modalId
                        });
                      }

                    case 15:
                    case "end":
                      return _context42.stop();
                  }
                }
              }, _callee42, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "errorWarning",
          value: function errorWarning(type) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee43() {
              return regeneratorRuntime.wrap(function _callee43$(_context43) {
                while (1) {
                  switch (_context43.prev = _context43.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Add|errorWarning] ()...');

                      if (type === 'error') {
                        _capacitor_dialog__WEBPACK_IMPORTED_MODULE_10__.Dialog.alert({
                          title: 'Fix Errors',
                          message: 'Unable to Save/Add Timesheet until errors are resolved'
                        });
                      }

                      if (type === 'missing') {
                        _capacitor_dialog__WEBPACK_IMPORTED_MODULE_10__.Dialog.alert({
                          title: 'Missing Data',
                          message: 'Unable to Save/Add Timesheet until all details entered'
                        });
                      }

                    case 3:
                    case "end":
                      return _context43.stop();
                  }
                }
              }, _callee43, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "saveNewTSheet",
          value: function saveNewTSheet(doClose) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee44() {
              var _this33 = this;

              var dO, isDate, saveNewTSheetLoader;
              return regeneratorRuntime.wrap(function _callee44$(_context44) {
                while (1) {
                  switch (_context44.prev = _context44.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Add|saveNewTSheet] ()...');
                      dO = this.addTSFormData;

                      isDate = function isDate(d) {
                        if (Object.prototype.toString.call(d) === '[object Date]') return true;
                        return false;
                      };

                      if (!this.errorSave) {
                        _context44.next = 7;
                        break;
                      }

                      this.errorWarning('error');
                      _context44.next = 17;
                      break;

                    case 7:
                      if (!(dO.companyId > 0 && dO.areaId > 0 && isDate(dO.date.date) && isDate(dO.stime.date) && isDate(dO.etime.date) && dO.ttime.hours + dO.ttime.minutes !== 0 && this.errorSave !== true)) {
                        _context44.next = 16;
                        break;
                      }

                      _context44.next = 10;
                      return this.loadCtrl.create({
                        spinner: 'dots',
                        cssClass: 'sheriff-loader-class',
                        message: 'Saving/Adding New Timesheet'
                      });

                    case 10:
                      saveNewTSheetLoader = _context44.sent;
                      _context44.next = 13;
                      return saveNewTSheetLoader.present();

                    case 13:
                      setTimeout(function () {
                        _this33.logger.info('[Modal|TSheet-Add|saveNewTSheet] (Saving/Adding New TSheet) - Remote: Deputy Put/Post New Timesheet - Await Server 200 - Do GET Request to /my/timesheet & Push Object to Local Variable...');

                        _this33.logger.info('[Modal|TSheet-Add|saveNewTSheet] (Saving/Adding New TSheet) - Local: Add New Timesheet Object to SQLite DB & Push New Obj to Local/Global Var to be Returned with Dismiss Data - No Refresh Required to Update TSheet-List View.'); //this.newTSAPIObj=? // Change to New Obj Returned As Above


                        _this33.wasChanged = true;

                        _this33.aniSave();

                        _this33.shouldSave = false;
                        saveNewTSheetLoader.dismiss();
                        _this33.updateSaveBannerTxt = 'saved';

                        if (doClose) {
                          _this33.closeAddTSheet();
                        }

                        ;
                      }, 5000);
                      _context44.next = 17;
                      break;

                    case 16:
                      this.errorWarning('missing');

                    case 17:
                    case "end":
                      return _context44.stop();
                  }
                }
              }, _callee44, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "aniNew",
          value: function aniNew() {
            var doAni = function doAni() {
              return new Promise(function (resolve) {
                var aniStr = 'animate__animated animate__rubberBand plus1breakcount';
                jquery__WEBPACK_IMPORTED_MODULE_12__('.title-bc-ani').on('animationend', function () {
                  jquery__WEBPACK_IMPORTED_MODULE_12__('.title-bc-ani').removeClass(aniStr);
                  resolve(true);
                });
                jquery__WEBPACK_IMPORTED_MODULE_12__('.title-bc-ani').addClass(aniStr);
              });
            };

            doAni();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "aniSave",
          value: function aniSave() {
            var doAni = function doAni() {
              return new Promise(function (resolve) {
                var aniStr = 'animate__animated animate__flipInX saving-tsb-data';
                jquery__WEBPACK_IMPORTED_MODULE_12__('.save-data').on('animationend', function () {
                  jquery__WEBPACK_IMPORTED_MODULE_12__('.save-data').removeClass(aniStr);
                  resolve(true);
                });
                jquery__WEBPACK_IMPORTED_MODULE_12__('.save-data').addClass(aniStr);
              });
            };

            doAni();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "editArea",
          value: function editArea(currentArea) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee45() {
              var _this34 = this;

              var thisIndexToIdRefArr, niceTxt, wareaASheetOpts, i, tA, thisASB;
              return regeneratorRuntime.wrap(function _callee45$(_context45) {
                while (1) {
                  switch (_context45.prev = _context45.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Add|editArea] (' + currentArea + ')...');
                      thisIndexToIdRefArr = [];

                      niceTxt = function niceTxt(rawLbl) {
                        var w = rawLbl.split(' ');
                        var nT = w.map(function (w) {
                          return w[0].toUpperCase() + w.substring(1);
                        }).join(' ');
                        return nT;
                      };

                      wareaASheetOpts = {
                        title: '𝗦𝗘𝗟𝗘𝗖𝗧 𝗪𝗢𝗥𝗞 𝗔𝗥𝗘𝗔:',
                        options: []
                      };

                      for (i = 0; i < this.workAreas.length; i++) {
                        tA = this.workAreas[i];
                        thisASB = {
                          title: '',
                          style: _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_7__.ActionSheetButtonStyle.Default
                        };
                        Number(tA.Id) === Number(currentArea) ? thisASB.title = "\uD83D\uDFE2 " + niceTxt(tA.OperationalUnitName.toString().toLowerCase()) : thisASB.title = "\u26AB " + niceTxt(tA.OperationalUnitName.toString().toLowerCase());
                        thisIndexToIdRefArr.push(tA.Id);
                        wareaASheetOpts.options.push(thisASB);
                      }

                      ;
                      thisIndexToIdRefArr.push(currentArea);
                      wareaASheetOpts.options.push({
                        title: "\u274C \uD835\uDDD6\uD835\uDDD4\uD835\uDDE1\uD835\uDDD6\uD835\uDDD8\uD835\uDDDF",
                        style: _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_7__.ActionSheetButtonStyle.Cancel
                      });
                      _context45.next = 10;
                      return _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_7__.ActionSheet.showActions(wareaASheetOpts).then(function (wareaRes) {
                        _this34.aSheetOpen = true;

                        if (thisIndexToIdRefArr[wareaRes.index].toString() === currentArea.toString()) {
                          if (wareaRes.index + 1 === wareaASheetOpts.options.length) {
                            _this34.logger.info('[Modal|TSheet-Detail|editArea] (Cancelled)');

                            _this34.evServ.showToast('cross', 'Cancelled');
                          } else {
                            _this34.logger.info('[Modal|TSheet-Detail|editArea] (Selected Same)');

                            _this34.evServ.showToast('warning', 'Unchanged');
                          }

                          ;
                          _this34.aSheetOpen = false;
                        } else {
                          var newAId = thisIndexToIdRefArr[wareaRes.index];

                          var _iterator = _createForOfIteratorHelper(_this34.workAreas),
                              _step;

                          try {
                            for (_iterator.s(); !(_step = _iterator.n()).done;) {
                              var areas = _step.value;

                              if (newAId === areas.Id) {
                                _this34.addTSFormData.areaName = areas.OperationalUnitName;
                                _this34.addTSFormData.areaId = areas.Id;
                              }
                            }
                          } catch (err) {
                            _iterator.e(err);
                          } finally {
                            _iterator.f();
                          }

                          ;

                          _this34.evServ.showToast('success', 'New Area Selected');

                          _this34.shouldSave = true;
                          _this34.wasChanged = true;
                          _this34.updateSaveBannerTxt = 'updated';
                          _this34.aSheetOpen = false;

                          _this34.logger.info('[Modal|TSheet-Detail|editArea] (Selected) i:' + wareaRes.index + ' | name: ' + _this34.workAreas[wareaRes.index].OperationalUnitName);
                        }

                        ;
                      })["catch"](function (wareaErr) {
                        _this34.evServ.showToast('error', 'Change Area Error');

                        _this34.logger.info('[Modal|TSheet-Detail|editArea] (Error): ' + wareaErr);

                        _this34.aSheetOpen = false;
                      });

                    case 10:
                    case "end":
                      return _context45.stop();
                  }
                }
              }, _callee45, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "openDP",
          value: function openDP(input) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee46() {
              var _this35 = this;

              var isDate, sE, oD;
              return regeneratorRuntime.wrap(function _callee46$(_context46) {
                while (1) {
                  switch (_context46.prev = _context46.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Add|openDP] (' + input + ')...');

                      isDate = function isDate(d) {
                        if (Object.prototype.toString.call(d) === '[object Date]') return true;
                        return false;
                      };

                      if (input === 'date') {
                        this.dT.dpDateOnly(this.addTSFormData.date.date).then(function (newD) {
                          _this35.addTSFormData.date.date = newD;
                          _this35.addTSFormData.date.txt = _this35.dT.LNd(newD);

                          _this35.evServ.showToast('success', 'Date Updated');

                          _this35.logger.info('[Modal|TSheet-Add|openDP|Date] (Success): Date Updated.');
                        })["catch"](function (newDErr) {
                          _this35.evServ.showToast('error', 'Date Error');

                          _this35.logger.info('[Modal|TSheet-Add|openDP|Date] (Error): ' + newDErr);
                        });
                      } else {
                        input.charAt(0) === 's' ? sE = 'start' : sE = 'end';
                        this.addTSFormData[input].date === null ? oD = this.addTSFormData.date.date : oD = this.addTSFormData[input].date;
                        this.dT.openTimePicker(oD, sE).then(function (newT) {
                          var cap = sE.charAt(0).toUpperCase() + sE.slice(1);
                          _this35.addTSFormData[input].date = newT;
                          _this35.addTSFormData[input].txt = _this35.dT.format(newT, 'h:mmaaa');

                          _this35.evServ.showToast('success', cap + ' Time Updated');

                          _this35.logger.info('[Modal|TSheet-Add|openDP|Time] (Success): Time Updated: ' + newT);

                          var ntSD = _this35.addTSFormData.stime.date;
                          var ntED = _this35.addTSFormData.etime.date;

                          if (ntSD !== null && ntED !== null) {
                            if (isDate(ntSD) && isDate(ntED)) {
                              if (sE === 'start') {
                                if (_this35.dT.isA(ntSD, ntED)) {
                                  _this35.logger.info('[newTime|inputError] (Start Time -ISAFTER- End Time)');

                                  _this35.newTSInputErr = 'start';
                                  _this35.errorSave = true;

                                  if (_this35.shouldSave) {
                                    _this35.shouldSave = false;
                                  }
                                } else {
                                  if (_this35.newTSInputErr === 'start' || _this35.newTSInputErr === null) {
                                    _this35.newTSInputErr = null;
                                    _this35.errorSave = false;
                                  }
                                }
                              } else {
                                if (_this35.dT.isB(ntED, ntSD)) {
                                  _this35.logger.info('[newTime|inputError] (End Time -ISBEFORE- Start Time)');

                                  _this35.newTSInputErr = 'end';
                                  _this35.errorSave = true;

                                  if (_this35.shouldSave) {
                                    _this35.shouldSave = false;
                                  }
                                } else {
                                  if (_this35.newTSInputErr === 'end' || _this35.newTSInputErr === null) {
                                    _this35.newTSInputErr = null;
                                    _this35.errorSave = false;
                                  }
                                }
                              }

                              if (_this35.newTSInputErr !== 'start' && _this35.newTSInputErr !== 'end') {
                                console.log('[FINAL CHECK]');
                                var finalTTObj = {
                                  hours: 0,
                                  minutes: 0
                                };

                                var shiftDurObj = _this35.dT.DurAsObj(ntSD, ntED);

                                var totalSMins = shiftDurObj.hours * 60 + shiftDurObj.minutes;
                                var totalBMins = _this35.addTSFormData.breaks.values.summary.dur.hours * 60 + _this35.addTSFormData.breaks.values.summary.dur.minutes;
                                var totalAdjMins = totalSMins - totalBMins;
                                var fTTHrs = Math.floor(totalAdjMins / 60);
                                var fTTMins = totalAdjMins - fTTHrs * 60;
                                finalTTObj.hours = fTTHrs;
                                finalTTObj.minutes = fTTMins;
                                _this35.addTSFormData.ttime = finalTTObj;
                                _this35.errorSave = false;
                                _this35.shouldSave = true;
                                _this35.wasChanged = true;
                              } else {
                                _this35.errorSave = true;
                                _this35.shouldSave = false;
                              }
                            } else {
                              _this35.logger.info('[newTime|TimeInputs] - One or More Inputs Do Not Check as Date Objects.');
                            }
                          } else {
                            _this35.logger.info('[newTime|TimeInputs] - One or More Inputs Check as Default - Select Time');
                          }
                        })["catch"](function (newTErr) {
                          if (newTErr === 'cancel') {
                            _this35.evServ.showToast('warning', 'Cancelled');

                            _this35.logger.info('[Modal|TSheet-Add|openDP|Time] (Cancelled): ' + newTErr);
                          } else {
                            _this35.evServ.showToast('error', 'Error');

                            _this35.logger.info('[Modal|TSheet-Add|openDP|Time] (Error): ' + newTErr);
                          }
                        });
                      }

                    case 3:
                    case "end":
                      return _context46.stop();
                  }
                }
              }, _callee46, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "editNewBreaks",
          value: function editNewBreaks() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee47() {
              var _this36 = this;

              var thisTSBModalOpts, tsNewBreaksModal;
              return regeneratorRuntime.wrap(function _callee47$(_context47) {
                while (1) {
                  switch (_context47.prev = _context47.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Add|editNewBreaks] ()...');
                      thisTSBModalOpts = this.tsBreaksModalOpts;
                      thisTSBModalOpts['componentProps'] = {
                        mode: 'addtsheet',
                        ts: {
                          nTimeApproved: false
                        },
                        tsb: this.newBreaks,
                        newTSFormData: this.addTSFormData
                      };
                      _context47.next = 5;
                      return this.modalCtrl.create(thisTSBModalOpts);

                    case 5:
                      tsNewBreaksModal = _context47.sent;
                      document.addEventListener('ionModalDidPresent', function () {
                        _this36.breakMOpen = true;

                        _this36.logger.info('[TSheetAddModal|BreaksModal] (ionModalDidPresent)...');
                      });
                      tsNewBreaksModal.onWillDismiss().then(function () {
                        _this36.breakMOpen = false;

                        _this36.logger.info('[TSheetAddModal|BreaksModal] (ionModalWillDismiss)...');
                      });
                      tsNewBreaksModal.onDidDismiss().then(function (res) {
                        console.log(res);

                        _this36.logger.info('[TSheetAddModal|BreaksModal] (ionModalDidDismiss) >>> ()');

                        if (res.data.length > 0) {
                          _this36.wasChanged = true;
                          _this36.shouldSave = true;
                          _this36.updateSaveBannerTxt = 'updated';
                          var nBA = res.data;
                          var uS = _this36.addTSFormData.breaks.values.summary;
                          var newDurMins = 0;
                          _this36.newBreaks = [];

                          for (var i = 0; i < nBA.length; i++) {
                            var nB = nBA[i];
                            nB.breakType === 'R' ? uS.r++ : uS.m++;
                            newDurMins += nB.duration.hours * 60 + nB.duration.minutes;
                            var newBO = {
                              blnEmptySlot: false,
                              intEnd: '',
                              intStart: '',
                              intUnixEnd: 0,
                              intUnixStart: 0,
                              mixedActivity: {
                                blnCanEndEarly: 1,
                                blnCanStartEarly: 1,
                                blnIsMandatory: 1,
                                intState: 3,
                                strBreakType: 'M'
                              },
                              strState: 'Finished Duration',
                              strType: 'B',
                              strTypeName: ''
                            };
                            newBO.intEnd = _this36.dT.Id(nB.endDate);
                            newBO.intStart = _this36.dT.Id(nB.startDate);
                            newBO.intUnixEnd = _this36.dT.UTd(nB.endDate);
                            newBO.intUnixStart = _this36.dT.UTd(nB.startDate);
                            newBO.mixedActivity.strBreakType = nB.breakType;
                            nB.breakType === 'M' ? newBO.strTypeName = 'Meal Break' : newBO.strTypeName = 'Rest Break';

                            _this36.newBreaks.push(newBO);
                          }

                          var currentDurMins = _this36.addTSFormData.breaks.values.summary.dur.hours * 60 + _this36.addTSFormData.breaks.values.summary.dur.minutes;
                          var combinedDurMins = currentDurMins + newDurMins;
                          var wholeH = Math.floor(combinedDurMins / 60);
                          var wholeM = combinedDurMins - wholeH * 60;
                          _this36.addTSFormData.breaks.values.summary.dur.hours = wholeH;
                          _this36.addTSFormData.breaks.values.summary.dur.minutes = wholeM;
                          var totalSMins = _this36.addTSFormData.ttime.hours * 60 + _this36.addTSFormData.ttime.minutes;
                          var totalAdjMins = totalSMins - combinedDurMins;
                          var fTTHrs = Math.floor(totalAdjMins / 60);
                          var fTTMins = totalAdjMins - fTTHrs * 60;
                          _this36.addTSFormData.ttime = {
                            hours: fTTHrs,
                            minutes: fTTMins
                          };

                          _this36.evServ.showToast('success', 'New Break Data Add/Updated');
                        } else {
                          _this36.evServ.showToast('general', 'Break Data Unchanged');
                        }
                      });
                      _context47.next = 11;
                      return tsNewBreaksModal.present();

                    case 11:
                      return _context47.abrupt("return", _context47.sent);

                    case 12:
                    case "end":
                      return _context47.stop();
                  }
                }
              }, _callee47, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "updateComments",
          value: function updateComments() {
            this.logger.info('[Modal|TSheet-Add|updateComments] ()...');
          }
        }]);

        return TSheetAddPage;
      }();

      _TSheetAddPage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_14__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.LoadingController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.NavParams
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.Platform
        }, {
          type: _services_datetime_service__WEBPACK_IMPORTED_MODULE_5__.DateTimeService
        }, {
          type: _services_deputy_service__WEBPACK_IMPORTED_MODULE_3__.DeputyService
        }, {
          type: src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_6__.DetailService
        }, {
          type: _services_events_service__WEBPACK_IMPORTED_MODULE_2__.EventsService
        }, {
          type: src_app_services_storage_service__WEBPACK_IMPORTED_MODULE_4__.StorageService
        }];
      };

      _TSheetAddPage = (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_16__.Component)({
        selector: 'app-tsheet-add',
        template: _raw_loader_tsheet_add_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_tsheet_add_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _TSheetAddPage);
      /***/
    },

    /***/
    91806:
    /*!***********************************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-breaks/tsheet-breaks.module.ts ***!
      \***********************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TSheetBreaksPageModule": function TSheetBreaksPageModule() {
          return (
            /* binding */
            _TSheetBreaksPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _tsheet_breaks_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./tsheet-breaks.page */
      51354);

      var _TSheetBreaksPageModule = function TSheetBreaksPageModule() {
        _classCallCheck(this, TSheetBreaksPageModule);
      };

      _TSheetBreaksPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.IonicModule, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__.BrowserModule],
        declarations: [_tsheet_breaks_page__WEBPACK_IMPORTED_MODULE_0__.TSheetBreaksPage]
      })], _TSheetBreaksPageModule);
      /***/
    },

    /***/
    51354:
    /*!*********************************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-breaks/tsheet-breaks.page.ts ***!
      \*********************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TSheetBreaksPage": function TSheetBreaksPage() {
          return (
            /* binding */
            _TSheetBreaksPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_tsheet_breaks_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./tsheet-breaks.page.html */
      51335);
      /* harmony import */


      var _tsheet_breaks_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./tsheet-breaks.page.scss */
      23943);
      /* harmony import */


      var _services_datetime_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./../../../../services/datetime.service */
      12826);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _capacitor_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @capacitor/dialog */
      63540);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! jquery */
      91704);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_4__); //////////////////////////////////////////////////////////////////////////////////////


      var _TSheetBreaksPage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function TSheetBreaksPage(logger, modalCtrl, loadCtrl, navP, plt, dT) {
          _classCallCheck(this, TSheetBreaksPage);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.loadCtrl = loadCtrl;
          this.navP = navP;
          this.plt = plt;
          this.dT = dT;
          this.breaks = [];
          this.newBreaks = [];
          this.newBInputErr = null;
          this.shouldSave = false;
          this.totalTime = {
            hours: 0,
            minutes: 0
          };
          this.newBreakActive = false;
          this.wasChanged = false;
          this.updatedBreaksArr = [];
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(TSheetBreaksPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|TSheet-Breaks|OnInit]');
            this.initTSBreaksData();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            var _this37 = this;

            this.plt.ready().then(function () {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(_this37, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee48() {
                var modalEl;
                return regeneratorRuntime.wrap(function _callee48$(_context48) {
                  while (1) {
                    switch (_context48.prev = _context48.next) {
                      case 0:
                        _context48.next = 2;
                        return this.modalCtrl.getTop();

                      case 2:
                        modalEl = _context48.sent;
                        this.modalId = modalEl.id;

                      case 4:
                      case "end":
                        return _context48.stop();
                    }
                  }
                }, _callee48, this);
              }));
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initTSBreaksData",
          value: function initTSBreaksData() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee49() {
              var i, thisB;
              return regeneratorRuntime.wrap(function _callee49$(_context49) {
                while (1) {
                  switch (_context49.prev = _context49.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Detail|InitTSData] ()...');
                      this.mode = this.navP.data.mode;
                      this.ts = this.navP.data.ts;
                      this.tsb = this.navP.data.tsb;

                      for (i = 0; i < this.tsb.length; i++) {
                        thisB = {
                          index: i
                        };
                        thisB['breakType'] = this.tsb[i].mixedActivity.strBreakType;
                        thisB['typeName'] = this.tsb[i].strTypeName;
                        this.tsb[i].strType === 'A' ? thisB['type'] = 'Paid' : thisB['type'] = 'Unpaid';
                        thisB['state'] = this.tsb[i].strState;
                        thisB['stateCode'] = this.tsb[i].intState;

                        if (this.tsb[i].intStart === 0) {
                          thisB['startNice'] = '-';
                        } else {
                          thisB['startNice'] = this.dT.NTut(this.tsb[i].intUnixStart);
                          thisB['startDate'] = this.dT.Dut(this.tsb[i].intUnixStart);
                        }

                        if (this.tsb[i].intEnd === 0) {
                          thisB['endNice'] = '-';
                        } else {
                          thisB['endNice'] = this.dT.NTut(this.tsb[i].intUnixEnd);
                          thisB['endDate'] = this.dT.Dut(this.tsb[i].intUnixEnd);
                        }

                        if (this.tsb[i].intStart === 0 && this.tsb[i].intEnd === 0) {
                          thisB['duration'] = {
                            hours: 0,
                            minutes: 0
                          };
                        } else {
                          thisB['duration'] = this.dT.DurAsObj(new Date(this.tsb[i].intStart), new Date(this.tsb[i].intEnd));

                          if (thisB['duration']['hours'] > 0) {
                            this.totalTime.hours += thisB['duration']['hours'];
                          }

                          ;

                          if (thisB['duration']['minutes'] > 0) {
                            this.totalTime.hours += thisB['duration']['minutes'];
                          }

                          ;
                        }

                        if (this.tsb[i].mixedActivity.blnIsMandatory === 1) {
                          thisB['status'] = 'mandatory';
                        } else {
                          if (this.tsb[i].intUnixEnd - this.tsb[i].intUnixStart > 0) {
                            thisB['status'] = 'taken';
                          } else {
                            thisB['status'] = 'nottaken';
                          }
                        }

                        ;
                        this.breaks.push(thisB);
                      }

                    case 5:
                    case "end":
                      return _context49.stop();
                  }
                }
              }, _callee49, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeBreaks",
          value: function closeBreaks() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee50() {
              var doSaveConfOpts, _yield$_capacitor_dia6, value;

              return regeneratorRuntime.wrap(function _callee50$(_context50) {
                while (1) {
                  switch (_context50.prev = _context50.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Breaks|closeBreaks] ()...');

                      if (!this.shouldSave) {
                        _context50.next = 10;
                        break;
                      }

                      doSaveConfOpts = {
                        title: 'Save Changes?',
                        message: 'New or updated break data for Timesheet #' + this.ts.Id + '. Save or Discard?',
                        okButtonTitle: 'Save Changes',
                        cancelButtonTitle: 'Discard Changes'
                      };
                      _context50.next = 5;
                      return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_3__.Dialog.confirm(doSaveConfOpts);

                    case 5:
                      _yield$_capacitor_dia6 = _context50.sent;
                      value = _yield$_capacitor_dia6.value;

                      if (value) {
                        this.saveBreaks(true);
                      } else {
                        this.modalCtrl.dismiss({
                          data: null,
                          role: 'unchanged',
                          id: this.modalId
                        });
                      }

                      _context50.next = 11;
                      break;

                    case 10:
                      if (this.wasChanged) {
                        if (this.mode === 'details') {
                          this.modalCtrl.dismiss({
                            ts: this.updatedTSObj,
                            breaks: this.updatedBreaksArr
                          }, 'changed', this.modalId);
                        } else {
                          if (this.mode === 'addtsheet') {
                            this.modalCtrl.dismiss(this.breaks, 'new', this.modalId);
                          }
                        }
                      } else {
                        this.modalCtrl.dismiss({
                          data: null,
                          role: 'unchanged',
                          id: this.modalId
                        });
                      }

                    case 11:
                    case "end":
                      return _context50.stop();
                  }
                }
              }, _callee50, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "saveBreaks",
          value: function saveBreaks(doClose) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee51() {
              var _this38 = this;

              var saveBreaksLoader;
              return regeneratorRuntime.wrap(function _callee51$(_context51) {
                while (1) {
                  switch (_context51.prev = _context51.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Breaks|saveBreaks] ()...');
                      _context51.next = 3;
                      return this.loadCtrl.create({
                        spinner: 'dots',
                        cssClass: 'sheriff-loader-class',
                        message: 'Updating Break Data'
                      });

                    case 3:
                      saveBreaksLoader = _context51.sent;
                      _context51.next = 6;
                      return saveBreaksLoader.present();

                    case 6:
                      setTimeout(function () {
                        _this38.logger.info('[Modal|TSheet-Breaks|saveBreaks] (Saving New Breaks) - Remote: Deputy Put/Post Slots Data - Await Server 200 - Do GET Request to /my/timesheet & Push Object to Local Variable...');

                        _this38.logger.info('[Modal|TSheet-Breaks|saveBreaks] (Saving New Breaks) - Local: Replace Updated Timesheet Object (New/Accepted Break Slots) in SQLite DB & Push to Local/Global Var to be Returned with Dismiss Data - No Refresh Required to Update TSheet-Detail View.');

                        _this38.updatedTSObj = _this38.ts; // Change to New Obj Returned As Above

                        _this38.updatedBreaksArr = _this38.tsb; // Change to New Breaks Arr Returned As Above

                        _this38.wasChanged = true;

                        _this38.aniSave();

                        _this38.shouldSave = false;
                        saveBreaksLoader.dismiss();

                        if (doClose) {
                          _this38.closeBreaks();
                        }

                        ;
                      }, 5000);

                    case 7:
                    case "end":
                      return _context51.stop();
                  }
                }
              }, _callee51, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "newBreak",
          value: function newBreak() {
            this.logger.info('[Modal|TSheet-Breaks|addBreaks] ()...');
            this.newBreaks.push({
              index: this.newBreaks.length,
              breakType: 'R',
              typeName: 'Rest Break',
              duration: {
                hours: 0,
                minutes: 0
              },
              startNice: 'Select Time',
              startDate: new Date(),
              endNice: 'Select Time',
              endDate: new Date(),
              status: 'taken',
              isnew: true
            });
            this.newBreakActive = true;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "addBreak",
          value: function addBreak(index) {
            this.logger.info('[Modal|TSheet-Breaks|saveNewBreak] ()...');
            var newBDurObj = this.newBreaks[index].duration;
            var saveBreak = this.newBreaks.filter(function (b) {
              return b.index === index;
            });
            this.breaks.push(saveBreak[0]);

            if (newBDurObj.hours > 0) {
              this.totalTime.hours += newBDurObj.hours;
            }

            ;

            if (newBDurObj.minutes > 0) {
              this.totalTime.minutes += newBDurObj.minutes;
            }

            ;

            if (this.totalTime.minutes > 60) {
              this.totalTime.hours += 1;
              this.totalTime.minutes = this.totalTime.minutes - 60;
            }

            ;
            this.newBreaks = this.newBreaks.filter(function (b) {
              return b.index !== index;
            });
            this.newBreaks.length > 0 ? this.newBreakActive = true : this.newBreakActive = false;
            this.aniNew();
            this.shouldSave = true;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "deleteNewBreak",
          value: function deleteNewBreak(index) {
            this.logger.info('[Modal|TSheet-Breaks|deleteNewBreak] ()...');
            this.newBreaks = this.newBreaks.filter(function (b) {
              return b.index !== index;
            });
            this.newBreaks.length > 0 ? this.newBreakActive = true : this.newBreakActive = false;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "breakTypeBtn",
          value: function breakTypeBtn(btI, btV) {
            jquery__WEBPACK_IMPORTED_MODULE_4__('.break-type-radio-group-' + btI.toString()).prop('value', btV);
          }
        }, {
          key: "selectBreakType",
          value: function selectBreakType(breakI, breakTypeVal) {
            this.logger.info('[Modal|TSheet-Breaks|selectBreakType] (ionChange) (' + breakI + ',' + breakTypeVal + ')...');
            this.newBreaks[breakI].breakType = breakTypeVal;
            breakTypeVal === 'M' ? this.newBreaks[breakI].typeName = 'Meal Break' : this.newBreaks[breakI].typeName = 'Rest Break';
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "openTimeSelect",
          value: function openTimeSelect(index, startOrEnd) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee52() {
              var _this39 = this;

              var sDate, hsDur, newBOpenTime;
              return regeneratorRuntime.wrap(function _callee52$(_context52) {
                while (1) {
                  switch (_context52.prev = _context52.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Breaks|addBreaks|OpenTimeSelect] (' + index, startOrEnd + ')...');
                      sDate = this.dT.Dut(this.ts.StartTime);
                      hsDur = Math.ceil(Number(this.ts.TotalTimeInv) / 2);
                      this.mode === 'addtsheet' ? newBOpenTime = new Date() : newBOpenTime = this.dT.startOfHr(this.dT.addHrs(sDate, hsDur));
                      this.dT.openTimePicker(newBOpenTime, startOrEnd).then(function (newT) {
                        var nicePtyStr = startOrEnd + 'Nice';
                        var datePtyStr = startOrEnd + 'Date';
                        _this39.newBreaks[index][nicePtyStr] = _this39.dT.format(newT, 'h:mmaaa');
                        _this39.newBreaks[index][datePtyStr] = newT;

                        var isDate = function isDate(d) {
                          if (Object.prototype.toString.call(d) === "[object Date]") return true;
                          return false;
                        };

                        var nbSN = _this39.newBreaks[index].startNice;
                        var nbSD = _this39.newBreaks[index].startDate;
                        var nbEN = _this39.newBreaks[index].endNice;
                        var nbED = _this39.newBreaks[index].endDate;
                        var def = 'Select Time';

                        if (nbSN !== def && nbEN !== def) {
                          if (isDate(nbSD) && isDate(nbED)) {
                            if (startOrEnd === 'start') {
                              if (_this39.dT.isA(nbSD, nbED)) {
                                _this39.logger.info('[newBreak|inputError] (Start Time -ISAFTER- End Time)');

                                _this39.newBInputErr = 'start';
                                jquery__WEBPACK_IMPORTED_MODULE_4__('.save-newbreak-btn').prop('disabled', true);
                              } else {
                                if (_this39.newBInputErr === 'start' || _this39.newBInputErr === null) {
                                  _this39.newBInputErr = null;
                                  jquery__WEBPACK_IMPORTED_MODULE_4__('.save-newbreak-btn').prop('disabled', false);
                                }
                              }
                            } else {
                              if (_this39.dT.isB(nbED, nbSD)) {
                                _this39.logger.info('[newBreak|inputError] (End Time -ISBEFORE- Start Time)');

                                _this39.newBInputErr = 'end';
                                jquery__WEBPACK_IMPORTED_MODULE_4__('.save-newbreak-btn').prop('disabled', true);
                              } else {
                                if (_this39.newBInputErr === 'end' || _this39.newBInputErr === null) {
                                  _this39.newBInputErr = null;
                                  jquery__WEBPACK_IMPORTED_MODULE_4__('.save-newbreak-btn').prop('disabled', false);
                                }
                              }
                            }

                            if (_this39.newBInputErr !== 'start' && _this39.newBInputErr !== 'end') {
                              _this39.newBreaks[index].duration = _this39.dT.DurAsObj(nbSD, nbED);
                              jquery__WEBPACK_IMPORTED_MODULE_4__('.save-newbreak-btn').prop('disabled', false);
                            } else {
                              jquery__WEBPACK_IMPORTED_MODULE_4__('.save-newbreak-btn').prop('disabled', true);
                            }
                          } else {
                            _this39.logger.info('[newBreak|TimeInputs] - One or More Inputs Do Not Check as Date Objects.');
                          }
                        } else {
                          _this39.logger.info('[newBreak|TimeInputs] - One or More Inputs Check as Default - Select Time');
                        }
                      })["catch"](function (dpErr) {
                        console.log(dpErr);
                      });

                    case 5:
                    case "end":
                      return _context52.stop();
                  }
                }
              }, _callee52, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "aniNew",
          value: function aniNew() {
            var doAni = function doAni() {
              return new Promise(function (resolve) {
                var aniStr = 'animate__animated animate__rubberBand plus1breakcount';
                jquery__WEBPACK_IMPORTED_MODULE_4__('.title-bc-ani').on('animationend', function () {
                  jquery__WEBPACK_IMPORTED_MODULE_4__('.title-bc-ani').removeClass(aniStr);
                  resolve(true);
                });
                jquery__WEBPACK_IMPORTED_MODULE_4__('.title-bc-ani').addClass(aniStr);
              });
            };

            doAni();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "aniSave",
          value: function aniSave() {
            var doAni = function doAni() {
              return new Promise(function (resolve) {
                var aniStr = 'animate__animated animate__flipInX saving-tsb-data';
                jquery__WEBPACK_IMPORTED_MODULE_4__('.save-data').on('animationend', function () {
                  jquery__WEBPACK_IMPORTED_MODULE_4__('.save-data').removeClass(aniStr);
                  resolve(true);
                });
                jquery__WEBPACK_IMPORTED_MODULE_4__('.save-data').addClass(aniStr);
              });
            };

            doAni();
          }
        }]);

        return TSheetBreaksPage;
      }();

      _TSheetBreaksPage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_6__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.LoadingController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.NavParams
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.Platform
        }, {
          type: _services_datetime_service__WEBPACK_IMPORTED_MODULE_2__.DateTimeService
        }];
      };

      _TSheetBreaksPage = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
        selector: 'app-tsheet-breaks',
        template: _raw_loader_tsheet_breaks_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_tsheet_breaks_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _TSheetBreaksPage);
      /***/
    },

    /***/
    77963:
    /*!*********************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-detail.module.ts ***!
      \*********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TSheetDetailPageModule": function TSheetDetailPageModule() {
          return (
            /* binding */
            _TSheetDetailPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _tsheet_detail_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./tsheet-detail.page */
      72348);

      var _TSheetDetailPageModule = function TSheetDetailPageModule() {
        _classCallCheck(this, TSheetDetailPageModule);
      };

      _TSheetDetailPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_tsheet_detail_page__WEBPACK_IMPORTED_MODULE_0__.TSheetDetailPage]
      })], _TSheetDetailPageModule);
      /***/
    },

    /***/
    72348:
    /*!*******************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-detail.page.ts ***!
      \*******************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TSheetDetailPage": function TSheetDetailPage() {
          return (
            /* binding */
            _TSheetDetailPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_tsheet_detail_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./tsheet-detail.page.html */
      79649);
      /* harmony import */


      var _tsheet_detail_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./tsheet-detail.page.scss */
      65850);
      /* harmony import */


      var _services_datetime_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./../../../services/datetime.service */
      12826);
      /* harmony import */


      var _services_events_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./../../../services/events.service */
      80106);
      /* harmony import */


      var _popovers_detailmenu_detailmenu_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./../../../popovers/detailmenu/detailmenu.component */
      70518);
      /* harmony import */


      var _tsheet_breaks_tsheet_breaks_page__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./tsheet-breaks/tsheet-breaks.page */
      51354);
      /* harmony import */


      var _tsheet_history_tsheet_history_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./tsheet-history/tsheet-history.page */
      89370);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @capacitor/action-sheet */
      54025);
      /* harmony import */


      var src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! src/app/services/detail.service */
      52153);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _capacitor_share__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! @capacitor/share */
      16380);
      /* harmony import */


      var _capacitor_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! @capacitor/dialog */
      63540);
      /* harmony import */


      var _capacitor_app__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! @capacitor/app */
      42138);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! jquery */
      91704);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_12__); //////////////////////////////////////////////////////////////////////////////////////


      var _TSheetDetailPage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function TSheetDetailPage(logger, dT, evServ, modalCtrl, popCtrl, loadCtrl, navP, plt, detailServ) {
          _classCallCheck(this, TSheetDetailPage);

          this.logger = logger;
          this.dT = dT;
          this.evServ = evServ;
          this.modalCtrl = modalCtrl;
          this.popCtrl = popCtrl;
          this.loadCtrl = loadCtrl;
          this.navP = navP;
          this.plt = plt;
          this.detailServ = detailServ;
          this.shiftDurObj = {
            hours: 0,
            minutes: 0
          };
          this.showPMMins = false;
          this.showPMHrs = false;
          this.showTTLBreakMins = false;
          this.mBreakCount = 0;
          this.rBreakCount = 0;
          this.nBreaks = [];
          this.TTPerfValObj = {
            hours: 0,
            minutes: 0
          };
          this.hasEmployeeComment = true;
          this.pplArr = [];
          this.sVNK = false;
          this.supervisorObj = {
            avatar: '',
            label: ''
          };
          this.hasInvoiceComment = true;
          this.noComments = false;
          this.didExport = false;
          this.popOpen = false;
          this.aSheetOpen = false;
          this.tsBreaksModalOpts = {
            animated: false,
            showBackdrop: false,
            backdropDismiss: false,
            cssClass: 'tsheet-detail-breaks-class',
            component: _tsheet_breaks_tsheet_breaks_page__WEBPACK_IMPORTED_MODULE_5__.TSheetBreaksPage,
            keyboardClose: true
          };
          this.tsHistoryModalOpts = {
            animated: false,
            showBackdrop: false,
            backdropDismiss: false,
            cssClass: 'tsheet-detail-history-class',
            component: _tsheet_history_tsheet_history_page__WEBPACK_IMPORTED_MODULE_6__.TSheetHistoryPage,
            keyboardClose: true
          };
          this.tsHistoryModalOpen = false;
          this.shouldSave = false;
          this.tsBreaksModalOpen = false;
          this.wasChanged = false;
          this.updateSaveBannerTxt = 'Updated';
          this.showIncome = true;
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(TSheetDetailPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|TSheet-Detail|OnInit]');
            this.initPrefs();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initPrefs",
          value: function initPrefs() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee53() {
              return regeneratorRuntime.wrap(function _callee53$(_context53) {
                while (1) {
                  switch (_context53.prev = _context53.next) {
                    case 0:
                      this.meAvatar = this.detailServ.meAva;
                      this.meObj = this.detailServ.meObj;
                      this.meEmpId = this.detailServ.meEmpId;
                      this.pplArr = this.detailServ.pplArr;
                      this.initTSData();

                    case 5:
                    case "end":
                      return _context53.stop();
                  }
                }
              }, _callee53, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initTSData",
          value: function initTSData() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee54() {
              var rawTTDiff, i, thisB, bStart, bEnd, bDurObj, bMins, ttlMins, _i4, lWarnCount, warnArr, eC, sV, sVComm, iC, sEmpId, tA, crTr, sVArr;

              return regeneratorRuntime.wrap(function _callee54$(_context54) {
                while (1) {
                  switch (_context54.prev = _context54.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Detail|InitTSData] ()...');
                      this.ts = this.navP.data.ts;
                      this.showIncome = this.navP.data.showincome;

                      if (!this.ts.nTimeApproved) {
                        this.areasArr = this.navP.data.wareas;
                      }

                      ;
                      this.tsSlots = JSON.parse(this.ts.Slots);
                      this.shiftDurObj = this.dT.DurAsObj(this.dT.Dut(this.ts.StartTime), this.dT.Dut(this.ts.EndTime)); // Total Time

                      rawTTDiff = this.ts.TotalTime - this.ts.TotalTimeInv;

                      if (rawTTDiff !== 0) {
                        this.TTPerformance = Math.sign(rawTTDiff);
                        this.TTPerfValObj = this.dT.rosVsTSTTDiff(this.ts.TotalTimeInv, this.ts.TotalTime);
                      } else {
                        this.TTPerformance = 0;
                      }

                      ;

                      if (this.tsSlots.length > 0) {
                        for (i = 0; i < this.tsSlots.length; i++) {
                          thisB = {
                            index: i
                          };

                          if (this.tsSlots[i].mixedActivity.strBreakType === 'R') {
                            this.rBreakCount++;
                            thisB['type'] = 'Rest Break';
                          }

                          ;

                          if (this.tsSlots[i].mixedActivity.strBreakType === 'M') {
                            this.mBreakCount++;
                            thisB['type'] = 'Meal Break';
                          }

                          ;
                          bStart = this.dT.Dut(this.tsSlots[i].intUnixStart);
                          thisB['start'] = this.dT.format(bStart, 'h:mmaaa');
                          bEnd = this.dT.Dut(this.tsSlots[i].intUnixEnd);
                          thisB['end'] = this.dT.format(bEnd, 'h:mmaaa');
                          bDurObj = this.dT.DurAsObj(bStart, bEnd);
                          bMins = 0;

                          if (bDurObj.hours > 0) {
                            bMins = bDurObj.hours * 60 + bDurObj.minutes;
                          } else {
                            bMins = bDurObj.minutes;
                          }

                          thisB['durObj'] = bDurObj;
                          thisB['durMins'] = bMins;
                          this.nBreaks.push(thisB);
                        }

                        ttlMins = 0;

                        for (_i4 = 0; _i4 < this.nBreaks.length; _i4++) {
                          ttlMins += this.nBreaks[_i4].durMins;
                        }

                        ;
                        this.breaksTtlDur = Math.round(ttlMins).toString();
                        this.showTTLBreakMins = true;
                      } else {
                        this.showTTLBreakMins = false;
                        this.breaksTtlDur = 'NIL';
                      } // Warnings


                      lWarnCount = 0;

                      if (this.ts.Warning !== '' && this.ts.Warning !== null && this.ts.Warning !== undefined) {
                        if (this.ts.Warning.includes('|')) {
                          warnArr = this.ts.Warning.split('|');
                          this.ts['nWarning'] = warnArr[0];
                          lWarnCount++;
                        } else {
                          this.ts['nWarning'] = this.ts.Warning;
                        }
                      }

                      ;

                      if (this.ts.WarningOverrideComment !== '' && this.ts.WarningOverrideComment !== null && this.ts.WarningOverrideComment !== undefined) {
                        this.ts['nWarningOR'] = this.ts.WarningOverrideComment;
                        lWarnCount++;
                      }

                      ;
                      this.ts['nWarnCount'] = lWarnCount; // Comments

                      eC = this.ts.EmployeeComment;
                      sV = Number(this.ts.Supervisor);
                      sVComm = this.ts.SupervisorComment;
                      iC = this.ts.InvoiceComment;
                      eC !== null && eC !== undefined && eC !== '' && eC.length > 0 ? this.hasEmployeeComment = true : this.hasEmployeeComment = false;
                      iC !== null && iC !== undefined && iC !== '' && iC.length > 0 ? this.hasInvoiceComment = true : this.hasInvoiceComment = false;

                      if (sVComm !== null && sVComm !== undefined && sVComm !== '' && sVComm.length > 0) {
                        this.hasSupervisorComment = true;

                        if (sV !== null && sV !== undefined && sV > 0) {
                          sEmpId = sV;
                        } else {
                          tA = this.ts.TimeApprover;
                          crTr = Number(this.ts.Creator);

                          if (tA !== null && tA !== undefined && Number(tA) > 0) {
                            sEmpId = Number(tA);
                          } else {
                            sEmpId = crTr;
                          }
                        }

                        ;

                        if (sEmpId !== this.meEmpId) {
                          sVArr = this.pplArr.filter(function (p) {
                            return p.EmpId === sEmpId;
                          });

                          if (sVArr.length > 0) {
                            this.supervisorObj.label = sVArr[0].DisplayName;
                            this.supervisorObj.avatar = sVArr[0].Photo;
                            this.sVNK = false;
                          } else {
                            this.supervisorObj.label = 'NK';
                            this.supervisorObj.avatar = '../../../../assets/img/sheriff-tsheet-detail-unknown-sv-ico.png';
                            this.sVNK = true;
                          }
                        } else {
                          this.supervisorObj.label = 'You';
                          this.supervisorObj.avatar = this.meAvatar;
                          this.sVNK = false;
                        }
                      } else {
                        this.hasSupervisorComment = false;
                      }

                      ;
                      !this.hasEmployeeComment && !this.hasSupervisorComment && !this.hasInvoiceComment ? this.noComments = true : this.noComments = false;

                    case 26:
                    case "end":
                      return _context54.stop();
                  }
                }
              }, _callee54, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            var _this40 = this;

            this.plt.ready().then(function () {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(_this40, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee55() {
                var modalEl;
                return regeneratorRuntime.wrap(function _callee55$(_context55) {
                  while (1) {
                    switch (_context55.prev = _context55.next) {
                      case 0:
                        _context55.next = 2;
                        return this.modalCtrl.getTop();

                      case 2:
                        modalEl = _context55.sent;
                        this.modalId = modalEl.id;

                      case 4:
                      case "end":
                        return _context55.stop();
                    }
                  }
                }, _callee55, this);
              }));
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "openPop",
          value: function openPop(event) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee56() {
              var _this41 = this;

              var editPop;
              return regeneratorRuntime.wrap(function _callee56$(_context56) {
                while (1) {
                  switch (_context56.prev = _context56.next) {
                    case 0:
                      this.logger.info('[Modal|TSheetDetail|openPop] (event)');
                      _context56.next = 3;
                      return this.popCtrl.create({
                        event: event,
                        component: _popovers_detailmenu_detailmenu_component__WEBPACK_IMPORTED_MODULE_4__.DetailMenuComponent,
                        cssClass: 'sheriff-pop-detailmenu-class',
                        animated: false,
                        showBackdrop: true,
                        backdropDismiss: true
                      });

                    case 3:
                      editPop = _context56.sent;
                      document.addEventListener('ionPopoverWillPresent', function () {
                        _this41.popOpen = true;
                      });
                      document.addEventListener('ionPopoverWillDismiss', function () {
                        _this41.popOpen = false;
                      });
                      editPop.onDidDismiss().then(function (choiceData) {
                        if (choiceData.role !== 'backdrop') {
                          _this41.logger.info('[TSheetDetail|editPop] (Menu Selection): ' + choiceData);
                        } else {
                          _this41.logger.info('[TSheetDetail|editPop] - Dismissed Without Selection (Cancelled)');
                        }
                      });
                      return _context56.abrupt("return", editPop.present());

                    case 8:
                    case "end":
                      return _context56.stop();
                  }
                }
              }, _callee56, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "shareTS",
          value: function shareTS() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee57() {
              var exportTxt, shareRes;
              return regeneratorRuntime.wrap(function _callee57$(_context57) {
                while (1) {
                  switch (_context57.prev = _context57.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Detail|shareTS] ()...');
                      jquery__WEBPACK_IMPORTED_MODULE_12__('.sheriff-detail-header-btn-wrapper.share-btn').addClass('detail-sharebtn-active');

                      _capacitor_app__WEBPACK_IMPORTED_MODULE_11__.App.addListener('appStateChange', function (_ref6) {
                        var isActive = _ref6.isActive;

                        if (isActive) {
                          jquery__WEBPACK_IMPORTED_MODULE_12__('.sheriff-detail-header-btn-wrapper.share-btn').removeClass('detail-sharebtn-active');
                        }
                      });

                      exportTxt = 'Timesheet #' + this.ts.Id + ' - ' + this.ts.nDate + ':\n';
                      Object.entries(this.ts).forEach(function (_ref7) {
                        var _ref8 = _slicedToArray(_ref7, 2),
                            key = _ref8[0],
                            value = _ref8[1];

                        var newLine = "".concat(key, ": ").concat(value, "\n");
                        exportTxt = exportTxt.concat(newLine);
                      });
                      _context57.prev = 5;
                      _context57.next = 8;
                      return _capacitor_share__WEBPACK_IMPORTED_MODULE_9__.Share.share({
                        title: 'Export Timesheet #' + this.ts.Id,
                        text: exportTxt,
                        url: null,
                        dialogTitle: 'Export Timesheet #' + this.ts.Id
                      });

                    case 8:
                      shareRes = _context57.sent;
                      this.evServ.showToast('success', 'Shared via ' + shareRes.activityType);
                      this.didExport = true;
                      this.exportVia = shareRes.activityType;
                      this.logger.info('[Modal|TSheet-Detail|shareTS] (Result): ' + shareRes.activityType);
                      _context57.next = 19;
                      break;

                    case 15:
                      _context57.prev = 15;
                      _context57.t0 = _context57["catch"](5);
                      this.evServ.showToast('error', 'Share Failed');
                      this.logger.info('[Modal|TSheet-Detail|shareTS] (Error): ' + _context57.t0);

                    case 19:
                    case "end":
                      return _context57.stop();
                  }
                }
              }, _callee57, this, [[5, 15]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "editArea",
          value: function editArea(currentArea) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee58() {
              var _this42 = this;

              var thisIndexToIdRefArr, niceTxt, wareaASheetOpts, i, tA, thisASB;
              return regeneratorRuntime.wrap(function _callee58$(_context58) {
                while (1) {
                  switch (_context58.prev = _context58.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Detail|editArea] (' + currentArea + ')...');

                      if (this.ts.nTimeApproved) {
                        _context58.next = 13;
                        break;
                      }

                      thisIndexToIdRefArr = [];

                      niceTxt = function niceTxt(rawLbl) {
                        var w = rawLbl.split(' ');
                        var nT = w.map(function (w) {
                          return w[0].toUpperCase() + w.substring(1);
                        }).join(' ');
                        return nT;
                      };

                      wareaASheetOpts = {
                        title: '𝗦𝗘𝗟𝗘𝗖𝗧 𝗪𝗢𝗥𝗞 𝗔𝗥𝗘𝗔:',
                        options: []
                      };

                      for (i = 0; i < this.areasArr.length; i++) {
                        tA = this.areasArr[i];
                        thisASB = {
                          title: '',
                          style: _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_7__.ActionSheetButtonStyle.Default
                        };
                        Number(tA.Id) === Number(currentArea) ? thisASB.title = "\uD83D\uDFE2 " + niceTxt(tA.OperationalUnitName.toString().toLowerCase()) : thisASB.title = "\u26AB " + niceTxt(tA.OperationalUnitName.toString().toLowerCase());
                        thisIndexToIdRefArr.push(tA.Id);
                        wareaASheetOpts.options.push(thisASB);
                      }

                      ;
                      thisIndexToIdRefArr.push(currentArea);
                      wareaASheetOpts.options.push({
                        title: "\u274C \uD835\uDDD6\uD835\uDDD4\uD835\uDDE1\uD835\uDDD6\uD835\uDDD8\uD835\uDDDF",
                        style: _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_7__.ActionSheetButtonStyle.Cancel
                      });
                      _context58.next = 11;
                      return _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_7__.ActionSheet.showActions(wareaASheetOpts).then(function (wareaRes) {
                        _this42.aSheetOpen = true;

                        if (thisIndexToIdRefArr[wareaRes.index].toString() === currentArea.toString()) {
                          if (wareaRes.index + 1 === wareaASheetOpts.options.length) {
                            _this42.logger.info('[Modal|TSheet-Detail|editArea] (Cancelled)');

                            _this42.evServ.showToast('cross', 'Cancelled');
                          } else {
                            _this42.logger.info('[Modal|TSheet-Detail|editArea] (Selected Same)');

                            _this42.evServ.showToast('warning', 'Unchanged');
                          }

                          ;
                          _this42.aSheetOpen = false;
                        } else {
                          var newAId = thisIndexToIdRefArr[wareaRes.index];

                          var _iterator2 = _createForOfIteratorHelper(_this42.areasArr),
                              _step2;

                          try {
                            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                              var areas = _step2.value;

                              if (newAId === areas.Id) {
                                _this42.ts.nOperationalUnit = areas.OperationalUnitName;
                              }
                            }
                          } catch (err) {
                            _iterator2.e(err);
                          } finally {
                            _iterator2.f();
                          }

                          ;

                          _this42.evServ.showToast('success', 'New Area Selected');

                          _this42.shouldSave = true;
                          _this42.wasChanged = true;
                          _this42.updateSaveBannerTxt = 'updated';
                          _this42.aSheetOpen = false;

                          _this42.logger.info('[Modal|TSheet-Detail|editArea] (Selected) i:' + wareaRes.index + ' | name: ' + _this42.areasArr[wareaRes.index].OperationalUnitName);
                        }

                        ;
                      })["catch"](function (wareaErr) {
                        _this42.evServ.showToast('error', 'Change Area Error');

                        _this42.logger.info('[Modal|TSheet-Detail|editArea] (Error): ' + wareaErr);

                        _this42.aSheetOpen = false;
                      });

                    case 11:
                      _context58.next = 14;
                      break;

                    case 13:
                      this.logger.info('[Modal|TSheet-Detail|editArea] (Warning) TS Approved - Cannot Edit Areas - Skipping...');

                    case 14:
                    case "end":
                      return _context58.stop();
                  }
                }
              }, _callee58, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "editBreaks",
          value: function editBreaks() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee59() {
              var _this43 = this;

              var thisTSBModalOpts, tsBreaksModal;
              return regeneratorRuntime.wrap(function _callee59$(_context59) {
                while (1) {
                  switch (_context59.prev = _context59.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Detail|editBreaks] ()...');
                      thisTSBModalOpts = this.tsBreaksModalOpts;
                      thisTSBModalOpts['componentProps'] = {
                        ts: this.ts,
                        tsb: JSON.parse(this.ts.Slots),
                        mode: 'details'
                      };
                      _context59.next = 5;
                      return this.modalCtrl.create(thisTSBModalOpts);

                    case 5:
                      tsBreaksModal = _context59.sent;
                      document.addEventListener('ionModalDidPresent', function () {
                        _this43.tsBreaksModalOpen = true;

                        _this43.logger.info('[TSheetDetailModal|BreaksModal] (ionModalDidPresent)...');
                      });
                      tsBreaksModal.onWillDismiss().then(function () {
                        _this43.tsBreaksModalOpen = false;

                        _this43.logger.info('[TSheetDetailModal|BreaksModal] (ionModalWillDismiss)...');
                      });
                      tsBreaksModal.onDidDismiss().then(function (_ref9) {
                        var data = _ref9.data,
                            role = _ref9.role;

                        _this43.logger.info('[TSheetDetailModal|BreaksModal] (ionModalDidDismiss) >>> ()');

                        if (role === 'changed') {
                          _this43.wasChanged = true;
                          _this43.shouldSave = true;
                          _this43.updateSaveBannerTxt = 'updated';
                          _this43.updatedTS = data.ts;

                          _this43.evServ.showToast('success', 'Break Data Updated');
                        } else {
                          _this43.evServ.showToast('general', 'Break Data Unchanged');
                        }
                      });
                      _context59.next = 11;
                      return tsBreaksModal.present();

                    case 11:
                      return _context59.abrupt("return", _context59.sent);

                    case 12:
                    case "end":
                      return _context59.stop();
                  }
                }
              }, _callee59, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "viewHistory",
          value: function viewHistory() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee60() {
              var _this44 = this;

              var thisTSHModalOpts, tsHistoryModal;
              return regeneratorRuntime.wrap(function _callee60$(_context60) {
                while (1) {
                  switch (_context60.prev = _context60.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Detail|viewHistory] ()...');
                      thisTSHModalOpts = this.tsHistoryModalOpts;
                      thisTSHModalOpts['componentProps'] = {
                        ts: this.ts,
                        avatar: this.meAvatar
                      };
                      _context60.next = 5;
                      return this.modalCtrl.create(thisTSHModalOpts);

                    case 5:
                      tsHistoryModal = _context60.sent;
                      document.addEventListener('ionModalDidPresent', function () {
                        _this44.tsHistoryModalOpen = true;

                        _this44.logger.info('[TSheetDetailModal|HistoryModal] (ionModalDidPresent)...');
                      });
                      tsHistoryModal.onWillDismiss().then(function () {
                        _this44.tsHistoryModalOpen = false;

                        _this44.logger.info('[TSheetDetailModal|HistoryModal] (ionModalWillDismiss)...');
                      });
                      tsHistoryModal.onDidDismiss().then(function () {
                        _this44.logger.info('[TSheetDetailModalHistoryModal] (ionModalDidDismiss) >>> (History Modal Dismissed - No Changes Possible.)');
                      });
                      _context60.next = 11;
                      return tsHistoryModal.present();

                    case 11:
                      return _context60.abrupt("return", _context60.sent);

                    case 12:
                    case "end":
                      return _context60.stop();
                  }
                }
              }, _callee60, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeDetail",
          value: function closeDetail() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee61() {
              var doSaveConfOpts, _yield$_capacitor_dia7, value;

              return regeneratorRuntime.wrap(function _callee61$(_context61) {
                while (1) {
                  switch (_context61.prev = _context61.next) {
                    case 0:
                      if (!this.shouldSave) {
                        _context61.next = 9;
                        break;
                      }

                      doSaveConfOpts = {
                        title: 'Save Changes?',
                        message: 'Changes made to Timesheet #' + this.ts.Id + '. Save or Discard?',
                        okButtonTitle: 'Save Changes',
                        cancelButtonTitle: 'Discard Changes'
                      };
                      _context61.next = 4;
                      return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_10__.Dialog.confirm(doSaveConfOpts);

                    case 4:
                      _yield$_capacitor_dia7 = _context61.sent;
                      value = _yield$_capacitor_dia7.value;

                      if (value) {
                        this.saveTSChanges(true);
                      } else {
                        this.modalCtrl.dismiss({
                          data: null,
                          role: 'unchanged',
                          id: this.modalId
                        });
                      }

                      _context61.next = 10;
                      break;

                    case 9:
                      if (this.wasChanged) {
                        this.modalCtrl.dismiss({
                          data: this.updatedTS,
                          role: 'changed',
                          id: this.modalId
                        });
                      } else {
                        this.modalCtrl.dismiss({
                          data: null,
                          role: 'unchanged',
                          id: this.modalId
                        });
                      }

                    case 10:
                    case "end":
                      return _context61.stop();
                  }
                }
              }, _callee61, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "saveTSChanges",
          value: function saveTSChanges(doClose) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee62() {
              var _this45 = this;

              var saveBreaksLoader;
              return regeneratorRuntime.wrap(function _callee62$(_context62) {
                while (1) {
                  switch (_context62.prev = _context62.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-Breaks|saveBreaks] ()...');
                      _context62.next = 3;
                      return this.loadCtrl.create({
                        spinner: 'dots',
                        cssClass: 'sheriff-loader-class',
                        message: 'Saving Timesheet #' + this.ts.Id
                      });

                    case 3:
                      saveBreaksLoader = _context62.sent;
                      _context62.next = 6;
                      return saveBreaksLoader.present();

                    case 6:
                      setTimeout(function () {
                        _this45.logger.info('[Modal|TSheet-Detail|saveTSChanges] (Saving TS) - Remote: Deputy Put/Post TS Data - Await Server 200 - Do GET Request to /my/timesheet & Push Object to Local Variable...');

                        _this45.logger.info('[Modal|TSheet-Detail|saveTSChanges] (Saving TS) - Local: Replace Updated Timesheet Object (New/Accepted Area/Other Props) in SQLite DB & Push to Local/Global Var to be Returned with Dismiss Detail - No Refresh Required to Update TSheet List View.');

                        _this45.shouldSave = false;
                        _this45.wasChanged = true;
                        _this45.updateSaveBannerTxt = 'saved';
                        saveBreaksLoader.dismiss();

                        if (doClose) {
                          _this45.closeDetail();
                        }
                      }, 5000);

                    case 7:
                    case "end":
                      return _context62.stop();
                  }
                }
              }, _callee62, this);
            }));
          }
        }]);

        return TSheetDetailPage;
      }();

      _TSheetDetailPage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_14__.NGXLogger
        }, {
          type: _services_datetime_service__WEBPACK_IMPORTED_MODULE_2__.DateTimeService
        }, {
          type: _services_events_service__WEBPACK_IMPORTED_MODULE_3__.EventsService
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.PopoverController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.LoadingController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.NavParams
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.Platform
        }, {
          type: src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_8__.DetailService
        }];
      };

      _TSheetDetailPage = (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_16__.Component)({
        selector: 'app-tsheet-detail',
        template: _raw_loader_tsheet_detail_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_tsheet_detail_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _TSheetDetailPage);
      /***/
    },

    /***/
    29080:
    /*!*************************************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-history/tsheet-history.module.ts ***!
      \*************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TSheetHistoryPageModule": function TSheetHistoryPageModule() {
          return (
            /* binding */
            _TSheetHistoryPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _tsheet_history_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./tsheet-history.page */
      89370);

      var _TSheetHistoryPageModule = function TSheetHistoryPageModule() {
        _classCallCheck(this, TSheetHistoryPageModule);
      };

      _TSheetHistoryPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_tsheet_history_page__WEBPACK_IMPORTED_MODULE_0__.TSheetHistoryPage]
      })], _TSheetHistoryPageModule);
      /***/
    },

    /***/
    89370:
    /*!***********************************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-history/tsheet-history.page.ts ***!
      \***********************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "TSheetHistoryPage": function TSheetHistoryPage() {
          return (
            /* binding */
            _TSheetHistoryPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_tsheet_history_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./tsheet-history.page.html */
      72249);
      /* harmony import */


      var _tsheet_history_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./tsheet-history.page.scss */
      19462);
      /* harmony import */


      var _services_sqlite_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./../../../../services/sqlite.service */
      90636);
      /* harmony import */


      var _services_datetime_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./../../../../services/datetime.service */
      12826);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! src/app/services/detail.service */
      52153);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ngx-logger */
      62740); //////////////////////////////////////////////////////////////////////////////////////


      var _TSheetHistoryPage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function TSheetHistoryPage(logger, modalCtrl, navP, plt, dT, sql, detailServ) {
          _classCallCheck(this, TSheetHistoryPage);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.navP = navP;
          this.plt = plt;
          this.dT = dT;
          this.sql = sql;
          this.detailServ = detailServ;
          this.allTSHistory = [];
          this.noHistory = false;
          this.rosPubDate = null;
          this.pplArr = [];
          this.sTTRaw = {
            hours: 0,
            minutes: 0
          };
          this.sTTRound = {
            hours: 0,
            minutes: 0
          };
          this.uTTRaw = {
            hours: 0,
            minutes: 0
          };
          this.uTTRound = {
            hours: 0,
            minutes: 0
          };
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(TSheetHistoryPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|TSheet-History|OnInit]');
            this.initPrefs();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initPrefs",
          value: function initPrefs() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee63() {
              return regeneratorRuntime.wrap(function _callee63$(_context63) {
                while (1) {
                  switch (_context63.prev = _context63.next) {
                    case 0:
                      this.meObj = this.detailServ.meObj;
                      this.myEmpId = this.detailServ.meEmpId;
                      this.myDisplayName = this.detailServ.meName;
                      this.pplArr = this.detailServ.pplArr;
                      this.initTSHistoryData();

                    case 5:
                    case "end":
                      return _context63.stop();
                  }
                }
              }, _callee63, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            var _this46 = this;

            this.logger.info('[Modal|TSheet-History|ionViewDidEnter]');
            this.plt.ready().then(function () {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(_this46, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee64() {
                var modalEl, searchIds, histIdsArr, i, _i5, tH, rosPubD;

                return regeneratorRuntime.wrap(function _callee64$(_context64) {
                  while (1) {
                    switch (_context64.prev = _context64.next) {
                      case 0:
                        _context64.next = 2;
                        return this.modalCtrl.getTop();

                      case 2:
                        modalEl = _context64.sent;
                        this.modalId = modalEl.id;
                        searchIds = [];
                        histIdsArr = ['EmployeeAgreement', 'File', 'Id', 'PaycycleId', 'Roster'];

                        for (i = 0; i < histIdsArr.length; i++) {
                          if (this.ts[histIdsArr[i]] && typeof this.ts[histIdsArr[i]] === 'number') {
                            searchIds.push(this.ts[histIdsArr[i]]);
                          }
                        }

                        ;
                        _context64.next = 10;
                        return this.sql.getTSHistory(searchIds);

                      case 10:
                        this.allTSHistory = _context64.sent;

                        if (this.allTSHistory.length > 0) {
                          for (_i5 = 0; _i5 < this.allTSHistory.length; _i5++) {
                            tH = this.allTSHistory[_i5];

                            if (tH.UsageType === 11 && tH.EmpId === this.ts.Employee && this.ts.Date === tH.Date) {
                              rosPubD = new Date(tH.Created);
                              this.rosPubDate = this.dT.format(rosPubD, 'EEEE, d MMMM yyyy');
                            }
                          }
                        }

                      case 12:
                      case "end":
                        return _context64.stop();
                    }
                  }
                }, _callee64, this);
              }));
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initTSHistoryData",
          value: function initTSHistoryData() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee65() {
              var uTTRoundObj, tsTTHrsStr, splitTArr, raw2DMin, mins2D;
              return regeneratorRuntime.wrap(function _callee65$(_context65) {
                while (1) {
                  switch (_context65.prev = _context65.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-History|initTSHistoryData]');
                      this.ts = this.navP.data.ts;
                      this.meAvatar = this.navP.data.avatar;
                      this.uLastUpdate = this.dT.format(new Date(this.ts.Modified), 'HH:mm');
                      this.uSTimeRaw = this.dT.TFHut(this.ts.StartTime);
                      this.uSTimeRound = this.dT.round5_24h(this.dT.Dut(this.ts.StartTime));
                      this.uETimeRaw = this.dT.TFHut(this.ts.EndTime);
                      this.uETimeRound = this.dT.round5_24h(this.dT.Dut(this.ts.EndTime));
                      this.uTTRaw = this.dT.DurAsObj(this.dT.Dut(this.ts.StartTime), this.dT.Dut(this.ts.EndTime));
                      uTTRoundObj = {};
                      tsTTHrsStr = this.ts.TotalTime.toString();
                      splitTArr = tsTTHrsStr.split('.');
                      parseInt(splitTArr[0]) > 0 ? uTTRoundObj['hours'] = parseInt(splitTArr[0]) : uTTRoundObj['hours'] = 0;

                      if (parseInt(splitTArr[1]) > 0) {
                        raw2DMin = splitTArr[1].substring(0, 2);
                        mins2D = Math.round(parseInt(raw2DMin) / 100 * 60);
                        uTTRoundObj['minutes'] = mins2D;
                        this.uTTRound = uTTRoundObj;
                      } else {
                        uTTRoundObj['minutes'] = 0;
                        this.uTTRound = uTTRoundObj;
                      }

                    case 14:
                    case "end":
                      return _context65.stop();
                  }
                }
              }, _callee65, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeHistory",
          value: function closeHistory() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee66() {
              return regeneratorRuntime.wrap(function _callee66$(_context66) {
                while (1) {
                  switch (_context66.prev = _context66.next) {
                    case 0:
                      this.logger.info('[Modal|TSheet-History|closeHistory] ()...');
                      this.modalCtrl.dismiss({
                        data: null,
                        role: 'unchanged',
                        id: this.modalId
                      });

                    case 2:
                    case "end":
                      return _context66.stop();
                  }
                }
              }, _callee66, this);
            }));
          }
        }]);

        return TSheetHistoryPage;
      }();

      _TSheetHistoryPage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_6__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.NavParams
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.Platform
        }, {
          type: _services_datetime_service__WEBPACK_IMPORTED_MODULE_3__.DateTimeService
        }, {
          type: _services_sqlite_service__WEBPACK_IMPORTED_MODULE_2__.SQLiteService
        }, {
          type: src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_4__.DetailService
        }];
      };

      _TSheetHistoryPage = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
        selector: 'app-tsheet-history',
        template: _raw_loader_tsheet_history_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_tsheet_history_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _TSheetHistoryPage);
      /***/
    },

    /***/
    5628:
    /*!****************************************************!*\
      !*** ./src/app/modals/firstrun/firstrun.module.ts ***!
      \****************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "FirstRunPageModule": function FirstRunPageModule() {
          return (
            /* binding */
            _FirstRunPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _firstrun_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./firstrun.page */
      1119);

      var _FirstRunPageModule = function FirstRunPageModule() {
        _classCallCheck(this, FirstRunPageModule);
      };

      _FirstRunPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_firstrun_page__WEBPACK_IMPORTED_MODULE_0__.FirstRunPage]
      })], _FirstRunPageModule);
      /***/
    },

    /***/
    1119:
    /*!**************************************************!*\
      !*** ./src/app/modals/firstrun/firstrun.page.ts ***!
      \**************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "FirstRunPage": function FirstRunPage() {
          return (
            /* binding */
            _FirstRunPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_firstrun_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./firstrun.page.html */
      39625);
      /* harmony import */


      var _firstrun_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./firstrun.page.scss */
      10716);
      /* harmony import */


      var _services_calendar_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./../../services/calendar.service */
      49603);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @capacitor/core */
      68384);
      /* harmony import */


      var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic-native/http/ngx */
      68589);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _capacitor_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @capacitor/dialog */
      63540);
      /* harmony import */


      var _capacitor_status_bar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @capacitor/status-bar */
      64909);
      /* harmony import */


      var _capacitor_app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @capacitor/app */
      42138);
      /* harmony import */


      var src_app_services_app_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! src/app/services/app.service */
      66475);
      /* harmony import */


      var _services_baseDB__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ../../services/baseDB */
      96414);
      /* harmony import */


      var _services_events_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./../../services/events.service */
      80106);
      /* harmony import */


      var _services_sqlite_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./../../services/sqlite.service */
      90636);
      /* harmony import */


      var src_app_services_datetime_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! src/app/services/datetime.service */
      12826);
      /* harmony import */


      var _services_deputy_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./../../services/deputy.service */
      22092);
      /* harmony import */


      var src_app_services_firebase_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! src/app/services/firebase.service */
      19446);
      /* harmony import */


      var _services_storage_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./../../services/storage.service */
      71188);
      /* harmony import */


      var src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! src/app/services/detail.service */
      52153);
      /* harmony import */


      var _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! @capacitor/filesystem */
      61977);
      /* harmony import */


      var _services_filesystem_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! ./../../services/filesystem.service */
      22904);
      /* harmony import */


      var lodash__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! lodash */
      23815);
      /* harmony import */


      var lodash__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_19__);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! jquery */
      91704);
      /* harmony import */


      var jquery__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_20__); //////////////////////////////////////////////////////////////////////////////////////


      var _FirstRunPage = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function FirstRunPage(modalController, evServ, sqlServ, deputy, storeServ, fsServ, logger, loadCtrl, shttp, dT, calServ, fireServ, dS, appServ) {
          _classCallCheck(this, FirstRunPage);

          this.modalController = modalController;
          this.evServ = evServ;
          this.sqlServ = sqlServ;
          this.deputy = deputy;
          this.storeServ = storeServ;
          this.fsServ = fsServ;
          this.logger = logger;
          this.loadCtrl = loadCtrl;
          this.shttp = shttp;
          this.dT = dT;
          this.calServ = calServ;
          this.fireServ = fireServ;
          this.dS = dS;
          this.appServ = appServ;
          this.freshOptDefault = false;
          this.freshOptMore = false; // Slider Vars

          this.slideOptions = {
            initialSlide: 0,
            slidesPerView: 1,
            autoplay: false
          };
          this.doShowPager = true;
          this.sliderHasLoaded = false;
          this.thisSlideNo = 1;
          this.lockNext = false;
          this.lockPrev = false;
          this.checkFSAndBUOnce = false;
          this.usingDefaults = false;
          this.defaultLastSlideCount = 0;
          this.wpSearchAgainStage = 'waiting';
          this.wpWorkplaces = [];
          this.wpOneIsChecked = false;
          this.myDataObj = null;
          this.meDataObj = null;
          this.rawWPDataArr = [];
          this.isDownloading = true;
          this.awaitingChoice = true;
          this.neverAskAgainCB = true;
          this.wpNoOf = 0;
          this.wpCheckDone = false;
          this.newWPNo = 0; // DB/Backup Vars

          this.backupCheckIsDone = false;
          this.noBackupWillFail = false;
          this.mustRestoreProg = 0;
          this.mustRestoreStatus = 'loading';
          this.forceRestoreWP = null;
          this.forceRestoreWPArr = [];
          this.hasBUDB = false;
          this.buDBChecked = false;
          this.startFreshChecked = false;
          this.dbImportDone = false;
          this.reinitUDBCount = 0; // Download Scope/Data Vars

          this.epTestsDone = false;
          this.selectDataScope = null;
          this.showMoreOpts = false;
          this.allMyEPDataArr = [];
          this.recordsDefaultOpsArr = [];
          this.recordsUserOptsArr = [];
          this.recDLAllArr = [];
          this.recDLCustomArr = [];
          this.dloadSelectionMode = true; // Download Prog Vars

          this.dlMyRunning = false;
          this.dloadInProgress = false;
          this.dlInProgText = 'downloading';
          this.dlBoxInProgress = true;
          this.dlBoxError = false;
          this.dlBoxSuccess = false;
          this.thisDataValue = 0;
          this.thisDataMax = 0;
          this.getThisPBar = 0;
          this.getAllPBar = 0;
          this.getAllPerc = 0;
          this.getAllCount = 0;
          this.getAllTotal = 0;
          this.dlDidComplete = false;
          this.dlErrorCount = 0;
          this.dlConvImgMode = false;
          this.convImgs = []; // Modal Return Data Vars

          this.frWorkplaceId = 0;
          this.finalModalData = {
            wpId: this.frWorkplaceId,
            dlDone: false,
            dbImported: null,
            didDefaults: false,
            alertOpts: {
              alertCal: {
                value: null,
                info: false
              },
              alertMethods: {
                value: {
                  phone: true,
                  calendar: true,
                  email: false
                },
                info: false
              },
              alertEvents: {
                value: {
                  shift: true,
                  task: true,
                  tsheet: true
                },
                info: false
              },
              alertBefore: {
                value: {
                  task: {
                    range: 2,
                    mins: 60
                  },
                  shift: {
                    range: 1,
                    mins: 30
                  },
                  tsheet: {
                    range: 2,
                    mins: 10
                  }
                },
                info: false
              }
            }
          };
        } //////////////////////////////////////////////////////////////////////////////////////


        _createClass(FirstRunPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|FirstRun|ngInit] ()...');
            this.doInitModalVars();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewWillEnter",
          value: function ionViewWillEnter() {
            this.logger.info('[Modal|FirstRun|ionViewWillEnter] ()...');
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "doInitModalVars",
          value: function doInitModalVars() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee67() {
              var hasWPO, pfN, pfC, i, rawWPO, wpoColor, wpoCLabel, wpoCode, wpoAddr, wpoCheck;
              return regeneratorRuntime.wrap(function _callee67$(_context67) {
                while (1) {
                  switch (_context67.prev = _context67.next) {
                    case 0:
                      this.logger.info('[Modal|FirstRun|doInitModalVars] ()...');
                      _context67.next = 3;
                      return this.dS.getMe();

                    case 3:
                      this.meDataObj = _context67.sent;
                      _context67.next = 6;
                      return this.dS.getMy();

                    case 6:
                      this.myDataObj = _context67.sent;
                      this.userEmail = this.deputy.userEmail;
                      hasWPO = null;

                      if (this.myDataObj.hasOwnProperty('Workplace')) {
                        hasWPO = true;
                        this.rawWPDataArr = this.myDataObj.Workplace;
                        this.wpNoOf = this.rawWPDataArr.length;
                      } else {
                        hasWPO = false;
                        this.wpNoOf = 0;
                      }

                      ;

                      if (!(!hasWPO || this.wpNoOf < 1)) {
                        _context67.next = 22;
                        break;
                      }

                      this.doShowPager = false;

                      if (this.wpCheckDone) {
                        _context67.next = 18;
                        break;
                      }

                      this.wpCheckDone = true;
                      this.evServ.publish('wpCheckDone', true);
                      _context67.next = 20;
                      break;

                    case 18:
                      _context67.next = 20;
                      return this.doPrevNextCheck();

                    case 20:
                      _context67.next = 35;
                      break;

                    case 22:
                      this.doShowPager = true;
                      pfN = this.myDataObj.Portfolio;
                      pfC = this.myDataObj.ColorThemeCode;

                      for (i = 0; i < this.rawWPDataArr.length; i++) {
                        rawWPO = this.rawWPDataArr[i];
                        wpoColor = void 0, wpoCLabel = void 0, wpoCode = void 0, wpoAddr = void 0, wpoCheck = void 0;

                        if (i === 0) {
                          if (this.wpNoOf > 1) {
                            wpoCheck = false;
                            this.wpOneIsChecked = false;
                          } else {
                            wpoCheck = true;
                            this.wpOneIsChecked = true;
                          }
                        } else {
                          wpoCheck = false;
                        }

                        ;
                        this.frWorkplaceId = rawWPO.Id;

                        if (rawWPO.CompanyName === pfN) {
                          wpoColor = pfC;
                          this.lightOrDark(pfC) === 'dark' ? wpoCLabel = '#EEEEEE' : wpoCLabel = '#121212';
                        } else {
                          wpoColor = '#363636';
                          wpoCLabel = '#EEEEEE';
                        }

                        ;
                        rawWPO.Code ? wpoCode = rawWPO.Code.substr(0, 3) : wpoCode = null;
                        rawWPO._DPMetaData.AddressObject.Print ? wpoAddr = rawWPO._DPMetaData.AddressObject.Print : wpoAddr = null;
                        this.wpWorkplaces.push({
                          id: rawWPO.Id,
                          code: wpoCode,
                          color: wpoColor,
                          labelcolor: wpoCLabel,
                          name: rawWPO.CompanyName,
                          address: wpoAddr,
                          ischecked: wpoCheck
                        });
                      }

                      ;

                      if (this.wpCheckDone) {
                        _context67.next = 32;
                        break;
                      }

                      this.wpCheckDone = true;
                      this.evServ.publish('wpCheckDone', true);
                      _context67.next = 34;
                      break;

                    case 32:
                      _context67.next = 34;
                      return this.doPrevNextCheck();

                    case 34:
                      ;

                    case 35:
                    case "end":
                      return _context67.stop();
                  }
                }
              }, _callee67, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            this.logger.info('[Modal|FirstRun|ionViewDidEnter] ()...');
            jquery__WEBPACK_IMPORTED_MODULE_20__('ion-content#auth-page-ion-content').css('display', 'none');
          }
        }, {
          key: "lightOrDark",
          value: //////////////////////////////////////////////////////////////////////////////////////
          function lightOrDark(color) {
            this.logger.info('[Modal|FirstRun|lightOrDark] (' + String(color) + ')...');
            var r, g, b, hsp;

            if (color.match(/^rgb/)) {
              color = color.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+(?:\.\d+)?))?\)$/);
              r = color[1];
              g = color[2];
              b = color[3];
            } else {
              color = +("0x" + color.slice(1).replace(color.length < 5 && /./g, '$&$&'));
              r = color >> 16;
              g = color >> 8 & 255;
              b = color & 255;
            }

            ;
            hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b));

            if (hsp > 127.5) {
              return 'light';
            } else {
              return 'dark';
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "searchForMissingWP",
          value: function searchForMissingWP() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee68() {
              var _this47 = this;

              var stopSA, sFMWPRes;
              return regeneratorRuntime.wrap(function _callee68$(_context68) {
                while (1) {
                  switch (_context68.prev = _context68.next) {
                    case 0:
                      this.logger.info('[Modal|FirstRun|searchForMissingWP] ()...');

                      stopSA = function stopSA(n) {
                        var nT;
                        n ? nT = 'gotnew' : nT = 'nonew';
                        _this47.wpSearchAgainStage = nT;
                        setTimeout(function () {
                          jquery__WEBPACK_IMPORTED_MODULE_20__('.dimable').css('opacity', '1');
                          _this47.wpSearchAgain = false;
                          _this47.wpSearchAgainStage = 'waiting';
                        }, 1000);
                      };

                      this.wpSearchAgain = true;
                      jquery__WEBPACK_IMPORTED_MODULE_20__('.dimable').css('opacity', '0.3');
                      _context68.next = 6;
                      return this.deputy.diffMyWorkplace(this.rawWPDataArr);

                    case 6:
                      sFMWPRes = _context68.sent;

                      if (sFMWPRes["new"]) {
                        _context68.next = 11;
                        break;
                      }

                      stopSA(false);
                      _context68.next = 17;
                      break;

                    case 11:
                      stopSA(true);
                      this.wpWorkplaces = [];
                      this.newWPNo = sFMWPRes.newno;
                      _context68.next = 16;
                      return this.dS.setMy(sFMWPRes.data);

                    case 16:
                      this.doInitModalVars();

                    case 17:
                    case "end":
                      return _context68.stop();
                  }
                }
              }, _callee68, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "toggleWPCB",
          value: function toggleWPCB(index, id) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee69() {
              var isOne, i, _i6;

              return regeneratorRuntime.wrap(function _callee69$(_context69) {
                while (1) {
                  switch (_context69.prev = _context69.next) {
                    case 0:
                      this.logger.info('[Modal|FirstRun|toggleWPCB] (' + index + ',' + id + ')...');

                      if (!this.wpWorkplaces[index].ischecked) {
                        _context69.next = 13;
                        break;
                      }

                      this.wpWorkplaces[index].ischecked = false;

                      if (this.frWorkplaceId === id) {
                        this.frWorkplaceId = null;
                      }

                      ;
                      isOne = false;

                      for (i = 0; i < this.wpWorkplaces.length; i++) {
                        if (this.wpWorkplaces[i].ischecked) {
                          isOne = true;
                        }
                      }

                      ;
                      this.wpOneIsChecked = isOne;
                      _context69.next = 11;
                      return this.doPrevNextCheck();

                    case 11:
                      _context69.next = 21;
                      break;

                    case 13:
                      this.wpWorkplaces[index].ischecked = true;

                      if (this.frWorkplaceId !== id) {
                        this.frWorkplaceId = id;
                      }

                      ;

                      for (_i6 = 0; _i6 < this.wpWorkplaces.length; _i6++) {
                        if (_i6 !== index) {
                          this.wpWorkplaces[_i6].ischecked = false;
                        }
                      }

                      ;
                      this.wpOneIsChecked = true;
                      _context69.next = 21;
                      return this.doPrevNextCheck();

                    case 21:
                    case "end":
                      return _context69.stop();
                  }
                }
              }, _callee69, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "skipWorkplaceImport",
          value: function skipWorkplaceImport() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee70() {
              return regeneratorRuntime.wrap(function _callee70$(_context70) {
                while (1) {
                  switch (_context70.prev = _context70.next) {
                    case 0:
                      this.logger.info('[Modal|FirstRun|skipWorkplaceImport] ()...');
                      this.noBackupWillFail = true;
                      _context70.next = 4;
                      return this.doPrevNextCheck();

                    case 4:
                      this.slideWithNav.slideTo(1, 500, true);

                    case 5:
                    case "end":
                      return _context70.stop();
                  }
                }
              }, _callee70, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getRecCatObj",
          value: function getRecCatObj() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee71() {
              var _this48 = this;

              var dbInitLoader, doSkip, doAll, doLimit, noAccess, zeroRecs, availRecs, skipRec, availEPs, allRCs, storeRCs, allMCs, storeMCs, i, rC, tRC, finalAvailRecs, accessRes, storeARs, _i7, aRO, fauxRosCount, tsArr;

              return regeneratorRuntime.wrap(function _callee71$(_context71) {
                while (1) {
                  switch (_context71.prev = _context71.next) {
                    case 0:
                      this.logger.info('[Modal|firstRun|DeputyApiService|getRecCatObj] ()...');
                      _context71.next = 3;
                      return this.loadCtrl.create({
                        spinner: 'dots',
                        cssClass: ['sheriff-loader-class', 'fr-workplace-data-loader'],
                        message: '𝘓𝘰𝘢𝘥𝘪𝘯𝘨 🏢𝗪𝗢𝗥𝗞𝗣𝗟𝗔𝗖𝗘 𝖣𝖺𝗍𝖺'
                      });

                    case 3:
                      dbInitLoader = _context71.sent;
                      _context71.next = 6;
                      return dbInitLoader.present();

                    case 6:
                      doSkip = ['country', 'state'];
                      doAll = ['roster', 'timesheet', 'task', 'memo'];
                      doLimit = ['systemusagebalance', 'systemusagetracking', 'geo'];
                      noAccess = [];
                      zeroRecs = [];
                      availRecs = [];
                      skipRec = [];
                      availEPs = [];
                      _context71.next = 16;
                      return this.storeServ.getObject('tempAllRCs');

                    case 16:
                      storeRCs = _context71.sent;
                      _context71.next = 19;
                      return this.storeServ.getObject('tempAllMCs');

                    case 19:
                      storeMCs = _context71.sent;

                      if (!(storeRCs !== null)) {
                        _context71.next = 24;
                        break;
                      }

                      allRCs = storeRCs;
                      _context71.next = 28;
                      break;

                    case 24:
                      _context71.next = 26;
                      return this.deputy.firstRunRecordsCheck();

                    case 26:
                      allRCs = _context71.sent;
                      this.storeServ.setObject('tempAllRCs', allRCs);

                    case 28:
                      ;

                      if (!(storeMCs !== null)) {
                        _context71.next = 33;
                        break;
                      }

                      allMCs = storeMCs;
                      _context71.next = 37;
                      break;

                    case 33:
                      _context71.next = 35;
                      return this.deputy.firstRunMyCheck();

                    case 35:
                      allMCs = _context71.sent;
                      this.storeServ.setObject('tempAllMCs', allMCs);

                    case 37:
                      ;

                      for (i = 0; i < allRCs.length; i++) {
                        rC = allRCs[i];

                        if (!rC.access) {
                          noAccess.push(rC.name);
                        } else if (doSkip.includes(rC.name.toLowerCase())) {
                          skipRec.push(rC.name);
                        } else if (rC.count < 1) {
                          zeroRecs.push(rC.name);
                        } else {
                          tRC = {
                            ep: rC.name,
                            disabled: null,
                            checked: null,
                            "default": 0,
                            value: 0,
                            min: 0,
                            max: 0
                          };
                          tRC.disabled = false;
                          tRC.checked = true;
                          rC.count === 1 ? tRC.min = 0 : tRC.min = 1;

                          if (doAll.includes(rC.name.toLowerCase())) {
                            tRC.max = rC.count;

                            if (rC.count <= 3000) {
                              tRC.value = rC.count;
                              tRC["default"] = rC.count;
                            } else {
                              tRC.value = 3000;
                              tRC["default"] = 3000;
                            }
                          } else if (doLimit.includes(rC.name.toLowerCase())) {
                            tRC.max = 730;
                            tRC.value = 365;
                            tRC["default"] = 365;
                          } else {
                            if (rC.count <= 1000) {
                              tRC.max = rC.count;
                              tRC.value = rC.count;
                              tRC["default"] = rC.count;
                            } else if (rC.count > 1000 && rC.count <= 2000) {
                              tRC.max = rC.count;
                              tRC.value = 730;
                              tRC["default"] = 730;
                            } else if (rC.count > 2000) {
                              tRC.max = 2000;
                              tRC.value = 730;
                              tRC["default"] = 730;
                            }
                          }

                          ;
                          availRecs.push(tRC);
                          availEPs.push(tRC.ep);
                        }
                      }

                      ;
                      finalAvailRecs = [];
                      _context71.next = 43;
                      return this.storeServ.getObject('tempARs');

                    case 43:
                      storeARs = _context71.sent;

                      if (!(storeARs !== null)) {
                        _context71.next = 48;
                        break;
                      }

                      accessRes = storeARs;
                      _context71.next = 52;
                      break;

                    case 48:
                      _context71.next = 50;
                      return this.deputy.gotEPAccess(availEPs);

                    case 50:
                      accessRes = _context71.sent;
                      this.storeServ.setObject('tempARs', accessRes);

                    case 52:
                      ;

                      for (_i7 = 0; _i7 < availRecs.length; _i7++) {
                        aRO = availRecs[_i7];

                        if (accessRes[_i7].result) {
                          finalAvailRecs.push(aRO);
                        }
                      }

                      ;
                      tsArr = availRecs.filter(function (o) {
                        return o.ep === 'Timesheet';
                      });
                      tsArr.length > 0 ? fauxRosCount = tsArr[0]['max'] : fauxRosCount = 500;
                      finalAvailRecs.push({
                        ep: 'Roster',
                        disabled: false,
                        checked: true,
                        "default": fauxRosCount,
                        value: fauxRosCount,
                        min: fauxRosCount,
                        max: fauxRosCount
                      });
                      this.loadCtrl.dismiss().then(function () {
                        _this48.epTestsDone = true;

                        _this48.evServ.publish('epTestsDone', true);
                      });
                      this.logger.info('[Modal|firstRun|getRecCatObj] (FINISH): [' + allRCs.length + ']-All, [' + noAccess.length + ']-NoAccess, [' + zeroRecs.length + ']-0Records, [' + skipRec.length + ']-Skipped, [' + availRecs.length + ']-Avail');
                      this.allMyEPDataArr = allMCs;
                      this.recordsDefaultOpsArr = finalAvailRecs;
                      this.recordsUserOptsArr = finalAvailRecs;

                    case 63:
                    case "end":
                      return _context71.stop();
                  }
                }
              }, _callee71, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "toggleBUDB",
          value: function toggleBUDB(BUDBisC) {
            this.logger.info('[Modal|firstRun|toggleBUDB] (' + BUDBisC + ')...');

            if (!BUDBisC) {
              this.logger.info('[TOGGLE BUDB] -> ON/CHECKED...');

              if (!this.buDBChecked) {
                this.buDBChecked = true;
              }

              ;

              if (!this.restoreBUDBCB.checked) {
                this.restoreBUDBCB.checked = true;
              }

              ;

              if (this.startFreshChecked) {
                this.startFreshChecked = false;
              }

              ;

              if (this.startFreshCB.checked) {
                this.startFreshCB.checked = false;
              }

              ;
            } else if (BUDBisC) {
              this.logger.info('[TOGGLE BUDB] -> OFF/UNCHECKED...');

              if (this.buDBChecked) {
                this.buDBChecked = false;
              }

              ;

              if (this.restoreBUDBCB.checked) {
                this.restoreBUDBCB.checked = false;
              }

              ;
            }

            ;
            this.doPrevNextCheck();
          }
        }, {
          key: "toggleStartFresh",
          value: //////////////////////////////////////////////////////////////////////////////////////
          function toggleStartFresh(FreshisC) {
            this.logger.info('[Modal|firstRun|toggleStartFresh] (' + FreshisC + ')...');

            if (!FreshisC) {
              this.logger.info('[TOGGLE FreshStart] -> ON/CHECKED...');

              if (!this.startFreshChecked) {
                this.startFreshChecked = true;
              }

              ;

              if (!this.startFreshCB.checked) {
                this.startFreshCB.checked = true;
              }

              ;

              if (this.buDBChecked) {
                this.buDBChecked = false;
              }

              ;

              if (this.restoreBUDBCB.checked) {
                this.restoreBUDBCB.checked = false;
              }

              ;
            } else if (FreshisC) {
              this.logger.info('[TOGGLE FreshStart] -> OFF/UNCHECKED...');

              if (this.startFreshChecked) {
                this.startFreshChecked = false;
              }

              ;

              if (this.startFreshCB.checked) {
                this.startFreshCB.checked = false;
              }

              ;
            }

            ;
            this.doPrevNextCheck();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "showMoreOptions",
          value: function showMoreOptions(tf) {
            this.logger.info('[Modal|FirstRun|showMoreOptions] (' + tf.toString() + ')...');
            this.showMoreOpts = tf;
            tf ? this.selectDataScope = 'moreopts' : this.selectDataScope = 'all';
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "recordMOToggleChange",
          value: function recordMOToggleChange(i, recEP) {
            this.logger.info('[Modal|FirstRun|recordMOToggleChange] (' + i + ',' + recEP + ')...');
            this.recordsUserOptsArr[i].checked ? this.recordsUserOptsArr[i].checked = false : this.recordsUserOptsArr[i].checked = true;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "recordMORangeChange",
          value: function recordMORangeChange(i, recEP) {
            this.logger.info('[Modal|FirstRun|recordMORangeChange] (' + i + ',' + recEP + ')...');
            var newVal = parseInt(jquery__WEBPACK_IMPORTED_MODULE_20__('.records-range.' + recEP).prop('value'));
            this.recordsUserOptsArr[i].value = newVal;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "toggleAlertM",
          value: function toggleAlertM(event, mN) {
            this.logger.info('[Modal|FirstRun|toggleAlertM] (' + mN + ')...');
            event.stopPropagation();
            this.finalModalData.alertOpts.alertMethods.value[mN] ? this.finalModalData.alertOpts.alertMethods.value[mN] = false : this.finalModalData.alertOpts.alertMethods.value[mN] = true;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "toggleAlertE",
          value: function toggleAlertE(event, eN) {
            this.logger.info('[Modal|FirstRun|toggleAlertE] (' + eN + ')...');
            event.stopPropagation();
            this.finalModalData.alertOpts.alertEvents.value[eN] ? this.finalModalData.alertOpts.alertEvents.value[eN] = false : this.finalModalData.alertOpts.alertEvents.value[eN] = true;
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "clearDLProgress",
          value: function clearDLProgress() {
            this.logger.info('[Modal|FirstRun|clearDLProgress] ()...');
            this.nowDataTarget = '';
            var dlProgNumArr = ['thisDataValue', 'thisDataMax', 'getThisPBar', 'getAllPBar', 'getAllPerc', 'getAllCount', 'getAllTotal'];

            for (var _i8 = 0, _dlProgNumArr = dlProgNumArr; _i8 < _dlProgNumArr.length; _i8++) {
              var thisProgVal = _dlProgNumArr[_i8];
              this[thisProgVal] = 0;
            }
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "rerunDLProcess",
          value: function rerunDLProcess() {
            var _this49 = this;

            this.logger.info('[Modal|FirstRun|rerunDLProcess] (Listening)...');
            var rrSub = this.evServ.subscribe('setAuthGVarsDone', function () {
              _this49.logger.info('[Modal|FirstRun|rerunDLProcess|setAuthGVarsDone] (EVENT PUBLISHED) - Rerunning DL Process...');

              rrSub.unsubscribe();

              _this49.startDownloadProcess();
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "startDownloadProcess",
          value: function startDownloadProcess() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee78() {
              var _this50 = this;

              var myAniCSS, dlRecListArr, dlMyListArr, dlRecTotalNoRecords, dlRecCount, startDLResources, startDLMy, doDLCompleted;
              return regeneratorRuntime.wrap(function _callee78$(_context78) {
                while (1) {
                  switch (_context78.prev = _context78.next) {
                    case 0:
                      this.logger.info('[Modal|FirstRun|startDownloadProcess] ()...');

                      if (!this.dlDidComplete) {
                        _context78.next = 4;
                        break;
                      }

                      this.logger.info('[Modal|firstRun|startDownloadProcess] (STOP!) this.dlDidComplete=true | Preventing RERUN - return.');
                      return _context78.abrupt("return");

                    case 4:
                      ;

                      myAniCSS = function myAniCSS(jqEle, animName) {
                        return new Promise(function (resolve) {
                          var animClassStr = 'animate__animated animate__' + animName + ' animate__faster';
                          jquery__WEBPACK_IMPORTED_MODULE_20__(jqEle).addClass(animClassStr).on('animationend', function () {
                            jquery__WEBPACK_IMPORTED_MODULE_20__(jqEle).removeClass(animClassStr);
                            resolve('done');
                          });
                        });
                      };

                      dlRecListArr = [];
                      this.selectDataScope === 'all' ? dlRecListArr = this.recordsDefaultOpsArr : dlRecListArr = this.recordsUserOptsArr;
                      dlRecListArr = dlRecListArr.filter(function (x) {
                        return !x['disabled'] && x['checked'] && x['value'] > 0;
                      });
                      dlMyListArr = this.allMyEPDataArr;
                      dlMyListArr = dlMyListArr.filter(function (x) {
                        return x['count'] > 0 && !_services_baseDB__WEBPACK_IMPORTED_MODULE_9__.frResMyCombo.includes(x['name'].charAt(0).toUpperCase() + x['name'].slice(1));
                      });
                      dlRecTotalNoRecords = (0, lodash__WEBPACK_IMPORTED_MODULE_19__.sumBy)(dlRecListArr, 'value') + (0, lodash__WEBPACK_IMPORTED_MODULE_19__.sumBy)(dlMyListArr, 'count');
                      this.getAllTotal = dlRecListArr.length + dlMyListArr.length;
                      dlRecCount = 0;
                      this.logger.info('[Modal|FirstRun|startDownloadProcess] ▶️ (RecordsDL) STARTED:');
                      this.logger.info(' - Scope = "' + this.selectDataScope.toUpperCase() + '"');
                      this.logger.info(' - EndPs = ' + dlRecListArr.length + ' (Res) + ' + dlMyListArr.length + ' (My) = ' + this.getAllTotal + ' (Total)');
                      myAniCSS('.dlprogress-subheader-wrapper', 'zoomIn'); // DOWNLOAD - Resources ------------------------------------------------------------

                      startDLResources = function startDLResources() {
                        _this50.dloadInProgress = true;
                        _this50.showMoreOpts = false;
                        _this50.dlBoxInProgress = true;
                        _this50.dlBoxError = false;
                        _this50.dlBoxSuccess = false;
                        var allTSArr = [];

                        _this50.evServ.subscribe('frDLResItems', function (thisRecRespData) {
                          return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this50, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee73() {
                            var _this51 = this;

                            var has401, stopDueErr, baseRecRespData, resDIds, myDArr, myDIds, mMAvail, i, insDBDataRes, insResSym, rosArr, ttlRosRecs, _i9, tsRId, _yield$this$shttp$sen, _status, data, error, calcThisPBar;

                            return regeneratorRuntime.wrap(function _callee73$(_context73) {
                              while (1) {
                                switch (_context73.prev = _context73.next) {
                                  case 0:
                                    _context73.t0 = thisRecRespData.stage;
                                    _context73.next = _context73.t0 === 'error' ? 3 : _context73.t0 === 'update' ? 13 : _context73.t0 === 'end' ? 16 : 81;
                                    break;

                                  case 3:
                                    this.dlErrorCount++;
                                    this.clearDLProgress();
                                    this.dlBoxInProgress = false;
                                    this.dlBoxError = true;
                                    this.dlBoxSuccess = false;
                                    thisRecRespData.error[0].statusCode === 401 ? has401 = true : has401 = false;

                                    stopDueErr = function stopDueErr() {
                                      return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this51, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee72() {
                                        var _yield$_capacitor_dia8, value;

                                        return regeneratorRuntime.wrap(function _callee72$(_context72) {
                                          while (1) {
                                            switch (_context72.prev = _context72.next) {
                                              case 0:
                                                this.evServ.destroy('frDLResItems');
                                                this.evServ.destroy('frDLMyItems');
                                                _context72.next = 4;
                                                return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_5__.Dialog.confirm({
                                                  title: 'Download Error',
                                                  message: 'Sheriff failed to download core data it needs to complete setup. Check your connection to the internet and device permissions and try again.'
                                                });

                                              case 4:
                                                _yield$_capacitor_dia8 = _context72.sent;
                                                value = _yield$_capacitor_dia8.value;

                                                if (value || !value) {
                                                  _capacitor_app__WEBPACK_IMPORTED_MODULE_7__.App.exitApp();
                                                }

                                              case 7:
                                              case "end":
                                                return _context72.stop();
                                            }
                                          }
                                        }, _callee72, this);
                                      }));
                                    };

                                    if (has401) {
                                      if (this.dlErrorCount < 2) {
                                        this.rerunDLProcess;
                                        setTimeout(function () {
                                          _this51.deputy.doRefreshToken(_this51.deputy.Client.auth);
                                        }, 500);
                                      } else {
                                        stopDueErr();
                                      }
                                    } else {
                                      stopDueErr();
                                    }

                                    ;
                                    return _context73.abrupt("break", 81);

                                  case 13:
                                    this.thisDataValue = thisRecRespData.thisDataValue;
                                    this.getThisPBar = thisRecRespData.getThisPBar;
                                    return _context73.abrupt("break", 81);

                                  case 16:
                                    baseRecRespData = thisRecRespData.data;

                                    if (_services_baseDB__WEBPACK_IMPORTED_MODULE_9__.frResMyCombo.includes(thisRecRespData.recEPName)) {
                                      this.logger.info('[Modal|FR|Dl] - ' + thisRecRespData.recEPName + ' [FOUND] in "frResMyCombo" Array - Checking for Additional "My" Items...');
                                      resDIds = baseRecRespData.map(function (o) {
                                        return o.Id;
                                      });
                                      myDArr = [], myDIds = [];
                                      mMAvail = this.allMyEPDataArr.filter(function (mO) {
                                        return mO.name === String(thisRecRespData.recEPName.toLowerCase());
                                      });
                                      mMAvail.length > 0 && mMAvail[0].count > 0 ? myDArr = mMAvail[0].data : myDArr = [];

                                      if (myDArr.length > 0) {
                                        myDIds = myDArr.map(function (o) {
                                          return o.Id;
                                        });

                                        for (i = 0; i < myDIds.length; i++) {
                                          if (!resDIds.includes(myDIds[i])) {
                                            baseRecRespData.push(myDArr[i]);
                                            this.logger.info('[Modal|FR|DL] ➕ Added (My) Item #' + myDIds[i] + ' to ' + thisRecRespData.recEPName);
                                          } else {
                                            this.logger.info('[Modal|FR|DL] Skipping Pre-existing (My) Item.');
                                          }
                                        }

                                        ;
                                      }

                                      ;

                                      if (thisRecRespData.recEPName === 'Timesheet') {
                                        allTSArr = baseRecRespData;
                                      }

                                      ;
                                    }

                                    ;
                                    _context73.next = 21;
                                    return this.sqlServ.insDPTblSet(thisRecRespData.recEPName, baseRecRespData);

                                  case 21:
                                    insDBDataRes = _context73.sent;
                                    insDBDataRes ? insResSym = '🟢' : insResSym = '🔴';
                                    this.logger.info('[Modal|firstRun|startDownloadProcess] 📓 (Records) RESOURCE | 🔀INSERT >>> ' + thisRecRespData.recEPName + ' ' + insResSym);
                                    dlRecCount++;
                                    dlRecTotalNoRecords -= thisRecRespData.records;

                                    if (!(dlRecCount < dlRecListArr.length)) {
                                      _context73.next = 74;
                                      break;
                                    }

                                    this.getAllPBar = (dlRecCount / this.getAllTotal + Number.EPSILON) * 100 / 100;
                                    this.getAllPerc = Math.round(dlRecCount / this.getAllTotal * 100);
                                    this.getAllCount = dlRecCount;
                                    this.nowDataTarget = dlRecListArr[dlRecCount].ep.match(/[A-Z][a-z]+|[0-9]+/g).join(' ');
                                    this.logger.info('[Modal|FirstRun|startDownloadProcess] 📓 (Records) RESOURCE | 🔽DOWNLOAD >>> ' + dlRecListArr[dlRecCount].ep + '...');

                                    if (!(dlRecListArr[dlRecCount].ep !== 'Roster')) {
                                      _context73.next = 39;
                                      break;
                                    }

                                    this.thisDataValue = 0;
                                    this.getThisPBar = 0;
                                    this.thisDataMax = dlRecListArr[dlRecCount].value;
                                    this.deputy.frDLResItems(dlRecCount + 1, this.getAllTotal, dlRecListArr[dlRecCount].ep, dlRecListArr[dlRecCount].max, dlRecListArr[dlRecCount].value);
                                    _context73.next = 72;
                                    break;

                                  case 39:
                                    rosArr = [], ttlRosRecs = 0;
                                    this.thisDataMax = 0;
                                    this.thisDataValue = 0;
                                    this.getThisPBar = 0;
                                    ttlRosRecs = allTSArr.length;
                                    this.thisDataMax = ttlRosRecs;
                                    _i9 = 0;

                                  case 46:
                                    if (!(_i9 < allTSArr.length)) {
                                      _context73.next = 69;
                                      break;
                                    }

                                    tsRId = allTSArr[_i9]['Roster'];

                                    if (!(tsRId !== null && tsRId !== 0)) {
                                      _context73.next = 63;
                                      break;
                                    }

                                    _context73.prev = 49;
                                    _context73.next = 52;
                                    return this.shttp.sendRequest(this.deputy.Client.apiUrl + 'supervise/roster/' + tsRId, {
                                      method: 'get',
                                      responseType: 'json'
                                    });

                                  case 52:
                                    _yield$this$shttp$sen = _context73.sent;
                                    _status = _yield$this$shttp$sen.status;
                                    data = _yield$this$shttp$sen.data;
                                    error = _yield$this$shttp$sen.error;

                                    if (!error && _status === 200) {
                                      rosArr.push(data);
                                    }

                                    _context73.next = 62;
                                    break;

                                  case 59:
                                    _context73.prev = 59;
                                    _context73.t1 = _context73["catch"](49);
                                    console.log(JSON.stringify(_context73.t1));

                                  case 62:
                                    ;

                                  case 63:
                                    ;
                                    calcThisPBar = (_i9 / ttlRosRecs).toFixed(2);
                                    this.evServ.publish('frDLResItems', {
                                      stage: 'update',
                                      thisDataValue: _i9,
                                      getThisPBar: calcThisPBar
                                    });

                                  case 66:
                                    _i9++;
                                    _context73.next = 46;
                                    break;

                                  case 69:
                                    ;
                                    this.evServ.publish('frDLResItems', {
                                      stage: 'end',
                                      recEPName: 'Roster',
                                      records: rosArr.length,
                                      data: rosArr
                                    });
                                    return _context73.abrupt("break", 81);

                                  case 72:
                                    _context73.next = 81;
                                    break;

                                  case 74:
                                    this.nowDataTarget = '';
                                    this.getAllPBar = (dlRecCount / this.getAllTotal + Number.EPSILON) * 100 / 100;
                                    this.getAllPerc = Math.round(dlRecCount / this.getAllTotal * 100);
                                    this.getAllCount = dlRecCount;
                                    this.evServ.destroy('frDLResItems');
                                    startDLMy();
                                    return _context73.abrupt("break", 81);

                                  case 81:
                                  case "end":
                                    return _context73.stop();
                                }
                              }
                            }, _callee73, this, [[49, 59]]);
                          }));
                        });

                        _this50.nowDataTarget = dlRecListArr[dlRecCount].ep.match(/[A-Z][a-z]+|[0-9]+/g).join(' ');
                        _this50.thisDataValue = 0;
                        _this50.thisDataMax = dlRecListArr[dlRecCount].value;

                        _this50.logger.info('[Modal|FirstRun|startDownloadProcess] 📓 (Records) RESOURCE | 🔽DOWNLOAD >>> ' + dlRecListArr[dlRecCount].ep + '...');

                        _this50.deputy.frDLResItems(dlRecCount + 1, _this50.getAllTotal, dlRecListArr[dlRecCount].ep, dlRecListArr[dlRecCount].max, dlRecListArr[dlRecCount].value);
                      }; // DOWNLOAD - My ------------------------------------------------------------------


                      startDLMy = function startDLMy() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this50, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee74() {
                          var _this52 = this;

                          var finishMy, ttlOtherMyRecs, orsMyDoneCount, i, myEPO, mName, mCount, mData, pplLocalImgArr, _i10, rawColO, finalN, rawN, _yield$this$fsServ$dl, result, uri, size, mtime, sLIRes, insDBDataRes, insResSym, myI, _insDBDataRes, _insResSym;

                          return regeneratorRuntime.wrap(function _callee74$(_context74) {
                            while (1) {
                              switch (_context74.prev = _context74.next) {
                                case 0:
                                  finishMy = function finishMy() {
                                    _this52.logger.info('[Modal|firstRun|DL] 📓 (Records) OTHER MY | ✅ DOWNLOAD >>> ' + ttlOtherMyRecs + ' Remaining | FINISHED.');

                                    _this52.nowDataTarget = 'Completed';
                                    _this52.thisDataMax = -1;
                                    _this52.thisDataValue = -1;
                                    _this52.getThisPBar = 1;
                                    _this52.getAllPBar = 1;
                                    _this52.getAllCount = dlRecCount;
                                    _this52.getAllPerc = 100;
                                    _this52.dlMyRunning = false;
                                    doDLCompleted(false);
                                  };

                                  ttlOtherMyRecs = dlMyListArr.length;
                                  orsMyDoneCount = 0;

                                  if (!(ttlOtherMyRecs > 0)) {
                                    _context74.next = 119;
                                    break;
                                  }

                                  // any of colleague,leave||notification||unavail
                                  this.logger.info('[Modal|firstRun|DL] 📓 (Records) OTHER MY | FOUND ' + dlMyListArr.length + ' >>> Processing...');
                                  i = 0;

                                case 6:
                                  if (!(i < dlMyListArr.length)) {
                                    _context74.next = 115;
                                    break;
                                  }

                                  myEPO = dlMyListArr[i];
                                  mName = myEPO.name;
                                  mCount = myEPO.count;
                                  mData = myEPO.data;
                                  this.logger.info('[Modal|firstRun|DL] 📓 (Records) OTHER MY | Starting "' + mName + '" (' + i + '/' + ttlOtherMyRecs + ') >>> ' + mCount + ' Records...');

                                  if (!(mName === 'colleague')) {
                                    _context74.next = 79;
                                    break;
                                  }

                                  if (!(!myEPO.error && myEPO.type === 'array')) {
                                    _context74.next = 69;
                                    break;
                                  }

                                  this.logger.info('[Modal|firstRun|DL] 📓 (Records) OTHER MY | colleague | FOUND [' + mCount + '] 🧑s');
                                  this.nowDataTarget = 'Colleague';
                                  this.thisDataValue = 0;
                                  this.thisDataMax = mCount;
                                  this.getThisPBar = 0;
                                  pplLocalImgArr = [];
                                  _i10 = 0;

                                case 21:
                                  if (!(_i10 < mData.length)) {
                                    _context74.next = 54;
                                    break;
                                  }

                                  rawColO = mData[_i10];

                                  if (!(rawColO.hasOwnProperty('Photo') && rawColO.Photo.length > 8)) {
                                    _context74.next = 46;
                                    break;
                                  }

                                  finalN = void 0;
                                  rawN = rawColO.Photo.split('?')[0].split('/')[rawColO.Photo.split('?')[0].split('/').length - 1];

                                  if (rawN === 'avatar') {
                                    finalN = 'avatar' + String(rawColO.EmpId);
                                  } else {
                                    finalN = 'avatar' + String(rawColO.EmpId) + '.' + rawN.split('.')[1];
                                  }

                                  ;
                                  _context74.next = 30;
                                  return this.fsServ.dlImage4SQLite(String(rawColO.Photo), finalN);

                                case 30:
                                  _yield$this$fsServ$dl = _context74.sent;
                                  result = _yield$this$fsServ$dl.result;
                                  uri = _yield$this$fsServ$dl.uri;
                                  size = _yield$this$fsServ$dl.size;
                                  mtime = _yield$this$fsServ$dl.mtime;

                                  if (!result) {
                                    _context74.next = 42;
                                    break;
                                  }

                                  _context74.next = 38;
                                  return this.sqlServ.setLocalImg(finalN, uri, size, mtime);

                                case 38:
                                  sLIRes = _context74.sent;

                                  if (sLIRes) {
                                    this.convImgs.push(uri);
                                    rawColO.Photo = uri;
                                    pplLocalImgArr.push(rawColO);
                                  } else {
                                    this.convImgs.push(rawColO.Photo);
                                    pplLocalImgArr.push(rawColO);
                                  }

                                  _context74.next = 44;
                                  break;

                                case 42:
                                  rawColO.Photo;
                                  pplLocalImgArr.push(rawColO);

                                case 44:
                                  _context74.next = 48;
                                  break;

                                case 46:
                                  rawColO.Photo;
                                  pplLocalImgArr.push(rawColO);

                                case 48:
                                  ;
                                  this.thisDataValue = Number(_i10 + 1);
                                  this.getThisPBar = (this.thisDataValue / mCount + Number.EPSILON) * 100 / 100;

                                case 51:
                                  _i10++;
                                  _context74.next = 21;
                                  break;

                                case 54:
                                  ;
                                  _context74.next = 57;
                                  return this.sqlServ.insDPTblSet(mName, pplLocalImgArr);

                                case 57:
                                  insDBDataRes = _context74.sent;
                                  insResSym = void 0;
                                  insDBDataRes ? insResSym = '🟢' : insResSym = '🔴';
                                  this.logger.info('[Modal|firstRun|DL] 📓 (Records) MY | 🔀INSERT🧑 >>> ' + mName + ' SET ' + insResSym);
                                  orsMyDoneCount++;
                                  dlRecCount++;
                                  this.getThisPBar = 1;
                                  dlRecTotalNoRecords -= mCount;
                                  this.getAllPerc = Math.round(dlRecCount / this.getAllTotal * 100);
                                  this.getAllPBar = (dlRecCount / this.getAllTotal + Number.EPSILON) * 100 / 100;
                                  _context74.next = 77;
                                  break;

                                case 69:
                                  this.nowDataTarget = 'Skipped';
                                  this.thisDataValue = -1;
                                  this.thisDataMax = -1;
                                  this.getThisPBar = 1;
                                  this.getAllTotal--;
                                  this.getAllPerc = Math.round(dlRecCount / this.getAllTotal * 100);
                                  this.getAllPBar = (dlRecCount / this.getAllTotal + Number.EPSILON) * 100 / 100;
                                  this.logger.info('[Modal|firstRun|DL] 📓 (Records) OTHER MY | ❌ ' + mName + ' Obj error=true||type!==Array');

                                case 77:
                                  _context74.next = 112;
                                  break;

                                case 79:
                                  if (!(mName === 'leave' || 'notification' || 'unavail')) {
                                    _context74.next = 112;
                                    break;
                                  }

                                  if (!(!myEPO.error && myEPO.type === 'array')) {
                                    _context74.next = 104;
                                    break;
                                  }

                                  myI = void 0;
                                  mName === 'name' ? myI = '🤷' : mName === 'leave' ? myI = '🏝️' : myI = '🔔';
                                  this.logger.info('[Modal|firstRun|DL] 📓 (Records) OTHER MY | ' + mName + ' | FOUND [' + mCount + '] ' + myI + 's');
                                  this.nowDataTarget = mName.charAt(0).toUpperCase() + mName.slice(1);
                                  this.thisDataValue = 0;
                                  this.thisDataMax = mCount;
                                  this.getThisPBar = 0;
                                  _context74.next = 90;
                                  return this.sqlServ.insDPTblSet(mName, mData);

                                case 90:
                                  _insDBDataRes = _context74.sent;
                                  _insResSym = void 0;
                                  _insDBDataRes ? _insResSym = '🟢' : _insResSym = '🔴';
                                  this.logger.info('[Modal|firstRun|DL] 📓 (Records) MY | 🔀INSERT' + myI + ' >>> ' + mName + ' SET ' + _insResSym);
                                  this.thisDataValue = mCount;
                                  this.getThisPBar = 1;
                                  orsMyDoneCount++;
                                  dlRecCount++;
                                  this.getThisPBar = 1;
                                  dlRecTotalNoRecords -= mCount;
                                  this.getAllPerc = Math.round(dlRecCount / this.getAllTotal * 100);
                                  this.getAllPBar = (dlRecCount / this.getAllTotal + Number.EPSILON) * 100 / 100;
                                  _context74.next = 112;
                                  break;

                                case 104:
                                  this.nowDataTarget = 'Skipped';
                                  this.thisDataValue = -1;
                                  this.thisDataMax = -1;
                                  this.getThisPBar = 1;
                                  this.getAllTotal--;
                                  this.getAllPerc = Math.round(dlRecCount / this.getAllTotal * 100);
                                  this.getAllPBar = (dlRecCount / this.getAllTotal + Number.EPSILON) * 100 / 100;
                                  this.logger.info('[Modal|firstRun|DL] 📓 (Records) OTHER MY | ❌ ' + mName + ' Obj error=true||type!==Array');

                                case 112:
                                  i++;
                                  _context74.next = 6;
                                  break;

                                case 115:
                                  ;
                                  finishMy();
                                  _context74.next = 120;
                                  break;

                                case 119:
                                  finishMy();

                                case 120:
                                case "end":
                                  return _context74.stop();
                              }
                            }
                          }, _callee74, this);
                        }));
                      }; // DOWNLOAD - Finished ---------------------------------------------------------------


                      doDLCompleted = function doDLCompleted(impBU) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this50, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee76() {
                          var _this53 = this;

                          var dbHasSett, getSettRes, settObj, dlDoneCalPermStatus;
                          return regeneratorRuntime.wrap(function _callee76$(_context76) {
                            while (1) {
                              switch (_context76.prev = _context76.next) {
                                case 0:
                                  this.finalModalData.dlDone = true;
                                  this.dlDidComplete = true;
                                  this.dloadInProgress = false;
                                  this.dlBoxInProgress = false;
                                  this.dlBoxError = false;

                                  if (impBU) {
                                    _context76.next = 23;
                                    break;
                                  }

                                  this.nowDataTarget = '';
                                  this.thisDataValue = 0;
                                  this.thisDataMax = 0;
                                  this.getAllPBar = 1;
                                  this.getAllPerc = 100;
                                  this.getAllCount = this.getAllTotal;
                                  this.dlBoxSuccess = true;
                                  this.dlMyRunning = false;
                                  this.dbImportDone = false;
                                  this.finalModalData.dbImported = false;
                                  jquery__WEBPACK_IMPORTED_MODULE_20__('#firstrun-download-progress-bar-perc-overlay').css('color', 'var(--ion-color-success)');
                                  jquery__WEBPACK_IMPORTED_MODULE_20__('.frpbar').css('--progress-background', 'var(--ion-color-success)');
                                  jquery__WEBPACK_IMPORTED_MODULE_20__('.xoy').css('color', 'var(--ion-color-success)');
                                  this.evServ.subscribe('dbbuBlob', function (blob) {
                                    _this53.evServ.destroy('dbbuBlob');

                                    _this53.evServ.subscribe('dbbuULProg', function (ulD) {
                                      if (ulD.event === 'successData') {
                                        _this53.evServ.destroy('dbbuULProg');

                                        _this53.logger.info('[firstRun|uploadDBBU] (SUCCESS) - Uploaded DBBU file to FireStorage');
                                      }

                                      ;

                                      if (ulD.event === 'errorData') {
                                        _this53.evServ.destroy('dbbuULProg');

                                        _this53.logger.info('[firstRun|uploadDBBU] (ERROR) - Failed to Upload DBBU file to FireStorage');
                                      }

                                      ;
                                    });

                                    _this53.fireServ.uploadFSDBBU(blob);
                                  });
                                  this.fsServ.getFireDBBUFile(this.deputy.uUK);
                                  _context76.next = 35;
                                  break;

                                case 23:
                                  this.dbImportDone = true;
                                  this.finalModalData.dbImported = true;
                                  this.showMoreOpts = false;
                                  this.dlBoxSuccess = false;
                                  _context76.next = 29;
                                  return this.sqlServ.hasSettings();

                                case 29:
                                  dbHasSett = _context76.sent;

                                  if (!dbHasSett) {
                                    _context76.next = 35;
                                    break;
                                  }

                                  _context76.next = 33;
                                  return this.sqlServ.getSettings();

                                case 33:
                                  getSettRes = _context76.sent;

                                  if (getSettRes.result) {
                                    settObj = getSettRes.data;

                                    if (settObj.hasOwnProperty('alerts') && settObj.alerts.hasOwnProperty('options')) {
                                      this.logger.info('[firstRun|RestoreSettingsObj] (🟢SUCCESS) - Imported Settings Found in UDB');
                                      this.finalModalData.alertOpts = settObj.alerts.options;
                                    }
                                  }

                                case 35:
                                  ;
                                  _context76.next = 38;
                                  return this.calServ.checkCalPerms();

                                case 38:
                                  dlDoneCalPermStatus = _context76.sent;
                                  this.slideWithNav.lockSwipes(false);
                                  setTimeout(function () {
                                    _this53.slideWithNav.slideTo(2, 500, true);

                                    if (!_this53.usingDefaults && _this53.finalModalData.alertOpts.alertMethods.value.calendar && !dlDoneCalPermStatus) {
                                      setTimeout(function () {
                                        return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this53, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee75() {
                                          return regeneratorRuntime.wrap(function _callee75$(_context75) {
                                            while (1) {
                                              switch (_context75.prev = _context75.next) {
                                                case 0:
                                                  this.calServ.reqCalPerms();

                                                case 1:
                                                case "end":
                                                  return _context75.stop();
                                              }
                                            }
                                          }, _callee75, this);
                                        }));
                                      }, 1500);
                                    }

                                    ;
                                  }, 1000);

                                case 41:
                                case "end":
                                  return _context76.stop();
                              }
                            }
                          }, _callee76, this);
                        }));
                      }; // DOWNLOAD - Start -----------------------------------------------------------------


                      this.evServ.subscribe('preDLChecks', function (didImport) {
                        _this50.evServ.destroy('preDLChecks');

                        _this50.logger.info('[Modal|firstRun|StartDl|preDLChecks] (didImport?): ' + didImport);

                        if (didImport) {
                          _this50.dbImportDone = true;
                          doDLCompleted(true);
                        } else {
                          _this50.dbImportDone = false;
                          startDLResources();
                        }

                        ;

                        _this50.evServ.subscribe('dlConvAvasFinished', function (avaDLRes) {
                          return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this50, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee77() {
                            var deetAvaO, meAvaStatRes, meUriRes, meAvaLIRes, workAvaStatRes, workUriRes, workAvaLIRes;
                            return regeneratorRuntime.wrap(function _callee77$(_context77) {
                              while (1) {
                                switch (_context77.prev = _context77.next) {
                                  case 0:
                                    if (!avaDLRes.result) {
                                      _context77.next = 29;
                                      break;
                                    }

                                    deetAvaO = {
                                      me: '',
                                      work: ''
                                    };
                                    _context77.next = 4;
                                    return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_17__.Filesystem.stat({
                                      path: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/meAvatar'
                                    });

                                  case 4:
                                    meAvaStatRes = _context77.sent;

                                    if (!meAvaStatRes) {
                                      _context77.next = 13;
                                      break;
                                    }

                                    meUriRes = _capacitor_core__WEBPACK_IMPORTED_MODULE_3__.Capacitor.convertFileSrc(meAvaStatRes.uri);
                                    _context77.next = 9;
                                    return this.sqlServ.setLocalImg('meAvatar', meUriRes, meAvaStatRes.size, meAvaStatRes.mtime);

                                  case 9:
                                    meAvaLIRes = _context77.sent;

                                    if (meAvaLIRes) {
                                      this.convImgs.push(meUriRes);
                                      deetAvaO.me = meUriRes;
                                      this.dS.setAvas(deetAvaO);
                                      this.storeServ.setItem(this.deputy.uUK + 'meAvatar', deetAvaO.me);
                                    } else {
                                      this.logger.info('[Modal|frModal|DL|AvaConv] Failed to Insert meAvatar >>> SQLite.');
                                    }

                                    _context77.next = 14;
                                    break;

                                  case 13:
                                    this.logger.info('[Modal|frModal|DL|AvaConv] Failed to Stat meAvatar File - Skipped SQLite Insert.');

                                  case 14:
                                    ;
                                    _context77.next = 17;
                                    return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_17__.Filesystem.stat({
                                      path: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/workAvatar'
                                    });

                                  case 17:
                                    workAvaStatRes = _context77.sent;

                                    if (!workAvaStatRes) {
                                      _context77.next = 26;
                                      break;
                                    }

                                    workUriRes = _capacitor_core__WEBPACK_IMPORTED_MODULE_3__.Capacitor.convertFileSrc(workAvaStatRes.uri);
                                    _context77.next = 22;
                                    return this.sqlServ.setLocalImg('workAvatar', workUriRes, workAvaStatRes.size, workAvaStatRes.mtime);

                                  case 22:
                                    workAvaLIRes = _context77.sent;

                                    if (workAvaLIRes) {
                                      this.convImgs.push(workUriRes);
                                      deetAvaO.work = workUriRes;
                                      this.dS.setAvas(deetAvaO);
                                      this.storeServ.setItem(this.deputy.uUK + 'workAvatar', deetAvaO.work);
                                    } else {
                                      this.logger.info('[Modal|frModal|DL|AvaConv] Failed to Insert workAvatar >>> SQLite.');
                                    }

                                    _context77.next = 27;
                                    break;

                                  case 26:
                                    this.logger.info('[Modal|frModal|DL|AvaConv] Failed to Stat workAvatar File - Skipped SQLite Insert.');

                                  case 27:
                                    _context77.next = 30;
                                    break;

                                  case 29:
                                    this.logger.info('[Modal|frModal|DL|AvaConv] Failed to DL/Convert Me/Work Avas - Skipping SQLite Inserts.');

                                  case 30:
                                  case "end":
                                    return _context77.stop();
                                }
                              }
                            }, _callee77, this);
                          }));
                        });

                        _this50.deputy.dlConvertMeWorkAvas();
                      });
                      this.slideWithNav.lockSwipes(true);

                      if (this.noBackupWillFail && this.mustRestoreStatus === 'success') {
                        this.evServ.publish('preDLChecks', true);
                      } else {
                        this.initDB(false);
                      }

                    case 24:
                    case "end":
                      return _context78.stop();
                  }
                }
              }, _callee78, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "useDefaults",
          value: function useDefaults() {
            var _this54 = this;

            this.logger.info('[Modal|firstRun|restoreBUStart] ()...');
            this.doShowPager = false;
            this.lockPrev = true;
            this.lockNext = true;
            this.usingDefaults = true;
            this.evServ.subscribe('backupCheckIsDone', function () {
              if (_this54.hasBUDB) {
                _this54.restoreBUStart();
              } else {
                _this54.freshStartDLStart('all');
              }

              ;

              _this54.evServ.subscribe('defaultAutoFinish', function () {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this54, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee79() {
                  var _this55 = this;

                  var hasCalPerms, calPResSub;
                  return regeneratorRuntime.wrap(function _callee79$(_context79) {
                    while (1) {
                      switch (_context79.prev = _context79.next) {
                        case 0:
                          if (!this.finalModalData.alertOpts.alertMethods.value.calendar) {
                            _context79.next = 7;
                            break;
                          }

                          _context79.next = 3;
                          return this.calServ.checkCalPerms();

                        case 3:
                          hasCalPerms = _context79.sent;

                          if (!hasCalPerms) {
                            calPResSub = this.evServ.subscribe('myAppStateActive', function (tf) {
                              if (tf) {
                                setTimeout(function () {
                                  calPResSub.unsubscribe();

                                  _this55.firstRunCompleted();
                                }, 500);
                              }
                            });
                            setTimeout(function () {
                              _this55.calServ.reqCalPerms();
                            }, 500);
                          } else {
                            this.firstRunCompleted();
                          }

                          _context79.next = 8;
                          break;

                        case 7:
                          this.firstRunCompleted();

                        case 8:
                        case "end":
                          return _context79.stop();
                      }
                    }
                  }, _callee79, this);
                }));
              });
            });
            this.slideWithNav.slideNext(250, true);
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "restoreBUStart",
          value: function restoreBUStart() {
            this.logger.info('[Modal|firstRun|restoreBUStart] ()...');
            this.showMoreOpts = false;

            if (this.startFreshChecked) {
              this.startFreshChecked = false;
            }

            ;

            if (!this.hasBUDB) {
              this.hasBUDB = true;
            }

            ;

            if (!this.buDBChecked) {
              this.buDBChecked = true;
            }

            ;
            this.selectDataScope = 'all';
            this.startDownloadProcess();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "freshStartDLStart",
          value: function freshStartDLStart(fsMode) {
            this.logger.info('[Modal|firstRun|freshStartDLStart] (' + fsMode + ')...');
            this.showMoreOpts = false;

            if (this.buDBChecked) {
              this.buDBChecked = false;
            }

            ;

            if (!this.startFreshChecked) {
              this.startFreshChecked = true;
            }

            ;
            this.selectDataScope = fsMode;
            this.startDownloadProcess();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initDB",
          value: function initDB(mustImport) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee81() {
              var _this56 = this;

              var udbName, doInit;
              return regeneratorRuntime.wrap(function _callee81$(_context81) {
                while (1) {
                  switch (_context81.prev = _context81.next) {
                    case 0:
                      this.logger.info('[Modal|firstRun|initDB] ()...');
                      udbName = this.deputy.uUK + 'db';

                      doInit = function doInit(buImport) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this56, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee80() {
                          var _this57 = this;

                          var dbA, dbInitLoader;
                          return regeneratorRuntime.wrap(function _callee80$(_context80) {
                            while (1) {
                              switch (_context80.prev = _context80.next) {
                                case 0:
                                  this.logger.info('[firstRun|initDB->SQLServ] Running createUserDBConn(' + udbName + ',' + buImport + ') @ SQLiteService.');
                                  this.evServ.subscribe('uDBReady', function (isReady) {
                                    if (isReady === true) {
                                      _this57.loadCtrl.dismiss();

                                      _this57.evServ.publish('preDLChecks', buImport);
                                    } else {
                                      _capacitor_dialog__WEBPACK_IMPORTED_MODULE_5__.Dialog.alert({
                                        title: 'Database Error',
                                        message: 'Check you have granted (ALLOW) Sheriff file-system permissions and try again.',
                                        buttonTitle: 'OK'
                                      });
                                    }
                                  });
                                  buImport ? dbA = '🔽𝗜𝗠𝗣𝗢𝗥' : dbA = '▶️𝗖𝗥𝗘𝗔';
                                  _context80.next = 5;
                                  return this.loadCtrl.create({
                                    spinner: 'dots',
                                    cssClass: 'sheriff-loader-class',
                                    message: dbA + '𝗧𝗜𝗡𝗚 𝖣𝖺𝗍𝖺𝖻𝖺𝗌𝖾'
                                  });

                                case 5:
                                  dbInitLoader = _context80.sent;
                                  _context80.next = 8;
                                  return dbInitLoader.present();

                                case 8:
                                  this.sqlServ.createUserDBConn(udbName, buImport);

                                case 9:
                                case "end":
                                  return _context80.stop();
                              }
                            }
                          }, _callee80, this);
                        }));
                      };

                      if (this.hasBUDB && this.buDBChecked && !this.startFreshChecked) {
                        this.evServ.subscribe('dbCopyCheck', function (cR) {
                          _this56.evServ.destroy('dbCopyCheck');

                          if (mustImport) {
                            if (cR) {
                              _this56.sqlServ.createUserDBConn(udbName, true);
                            } else {
                              _this56.evServ.publish('uDBReady', false);
                            }
                          } else {
                            doInit(cR);
                          }
                        });
                        this.cpBuDb2App();
                      } else if (!this.buDBChecked && this.startFreshChecked) {
                        doInit(false);
                      }

                    case 4:
                    case "end":
                      return _context81.stop();
                  }
                }
              }, _callee81, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "cpBuDb2App",
          value: function cpBuDb2App() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee83() {
              var _this58 = this;

              var appDBDirPath, toC, sizeCheckLoop;
              return regeneratorRuntime.wrap(function _callee83$(_context83) {
                while (1) {
                  switch (_context83.prev = _context83.next) {
                    case 0:
                      this.logger.info('[Modal|firstRun|copyCheckDBFile] ()...');
                      appDBDirPath = '/data/data/dev.zer0ne.sheriff/databases';
                      _context83.next = 4;
                      return this.fsServ.stat(null, appDBDirPath);

                    case 4:
                      if (_context83.sent.result) {
                        _context83.next = 6;
                        break;
                      }

                      this.fsServ.mkdir(null, appDBDirPath);

                    case 6:
                      ;
                      this.fsServ.copyByPath(this.buDBUri, appDBDirPath + '/' + this.deputy.uUK + 'dbSQLite.db');
                      toC = 0;
                      sizeCheckLoop = setInterval(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this58, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee82() {
                          var isCopiedRes;
                          return regeneratorRuntime.wrap(function _callee82$(_context82) {
                            while (1) {
                              switch (_context82.prev = _context82.next) {
                                case 0:
                                  toC++;
                                  _context82.next = 3;
                                  return this.fsServ.stat(null, appDBDirPath + '/' + this.deputy.uUK + 'dbSQLite.db');

                                case 3:
                                  isCopiedRes = _context82.sent;

                                  if (isCopiedRes.result) {
                                    if (isCopiedRes.data.size === this.buDBSize) {
                                      clearInterval(sizeCheckLoop);
                                      this.evServ.publish('dbCopyCheck', true);
                                    }
                                  } else {
                                    clearInterval(sizeCheckLoop);
                                    this.evServ.publish('dbCopyCheck', false);
                                  }

                                  ;

                                  if (toC === 20) {
                                    clearInterval(sizeCheckLoop);
                                    this.evServ.publish('dbCopyCheck', false);
                                  }

                                case 7:
                                case "end":
                                  return _context82.stop();
                              }
                            }
                          }, _callee82, this);
                        }));
                      }, 250);

                    case 10:
                    case "end":
                      return _context83.stop();
                  }
                }
              }, _callee83, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "doMustImport",
          value: function doMustImport() {
            var _this59 = this;

            this.logger.info('[Modal|firstRun|doMustImport] ()...');
            this.evServ.subscribe('uDBReady', function (isReady) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this59, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee84() {
                var _this60 = this;

                var getWPRes, selByPortNo;
                return regeneratorRuntime.wrap(function _callee84$(_context84) {
                  while (1) {
                    switch (_context84.prev = _context84.next) {
                      case 0:
                        this.evServ.destroy('uDBReady');

                        if (!isReady) {
                          _context84.next = 9;
                          break;
                        }

                        this.mustRestoreStatus = 'loaded';
                        _context84.next = 5;
                        return this.sqlServ.getAllCompanies();

                      case 5:
                        getWPRes = _context84.sent;

                        if (getWPRes.length > 0) {
                          this.forceRestoreWPArr = getWPRes;
                          selByPortNo = (0, lodash__WEBPACK_IMPORTED_MODULE_19__.minBy)(getWPRes, 'Portfolio');
                          selByPortNo.Portfolio > 0 ? this.forceRestoreWP = selByPortNo : this.forceRestoreWP = getWPRes[0];
                          this.wpNoOf = 1;
                          this.frWorkplaceId = this.forceRestoreWP.Id;

                          if (this.forceRestoreWP.TradingName && !this.forceRestoreWP.CompanyName) {
                            this.forceRestoreWPName = this.forceRestoreWP.TradingName;
                          } else if (!this.forceRestoreWP.TradingName && this.forceRestoreWP.CompanyName) {
                            this.forceRestoreWPName = this.forceRestoreWP.CompanyName;
                          } else if (this.forceRestoreWP.TradingName && this.forceRestoreWP.CompanyName) {
                            this.forceRestoreWP.TradingName.length >= this.forceRestoreWP.CompanyName.length ? this.forceRestoreWPName = this.forceRestoreWP.TradingName : this.forceRestoreWPName = this.forceRestoreWP.CompanyName;
                          } else {
                            this.forceRestoreWPName = 'Unknown Company';
                          }

                          ;
                          this.mustRestoreStatus = 'success';
                          setTimeout(function () {
                            _this60.startDownloadProcess();
                          }, 500);
                        } else {
                          this.mustRestoreStatus = 'failed';
                        }

                        _context84.next = 10;
                        break;

                      case 9:
                        this.mustRestoreStatus = 'failed';

                      case 10:
                      case "end":
                        return _context84.stop();
                    }
                  }
                }, _callee84, this);
              }));
            });
            this.initDB(true);
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "niceBytes",
          value: function niceBytes(bytes) {
            var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
            if (bytes === 0) return 'empty';
            var k = 1024;
            var dm = decimals < 0 ? 0 : decimals;
            var sizes = ['Bytes', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
            var i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "checkAppFS",
          value: function checkAppFS() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee91() {
              var _this61 = this;

              var doDLBUDB, doDirCheck;
              return regeneratorRuntime.wrap(function _callee91$(_context91) {
                while (1) {
                  switch (_context91.prev = _context91.next) {
                    case 0:
                      this.logger.info('[Modal|firstRun|checkAppFS] ()...');

                      if (!this.checkFSAndBUOnce) {
                        doDLBUDB = function doDLBUDB() {
                          return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this61, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee89() {
                            var _this62 = this;

                            var checkFireBULoader;
                            return regeneratorRuntime.wrap(function _callee89$(_context89) {
                              while (1) {
                                switch (_context89.prev = _context89.next) {
                                  case 0:
                                    _context89.next = 2;
                                    return this.loadCtrl.create({
                                      spinner: 'dots',
                                      cssClass: ['sheriff-loader-class', 'fr-backupcheck-loader'],
                                      message: '𝘓𝘰𝘢𝘥𝘪𝘯𝘨 🗄️𝗥𝗘𝗖𝗢𝗥𝗗𝗦 𝖣𝖺𝗍𝖺'
                                    });

                                  case 2:
                                    checkFireBULoader = _context89.sent;
                                    _context89.next = 5;
                                    return checkFireBULoader.present();

                                  case 5:
                                    this.evServ.subscribe('checkFSDBBU', function (checkRes) {
                                      return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this62, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee88() {
                                        var _this63 = this;

                                        var buMeta;
                                        return regeneratorRuntime.wrap(function _callee88$(_context88) {
                                          while (1) {
                                            switch (_context88.prev = _context88.next) {
                                              case 0:
                                                this.evServ.destroy('checkFSDBBU');

                                                if (checkRes.result) {
                                                  buMeta = checkRes.data.meta;
                                                  this.evServ.subscribe('dlFSDBBU', function (dlRes) {
                                                    return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this63, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee86() {
                                                      var _this64 = this;

                                                      var buDate;
                                                      return regeneratorRuntime.wrap(function _callee86$(_context86) {
                                                        while (1) {
                                                          switch (_context86.prev = _context86.next) {
                                                            case 0:
                                                              this.evServ.destroy('dlFSDBBU');

                                                              if (dlRes.result) {
                                                                this.hasBUDB = true;
                                                                this.buDBUri = dlRes.uri;
                                                                this.buDBNiceFName = 'CloudBackup.db';
                                                                this.buDBSize = buMeta.size;
                                                                this.buDBFSize = this.niceBytes(buMeta.size);
                                                                buDate = new Date(buMeta.updated);
                                                                this.buDBModDate = this.dT.format(buDate, 'd MMM yyyy h:mmaaa');
                                                                this.buDBModAgo = this.dT.fDtN(buDate).replace('about', '≈');
                                                                this.logger.info('[firstRun|checkAppFS] Fire BUDB [FOUND!] (Last Mod: ' + this.buDBModDate + ' - ' + this.buDBModAgo + ')...');
                                                                checkFireBULoader.dismiss().then(function () {
                                                                  _this64.backupCheckIsDone = true;

                                                                  _this64.evServ.publish('backupCheckIsDone', true);

                                                                  if (_this64.noBackupWillFail) {
                                                                    _this64.doMustImport();
                                                                  }

                                                                  ;
                                                                });
                                                              } else {
                                                                this.logger.info('[firstRun|checkAppFS] Download Fire BUDB Failed.');
                                                                this.hasBUDB = false;
                                                                checkFireBULoader.dismiss().then(function () {
                                                                  return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this64, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee85() {
                                                                    var _yield$_capacitor_dia9, value;

                                                                    return regeneratorRuntime.wrap(function _callee85$(_context85) {
                                                                      while (1) {
                                                                        switch (_context85.prev = _context85.next) {
                                                                          case 0:
                                                                            this.backupCheckIsDone = true;
                                                                            this.evServ.publish('backupCheckIsDone', true);

                                                                            if (!this.noBackupWillFail) {
                                                                              _context85.next = 9;
                                                                              break;
                                                                            }

                                                                            _context85.next = 5;
                                                                            return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_5__.Dialog.confirm({
                                                                              title: 'No Backup Found',
                                                                              message: '- No Cloud Backup Found\n- No Workplaces Detected\nSheriff Setup cannot continue and will now EXIT'
                                                                            });

                                                                          case 5:
                                                                            _yield$_capacitor_dia9 = _context85.sent;
                                                                            value = _yield$_capacitor_dia9.value;

                                                                            if (value || !value) {
                                                                              _capacitor_app__WEBPACK_IMPORTED_MODULE_7__.App.exitApp();
                                                                            }

                                                                            ;

                                                                          case 9:
                                                                            ;

                                                                          case 10:
                                                                          case "end":
                                                                            return _context85.stop();
                                                                        }
                                                                      }
                                                                    }, _callee85, this);
                                                                  }));
                                                                });
                                                              }

                                                            case 2:
                                                            case "end":
                                                              return _context86.stop();
                                                          }
                                                        }
                                                      }, _callee86, this);
                                                    }));
                                                  });
                                                  this.fireServ.downloadFSDBBU(checkRes.data.dlurl);
                                                } else {
                                                  this.logger.info('[firstRun|checkAppFS] No Fire BUDB Found.');
                                                  this.hasBUDB = false;
                                                  checkFireBULoader.dismiss().then(function () {
                                                    return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this63, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee87() {
                                                      var _yield$_capacitor_dia10, value;

                                                      return regeneratorRuntime.wrap(function _callee87$(_context87) {
                                                        while (1) {
                                                          switch (_context87.prev = _context87.next) {
                                                            case 0:
                                                              this.backupCheckIsDone = true;
                                                              this.evServ.publish('backupCheckIsDone', true);

                                                              if (!this.noBackupWillFail) {
                                                                _context87.next = 9;
                                                                break;
                                                              }

                                                              _context87.next = 5;
                                                              return _capacitor_dialog__WEBPACK_IMPORTED_MODULE_5__.Dialog.confirm({
                                                                title: 'No Backup Found',
                                                                message: '- No Cloud Backup Found\n- No Workplaces Detected\nSheriff Setup cannot continue and will now EXIT'
                                                              });

                                                            case 5:
                                                              _yield$_capacitor_dia10 = _context87.sent;
                                                              value = _yield$_capacitor_dia10.value;

                                                              if (value || !value) {
                                                                _capacitor_app__WEBPACK_IMPORTED_MODULE_7__.App.exitApp();
                                                              }

                                                              ;

                                                            case 9:
                                                              ;

                                                            case 10:
                                                            case "end":
                                                              return _context87.stop();
                                                          }
                                                        }
                                                      }, _callee87, this);
                                                    }));
                                                  });
                                                }

                                              case 2:
                                              case "end":
                                                return _context88.stop();
                                            }
                                          }
                                        }, _callee88, this);
                                      }));
                                    });
                                    this.fireServ.checkFSDBBU();

                                  case 7:
                                  case "end":
                                    return _context89.stop();
                                }
                              }
                            }, _callee89, this);
                          }));
                        };

                        doDirCheck = function doDirCheck() {
                          return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this61, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee90() {
                            var hasBaseDataDir, hasBUDir, assetsDone, backupsDone, dbDone;
                            return regeneratorRuntime.wrap(function _callee90$(_context90) {
                              while (1) {
                                switch (_context90.prev = _context90.next) {
                                  case 0:
                                    _context90.next = 2;
                                    return this.fsServ.stat(this.fsServ.appFS, 'Sheriff');

                                  case 2:
                                    hasBaseDataDir = _context90.sent;

                                    if (hasBaseDataDir.result) {
                                      _context90.next = 24;
                                      break;
                                    }

                                    hasBUDir = false;
                                    this.logger.info('[firstRun|checkAppFS] Sheriff Base Dir Missing - Creating FS...');
                                    _context90.next = 8;
                                    return this.fsServ.mkdir(this.fsServ.appFS, 'Sheriff/assets');

                                  case 8:
                                    assetsDone = _context90.sent;

                                    if (assetsDone.result) {
                                      this.logger.info('[firstRun|checkAppFS] Sheriff/assets - OK.');
                                    } else {
                                      this.logger.info('[firstRun|checkAppFS] Sheriff/assets - FAILED.');
                                    }

                                    ;
                                    _context90.next = 13;
                                    return this.fsServ.mkdir(this.fsServ.appFS, 'Sheriff/backups');

                                  case 13:
                                    backupsDone = _context90.sent;

                                    if (backupsDone.result) {
                                      hasBUDir = true;
                                      this.logger.info('[firstRun|checkAppFS] Sheriff/backups - OK.');
                                    } else {
                                      hasBUDir = false;
                                      this.logger.info('[firstRun|checkAppFS] Sheriff/backups - FAILED.');
                                    }

                                    ;
                                    _context90.next = 18;
                                    return this.fsServ.mkdir(this.fsServ.appFS, 'Sheriff/db');

                                  case 18:
                                    dbDone = _context90.sent;

                                    if (dbDone.result) {
                                      this.logger.info('[firstRun|checkAppFS] Sheriff/db - OK.');
                                    } else {
                                      this.logger.info('[firstRun|checkAppFS] Sheriff/db - FAILED.');
                                    }

                                    ;

                                    if (hasBUDir) {
                                      this.logger.info('[firstRun|checkAppFS] SheriffFS BU Dir Created - Checking for BUDB...');
                                      doDLBUDB();
                                    }

                                    _context90.next = 26;
                                    break;

                                  case 24:
                                    this.logger.info('[firstRun|checkAppFS] SheriffFS Base Dir Found - Checking for BUDB...');
                                    doDLBUDB();

                                  case 26:
                                  case "end":
                                    return _context90.stop();
                                }
                              }
                            }, _callee90, this);
                          }));
                        };

                        this.checkFSAndBUOnce = true;

                        if (this.fsServ.fsIsReady) {
                          doDirCheck();
                        } else {
                          this.evServ.subscribe('fsPermsGranted', function (result) {
                            if (result) {
                              doDirCheck();
                            }
                          });
                          setTimeout(function () {
                            _this61.fsServ.initFS(_this61.deputy.uUK);
                          }, 500);
                        }
                      }

                    case 2:
                    case "end":
                      return _context91.stop();
                  }
                }
              }, _callee91, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "logoutAndSwitch",
          value: function logoutAndSwitch() {
            var _this65 = this;

            this.logger.info('[Modal|FirstRun|exitSheriff] ()...');
            var exitPromptOpts = {
              title: 'Logging out',
              message: 'ALL details/data will be cleared - are you sure?',
              okButtonTitle: 'Yes',
              cancelButtonTitle: 'Cancel'
            };

            _capacitor_dialog__WEBPACK_IMPORTED_MODULE_5__.Dialog.confirm(exitPromptOpts).then(function (wasConfirmed) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(_this65, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee92() {
                return regeneratorRuntime.wrap(function _callee92$(_context92) {
                  while (1) {
                    switch (_context92.prev = _context92.next) {
                      case 0:
                        if (!wasConfirmed.value) {
                          _context92.next = 3;
                          break;
                        }

                        _context92.next = 3;
                        return this.modalController.dismiss('logout');

                      case 3:
                      case "end":
                        return _context92.stop();
                    }
                  }
                }, _callee92, this);
              }));
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "exitSheriff",
          value: function exitSheriff() {
            this.logger.info('[Modal|FirstRun|exitSheriff] ()...');
            var exitPromptOpts = {
              title: 'Exiting Sheriff',
              message: 'You sure now?',
              okButtonTitle: 'Yes',
              cancelButtonTitle: 'Cancel'
            };

            _capacitor_dialog__WEBPACK_IMPORTED_MODULE_5__.Dialog.confirm(exitPromptOpts).then(function (wasConfirmed) {
              if (wasConfirmed.value) {
                _capacitor_app__WEBPACK_IMPORTED_MODULE_7__.App.exitApp();
              }
            });
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "firstRunCompleted",
          value: function firstRunCompleted() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee93() {
              var calPermsGtd;
              return regeneratorRuntime.wrap(function _callee93$(_context93) {
                while (1) {
                  switch (_context93.prev = _context93.next) {
                    case 0:
                      this.logger.info('[Modal|FirstRun|firstRunCompleted] ()...');
                      jquery__WEBPACK_IMPORTED_MODULE_20__('.sheriff-custom-firstload-outter-wrapper').css('display', 'flex');
                      this.finalModalData.dbImported = this.dbImportDone;
                      this.finalModalData.didDefaults = this.usingDefaults;

                      if (!this.finalModalData.alertOpts.alertMethods.value.calendar) {
                        _context93.next = 14;
                        break;
                      }

                      _context93.next = 7;
                      return this.calServ.checkCalPerms();

                    case 7:
                      calPermsGtd = _context93.sent;

                      if (!calPermsGtd) {
                        this.finalModalData.alertOpts.alertMethods.value.calendar = false;
                      }

                      ;
                      _context93.next = 12;
                      return this.modalController.dismiss(this.finalModalData);

                    case 12:
                      _context93.next = 16;
                      break;

                    case 14:
                      _context93.next = 16;
                      return this.modalController.dismiss(this.finalModalData);

                    case 16:
                    case "end":
                      return _context93.stop();
                  }
                }
              }, _callee93, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "slideNext",
          value: function slideNext(slideInst) {
            this.logger.info('[Modal|firstRun|slideNext] (⏩)...');
            slideInst.slideNext(500, true);
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "slidePrev",
          value: function slidePrev(slideInst) {
            this.logger.info('[Modal|firstRun|slidePrev] (⏪)...');
            slideInst.slidePrev(500, true);
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "slideDidChange",
          value: function slideDidChange(slideInst) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee94() {
              return regeneratorRuntime.wrap(function _callee94$(_context94) {
                while (1) {
                  switch (_context94.prev = _context94.next) {
                    case 0:
                      this.logger.info('[Modal|firstRun|slideDidChange] [✔️DID]Change ()...');
                      _context94.next = 3;
                      return slideInst.getActiveIndex();

                    case 3:
                      _context94.t0 = _context94.sent;
                      this.thisSlideNo = _context94.t0 + 1;
                      this.logger.info('[Modal|firstRun|slideDidChange] TO... this.thisSlideNo = 🔢' + this.thisSlideNo) + '🔢';
                      this.checkSlideConditions();
                      this.doPrevNextCheck();

                    case 8:
                    case "end":
                      return _context94.stop();
                  }
                }
              }, _callee94, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "checkSlideConditions",
          value: function checkSlideConditions() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee95() {
              var _this66 = this;

              var swInst, swTStartEv, swTEndEv, swipedir, startX, startY, distX, distY, threshold, restraint, allowedTime, elapsedTime, startTime;
              return regeneratorRuntime.wrap(function _callee95$(_context95) {
                while (1) {
                  switch (_context95.prev = _context95.next) {
                    case 0:
                      this.logger.info('[Modal|firstRun|checkSlideConditions] ()...');
                      jquery__WEBPACK_IMPORTED_MODULE_20__('.fr-featimg-wrapper.slide' + String(this.thisSlideNo)).fadeIn(1000);
                      _context95.next = 4;
                      return this.slideWithNav.getSwiper();

                    case 4:
                      swInst = _context95.sent;

                      if (this.thisSlideNo === 3) {
                        threshold = 150, restraint = 100, allowedTime = 300;
                        swTStartEv = swInst.on('touchStart', function (tStartData) {
                          var stObj = tStartData.changedTouches[0];
                          swipedir = 'none';
                          startX = stObj.pageX;
                          startY = stObj.pageY;
                          startTime = new Date().getTime();
                        });
                        swTEndEv = swInst.on('touchEnd', function (tEndData) {
                          var eTObj = tEndData.changedTouches[0];
                          distX = eTObj.pageX - startX;
                          distY = eTObj.pageY - startY;
                          elapsedTime = new Date().getTime() - startTime;

                          if (elapsedTime <= allowedTime) {
                            if (Math.abs(distX) >= threshold && Math.abs(distY) <= restraint) {
                              swipedir = distX < 0 ? 'left' : 'right';
                            } else if (Math.abs(distY) >= threshold && Math.abs(distX) <= restraint) {
                              swipedir = distY < 0 ? 'up' : 'down';
                            }
                          }

                          ;

                          if (swipedir === 'left') {
                            _this66.firstRunCompleted();
                          }
                        });
                      } else {
                        swInst.off('touchStart', swTStartEv);
                        swInst.off('touchEnd', swTEndEv);
                      }

                      ;

                    case 7:
                    case "end":
                      return _context95.stop();
                  }
                }
              }, _callee95, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "doPrevNextCheck",
          value: function doPrevNextCheck() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee96() {
              var _this67 = this;

              var lockPrev, lockNext;
              return regeneratorRuntime.wrap(function _callee96$(_context96) {
                while (1) {
                  switch (_context96.prev = _context96.next) {
                    case 0:
                      this.logger.info('[Modal|firstRun|doPrevNextCheck] ()...');

                      lockPrev = function lockPrev(tf) {
                        _this67.slideWithNav.lockSwipeToPrev(tf);

                        _this67.lockPrev = tf;

                        _this67.logger.info('[canPREV] - lockSwipeToPrev=' + tf + ' + this.lockPrev=' + tf + '...');
                      };

                      lockNext = function lockNext(tf) {
                        _this67.slideWithNav.lockSwipeToNext(tf);

                        _this67.lockNext = tf;

                        _this67.logger.info('[canNEXT] - lockSwipeToNext=' + tf + ' + this.lockNext=' + tf + '...');
                      }; // ----- Slide 1 ---------------------------------


                      if (!(this.thisSlideNo === 1)) {
                        _context96.next = 10;
                        break;
                      }

                      lockPrev(true);

                      if (this.wpNoOf < 1) {
                        if (this.noBackupWillFail) {
                          lockNext(false);
                        } else {
                          lockNext(true);
                        }
                      } else if (this.wpNoOf >= 1) {
                        if (this.wpOneIsChecked) {
                          lockNext(false);
                        } else {
                          lockNext(true);
                        }
                      }

                      ;
                      return _context96.abrupt("return", Promise.resolve(true));

                    case 10:
                      if (!(this.thisSlideNo === 2)) {
                        _context96.next = 23;
                        break;
                      }

                      if (!this.dlDidComplete) {
                        _context96.next = 17;
                        break;
                      }

                      lockPrev(false);
                      lockNext(false);
                      return _context96.abrupt("return", Promise.resolve(true));

                    case 17:
                      if (this.noBackupWillFail) {
                        lockPrev(true);
                        lockNext(true);
                      } else {
                        lockPrev(false);
                        lockNext(true);
                      }

                      ;

                      if (!this.checkFSAndBUOnce) {
                        this.checkAppFS();
                      }

                      return _context96.abrupt("return", Promise.resolve(true));

                    case 21:
                      _context96.next = 38;
                      break;

                    case 23:
                      if (!(this.thisSlideNo === 3)) {
                        _context96.next = 31;
                        break;
                      }

                      this.lockNext = true;
                      lockPrev(false);

                      if (this.usingDefaults) {
                        this.evServ.publish('defaultAutoFinish', true);
                      }

                      ;
                      return _context96.abrupt("return", Promise.resolve(true));

                    case 31:
                      _context96.next = 33;
                      return this.slideWithNav.getActiveIndex();

                    case 33:
                      _context96.t0 = _context96.sent;
                      this.thisSlideNo = _context96.t0 + 1;
                      _context96.next = 37;
                      return this.doPrevNextCheck();

                    case 37:
                      return _context96.abrupt("return", Promise.resolve(true));

                    case 38:
                    case "end":
                      return _context96.stop();
                  }
                }
              }, _callee96, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionSlideEvent",
          value: function ionSlideEvent(event) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee97() {
              var _this68 = this;

              var thisOldSlideNo, thisNewSlideNo, thisSlideDir, dirArrow;
              return regeneratorRuntime.wrap(function _callee97$(_context97) {
                while (1) {
                  switch (_context97.prev = _context97.next) {
                    case 0:
                      this.logger.info('[Modal|firstRun|ionSlideEvent] (event)...');

                      if (!(event.type === 'ionSlidesDidLoad')) {
                        _context97.next = 12;
                        break;
                      }

                      this.logger.info('[Modal|firstRun|ionSlideEvent] - [SLIDER LOADED!]');
                      jquery__WEBPACK_IMPORTED_MODULE_20__('.fr-records-alreadydone-notice-wrapper').hide();
                      jquery__WEBPACK_IMPORTED_MODULE_20__('.fr-featimg-wrapper').hide();
                      jquery__WEBPACK_IMPORTED_MODULE_20__('.fr-featimg-wrapper.slide1').show();
                      this.sliderHasLoaded = true;
                      this.hideSplash();
                      this.evServ.subscribe('epTestsDone', function () {
                        _this68.evServ.destroy('epTestsDone');

                        if (_this68.wpCheckDone) {
                          _this68.doPrevNextCheck();
                        } else {
                          _this68.evServ.subscribe('wpCheckDone', function () {
                            _this68.evServ.destroy('wpCheckDone');

                            _this68.doPrevNextCheck();
                          });
                        }
                      });
                      this.getRecCatObj();
                      _context97.next = 25;
                      break;

                    case 12:
                      if (!(event.type === 'ionSlideWillChange')) {
                        _context97.next = 25;
                        break;
                      }

                      jquery__WEBPACK_IMPORTED_MODULE_20__('.fr-featimg-wrapper').fadeOut(1000);
                      _context97.next = 16;
                      return this.slideWithNav.getPreviousIndex();

                    case 16:
                      _context97.t0 = _context97.sent;
                      thisOldSlideNo = _context97.t0 + 1;
                      _context97.next = 20;
                      return this.slideWithNav.getActiveIndex();

                    case 20:
                      _context97.t1 = _context97.sent;
                      thisNewSlideNo = _context97.t1 + 1;
                      thisOldSlideNo < thisNewSlideNo ? thisSlideDir = 'fwd' : thisSlideDir = 'back';
                      thisSlideDir === 'fwd' ? dirArrow = 'Slide ' + thisOldSlideNo + ' ⏩ Slide ' + thisNewSlideNo : dirArrow = 'Slide ' + thisNewSlideNo + ' ⏪ Slide ' + thisOldSlideNo;
                      this.logger.info('[Modal|firstRun|ionSlideEvent] (ionSlideWillChange) [⏱️WILL]Change - ' + dirArrow);

                    case 25:
                    case "end":
                      return _context97.stop();
                  }
                }
              }, _callee97, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "hideSplash",
          value: function hideSplash() {
            this.logger.info('[Auth|hideSplash] ()...');

            _capacitor_status_bar__WEBPACK_IMPORTED_MODULE_6__.StatusBar.setOverlaysWebView({
              overlay: true
            });

            _capacitor_status_bar__WEBPACK_IMPORTED_MODULE_6__.StatusBar.setBackgroundColor({
              color: '#00000000'
            });

            jquery__WEBPACK_IMPORTED_MODULE_20__('#sheriff-auth-networkstatus-wrapper').addClass('adjust-for-auth-toolbar-overlay');

            var myAniCSS = function myAniCSS(jqEle, animName) {
              return new Promise(function (resolve) {
                var animClassStr = 'animate__animated animate__' + animName + ' animate__faster';
                jquery__WEBPACK_IMPORTED_MODULE_20__(jqEle).addClass(animClassStr);
                jquery__WEBPACK_IMPORTED_MODULE_20__(jqEle).on('animationend', function () {
                  jquery__WEBPACK_IMPORTED_MODULE_20__(jqEle).removeClass(animClassStr);
                  resolve('done');
                });
              });
            };

            jquery__WEBPACK_IMPORTED_MODULE_20__('#sheriff-custom-splash-logo-img').removeClass('animate__animated animate__headShake animate__infinite');
            jquery__WEBPACK_IMPORTED_MODULE_20__('#sheriff-custom-splash-titletexttop-wrapper').addClass('animate__animated animate__slideOutUp animate__faster');
            jquery__WEBPACK_IMPORTED_MODULE_20__('#sheriff-custom-splash-zer0ne-wrapper').addClass('animate__animated animate__slideOutDown animate__faster');
            jquery__WEBPACK_IMPORTED_MODULE_20__('.bar-horizontal').addClass('finished');
            jquery__WEBPACK_IMPORTED_MODULE_20__('#sheriff-custom-splash-logo-img').prop('src', '../assets/img/slogo-g.png');
            jquery__WEBPACK_IMPORTED_MODULE_20__('.sheriff-cutom-splash-text-wrapper.texttop').removeClass('animate__slideInLeft').addClass('animate__slideOutLeft');
            jquery__WEBPACK_IMPORTED_MODULE_20__('.sheriff-cutom-splash-text-wrapper.textbottom').removeClass('animate__slideInRight').addClass('animate__slideOutRight');
            jquery__WEBPACK_IMPORTED_MODULE_20__('#sheriff-custom-splash-wrapper, .sheriff-col.custom-splash-col.middlelogocol').css('background', 'transparent');
            myAniCSS('#sheriff-custom-splash-wrapper', 'fadeOut').then(function () {
              return jquery__WEBPACK_IMPORTED_MODULE_20__('#sheriff-custom-splash-wrapper').hide();
            });
          }
        }]);

        return FirstRunPage;
      }();

      _FirstRunPage.ctorParameters = function () {
        return [{
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_22__.ModalController
        }, {
          type: _services_events_service__WEBPACK_IMPORTED_MODULE_10__.EventsService
        }, {
          type: _services_sqlite_service__WEBPACK_IMPORTED_MODULE_11__.SQLiteService
        }, {
          type: _services_deputy_service__WEBPACK_IMPORTED_MODULE_13__.DeputyService
        }, {
          type: _services_storage_service__WEBPACK_IMPORTED_MODULE_15__.StorageService
        }, {
          type: _services_filesystem_service__WEBPACK_IMPORTED_MODULE_18__.FileSystemService
        }, {
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_23__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_22__.LoadingController
        }, {
          type: _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_4__.HTTP
        }, {
          type: src_app_services_datetime_service__WEBPACK_IMPORTED_MODULE_12__.DateTimeService
        }, {
          type: _services_calendar_service__WEBPACK_IMPORTED_MODULE_2__.CalendarService
        }, {
          type: src_app_services_firebase_service__WEBPACK_IMPORTED_MODULE_14__.FirebaseService
        }, {
          type: src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_16__.DetailService
        }, {
          type: src_app_services_app_service__WEBPACK_IMPORTED_MODULE_8__.AppService
        }];
      };

      _FirstRunPage.propDecorators = {
        slideWithNav: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_24__.ViewChild,
          args: ['slideWithNav', {
            "static": false
          }]
        }],
        neverAskAgain: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_24__.ViewChild,
          args: ['neverAskAgain']
        }],
        restoreBUDBCB: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_24__.ViewChild,
          args: ['restoreBUDBCB']
        }],
        startFreshCB: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_24__.ViewChild,
          args: ['startFreshCB']
        }],
        freshOptCBDefault: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_24__.ViewChild,
          args: ['freshOptCBDefault']
        }],
        freshOptCBMore: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_24__.ViewChild,
          args: ['freshOptCBMore']
        }],
        recDLRadio: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_24__.ViewChild,
          args: ['recDLOptsRadio']
        }]
      };
      _FirstRunPage = (0, tslib__WEBPACK_IMPORTED_MODULE_21__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_24__.Component)({
        selector: 'app-firstrun',
        template: _raw_loader_firstrun_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_firstrun_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      }) //////////////////////////////////////////////////////////////////////////////////////
      ], _FirstRunPage);
      /***/
    },

    /***/
    20811:
    /*!****************************************************************!*\
      !*** ./src/app/modals/inapp-pushnote/inapp-pushnote.module.ts ***!
      \****************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "InAppPushNoteModalModule": function InAppPushNoteModalModule() {
          return (
            /* binding */
            _InAppPushNoteModalModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _inapp_pushnote_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./inapp-pushnote.page */
      46098);

      var _InAppPushNoteModalModule = function InAppPushNoteModalModule() {
        _classCallCheck(this, InAppPushNoteModalModule);
      };

      _InAppPushNoteModalModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_inapp_pushnote_page__WEBPACK_IMPORTED_MODULE_0__.InAppPushNoteModal]
      })], _InAppPushNoteModalModule);
      /***/
    },

    /***/
    46098:
    /*!**************************************************************!*\
      !*** ./src/app/modals/inapp-pushnote/inapp-pushnote.page.ts ***!
      \**************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "InAppPushNoteModal": function InAppPushNoteModal() {
          return (
            /* binding */
            _InAppPushNoteModal
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_inapp_pushnote_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./inapp-pushnote.page.html */
      19234);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var src_app_services_datetime_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! src/app/services/datetime.service */
      12826);
      /* harmony import */


      var src_app_services_notifications_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! src/app/services/notifications.service */
      79744);
      /* harmony import */


      var src_app_services_events_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! src/app/services/events.service */
      80106); ////////////////////////////////////////////////////////////////////////////////////////////////////


      var _InAppPushNoteModal = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        function InAppPushNoteModal(logger, modalCtrl, navParams, dT, noteServ, evServ, plt) {
          _classCallCheck(this, InAppPushNoteModal);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.navParams = navParams;
          this.dT = dT;
          this.noteServ = noteServ;
          this.evServ = evServ;
          this.plt = plt; ////////////////////////////////////////////////////////////////////////////////////////////////////

          this.modalId = 'inapp-pushnote-modal';
          this.modalPNote = null;
          this.modalTitle = null;
          this.modalBody = null;
        } ////////////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(InAppPushNoteModal, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[Modal|InAppPushNote|ngOnInit] ()...');
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            var _this69 = this;

            this.logger.info('[Modal|InAppPushNote|ionViewDidEnter] ()...');
            this.plt.ready().then(function () {
              _this69.modalPNote = _this69.navParams.get('pNote');
              _this69.modalTitle = _this69.modalPNote.title;
              _this69.modalBody = _this69.modalPNote.body;
            });
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeModal",
          value: function closeModal() {
            this.logger.info('[Modal|InAppPushNote|closeModal] ()...');
            this.modalCtrl.dismiss(null, 'dismiss', this.modalId);
          }
        }]);

        return InAppPushNoteModal;
      }();

      _InAppPushNoteModal.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_4__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.NavParams
        }, {
          type: src_app_services_datetime_service__WEBPACK_IMPORTED_MODULE_1__.DateTimeService
        }, {
          type: src_app_services_notifications_service__WEBPACK_IMPORTED_MODULE_2__.NotificationsService
        }, {
          type: src_app_services_events_service__WEBPACK_IMPORTED_MODULE_3__.EventsService
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.Platform
        }];
      };

      _InAppPushNoteModal = (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
        selector: 'app-inapppushnotemodal',
        template: _raw_loader_inapp_pushnote_page_html__WEBPACK_IMPORTED_MODULE_0__["default"]
      }) ////////////////////////////////////////////////////////////////////////////////////////////////////
      ], _InAppPushNoteModal);
      /***/
    },

    /***/
    67170:
    /*!******************************************************************!*\
      !*** ./src/app/modals/profilecsselect/profilecsselect.module.ts ***!
      \******************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ProfileCSSelectPageModule": function ProfileCSSelectPageModule() {
          return (
            /* binding */
            _ProfileCSSelectPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      39075);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _profilecsselect_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./profilecsselect.page */
      67536);

      var _ProfileCSSelectPageModule = function ProfileCSSelectPageModule() {
        _classCallCheck(this, ProfileCSSelectPageModule);
      };

      _ProfileCSSelectPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserModule, _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.IonicModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule],
        declarations: [_profilecsselect_page__WEBPACK_IMPORTED_MODULE_0__.ProfileCSSelectPage]
      })], _ProfileCSSelectPageModule);
      /***/
    },

    /***/
    67536:
    /*!****************************************************************!*\
      !*** ./src/app/modals/profilecsselect/profilecsselect.page.ts ***!
      \****************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ProfileCSSelectPage": function ProfileCSSelectPage() {
          return (
            /* binding */
            _ProfileCSSelectPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_profilecsselect_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./profilecsselect.page.html */
      2729);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var src_app_services_sqlite_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! src/app/services/sqlite.service */
      90636); ////////////////////////////////////////////////////////////////////////////////////////////////////


      var _ProfileCSSelectPage = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        function ProfileCSSelectPage(logger, modalCtrl, navParams, sqlServ) {
          _classCallCheck(this, ProfileCSSelectPage);

          this.logger = logger;
          this.modalCtrl = modalCtrl;
          this.navParams = navParams;
          this.sqlServ = sqlServ;
          this.listData = [];
          this.selectedId = null;
          this.selectedSubT = null;
          this.minSBCs = 3;
          this.sbCs = 0;
          this.isSearch = false;
        } ////////////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(ProfileCSSelectPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee98() {
              var _this70 = this;

              var alertId, cId, stateListRes, localListData, i, stateO, selSIndex;
              return regeneratorRuntime.wrap(function _callee98$(_context98) {
                while (1) {
                  switch (_context98.prev = _context98.next) {
                    case 0:
                      _context98.next = 2;
                      return this.modalCtrl.getTop();

                    case 2:
                      alertId = _context98.sent;
                      this.alertId = alertId.id;
                      this.listType = this.navParams.get('listType');
                      console.log(this.navParams.get('selected'));
                      this.selectedId = this.navParams.get('selected');

                      if (!(this.listType === 'c')) {
                        _context98.next = 20;
                        break;
                      }

                      this.labelProp = 'Country';

                      if (!(this.selectedId !== null)) {
                        _context98.next = 16;
                        break;
                      }

                      _context98.next = 12;
                      return this.sqlServ.getSingleCountry(this.selectedId);

                    case 12:
                      this.selectedSubT = _context98.sent.data.Country;
                      this.noSelection = false;
                      _context98.next = 17;
                      break;

                    case 16:
                      this.noSelection = true;

                    case 17:
                      ;
                      _context98.next = 35;
                      break;

                    case 20:
                      this.labelProp = 'State';

                      if (!(this.selectedId !== null)) {
                        _context98.next = 28;
                        break;
                      }

                      _context98.next = 24;
                      return this.sqlServ.getSingleState(this.selectedId);

                    case 24:
                      this.selectedSubT = _context98.sent.data.State;
                      this.noSelection = false;
                      _context98.next = 29;
                      break;

                    case 28:
                      this.noSelection = true;

                    case 29:
                      ;
                      cId = this.navParams.get('country');
                      _context98.next = 33;
                      return this.sqlServ.getStates(cId);

                    case 33:
                      stateListRes = _context98.sent.data;

                      if (stateListRes.length > 0) {
                        localListData = [];

                        for (i = 0; i < stateListRes.length; i++) {
                          stateO = stateListRes[i];
                          localListData.push({
                            id: stateO.Id,
                            label: stateO.State,
                            isChecked: false
                          });
                        }

                        ;

                        if (!this.noSelection) {
                          selSIndex = localListData.findIndex(function (sO) {
                            return sO.id === _this70.selectedId;
                          });

                          if (selSIndex !== -1) {
                            localListData[selSIndex].isChecked = true;
                          }
                        }

                        ;
                        this.listData = localListData;
                      }

                    case 35:
                    case "end":
                      return _context98.stop();
                  }
                }
              }, _callee98, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "countrySearch",
          value: function countrySearch(inputVal) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee99() {
              var _this71 = this;

              var qCResList, qCRes, i, qC, selCIndex;
              return regeneratorRuntime.wrap(function _callee99$(_context99) {
                while (1) {
                  switch (_context99.prev = _context99.next) {
                    case 0:
                      this.sbCs = inputVal.length;

                      if (!(this.sbCs >= this.minSBCs)) {
                        _context99.next = 9;
                        break;
                      }

                      this.listData = [];
                      this.isSearch = true;
                      qCResList = [];
                      _context99.next = 7;
                      return this.sqlServ.qCountry(inputVal);

                    case 7:
                      qCRes = _context99.sent;

                      if (qCRes.length > 0) {
                        for (i = 0; i < qCRes.length; i++) {
                          qC = qCRes[i];
                          qCResList.push({
                            id: qC.Id,
                            label: qC.Country,
                            isChecked: false
                          });
                        }

                        ;

                        if (!this.noSelection) {
                          selCIndex = qCResList.findIndex(function (cO) {
                            return cO.Id === _this71.selectedId;
                          });

                          if (selCIndex !== -1) {
                            qCResList[selCIndex].isChecked = true;
                          }
                        }

                        ;
                        this.listData = qCResList;
                        this.isSearch = false;
                      } else {
                        this.isSearch = false;
                      }

                    case 9:
                    case "end":
                      return _context99.stop();
                  }
                }
              }, _callee99, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "cancelChange",
          value: function cancelChange() {
            this.logger.info('[CANCEL]');
            this.modalCtrl.dismiss(null, 'cancel', this.alertId);
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "selectItem",
          value: function selectItem(item) {
            this.modalCtrl.dismiss({
              v: item.id,
              l: item.label
            }, 'new', this.alertId);
          }
        }]);

        return ProfileCSSelectPage;
      }();

      _ProfileCSSelectPage.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_3__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__.ModalController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__.NavParams
        }, {
          type: src_app_services_sqlite_service__WEBPACK_IMPORTED_MODULE_1__.SQLiteService
        }];
      };

      _ProfileCSSelectPage = (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'app-profilecsselect',
        template: _raw_loader_profilecsselect_page_html__WEBPACK_IMPORTED_MODULE_0__["default"]
      }) ////////////////////////////////////////////////////////////////////////////////////////////////////
      ], _ProfileCSSelectPage);
      /***/
    },

    /***/
    51568:
    /*!***************************************************************!*\
      !*** ./src/app/popovers/datepresets/datepresets.component.ts ***!
      \***************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "DatePresetsComponent": function DatePresetsComponent() {
          return (
            /* binding */
            _DatePresetsComponent
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_datepresets_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./datepresets.component.html */
      29695);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ionic/angular */
      80476); ////////////////////////////////////////////////////////////////////////////////////////////////////


      var _DatePresetsComponent = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        function DatePresetsComponent(logger, popover, navParams) {
          _classCallCheck(this, DatePresetsComponent);

          this.logger = logger;
          this.popover = popover;
          this.navParams = navParams; ////////////////////////////////////////////////////////////////////////////////////////////////////

          this.presets = [{
            name: 'week',
            label: 'Week',
            selected: false
          }, {
            name: 'fnight',
            label: 'FNight',
            selected: false
          }, {
            name: 'month',
            label: 'Month',
            selected: false
          }, {
            name: 'qtr',
            label: 'Qtr',
            selected: false
          }, {
            name: 'half',
            label: 'Half',
            selected: false
          }, {
            name: 'year',
            label: 'Year',
            selected: false
          }, {
            name: 'all',
            label: 'All',
            selected: false
          }];
        } ////////////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(DatePresetsComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.selectedName = this.navParams.get('selectedName');
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "ionViewWillEnter",
          value: function ionViewWillEnter() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee100() {
              var i;
              return regeneratorRuntime.wrap(function _callee100$(_context100) {
                while (1) {
                  switch (_context100.prev = _context100.next) {
                    case 0:
                      for (i = 0; i < this.presets.length; i++) {
                        this.presets[i].name === this.selectedName ? this.presets[i].selected = true : this.presets[i].selected = false;
                      }

                    case 1:
                    case "end":
                      return _context100.stop();
                  }
                }
              }, _callee100, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "presetSelect",
          value: function presetSelect(name, index) {
            this.logger.info('[DatePresets|presetSelect] (' + name + ')');

            for (var i = 0; i < this.presets.length; i++) {
              i === index ? this.presets[i].selected = true : this.presets[i].selected = false;
            }

            ;
            var isSame;
            this.selectedName === name ? isSame = true : isSame = false;
            this.closePopover(name, isSame);
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closePopover",
          value: function closePopover(selName, selSame) {
            var myRole;
            selSame === true ? myRole = 'same' : myRole = 'new';
            this.popover.dismiss(selName, myRole);
          }
        }]);

        return DatePresetsComponent;
      }();

      _DatePresetsComponent.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_2__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.PopoverController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.NavParams
        }];
      };

      _DatePresetsComponent = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'app-datepresets',
        template: _raw_loader_datepresets_component_html__WEBPACK_IMPORTED_MODULE_0__["default"]
      }) ////////////////////////////////////////////////////////////////////////////////////////////////////
      ], _DatePresetsComponent);
      /***/
    },

    /***/
    70518:
    /*!*************************************************************!*\
      !*** ./src/app/popovers/detailmenu/detailmenu.component.ts ***!
      \*************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "DetailMenuComponent": function DetailMenuComponent() {
          return (
            /* binding */
            _DetailMenuComponent
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_detailmenu_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./detailmenu.component.html */
      43482);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @ionic/angular */
      80476); ////////////////////////////////////////////////////////////////////////////////////////////////////


      var _DetailMenuComponent = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        function DetailMenuComponent(logger, popover, navParams) {
          _classCallCheck(this, DetailMenuComponent);

          this.logger = logger;
          this.popover = popover;
          this.navParams = navParams;
        } ////////////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(DetailMenuComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.logger.info('[DetailMenu|ngOnInit] ()...');
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closePopover",
          value: function closePopover(selected) {
            var _this72 = this;

            this.logger.info('[DetailMenu|closePopover] (' + selected + ')...');
            setTimeout(function () {
              _this72.popover.dismiss(selected);
            }, 250);
          }
        }]);

        return DetailMenuComponent;
      }();

      _DetailMenuComponent.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_1__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__.PopoverController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__.NavParams
        }];
      };

      _DetailMenuComponent = (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'app-detailmenu',
        template: _raw_loader_detailmenu_component_html__WEBPACK_IMPORTED_MODULE_0__["default"]
      }) ////////////////////////////////////////////////////////////////////////////////////////////////////
      ], _DetailMenuComponent);
      /***/
    },

    /***/
    2925:
    /*!*****************************************************************!*\
      !*** ./src/app/popovers/peopledetail/peopledetail.component.ts ***!
      \*****************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "PeopleDetailComponent": function PeopleDetailComponent() {
          return (
            /* binding */
            _PeopleDetailComponent
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_peopledetail_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./peopledetail.component.html */
      6318);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @ionic/angular */
      80476); ////////////////////////////////////////////////////////////////////////////////////////////////////


      var _PeopleDetailComponent = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        function PeopleDetailComponent(logger, popover, navParams) {
          _classCallCheck(this, PeopleDetailComponent);

          this.logger = logger;
          this.popover = popover;
          this.navParams = navParams;
          this.people = [];
          this.pplConfStatus = [];
          this.logs = [];
        } ////////////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(PeopleDetailComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this73 = this;

            this.logger.info('[Popover|PeopleDetail|ngOnInit] ()...');
            var rawPeople = this.navParams.get('people');
            console.log(rawPeople);
            var rawLogs = this.navParams.get('logs');
            console.log(rawLogs);
            var rawConfReq = this.navParams.get('confReq');
            console.log(rawConfReq);
            var rawMeConf = this.navParams.get('meConf');
            console.log(rawMeConf);
            var rawMe = this.navParams.get('me');
            console.log(rawMe);
            this.myEmpId = rawMe.obj.EmployeeId;
            console.log(this.myEmpId);

            if (rawConfReq) {
              var _loop2 = function _loop2(p) {
                var pId = rawPeople[p]['Employee'];
                var hasConf = void 0;
                var pLog = rawLogs.filter(function (l) {
                  return l.User === pId;
                });

                if (pLog.length > 0) {
                  hasConf = pLog[0]['Confirmed'];
                } else {
                  hasConf = null;
                }

                ;

                _this73.pplConfStatus.push(hasConf);
              };

              for (var p = 0; p < rawPeople.length; p++) {
                _loop2(p);
              }
            }

            console.log(this.people.length);
            console.log(this.pplConfStatus.length);
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closePopover",
          value: function closePopover() {
            this.logger.info('[Popover|PeopleDetail|closePopover] ()...');
            this.popover.dismiss({
              data: null,
              role: 'dismiss'
            });
          }
        }]);

        return PeopleDetailComponent;
      }();

      _PeopleDetailComponent.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_1__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__.PopoverController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__.NavParams
        }];
      };

      _PeopleDetailComponent = (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'app-peopledetail',
        template: _raw_loader_peopledetail_component_html__WEBPACK_IMPORTED_MODULE_0__["default"]
      }) ////////////////////////////////////////////////////////////////////////////////////////////////////
      ], _PeopleDetailComponent);
      /***/
    },

    /***/
    66475:
    /*!*****************************************!*\
      !*** ./src/app/services/app.service.ts ***!
      \*****************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "AppService": function AppService() {
          return (
            /* binding */
            _AppService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _capacitor_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @capacitor/app */
      42138);
      /* harmony import */


      var _events_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./events.service */
      80106); ////////////////////////////////////////////////////////////////


      var _AppService = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////
        function AppService(logger, evServ) {
          _classCallCheck(this, AppService);

          this.logger = logger;
          this.evServ = evServ;
          this.aInfo = {
            name: null,
            id: null,
            build: null,
            version: null
          };
          this.initDone = false;
        } ////////////////////////////////////////////////////////////////


        _createClass(AppService, [{
          key: "doAppInit",
          value: function doAppInit() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee101() {
              var _this74 = this;

              var aLaunchUrl, aState, aInfo;
              return regeneratorRuntime.wrap(function _callee101$(_context101) {
                while (1) {
                  switch (_context101.prev = _context101.next) {
                    case 0:
                      this.logger.info('[appServ|doAppInit] ()...');
                      this.logger.info('[appServ|initListeners] (contructor) 🎧🎧🎧...');

                      _capacitor_app__WEBPACK_IMPORTED_MODULE_0__.App.addListener('appStateChange', function (state) {
                        _this74.aIsActive = state.isActive;

                        _this74.evServ.publish('myAppStateActive', _this74.aIsActive);

                        var consTxt;
                        _this74.aIsActive ? consTxt = '[ACTIVE]' : consTxt = '[NOT ACTIVE]';

                        _this74.logger.info("[App|Listener|EVENT] \u269C (appStateChange): App is " + consTxt);
                      });

                      _capacitor_app__WEBPACK_IMPORTED_MODULE_0__.App.addListener('appUrlOpen', function (event) {
                        _this74.evServ.publish('myAppUrlOpen', event);

                        _this74.aOpenUrl = event.url;

                        _this74.logger.info("[App|Listener|EVENT] \u269C (appUrlOpen): URL is " + _this74.aOpenUrl);
                      });

                      _capacitor_app__WEBPACK_IMPORTED_MODULE_0__.App.addListener('appRestoredResult', function (event) {
                        _this74.aRestoredRes = event;

                        _this74.evServ.publish('myAppRestoredResult', _this74.aRestoredRes);

                        _this74.logger.info("[App|Listener|EVENT] \u269C (appRestoreResult): " + _this74.aRestoredRes.methodName + ' Result for Plugin ID: ' + _this74.aRestoredRes.pluginId + '...');

                        if (_this74.aRestoredRes.success) {
                          _this74.logger.info('- Plugin Call Succeeded:');

                          console.log(_this74.aRestoredRes.data);
                        } else {
                          _this74.logger.info('- Plugin Call Error: ' + _this74.aRestoredRes.error.message);
                        }
                      });

                      _capacitor_app__WEBPACK_IMPORTED_MODULE_0__.App.addListener('backButton', function (event) {
                        _this74.aCanGoBack = event.canGoBack;

                        _this74.evServ.publish('myAppCanGoBack', _this74.aCanGoBack);

                        var consTxt;
                        _this74.aCanGoBack ? consTxt = '[CAN]' : consTxt = '[CANNOT]';

                        _this74.logger.info("[App|Listener|EVENT] \u269C (backButton): App " + consTxt + ' Go Back.');
                      });

                      _context101.next = 8;
                      return this.getAppLaunchUrl();

                    case 8:
                      aLaunchUrl = _context101.sent;
                      this.logger.info("\u269C - getAppLaunchUrl: " + aLaunchUrl);
                      _context101.next = 12;
                      return this.getAppState();

                    case 12:
                      aState = _context101.sent;
                      this.logger.info("\u269C - getAppState: " + aState);
                      _context101.next = 16;
                      return this.getInfo();

                    case 16:
                      aInfo = _context101.sent;
                      this.logger.info("\u269C - getAppInfo: " + aInfo);

                    case 18:
                    case "end":
                      return _context101.stop();
                  }
                }
              }, _callee101, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "getAppLaunchUrl",
          value: function getAppLaunchUrl() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee102() {
              var gALUrlRes;
              return regeneratorRuntime.wrap(function _callee102$(_context102) {
                while (1) {
                  switch (_context102.prev = _context102.next) {
                    case 0:
                      this.logger.info('[appServ|getAppLaunchUrl] ()...');
                      _context102.next = 3;
                      return _capacitor_app__WEBPACK_IMPORTED_MODULE_0__.App.getLaunchUrl();

                    case 3:
                      gALUrlRes = _context102.sent;

                      if (!(gALUrlRes !== undefined)) {
                        _context102.next = 10;
                        break;
                      }

                      this.aLaunchUrl = gALUrlRes.url;
                      this.logger.info("\u269C - App Launch URL: " + this.aLaunchUrl);
                      return _context102.abrupt("return", Promise.resolve(true));

                    case 10:
                      this.logger.info("(NULL) \u269C App Launch URL Not Found.");
                      return _context102.abrupt("return", Promise.resolve(true));

                    case 12:
                    case "end":
                      return _context102.stop();
                  }
                }
              }, _callee102, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "getAppState",
          value: function getAppState() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee103() {
              var gASRes, consTxt;
              return regeneratorRuntime.wrap(function _callee103$(_context103) {
                while (1) {
                  switch (_context103.prev = _context103.next) {
                    case 0:
                      this.logger.info('[appServ|getAppState] ()...');
                      _context103.next = 3;
                      return _capacitor_app__WEBPACK_IMPORTED_MODULE_0__.App.getState();

                    case 3:
                      gASRes = _context103.sent;
                      this.aIsActive = gASRes.isActive;
                      this.aIsActive ? consTxt = '[ACTIVE]' : consTxt = '[NOT ACTIVE]';
                      this.logger.info("[appServ|getAppState] \u269C - App is " + consTxt);
                      return _context103.abrupt("return", Promise.resolve(true));

                    case 8:
                    case "end":
                      return _context103.stop();
                  }
                }
              }, _callee103, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "getInfo",
          value: function getInfo() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee104() {
              var gAIRes;
              return regeneratorRuntime.wrap(function _callee104$(_context104) {
                while (1) {
                  switch (_context104.prev = _context104.next) {
                    case 0:
                      this.logger.info('[appServ|getInfo] ()...');
                      _context104.next = 3;
                      return _capacitor_app__WEBPACK_IMPORTED_MODULE_0__.App.getInfo();

                    case 3:
                      gAIRes = _context104.sent;
                      this.aInfo = gAIRes;
                      this.logger.info("[appServ|getInfo] \u269C (Result): " + this.aInfo.name + ' | ' + this.aInfo.id + ' | ' + this.aInfo.build + ' | ' + this.aInfo.version);
                      return _context104.abrupt("return", Promise.resolve(true));

                    case 7:
                    case "end":
                      return _context104.stop();
                  }
                }
              }, _callee104, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "exitApp",
          value: function exitApp() {
            this.logger.info("[appServ|exitApp] \u269C ()...");

            _capacitor_app__WEBPACK_IMPORTED_MODULE_0__.App.exitApp();
          }
        }]);

        return AppService;
      }();

      _AppService.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_3__.NGXLogger
        }, {
          type: _events_service__WEBPACK_IMPORTED_MODULE_1__.EventsService
        }];
      };

      _AppService = (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable)({
        providedIn: 'root'
      }) ////////////////////////////////////////////////////////////////
      ], _AppService);
      /***/
    },

    /***/
    38670:
    /*!**************************************!*\
      !*** ./src/app/services/appTypes.ts ***!
      \**************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "defaultAUUser": function defaultAUUser() {
          return (
            /* binding */
            _defaultAUUser
          );
        },

        /* harmony export */
        "defaultAUSettings": function defaultAUSettings() {
          return (
            /* binding */
            _defaultAUSettings
          );
        },

        /* harmony export */
        "AUSAlertRange2Value": function AUSAlertRange2Value() {
          return (
            /* binding */
            _AUSAlertRange2Value
          );
        },

        /* harmony export */
        "testShift": function testShift() {
          return (
            /* binding */
            _testShift
          );
        }
        /* harmony export */

      });

      function _defaultAUUser() {
        var defObj = {
          dp_token: '',
          dp_refresh: '',
          dp_expires: '',
          dp_domain: '',
          fcm_token: ''
        };
        return defObj;
      } //////////////////////////////////////////////////


      function _defaultAUSettings() {
        var dAUS = {
          alerts: {
            showSection: true,
            options: {
              alertCal: {
                value: null,
                info: false
              },
              alertMethods: {
                value: {
                  phone: true,
                  calendar: true,
                  email: false
                },
                info: false
              },
              alertEvents: {
                value: {
                  shift: true,
                  task: false,
                  tsheet: true
                },
                info: false
              },
              alertBefore: {
                value: {
                  task: {
                    range: 2,
                    mins: 60
                  },
                  shift: {
                    range: 1,
                    mins: 30
                  },
                  tsheet: {
                    range: 2,
                    mins: 10
                  }
                },
                info: false
              }
            }
          },
          database: {
            showSection: true,
            options: {
              backupMode: {
                value: 'auto',
                info: false
              },
              backupActions: {
                info: false
              }
            }
          },
          profile: {
            showSection: false,
            options: {
              alwaysSync: {
                value: false,
                info: false
              }
            }
          },
          payrates: {
            showSection: false,
            options: {
              show: {
                value: true,
                info: false
              }
            }
          },
          snoop: {
            showSection: false,
            options: {
              activated: {
                value: true,
                info: false
              }
            }
          }
        };
        return dAUS;
      } //////////////////////////////////////////////////


      function _AUSAlertRange2Value(aEvent, rangeVal) {
        var sTO = {
          1: 30,
          2: 60,
          3: 90,
          4: 120,
          5: 360,
          6: 720
        };
        var tsO = {
          1: 5,
          2: 10,
          3: 15,
          4: 20,
          5: 25,
          6: 30
        };

        if (aEvent === 'shift' || aEvent === 'task') {
          return sTO[rangeVal];
        } else {
          return tsO[rangeVal];
        }

        ;
      } //////////////////////////////////////////////////


      var _testShift = {
        "Id": 7777,
        "Date": "2022-02-28T00:00:00+08:00",
        "StartTime": 1646013600,
        "EndTime": 1646028000,
        "Mealbreak": "2022-02-27T00:00:00+08:00",
        "Slots": [{
          "blnEmptySlot": false,
          "strType": "B",
          "intStart": 0,
          "intEnd": 0,
          "intUnixStart": 1646013600,
          "intUnixEnd": 1646013600,
          "mixedActivity": {
            "intState": 3,
            "blnCanStartEarly": 1,
            "blnCanEndEarly": 1,
            "blnIsMandatory": 1,
            "strBreakType": "M"
          },
          "strTypeName": "Meal Break",
          "strState": "Scheduled Duration"
        }],
        "TotalTime": 4,
        "Cost": 0,
        "OperationalUnit": 6,
        "Employee": 421,
        "Comment": "",
        "Warning": "Stressed : Too many hours in a shift. Max 7.6 for Normal 38 hours per week| Stressed : Too many hours in a day. Max 7.6 for Normal 38 hours per week",
        "WarningOverrideComment": "Override by Renee Coyle on Tue 22/02/22 12:05 PM",
        "Published": true,
        "MatchedByTimesheet": 0,
        "CustomFieldData": null,
        "Open": false,
        "ApprovalRequired": false,
        "ConfirmStatus": 0,
        "ConfirmComment": "",
        "ConfirmBy": 0,
        "ConfirmTime": 0,
        "SwapStatus": 0,
        "SwapManageBy": null,
        "ShiftTemplate": 1,
        "ConnectStatus": null,
        "Creator": 406,
        "Created": "2022-02-22T12:05:53+08:00",
        "Modified": "2022-02-22T12:12:04+08:00",
        "OperationalUnitObject": {
          "Id": 6,
          "Creator": 1,
          "Created": "2018-12-31T19:42:41+08:00",
          "Modified": "2020-09-01T14:30:35+08:00",
          "Company": 1,
          "WorkType": null,
          "ParentOperationalUnit": 0,
          "OperationalUnitName": "Bar",
          "Active": true,
          "PayrollExportName": "",
          "Address": 162,
          "Contact": null,
          "RosterSortOrder": 1,
          "ShowOnRoster": true,
          "Colour": "#f93c3c",
          "RosterActiveHoursSchedule": null,
          "DailyRosterBudget": null,
          "OperationalUnitType": 0,
          "CompanyCode": "DOG",
          "CompanyName": "Duke Of George",
          "AddressObject": {
            "Id": 162,
            "ContactName": null,
            "UnitNo": null,
            "StreetNo": null,
            "SuiteNo": null,
            "PoBox": null,
            "Street1": "135 George Street, East Fremantle WA 6158, Australia",
            "Street2": null,
            "City": null,
            "State": null,
            "Postcode": null,
            "Country": 13,
            "Phone": null,
            "Notes": null,
            "Format": null,
            "Saved": null,
            "Creator": 1,
            "Created": "2018-12-31T19:59:59+08:00",
            "Modified": "2018-12-31T19:59:59+08:00",
            "Print": "135 George Street, East Fremantle WA 6158, Australia\n"
          }
        }
      }; //////////////////////////////////////////////////
      //////////////////////////////////////////////////

      /***/
    },

    /***/
    96414:
    /*!************************************!*\
      !*** ./src/app/services/baseDB.ts ***!
      \************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "SQLiteKeywords": function SQLiteKeywords() {
          return (
            /* binding */
            _SQLiteKeywords
          );
        },

        /* harmony export */
        "frCheckResArr": function frCheckResArr() {
          return (
            /* binding */
            _frCheckResArr
          );
        },

        /* harmony export */
        "frCheckMyArr": function frCheckMyArr() {
          return (
            /* binding */
            _frCheckMyArr
          );
        },

        /* harmony export */
        "frResMyCombo": function frResMyCombo() {
          return (
            /* binding */
            _frResMyCombo
          );
        },

        /* harmony export */
        "frMyOrs": function frMyOrs() {
          return (
            /* binding */
            _frMyOrs
          );
        },

        /* harmony export */
        "frCheckImageEPs": function frCheckImageEPs() {
          return (
            /* binding */
            _frCheckImageEPs
          );
        },

        /* harmony export */
        "frEPStore": function frEPStore() {
          return (
            /* binding */
            _frEPStore
          );
        },

        /* harmony export */
        "myEndPointArr": function myEndPointArr() {
          return (
            /* binding */
            _myEndPointArr
          );
        },

        /* harmony export */
        "myFREPArr": function myFREPArr() {
          return (
            /* binding */
            _myFREPArr
          );
        },

        /* harmony export */
        "resEndPointArr": function resEndPointArr() {
          return (
            /* binding */
            _resEndPointArr
          );
        },

        /* harmony export */
        "Resources": function Resources() {
          return (
            /* binding */
            _Resources
          );
        },

        /* harmony export */
        "InsertTypeMap": function InsertTypeMap() {
          return (
            /* binding */
            _InsertTypeMap
          );
        },

        /* harmony export */
        "TypeMap": function TypeMap() {
          return (
            /* binding */
            _TypeMap
          );
        },

        /* harmony export */
        "List2DBTblMap": function List2DBTblMap() {
          return (
            /* binding */
            _List2DBTblMap
          );
        },

        /* harmony export */
        "AuthDB": function AuthDB() {
          return (
            /* binding */
            _AuthDB
          );
        },

        /* harmony export */
        "DefaultDB": function DefaultDB() {
          return (
            /* binding */
            _DefaultDB
          );
        }
        /* harmony export */

      }); ///////////////////////////////////////////////////////////////////////////


      var _SQLiteKeywords = ['ABORT', 'ACTION', 'ADD', 'AFTER', 'ALL', 'ALTER', 'ALWAYS', 'ANALYZE', 'AND', 'AS', 'ASC', 'ATTACH', 'AUTOINCREMENT', 'BEFORE', 'BEGIN', 'BETWEEN', 'BY', 'CASCADE', 'CASE', 'CAST', 'CHECK', 'COLLATE', 'COLUMN', 'COMMIT', 'CONFLICT', 'CONSTRAINT', 'CREATE', 'CROSS', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'DATABASE', 'DEFAULT', 'DEFERRABLE', 'DEFERRED', 'DELETE', 'DESC', 'DETACH', 'DISTINCT', 'DO', 'DROP', 'EACH', 'ELSE', 'END', 'ESCAPE', 'EXCEPT', 'EXCLUDE', 'EXCLUSIVE', 'EXISTS', 'EXPLAIN', 'FAIL', 'FILTER', 'FIRST', 'FOLLOWING', 'FOR', 'FOREIGN', 'FROM', 'FULL', 'GENERATED', 'GLOB', 'GROUP', 'GROUPS', 'HAVING', 'IF', 'IGNORE', 'IMMEDIATE', 'IN', 'INDEX', 'INDEXED', 'INITIALLY', 'INNER', 'INSERT', 'INSTEAD', 'INTERSECT', 'INTO', 'IS', 'ISNULL', 'JOIN', 'KEY', 'LAST', 'LEFT', 'LIKE', 'LIMIT', 'MATCH', 'MATERIALIZED', 'NATURAL', 'NO', 'NOT', 'NOTHING', 'NOTNULL', 'NULL', 'NULLS', 'OF', 'OFFSET', 'ON', 'OR', 'ORDER', 'OTHERS', 'OUTER', 'OVER', 'PARTITION', 'PLAN', 'PRAGMA', 'PRECEDING', 'PRIMARY', 'QUERY', 'RAISE', 'RANGE', 'RECURSIVE', 'REFERENCES', 'REGEXP', 'REINDEX', 'RELEASE', 'RENAME', 'REPLACE', 'RESTRICT', 'RETURNING', 'RIGHT', 'ROLLBACK', 'ROW', 'ROWS', 'SAVEPOINT', 'SELECT', 'SET', 'TABLE', 'TEMP', 'TEMPORARY', 'THEN', 'TIES', 'TO', 'TRANSACTION', 'TRIGGER', 'UNBOUNDED', 'UNION', 'UNIQUE', 'UPDATE', 'USING', 'VACUUM', 'VALUES', 'VIEW', 'VIRTUAL', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'WITHOUT']; ///////////////////////////////////////////////////////////////////////////

      var _frCheckResArr = ['Company', 'Kiosk', 'Memo', 'OperationalUnit', 'PayPeriod', 'SystemUsageTracking', 'Task', 'TaskGroup', 'Timesheet', 'Roster'];
      var _frCheckMyArr = ['colleague', 'leave', 'memo', 'notification', 'roster', 'timesheet', 'task', 'unavail'];
      var _frResMyCombo = ['Memo', 'Task', 'Timesheet', 'Roster'];
      var _frMyOrs = ['colleague', 'leave', 'notification', 'unavail'];
      var _frCheckImageEPs = ['photo', 'colleague'];
      var _frEPStore = {
        Company: {
          epc: 'res',
          sl: 'db'
        },
        Kiosk: {
          epc: 'res',
          sl: 'db'
        },
        Memo: {
          epc: 'res',
          sl: 'db'
        },
        OperationalUnit: {
          epc: 'res',
          sl: 'db'
        },
        PayPeriod: {
          epc: 'res',
          sl: 'db'
        },
        SystemUsageTracking: {
          epc: 'res',
          sl: 'db'
        },
        Task: {
          epc: 'res',
          sl: 'db'
        },
        TaskGroup: {
          epc: 'res',
          sl: 'db'
        },
        Timesheet: {
          epc: 'res',
          sl: 'db'
        },
        Roster: {
          epc: 'res',
          sl: 'both'
        },
        colleague: {
          epc: 'res',
          sl: 'db'
        },
        contactaddress: {
          epc: 'my',
          sl: 'store'
        },
        leave: {
          epc: 'my',
          sl: 'db'
        },
        location: {
          epc: 'my',
          sl: 'store'
        },
        notification: {
          epc: 'my',
          sl: 'db'
        },
        photo: {
          epc: 'my',
          sl: 'store'
        },
        roster: {
          epc: 'my',
          sl: 'both'
        },
        training: {
          epc: 'my',
          sl: 'store'
        },
        unavail: {
          epc: 'my',
          sl: 'store'
        }
      };
      var _myEndPointArr = ['photo', 'setup', 'location', 'contactaddress', 'colleague', 'roster', 'timesheet', 'leave', 'unavail', 'notification', 'training', 'memo', 'tasks'];
      var _myFREPArr = ['colleague', 'leave', 'memo', 'notification', 'photo', 'roster', 'tasks', 'unavail'];
      var _resEndPointArr = ['Address', 'Category', 'Comment', 'Company', 'CompanyPeriod', 'Contact', 'Country', 'CustomAppData', 'CustomField', 'CustomFieldData', 'Employee', 'EmployeeAgreement', 'EmployeeAgreementHistory', 'EmployeeAppraisal', 'EmployeeAvailability', 'EmployeeHistory', 'EmployeePaycycle', 'EmployeePaycycleReturn', 'EmployeeRole', 'EmployeeSalaryOpunitCosting', 'EmployeeWorkplace', 'EmploymentCondition', 'EmploymentContract', 'EmploymentContractLeaveRules', 'Event', 'Geo', 'Journal', 'Kiosk', 'Leave', 'LeaveAccrual', 'LeavePayLine', 'LeaveRules', 'Memo', 'OperationalUnit', 'PayPeriod', 'PayRules', 'PublicHoliday', 'SalesData', 'Schedule', 'SmsLog', 'State', 'StressProfile', 'SystemUsageBalance', 'SystemUsageTracking', 'Task', 'TaskGroup', 'TaskGroupSetup', 'TaskOpunitConfig', 'TaskSetup', 'Team', 'Timesheet', 'TimesheetPayReturn', 'TrainingModule', 'TrainingRecord', 'Webhook', 'Roster', 'RosterOpen', 'RosterSwap']; ///////////////////////////////////////////////////////////////////////////

      var _Resources = {
        Address: 'addresses',
        Category: 'categories',
        Colleague: 'colleagues',
        Comment: 'comments',
        Company: 'companies',
        CompanyPeriod: 'company_periods',
        Contact: 'contacts',
        Country: 'countries',
        CustomAppData: 'custom_app_data',
        CustomField: 'custom_fields',
        CustomFieldData: 'custom_field_data',
        Employee: 'employees',
        EmployeeAgreement: 'employee_agreements',
        EmployeeAgreementHistory: 'employee_agreement_history',
        EmployeeAppraisal: 'employee_appraisal',
        EmployeeAvailability: 'employee_availability',
        EmployeeHistory: 'employee_history',
        EmployeePaycycle: 'employee_paycycles',
        EmployeePaycycleReturn: 'employee_paycycle_returns',
        EmployeeRole: 'employee_roles',
        EmployeeSalaryOpunitCosting: 'employee_salary_opunit_costing',
        EmployeeWorkplace: 'employee_workplaces',
        EmploymentCondition: 'employment_conditions',
        EmploymentContract: 'employee_contracts',
        EmploymentContractLeaveRules: 'employee_contract_leave_rules',
        Event: 'events',
        Geo: 'geo',
        Journal: 'journal',
        Kiosk: 'kiosks',
        Leave: 'leaves',
        LeaveAccrual: 'leave_accruals',
        LeavePayLine: 'leave_pay_lines',
        LeaveRules: 'leave_rules',
        Memo: 'memos',
        OperationalUnit: 'operational_units',
        PayPeriod: 'pay_periods',
        PayRules: 'pay_rules',
        PublicHoliday: 'public_holidays',
        Roster: 'rosters',
        RosterOpen: 'roster_opens',
        RosterSwap: 'roster_swaps',
        SalesData: 'sales_data',
        Schedule: 'schedules',
        SmsLog: 'sms_logs',
        State: 'states',
        StressProfile: 'stress_profiles',
        SystemUsageBalance: 'system_usage_balances',
        SystemUsageTracking: 'system_usage_tracking',
        Task: 'tasks',
        TaskGroup: 'task_groups',
        TaskGroupSetup: 'task_group_setups',
        TaskOpunitConfig: 'task_opunit_configs',
        TaskSetup: 'task_setups',
        Team: 'teams',
        Timesheet: 'timesheets',
        TimesheetPayReturn: 'timesheet_pay_returns',
        TrainingModule: 'training_modules',
        TrainingRecord: 'training_records',
        Webhook: 'webhooks',
        colleague: 'colleagues',
        notification: 'notifications',
        leave: 'leaves',
        unavail: 'employee_availability'
      }; ///////////////////////////////////////////////////////////////////////////
      ///////////////////////////////////////////////////////////////////////////

      var _InsertTypeMap = {
        text: 'string',
        integer: 'number',
        numeric: 'number',
        real: 'number'
      }; ///////////////////////////////////////////////////////////////////////////

      var _TypeMap = {
        "int": 'integer',
        integer: 'integer',
        real: 'real',
        "double": 'real',
        "float": 'real',
        string: 'text',
        character: 'text',
        varchar: 'text',
        nchar: 'text',
        clob: 'text',
        blob: 'text',
        time: 'text',
        date: 'text',
        datetime: 'text',
        bit: 'numeric',
        numeric: 'numeric',
        decimal: 'numeric',
        "boolean": 'numeric'
      }; ///////////////////////////////////////////////////////////////////////////

      var _List2DBTblMap = {
        tabshifts: 'rosters',
        tabtsheets: 'timesheets',
        tabtasks: 'tasks',
        tabnews: 'memos'
      }; ///////////////////////////////////////////////////////////////////////////

      var _AuthDB = {
        "database": "authdb",
        "version": 1,
        "encrypted": true,
        "mode": "full",
        "tables": [{
          "name": "deputy_auth",
          "schema": [{
            "column": "dp_uuk",
            "value": "TEXT PRIMARY KEY NOT NULL"
          }, {
            "column": "dp_username",
            "value": "TEXT"
          }, {
            "column": "dp_password",
            "value": "TEXT"
          }, {
            "column": "dp_access_token",
            "value": "TEXT"
          }, {
            "column": "dp_endpoint",
            "value": "TEXT"
          }, {
            "column": "dp_expires_in",
            "value": "TEXT"
          }, {
            "column": "dp_expires_at",
            "value": "TEXT"
          }, {
            "column": "dp_refresh_token",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s','now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }]
        }]
      }; ///////////////////////////////////////////////////////////////////////////

      var _DefaultDB = {
        "database": "defaultdb",
        "version": 1,
        "encrypted": false,
        "mode": "full",
        "tables": [{
          "name": "sheriff_settings",
          "schema": [{
            "column": "dp_uuk",
            "value": "TEXT PRIMARY KEY NOT NULL"
          }, {
            "column": "settings",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s','now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }]
        }, {
          "name": "firebase_fct",
          "schema": [{
            "column": "app_uuk",
            "value": "TEXT PRIMARY KEY NOT NULL"
          }, {
            "column": "fe_token",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s','now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }]
        }, {
          "name": "firebase_fcm",
          "schema": [{
            "column": "app_uuk",
            "value": "TEXT PRIMARY KEY NOT NULL"
          }, {
            "column": "fcm_token",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s','now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }]
        }, {
          "name": "deputy_profile",
          "schema": [{
            "column": "dp_uuk",
            "value": "TEXT PRIMARY KEY NOT NULL"
          }, {
            "column": "photo",
            "value": "TEXT"
          }, {
            "column": "dname",
            "value": "TEXT"
          }, {
            "column": "fname",
            "value": "TEXT"
          }, {
            "column": "lname",
            "value": "TEXT"
          }, {
            "column": "email",
            "value": "TEXT"
          }, {
            "column": "phone",
            "value": "TEXT"
          }, {
            "column": "dob",
            "value": "TEXT"
          }, {
            "column": "pin",
            "value": "TEXT"
          }, {
            "column": "gender",
            "value": "TEXT"
          }, {
            "column": "pronoun",
            "value": "TEXT"
          }, {
            "column": "custompn",
            "value": "TEXT"
          }, {
            "column": "street",
            "value": "TEXT"
          }, {
            "column": "city",
            "value": "TEXT"
          }, {
            "column": "country",
            "value": "TEXT"
          }, {
            "column": "state",
            "value": "TEXT"
          }, {
            "column": "pcode",
            "value": "TEXT"
          }, {
            "column": "ename",
            "value": "TEXT"
          }, {
            "column": "ephone",
            "value": "TEXT"
          }, {
            "column": "last_sync",
            "value": "INTEGER DEFAULT (strftime('%s','now'))"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s','now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexOnlast_sync",
            "value": "last_sync"
          }]
        }, {
          "name": "sync",
          "schema": [{
            "column": "id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "table_name",
            "value": "TEXT"
          }, {
            "column": "last_sync",
            "value": "INTEGER"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexOnlast_sync",
            "value": "last_sync"
          }]
        }, {
          "name": "addresses",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "ContactName",
            "value": "TEXT"
          }, {
            "column": "UnitNo",
            "value": "TEXT"
          }, {
            "column": "StreetNo",
            "value": "TEXT"
          }, {
            "column": "SuiteNo",
            "value": "TEXT"
          }, {
            "column": "PoBox",
            "value": "TEXT"
          }, {
            "column": "Street1",
            "value": "TEXT"
          }, {
            "column": "Street2",
            "value": "TEXT"
          }, {
            "column": "City",
            "value": "TEXT"
          }, {
            "column": "State",
            "value": "TEXT"
          }, {
            "column": "Postcode",
            "value": "TEXT"
          }, {
            "column": "Country",
            "value": "INTEGER"
          }, {
            "column": "Phone",
            "value": "TEXT"
          }, {
            "column": "Notes",
            "value": "TEXT"
          }, {
            "column": "Format",
            "value": "INTEGER"
          }, {
            "column": "Saved",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "categories",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Category",
            "value": "TEXT"
          }, {
            "column": "'Group'",
            "value": "TEXT"
          }, {
            "column": "SortOrder",
            "value": "INTEGER"
          }, {
            "column": "Stafflog",
            "value": "NUMERIC"
          }, {
            "column": "System",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "comments",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Orm",
            "value": "TEXT"
          }, {
            "column": "RecId",
            "value": "INTEGER"
          }, {
            "column": "InFeed",
            "value": "NUMERIC"
          }, {
            "column": "IgnorePermission",
            "value": "NUMERIC"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "companies",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Portfolio",
            "value": "INTEGER"
          }, {
            "column": "Code",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "ParentCompany",
            "value": "INTEGER"
          }, {
            "column": "CompanyName",
            "value": "TEXT"
          }, {
            "column": "TradingName",
            "value": "TEXT"
          }, {
            "column": "BusinessNumber",
            "value": "TEXT"
          }, {
            "column": "CompanyNumber",
            "value": "TEXT"
          }, {
            "column": "IsWorkplace",
            "value": "NUMERIC"
          }, {
            "column": "IsPayrollEntity",
            "value": "NUMERIC"
          }, {
            "column": "PayrollExportCode",
            "value": "TEXT"
          }, {
            "column": "Address",
            "value": "INTEGER"
          }, {
            "column": "Contact",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "company_periods",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Start",
            "value": "INTEGER"
          }, {
            "column": "DateStart",
            "value": "TEXT"
          }, {
            "column": "`End`",
            "value": "INTEGER"
          }, {
            "column": "DateEnd",
            "value": "TEXT"
          }, {
            "column": "Company",
            "value": "INTEGER"
          }, {
            "column": "PayPeriod",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "contacts",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Phone1",
            "value": "TEXT"
          }, {
            "column": "Phone2",
            "value": "TEXT"
          }, {
            "column": "Phone3",
            "value": "TEXT"
          }, {
            "column": "Fax",
            "value": "TEXT"
          }, {
            "column": "Phone1Type",
            "value": "TEXT"
          }, {
            "column": "Phone2Type",
            "value": "TEXT"
          }, {
            "column": "Phone3Type",
            "value": "TEXT"
          }, {
            "column": "PrimaryPhone",
            "value": "INTEGER"
          }, {
            "column": "Email1",
            "value": "TEXT"
          }, {
            "column": "Email1Type",
            "value": "TEXT"
          }, {
            "column": "Email2Type",
            "value": "TEXT"
          }, {
            "column": "Email2",
            "value": "TEXT"
          }, {
            "column": "PrimaryEmail",
            "value": "INTEGER"
          }, {
            "column": "Im1",
            "value": "TEXT"
          }, {
            "column": "Im2",
            "value": "TEXT"
          }, {
            "column": "Im1Type",
            "value": "TEXT"
          }, {
            "column": "Im2Type",
            "value": "TEXT"
          }, {
            "column": "Web",
            "value": "TEXT"
          }, {
            "column": "Notes",
            "value": "TEXT"
          }, {
            "column": "Saved",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "countries",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Code",
            "value": "TEXT"
          }, {
            "column": "CodeA3",
            "value": "TEXT"
          }, {
            "column": "Region",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "INTEGER"
          }, {
            "column": "SortOrder",
            "value": "INTEGER"
          }, {
            "column": "Country",
            "value": "TEXT"
          }, {
            "column": "ZipValidatePreg",
            "value": "TEXT"
          }, {
            "column": "PhoneDisplayPreg",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }],
          "values": [[1, "AF", "AFG", "AS", 0, 10, "Afghanistan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [2, "AL", "ALB", "EU", 0, 10, "Albania", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [3, "DZ", "DZA", "AF", 0, 10, "Algeria", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [4, "AS", "ASM", "AU", 0, 10, "American Samoa", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [5, "AD", "AND", "EU", 0, 10, "Andorra", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [6, "AO", "AGO", "AF", 0, 10, "Angola", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [7, "AI", "AIA", "LA", 0, 10, "Anguilla", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [8, "AQ", "ATA", "AN", 0, 10, "Antarctica", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [9, "AG", "ATG", "LA", 0, 10, "Antigua and Barbuda", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [10, "AR", "ARG", "LA", 0, 10, "Argentina", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [11, "AM", "ARM", "AS", 0, 10, "Armenia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [12, "AW", "ABW", "LA", 0, 10, "Aruba", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [13, "AU", "AUS", "AU", 1, 1, "Australia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:19:12+08:00", 1634878320], [14, "AT", "AUT", "EU", 0, 10, "Austria", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [15, "AZ", "AZE", "AS", 0, 10, "Azerbaijan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [16, "BS", "BHS", "LA", 0, 10, "Bahamas", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [17, "BH", "BHR", "AS", 0, 10, "Bahrain", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [18, "BD", "BGD", "AS", 0, 10, "Bangladesh", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [19, "BB", "BRB", "LA", 0, 10, "Barbados", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [20, "BY", "BLR", "EU", 0, 10, "Belarus", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [21, "BE", "BEL", "EU", 0, 10, "Belgium", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [22, "BZ", "BLZ", "LA", 0, 10, "Belize", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [23, "BJ", "BEN", "AF", 0, 10, "Benin", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [24, "BM", "BMU", "LA", 0, 10, "Bermuda", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [25, "BT", "BTN", "AS", 0, 10, "Bhutan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [26, "BO", "BOL", "LA", 0, 10, "Bolivia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [27, "BA", "BIH", "EU", 0, 10, "Bosnia and Herzegowina", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [28, "BW", "BWA", "AF", 0, 10, "Botswana", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [29, "BV", "BVT", "AN", 0, 10, "Bouvet Island", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [30, "BR", "BRA", "LA", 0, 10, "Brazil", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [31, "IO", "IOT", "AS", 0, 10, "British Indian Ocean Territory", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [32, "VG", "VGB", "LA", 0, 10, "British Virgin Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [33, "BN", "BRN", "AS", 0, 10, "Brunei Darussalam", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [34, "BG", "BGR", "EU", 0, 10, "Bulgaria", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [35, "BF", "BFA", "AF", 0, 10, "Burkina Faso", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [36, "BI", "BDI", "AF", 0, 10, "Burundi", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [37, "KH", "KHM", "AS", 0, 10, "Cambodia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [38, "CM", "CMR", "AF", 0, 10, "Cameroon", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [39, "CA", "CAN", "NA", 0, 5, "Canada", "/[a-zA-Z]\\d[a-zA-Z] ?\\d[a-zA-Z]\\d/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [40, "CV", "CPV", "AF", 0, 10, "Cape Verde", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [41, "KY", "CYM", "LA", 0, 10, "Cayman Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [42, "CF", "CAF", "AF", 0, 10, "Central African Republic", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [43, "TD", "TCD", "AF", 0, 10, "Chad", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [44, "CL", "CHL", "LA", 0, 10, "Chile", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [45, "CN", "CHN", "AS", 0, 10, "China", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [46, "CX", "CXR", "AU", 0, 10, "Christmas Island", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [47, "CC", "CCK", "AU", 0, 10, "Cocos (Keeling) Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [48, "CO", "COL", "LA", 0, 10, "Colombia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [49, "KM", "COM", "AF", 0, 10, "Comoros", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [50, "CG", "COG", "AF", 0, 10, "Congo", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [51, "CK", "COK", "AU", 0, 10, "Cook Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [52, "CR", "CRI", "LA", 0, 10, "Costa Rica", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [53, "CI", "CIV", "AF", 0, 10, "Cote D'ivoire", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [54, "HR", "HRV", "EU", 0, 10, "Croatia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [55, "CU", "CUB", "LA", 0, 10, "Cuba", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [56, "CY", "CYP", "EU", 0, 10, "Cyprus", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [57, "CZ", "CZE", "EU", 0, 10, "Czech Republic", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [58, "DK", "DNK", "EU", 0, 10, "Denmark", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [59, "DJ", "DJI", "AF", 0, 10, "Djibouti", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [60, "DM", "DMA", "LA", 0, 10, "Dominica", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [61, "DO", "DOM", "LA", 0, 10, "Dominican Republic", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [62, "TP", "", "AS", 0, 10, "East Timor", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [63, "EC", "ECU", "LA", 0, 10, "Ecuador", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [64, "EG", "EGY", "AF", 0, 10, "Egypt", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [65, "SV", "SLV", "LA", 0, 10, "El Salvador", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [66, "GQ", "GNQ", "AF", 0, 10, "Equatorial Guinea", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [67, "ER", "ERI", "AF", 0, 10, "Eritrea", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [68, "EE", "EST", "EU", 0, 10, "Estonia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [69, "ET", "ETH", "AF", 0, 10, "Ethiopia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [70, "FK", "FLK", "LA", 0, 10, "Falkland Islands (Malvinas)", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [71, "FO", "FRO", "EU", 0, 10, "Faroe Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [72, "FJ", "FJI", "AU", 0, 10, "Fiji", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [73, "FI", "FIN", "EU", 0, 10, "Finland", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [74, "FR", "FRA", "EU", 0, 10, "France", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [76, "GF", "GUF", "LA", 0, 10, "French Guiana", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [77, "PF", "PYF", "AU", 0, 10, "French Polynesia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [78, "TF", "ATF", "AN", 0, 10, "French Southern Territories", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [79, "GA", "GAB", "AF", 0, 10, "Gabon", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [80, "GE", "GEO", "AS", 0, 10, "Georgia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [81, "GM", "GMB", "AF", 0, 10, "Gambia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [82, "PS", "PSE", "AS", 0, 10, "Palestine Authority", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [83, "DE", "DEU", "EU", 0, 10, "Germany", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [84, "GH", "GHA", "AF", 0, 10, "Ghana", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [85, "GI", "GIB", "EU", 0, 10, "Gibraltar", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [86, "GR", "GRC", "EU", 0, 10, "Greece", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [87, "GL", "GRL", "NA", 0, 10, "Greenland", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [88, "GD", "GRD", "LA", 0, 10, "Grenada", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [89, "GP", "GLP", "LA", 0, 10, "Guadeloupe", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [90, "GU", "GUM", "AU", 0, 10, "Guam", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [91, "GT", "GTM", "LA", 0, 10, "Guatemala", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [92, "GN", "GIN", "AF", 0, 10, "Guinea", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [93, "GW", "GNB", "AF", 0, 10, "Guinea-Bissau", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [94, "GY", "GUY", "LA", 0, 10, "Guyana", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [95, "HT", "HTI", "LA", 0, 10, "Haiti", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [96, "HM", "HMD", "AU", 0, 10, "Heard and McDonald Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [97, "HN", "HND", "LA", 0, 10, "Honduras", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [98, "HK", "HKG", "AS", 0, 10, "Hong Kong", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [99, "HU", "HUN", "EU", 0, 10, "Hungary", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [100, "IS", "ISL", "EU", 0, 10, "Iceland", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [101, "IN", "IND", "AS", 0, 10, "India", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [102, "ID", "IDN", "AS", 0, 10, "Indonesia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [103, "IQ", "IRQ", "AS", 0, 10, "Iraq", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [104, "IE", "IRL", "EU", 0, 10, "Ireland", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [105, "IR", "IRN", "AS", 0, 10, "Islamic Republic of Iran", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [106, "IL", "ISR", "AS", 0, 10, "Israel", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [107, "IT", "ITA", "EU", 0, 10, "Italy", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [108, "JM", "JAM", "LA", 0, 10, "Jamaica", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [109, "JP", "JPN", "AS", 0, 10, "Japan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [110, "JO", "JOR", "AS", 0, 10, "Jordan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [111, "KZ", "KAZ", "AS", 0, 10, "Kazakhstan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [112, "KE", "KEN", "AF", 0, 10, "Kenya", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [113, "KI", "KIR", "AU", 0, 10, "Kiribati", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [114, "KP", "PRK", "AS", 0, 10, "Korea", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [115, "KR", "KOR", "AS", 0, 10, "Korea, Republic of", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [116, "KW", "KWT", "AS", 0, 10, "Kuwait", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [117, "KG", "KGZ", "AS", 0, 10, "Kyrgyzstan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [118, "LA", "LAO", "AS", 0, 10, "Laos", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [119, "LV", "LVA", "EU", 0, 10, "Latvia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [120, "LB", "LBN", "AS", 0, 10, "Lebanon", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [121, "LS", "LSO", "AF", 0, 10, "Lesotho", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [122, "LR", "LBR", "AF", 0, 10, "Liberia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [123, "LY", "LBY", "AF", 0, 10, "Libyan Arab Jamahiriya", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [124, "LI", "LIE", "EU", 0, 10, "Liechtenstein", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [125, "LT", "LTU", "EU", 0, 10, "Lithuania", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [126, "LU", "LUX", "EU", 0, 10, "Luxembourg", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [127, "MO", "MAC", "AS", 0, 10, "Macau", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [128, "MK", "MKD", "EU", 0, 10, "Macedonia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [129, "MG", "MDG", "AF", 0, 10, "Madagascar", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [130, "MW", "MWI", "AF", 0, 10, "Malawi", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [131, "MY", "MYS", "AS", 0, 10, "Malaysia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [132, "MV", "MDV", "AS", 0, 10, "Maldives", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [133, "ML", "MLI", "AF", 0, 10, "Mali", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [134, "MT", "MLT", "EU", 0, 10, "Malta", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [135, "MH", "MHL", "AU", 0, 10, "Marshall Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [136, "MQ", "MTQ", "LA", 0, 10, "Martinique", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [137, "MR", "MRT", "AF", 0, 10, "Mauritania", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [138, "MU", "MUS", "AF", 0, 10, "Mauritius", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [139, "YT", "MYT", "AF", 0, 10, "Mayotte", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [140, "MX", "MEX", "LA", 0, 10, "Mexico", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [141, "FM", "FSM", "AU", 0, 10, "Micronesia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [142, "MD", "MDA", "EU", 0, 10, "Moldova, Republic of", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [143, "MC", "MCO", "EU", 0, 10, "Monaco", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [144, "MN", "MNG", "AS", 0, 10, "Mongolia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [145, "MS", "MSR", "LA", 0, 10, "Montserrat", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [146, "MA", "MAR", "AF", 0, 10, "Morocco", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [147, "MZ", "MOZ", "AF", 0, 10, "Mozambique", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [148, "MM", "MMR", "AS", 0, 10, "Myanmar", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [149, "NA", "NAM", "AF", 0, 10, "Namibia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [150, "NR", "NRU", "AU", 0, 10, "Nauru", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [151, "NP", "NPL", "AS", 0, 10, "Nepal", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [152, "NL", "NLD", "EU", 0, 10, "Netherlands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [153, "AN", "ANT", "LA", 0, 10, "Netherlands Antilles", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [154, "NC", "NCL", "AU", 0, 10, "New Caledonia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [155, "NZ", "NZL", "AU", 1, 2, "New Zealand", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:19:12+08:00", 1634878320], [156, "NI", "NIC", "LA", 0, 10, "Nicaragua", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [157, "NE", "NER", "AF", 0, 10, "Niger", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [158, "NG", "NGA", "AF", 0, 10, "Nigeria", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [159, "NU", "NIU", "AU", 0, 10, "Niue", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [160, "NF", "NFK", "AU", 0, 10, "Norfolk Island", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [161, "MP", "MNP", "AU", 0, 10, "Northern Mariana Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [162, "NO", "NOR", "EU", 0, 10, "Norway", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [163, "OM", "OMN", "AS", 0, 10, "Oman", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [164, "PK", "PAK", "AS", 0, 10, "Pakistan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [165, "PW", "PLW", "AU", 0, 10, "Palau", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [166, "PA", "PAN", "LA", 0, 10, "Panama", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [167, "PG", "PNG", "AS", 0, 10, "Papua New Guinea", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [168, "PY", "PRY", "LA", 0, 10, "Paraguay", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [169, "PE", "PER", "LA", 0, 10, "Peru", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [170, "PH", "PHL", "AS", 0, 10, "Philippines", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [171, "PN", "PCN", "AU", 0, 10, "Pitcairn", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [172, "PL", "POL", "EU", 0, 10, "Poland", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [173, "PT", "PRT", "EU", 0, 10, "Portugal", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [174, "PR", "PRI", "LA", 0, 10, "Puerto Rico", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [175, "QA", "QAT", "AS", 0, 10, "Qatar", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [176, "RE", "REU", "AF", 0, 10, "Reunion", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [177, "RO", "ROU", "EU", 0, 10, "Romania", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [178, "RU", "RUS", "EU", 0, 10, "Russian Federation", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [179, "RW", "RWA", "AF", 0, 10, "Rwanda", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [180, "LC", "LCA", "LA", 0, 10, "Saint Lucia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [181, "WS", "WSM", "AU", 0, 10, "Samoa", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [182, "SM", "SMR", "EU", 0, 10, "San Marino", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [183, "ST", "STP", "AF", 0, 10, "Sao Tome and Principe", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [184, "SA", "SAU", "AS", 0, 10, "Saudi Arabia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [185, "SN", "SEN", "AF", 0, 10, "Senegal", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [186, "SC", "SYC", "AF", 0, 10, "Seychelles", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [187, "SL", "SLE", "AF", 0, 10, "Sierra Leone", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [188, "SG", "SGP", "AS", 0, 10, "Singapore", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [189, "SK", "SVK", "EU", 0, 10, "Slovakia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [190, "SI", "SVN", "EU", 0, 10, "Slovenia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [191, "SB", "SLB", "AU", 0, 10, "Solomon Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [192, "SO", "SOM", "AF", 0, 10, "Somalia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [193, "ZA", "ZAF", "AF", 0, 10, "South Africa", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [194, "ES", "ESP", "EU", 0, 10, "Spain", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [195, "LK", "LKA", "AS", 0, 10, "Sri Lanka", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [196, "SH", "SHN", "AF", 0, 10, "St. Helena", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [197, "KN", "KNA", "LA", 0, 10, "St. Kitts and Nevis", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [198, "PM", "SPM", "NA", 0, 10, "St. Pierre and Miquelon", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [199, "VC", "VCT", "LA", 0, 10, "St. Vincent and the Grenadines", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [200, "SD", "SDN", "AF", 0, 10, "Sudan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [201, "SR", "SUR", "LA", 0, 10, "Suriname", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [202, "SJ", "SJM", "EU", 0, 10, "Svalbard and Jan Mayen Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [203, "SZ", "SWZ", "AF", 0, 10, "Swaziland", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [204, "SE", "SWE", "EU", 0, 10, "Sweden", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [205, "CH", "CHE", "EU", 0, 10, "Switzerland", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [206, "SY", "SYR", "AS", 0, 10, "Syrian Arab Republic", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [207, "TW", "TWN", "AS", 0, 10, "Taiwan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [208, "TJ", "TJK", "AS", 0, 10, "Tajikistan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [209, "TZ", "TZA", "AF", 0, 10, "Tanzania, United Republic of", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [210, "TH", "THA", "AS", 0, 10, "Thailand", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [211, "TG", "TGO", "AF", 0, 10, "Togo", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [212, "TK", "TKL", "AU", 0, 10, "Tokelau", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [213, "TO", "TON", "AU", 0, 10, "Tonga", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [214, "TT", "TTO", "LA", 0, 10, "Trinidad and Tobago", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [215, "TN", "TUN", "AF", 0, 10, "Tunisia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [216, "TR", "TUR", "EU", 0, 10, "Turkey", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [217, "TM", "TKM", "AS", 0, 10, "Turkmenistan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [218, "TC", "TCA", "LA", 0, 10, "Turks and Caicos Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [219, "TV", "TUV", "AU", 0, 10, "Tuvalu", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [220, "UG", "UGA", "AF", 0, 10, "Uganda", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [221, "UA", "UKR", "EU", 0, 10, "Ukraine", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [222, "AE", "ARE", "AS", 0, 10, "United Arab Emirates", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [223, "GB", "GBR", "EU", 0, 3, "United Kingdom (Great Britain)", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [224, "US", "USA", "NA", 0, 6, "United States", "/\\d{5}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [225, "VI", "VIR", "LA", 0, 10, "United States Virgin Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [226, "UY", "URY", "LA", 0, 10, "Uruguay", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [227, "UZ", "UZB", "AS", 0, 10, "Uzbekistan", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [228, "VU", "VUT", "AU", 0, 10, "Vanuatu", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [229, "VA", "VAT", "EU", 0, 10, "Vatican City State", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [230, "VE", "VEN", "LA", 0, 10, "Venezuela", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [231, "VN", "VNM", "AS", 0, 10, "Viet Nam", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [232, "WF", "WLF", "AU", 0, 10, "Wallis And Futuna Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [233, "EH", "ESH", "AF", 0, 10, "Western Sahara", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [234, "YE", "YEM", "AS", 0, 10, "Yemen", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [236, "ZR", "ZAR", "AF", 0, 10, "Zaire", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [237, "ZM", "ZMB", "AF", 0, 10, "Zambia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [238, "ZW", "ZWE", "AF", 0, 10, "Zimbabwe", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [239, "AP", "", "", 0, 10, "Asia-Pacific", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [240, "RS", "SRB", "EU", 0, 10, "Serbia", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2017-07-21T08:52:57+08:00", 1634878320], [241, "AX", "", "", 0, 10, "Aland Islands", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [242, "EU", "", "", 0, 10, "Europe", "/\\d{4}/", "", 1, "2009-03-03T11:43:39+09:00", "2009-08-07T13:18:53+08:00", 1634878320], [243, "ME", "MNE", "EU", 0, 10, "Montenegro", "/d{4}/", "", 1, "2013-05-18T08:00:00+08:00", "2013-05-28T19:54:49+08:00", 1634878320], [244, "GG", "GGY", "EU", 0, 10, "Guernsey", "/d{4}/", "", 1, "2017-07-05T11:00:00+08:00", "2017-07-05T11:12:44+08:00", 1634878320], [245, "JE", "JEY", "EU", 0, 10, "Jersey", "/d{4}/", "", 1, "2017-07-05T11:00:00+08:00", "2017-07-05T11:12:44+08:00", 1634878320], [246, "IM", "IMN", "EU", 0, 10, "Isle of Man", "/d{4}/", "", 1, "2017-07-06T15:00:00+08:00", "2017-07-06T15:21:08+08:00", 1634878320], [247, "BL", "BLM", "LA", 0, 10, "Saint Barthelemy", "/d{4}/", "", 1, "2017-09-07T15:00:00+08:00", "2017-09-07T12:31:49+08:00", 1634878320], [248, "BQ", "BES", "LA", 0, 10, "Bonaire, Saint Eustatius and Saba", "/d{4}/", "", 1, "2017-09-07T15:00:00+08:00", "2017-09-07T12:31:49+08:00", 1634878320], [249, "GS", "SGS", "LA", 0, 10, "South Georgia and the South Sandwich Islands", "/d{4}/", "", 1, "2017-09-07T15:00:00+08:00", "2017-09-07T12:31:49+08:00", 1634878320], [250, "MF", "MAF", "LA", 0, 10, "Saint Martin (French part)", "/d{4}/", "", 1, "2017-09-07T15:00:00+08:00", "2017-09-07T12:31:49+08:00", 1634878320], [251, "SS", "SSD", "AF", 0, 10, "South Sudan", "/d{4}/", "", 1, "2017-09-07T15:00:00+08:00", "2017-09-07T12:31:49+08:00", 1634878320], [252, "XK", "XKX", "EU", 0, 10, "Kosovo", "/d{4}/", "", 1, "2017-09-07T15:00:00+08:00", "2017-09-07T12:31:49+08:00", 1634878320]]
        }, {
          "name": "custom_app_data",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "DocumentId",
            "value": "TEXT"
          }, {
            "column": "Data",
            "value": "TEXT"
          }, {
            "column": "KeyInt",
            "value": "INTEGER"
          }, {
            "column": "KeyString",
            "value": "TEXT"
          }, {
            "column": "Label",
            "value": "TEXT"
          }, {
            "column": "OperationalUnit",
            "value": "INTEGER"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "Permission",
            "value": "TEXT"
          }, {
            "column": "Deleted",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "custom_fields",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "System",
            "value": "TEXT"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "ApiName",
            "value": "TEXT"
          }, {
            "column": "DeputyField",
            "value": "TEXT"
          }, {
            "column": "SortOrder",
            "value": "INTEGER"
          }, {
            "column": "`Default`",
            "value": "TEXT"
          }, {
            "column": "Type",
            "value": "INTEGER"
          }, {
            "column": "DisplayTiming",
            "value": "INTEGER"
          }, {
            "column": "ConditionalRules",
            "value": "TEXT"
          }, {
            "column": "`Action`",
            "value": "INTEGER"
          }, {
            "column": "Published",
            "value": "INTEGER"
          }, {
            "column": "Valuelist",
            "value": "TEXT"
          }, {
            "column": "TriggerScript",
            "value": "INTEGER"
          }, {
            "column": "Validation",
            "value": "TEXT"
          }, {
            "column": "Helptext",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "custom_field_data",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "System",
            "value": "TEXT"
          }, {
            "column": "F01",
            "value": "TEXT"
          }, {
            "column": "F02",
            "value": "TEXT"
          }, {
            "column": "F03",
            "value": "TEXT"
          }, {
            "column": "F04",
            "value": "TEXT"
          }, {
            "column": "F05",
            "value": "TEXT"
          }, {
            "column": "F06",
            "value": "TEXT"
          }, {
            "column": "F07",
            "value": "TEXT"
          }, {
            "column": "F08",
            "value": "TEXT"
          }, {
            "column": "F09",
            "value": "TEXT"
          }, {
            "column": "F10",
            "value": "TEXT"
          }, {
            "column": "F11",
            "value": "TEXT"
          }, {
            "column": "F12",
            "value": "TEXT"
          }, {
            "column": "F13",
            "value": "TEXT"
          }, {
            "column": "F14",
            "value": "TEXT"
          }, {
            "column": "F15",
            "value": "TEXT"
          }, {
            "column": "F16",
            "value": "TEXT"
          }, {
            "column": "F17",
            "value": "TEXT"
          }, {
            "column": "F18",
            "value": "TEXT"
          }, {
            "column": "F19",
            "value": "TEXT"
          }, {
            "column": "F20",
            "value": "TEXT"
          }, {
            "column": "F21",
            "value": "TEXT"
          }, {
            "column": "F22",
            "value": "TEXT"
          }, {
            "column": "F23",
            "value": "TEXT"
          }, {
            "column": "F24",
            "value": "TEXT"
          }, {
            "column": "F25",
            "value": "TEXT"
          }, {
            "column": "F26",
            "value": "TEXT"
          }, {
            "column": "F27",
            "value": "TEXT"
          }, {
            "column": "F28",
            "value": "TEXT"
          }, {
            "column": "F29",
            "value": "TEXT"
          }, {
            "column": "F30",
            "value": "TEXT"
          }, {
            "column": "F31",
            "value": "TEXT"
          }, {
            "column": "F32",
            "value": "TEXT"
          }, {
            "column": "F33",
            "value": "TEXT"
          }, {
            "column": "F34",
            "value": "TEXT"
          }, {
            "column": "F35",
            "value": "TEXT"
          }, {
            "column": "F36",
            "value": "TEXT"
          }, {
            "column": "F37",
            "value": "TEXT"
          }, {
            "column": "F38",
            "value": "TEXT"
          }, {
            "column": "F39",
            "value": "TEXT"
          }, {
            "column": "F40",
            "value": "TEXT"
          }, {
            "column": "F41",
            "value": "TEXT"
          }, {
            "column": "F42",
            "value": "TEXT"
          }, {
            "column": "F43",
            "value": "TEXT"
          }, {
            "column": "F44",
            "value": "TEXT"
          }, {
            "column": "F45",
            "value": "TEXT"
          }, {
            "column": "F46",
            "value": "TEXT"
          }, {
            "column": "F47",
            "value": "TEXT"
          }, {
            "column": "F48",
            "value": "TEXT"
          }, {
            "column": "F49",
            "value": "TEXT"
          }, {
            "column": "F50",
            "value": "TEXT"
          }, {
            "column": "F51",
            "value": "TEXT"
          }, {
            "column": "F52",
            "value": "TEXT"
          }, {
            "column": "F53",
            "value": "TEXT"
          }, {
            "column": "F54",
            "value": "TEXT"
          }, {
            "column": "F55",
            "value": "TEXT"
          }, {
            "column": "F56",
            "value": "TEXT"
          }, {
            "column": "F57",
            "value": "TEXT"
          }, {
            "column": "F58",
            "value": "TEXT"
          }, {
            "column": "F59",
            "value": "TEXT"
          }, {
            "column": "F60",
            "value": "TEXT"
          }, {
            "column": "F61",
            "value": "TEXT"
          }, {
            "column": "F62",
            "value": "TEXT"
          }, {
            "column": "F63",
            "value": "TEXT"
          }, {
            "column": "F64",
            "value": "TEXT"
          }, {
            "column": "F65",
            "value": "TEXT"
          }, {
            "column": "F66",
            "value": "TEXT"
          }, {
            "column": "F67",
            "value": "TEXT"
          }, {
            "column": "F68",
            "value": "TEXT"
          }, {
            "column": "F69",
            "value": "TEXT"
          }, {
            "column": "F70",
            "value": "TEXT"
          }, {
            "column": "F71",
            "value": "TEXT"
          }, {
            "column": "F72",
            "value": "TEXT"
          }, {
            "column": "F73",
            "value": "TEXT"
          }, {
            "column": "F74",
            "value": "TEXT"
          }, {
            "column": "F75",
            "value": "TEXT"
          }, {
            "column": "F76",
            "value": "TEXT"
          }, {
            "column": "F77",
            "value": "TEXT"
          }, {
            "column": "F78",
            "value": "TEXT"
          }, {
            "column": "F79",
            "value": "TEXT"
          }, {
            "column": "F80",
            "value": "TEXT"
          }, {
            "column": "F81",
            "value": "TEXT"
          }, {
            "column": "F82",
            "value": "TEXT"
          }, {
            "column": "F83",
            "value": "TEXT"
          }, {
            "column": "F84",
            "value": "TEXT"
          }, {
            "column": "F85",
            "value": "TEXT"
          }, {
            "column": "F86",
            "value": "TEXT"
          }, {
            "column": "F87",
            "value": "TEXT"
          }, {
            "column": "F88",
            "value": "TEXT"
          }, {
            "column": "F89",
            "value": "TEXT"
          }, {
            "column": "F90",
            "value": "TEXT"
          }, {
            "column": "F91",
            "value": "TEXT"
          }, {
            "column": "F92",
            "value": "TEXT"
          }, {
            "column": "F93",
            "value": "TEXT"
          }, {
            "column": "F94",
            "value": "TEXT"
          }, {
            "column": "F95",
            "value": "TEXT"
          }, {
            "column": "F96",
            "value": "TEXT"
          }, {
            "column": "F97",
            "value": "TEXT"
          }, {
            "column": "F98",
            "value": "TEXT"
          }, {
            "column": "F99",
            "value": "TEXT"
          }, {
            "column": "F100",
            "value": "TEXT"
          }, {
            "column": "F101",
            "value": "TEXT"
          }, {
            "column": "F102",
            "value": "TEXT"
          }, {
            "column": "F103",
            "value": "TEXT"
          }, {
            "column": "F104",
            "value": "TEXT"
          }, {
            "column": "F105",
            "value": "TEXT"
          }, {
            "column": "F106",
            "value": "TEXT"
          }, {
            "column": "F107",
            "value": "TEXT"
          }, {
            "column": "F108",
            "value": "TEXT"
          }, {
            "column": "F109",
            "value": "TEXT"
          }, {
            "column": "F110",
            "value": "TEXT"
          }, {
            "column": "F111",
            "value": "TEXT"
          }, {
            "column": "F112",
            "value": "TEXT"
          }, {
            "column": "F113",
            "value": "TEXT"
          }, {
            "column": "F114",
            "value": "TEXT"
          }, {
            "column": "F115",
            "value": "TEXT"
          }, {
            "column": "F116",
            "value": "TEXT"
          }, {
            "column": "F117",
            "value": "TEXT"
          }, {
            "column": "F118",
            "value": "TEXT"
          }, {
            "column": "F119",
            "value": "TEXT"
          }, {
            "column": "F120",
            "value": "TEXT"
          }, {
            "column": "F121",
            "value": "TEXT"
          }, {
            "column": "F122",
            "value": "TEXT"
          }, {
            "column": "F123",
            "value": "TEXT"
          }, {
            "column": "F124",
            "value": "TEXT"
          }, {
            "column": "F125",
            "value": "TEXT"
          }, {
            "column": "F126",
            "value": "TEXT"
          }, {
            "column": "F127",
            "value": "TEXT"
          }, {
            "column": "F128",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employees",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Company",
            "value": "INTEGER"
          }, {
            "column": "FirstName",
            "value": "TEXT"
          }, {
            "column": "LastName",
            "value": "TEXT"
          }, {
            "column": "DisplayName",
            "value": "TEXT"
          }, {
            "column": "OtherName",
            "value": "TEXT"
          }, {
            "column": "Salutation",
            "value": "TEXT"
          }, {
            "column": "MainAddress",
            "value": "INTEGER"
          }, {
            "column": "PostalAddress",
            "value": "INTEGER"
          }, {
            "column": "Contact",
            "value": "INTEGER"
          }, {
            "column": "EmergencyAddress",
            "value": "INTEGER"
          }, {
            "column": "DateOfBirth",
            "value": "TEXT"
          }, {
            "column": "Gender",
            "value": "INTEGER"
          }, {
            "column": "Photo",
            "value": "INTEGER"
          }, {
            "column": "UserId",
            "value": "INTEGER"
          }, {
            "column": "JobAppId",
            "value": "INTEGER"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "StartDate",
            "value": "TEXT"
          }, {
            "column": "TerminationDate",
            "value": "TEXT"
          }, {
            "column": "StressProfile",
            "value": "INTEGER"
          }, {
            "column": "Position",
            "value": "TEXT"
          }, {
            "column": "HigherDuty",
            "value": "NUMERIC"
          }, {
            "column": "Role",
            "value": "INTEGER"
          }, {
            "column": "AllowAppraisal",
            "value": "NUMERIC"
          }, {
            "column": "HistoryId",
            "value": "INTEGER"
          }, {
            "column": "CustomFieldData",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_agreements",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "EmployeeId",
            "value": "INTEGER"
          }, {
            "column": "PayPoint",
            "value": "INTEGER"
          }, {
            "column": "EmpType",
            "value": "INTEGER"
          }, {
            "column": "CompanyName",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "StartDate",
            "value": "TEXT"
          }, {
            "column": "EndDate",
            "value": "TEXT"
          }, {
            "column": "Contract",
            "value": "INTEGER"
          }, {
            "column": "SalaryPayRule",
            "value": "INTEGER"
          }, {
            "column": "ContractFile",
            "value": "INTEGER"
          }, {
            "column": "PayrollId",
            "value": "TEXT"
          }, {
            "column": "PayPeriod",
            "value": "INTEGER"
          }, {
            "column": "HistoryId",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_agreement_history",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "AgreementId",
            "value": "INTEGER"
          }, {
            "column": "PayPoint",
            "value": "INTEGER"
          }, {
            "column": "EmpType",
            "value": "INTEGER"
          }, {
            "column": "CompanyName",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "StartDate",
            "value": "TEXT"
          }, {
            "column": "Contract",
            "value": "INTEGER"
          }, {
            "column": "SalaryPayRule",
            "value": "INTEGER"
          }, {
            "column": "ContractFile",
            "value": "INTEGER"
          }, {
            "column": "PayrollId",
            "value": "TEXT"
          }, {
            "column": "PayPeriod",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_appraisal",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "DayTimestamp",
            "value": "INTEGER"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "Mark01",
            "value": "REAL"
          }, {
            "column": "Mark02",
            "value": "REAL"
          }, {
            "column": "Mark03",
            "value": "REAL"
          }, {
            "column": "Mark04",
            "value": "REAL"
          }, {
            "column": "Mark05",
            "value": "REAL"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_availability",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "Type",
            "value": "INTEGER"
          }, {
            "column": "MaxDateRecurringGenerated",
            "value": "TEXT"
          }, {
            "column": "StartTime",
            "value": "INTEGER"
          }, {
            "column": "EndTime",
            "value": "INTEGER"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "Schedule",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_history",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Company",
            "value": "INTEGER"
          }, {
            "column": "FirstName",
            "value": "TEXT"
          }, {
            "column": "LastName",
            "value": "TEXT"
          }, {
            "column": "DisplayName",
            "value": "TEXT"
          }, {
            "column": "OtherName",
            "value": "TEXT"
          }, {
            "column": "Salutation",
            "value": "TEXT"
          }, {
            "column": "MainAddress",
            "value": "INTEGER"
          }, {
            "column": "PostalAddress",
            "value": "INTEGER"
          }, {
            "column": "EmergencyAddress",
            "value": "INTEGER"
          }, {
            "column": "DateOfBirth",
            "value": "TEXT"
          }, {
            "column": "Gender",
            "value": "INTEGER"
          }, {
            "column": "Photo",
            "value": "INTEGER"
          }, {
            "column": "JobAppId",
            "value": "INTEGER"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "StartDate",
            "value": "TEXT"
          }, {
            "column": "TerminationDate",
            "value": "TEXT"
          }, {
            "column": "Position",
            "value": "TEXT"
          }, {
            "column": "Role",
            "value": "INTEGER"
          }, {
            "column": "EmployeeId",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_paycycles",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "EmployeeId",
            "value": "INTEGER"
          }, {
            "column": "EmployeeAgreementId",
            "value": "INTEGER"
          }, {
            "column": "PeriodId",
            "value": "INTEGER"
          }, {
            "column": "RecommendedLoadings",
            "value": "NUMERIC"
          }, {
            "column": "Timesheets",
            "value": "INTEGER"
          }, {
            "column": "TimesheetsTimeApproved",
            "value": "INTEGER"
          }, {
            "column": "TimesheetsPayApproved",
            "value": "INTEGER"
          }, {
            "column": "PaycycleRules",
            "value": "INTEGER"
          }, {
            "column": "PaycycleRulesApproved",
            "value": "INTEGER"
          }, {
            "column": "Exported",
            "value": "NUMERIC"
          }, {
            "column": "ExportId",
            "value": "INTEGER"
          }, {
            "column": "Paid",
            "value": "NUMERIC"
          }, {
            "column": "TimeTotal",
            "value": "REAL"
          }, {
            "column": "CostTotal",
            "value": "REAL"
          }, {
            "column": "EmployeeAgreementHistoryId",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_paycycle_returns",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "PaycycleId",
            "value": "INTEGER"
          }, {
            "column": "PayRule",
            "value": "INTEGER"
          }, {
            "column": "Approved",
            "value": "NUMERIC"
          }, {
            "column": "Overridden",
            "value": "NUMERIC"
          }, {
            "column": "Value",
            "value": "REAL"
          }, {
            "column": "Cost",
            "value": "REAL"
          }, {
            "column": "OverrideComment",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_roles",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Role",
            "value": "TEXT"
          }, {
            "column": "Ranking",
            "value": "INTEGER"
          }, {
            "column": "ReportTo",
            "value": "INTEGER"
          }, {
            "column": "Permissions",
            "value": "TEXT"
          }, {
            "column": "Require2fa",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_salary_opunit_costing",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "EmployeeAgreement",
            "value": "INTEGER"
          }, {
            "column": "AgreementHistory",
            "value": "INTEGER"
          }, {
            "column": "DayTimestamp",
            "value": "INTEGER"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "OpUnit",
            "value": "INTEGER"
          }, {
            "column": "Cost",
            "value": "REAL"
          }, {
            "column": "Final",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_workplaces",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "EmployeeId",
            "value": "INTEGER"
          }, {
            "column": "Company",
            "value": "INTEGER"
          }, {
            "column": "SortOrder",
            "value": "INTEGER"
          }, {
            "column": "Agreement1",
            "value": "INTEGER"
          }, {
            "column": "Agreement2",
            "value": "INTEGER"
          }, {
            "column": "Agreement3",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employment_conditions",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "Description",
            "value": "TEXT"
          }, {
            "column": "AwardLevel",
            "value": "TEXT"
          }, {
            "column": "EmploymentBasis",
            "value": "INTEGER"
          }, {
            "column": "EmploymentCategory",
            "value": "INTEGER"
          }, {
            "column": "EmploymentPeriod",
            "value": "INTEGER"
          }, {
            "column": "EmploymentStatus",
            "value": "INTEGER"
          }, {
            "column": "ProbationaryPeriod",
            "value": "INTEGER"
          }, {
            "column": "WorkingDaysPerPeriod",
            "value": "REAL"
          }, {
            "column": "UsualStartTime",
            "value": "TEXT"
          }, {
            "column": "UsualFinishTime",
            "value": "TEXT"
          }, {
            "column": "UsualMealbreak",
            "value": "TEXT"
          }, {
            "column": "AvgHoursPerDay",
            "value": "REAL"
          }, {
            "column": "MinHoursPerDay",
            "value": "REAL"
          }, {
            "column": "MinHoursForLeave",
            "value": "REAL"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_contracts",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Code",
            "value": "TEXT"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "Description",
            "value": "TEXT"
          }, {
            "column": "EmploymentBasis",
            "value": "INTEGER"
          }, {
            "column": "EmploymentCategory",
            "value": "INTEGER"
          }, {
            "column": "EmploymentStatus",
            "value": "INTEGER"
          }, {
            "column": "EmploymentCondition",
            "value": "INTEGER"
          }, {
            "column": "BasePayRule",
            "value": "INTEGER"
          }, {
            "column": "StressProfile",
            "value": "INTEGER"
          }, {
            "column": "StartDate",
            "value": "TEXT"
          }, {
            "column": "EndDate",
            "value": "TEXT"
          }, {
            "column": "PeriodType",
            "value": "INTEGER"
          }, {
            "column": "File",
            "value": "INTEGER"
          }, {
            "column": "StrictLeaveApproval",
            "value": "NUMERIC"
          }, {
            "column": "Award",
            "value": "TEXT"
          }, {
            "column": "EmploymentSubType",
            "value": "TEXT"
          }, {
            "column": "AwardStartDate",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "employee_contract_leave_rules",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "ContractId",
            "value": "INTEGER"
          }, {
            "column": "LeaveRuleId",
            "value": "INTEGER"
          }, {
            "column": "BasePayRule",
            "value": "INTEGER"
          }, {
            "column": "LoadingPayRule1",
            "value": "INTEGER"
          }, {
            "column": "LoadingPayRule2",
            "value": "INTEGER"
          }, {
            "column": "LoadingPayRule3",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "events",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Title",
            "value": "TEXT"
          }, {
            "column": "Schedule",
            "value": "INTEGER"
          }, {
            "column": "Colour",
            "value": "TEXT"
          }, {
            "column": "ShowOnRoster",
            "value": "NUMERIC"
          }, {
            "column": "AddToBudget",
            "value": "REAL"
          }, {
            "column": "BlockTimeOff",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "geo",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Orm",
            "value": "TEXT"
          }, {
            "column": "RecId",
            "value": "INTEGER"
          }, {
            "column": "Longitude",
            "value": "REAL"
          }, {
            "column": "Latitude",
            "value": "REAL"
          }, {
            "column": "No",
            "value": "TEXT"
          }, {
            "column": "Street",
            "value": "TEXT"
          }, {
            "column": "Suburb",
            "value": "TEXT"
          }, {
            "column": "State",
            "value": "TEXT"
          }, {
            "column": "Postcode",
            "value": "TEXT"
          }, {
            "column": "Country",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "journal",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "EmployeeId",
            "value": "INTEGER"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "kiosks",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "InstallationId",
            "value": "TEXT"
          }, {
            "column": "Company",
            "value": "INTEGER"
          }, {
            "column": "ConnectionMode",
            "value": "INTEGER"
          }, {
            "column": "SubnetRestriction",
            "value": "TEXT"
          }, {
            "column": "AuthenticationMode",
            "value": "INTEGER"
          }, {
            "column": "UseBiometric",
            "value": "NUMERIC"
          }, {
            "column": "LastActivity",
            "value": "TEXT"
          }, {
            "column": "IpAddress",
            "value": "TEXT"
          }, {
            "column": "EnableMultiLocations",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "leaves",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "EmployeeHistory",
            "value": "INTEGER"
          }, {
            "column": "Company",
            "value": "INTEGER"
          }, {
            "column": "LeaveRule",
            "value": "INTEGER"
          }, {
            "column": "Start",
            "value": "INTEGER"
          }, {
            "column": "DateStart",
            "value": "TEXT"
          }, {
            "column": "`End`",
            "value": "INTEGER"
          }, {
            "column": "DateEnd",
            "value": "TEXT"
          }, {
            "column": "Days",
            "value": "REAL"
          }, {
            "column": "ApproverTime",
            "value": "INTEGER"
          }, {
            "column": "ApproverPay",
            "value": "INTEGER"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "Status",
            "value": "INTEGER"
          }, {
            "column": "ApprovalComment",
            "value": "TEXT"
          }, {
            "column": "TotalHours",
            "value": "REAL"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "leave_accruals",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "EmployeeHistory",
            "value": "INTEGER"
          }, {
            "column": "TransactionDate",
            "value": "TEXT"
          }, {
            "column": "Type",
            "value": "INTEGER"
          }, {
            "column": "LeaveRule",
            "value": "INTEGER"
          }, {
            "column": "Hours",
            "value": "REAL"
          }, {
            "column": "Days",
            "value": "REAL"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "FkId",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "leave_pay_lines",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "LeaveId",
            "value": "INTEGER"
          }, {
            "column": "LeaveRule",
            "value": "INTEGER"
          }, {
            "column": "EmployeeAgreement",
            "value": "INTEGER"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "StartTime",
            "value": "TEXT"
          }, {
            "column": "EndTime",
            "value": "TEXT"
          }, {
            "column": "Hours",
            "value": "TEXT"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "TimesheetId",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "leave_rules",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "Type",
            "value": "TEXT"
          }, {
            "column": "Description",
            "value": "TEXT"
          }, {
            "column": "MaxAllowedAnnually",
            "value": "REAL"
          }, {
            "column": "PaidLeave",
            "value": "NUMERIC"
          }, {
            "column": "AnnualRollOver",
            "value": "NUMERIC"
          }, {
            "column": "Visible",
            "value": "NUMERIC"
          }, {
            "column": "UnitType",
            "value": "INTEGER"
          }, {
            "column": "ResetType",
            "value": "INTEGER"
          }, {
            "column": "ResetSchedule",
            "value": "INTEGER"
          }, {
            "column": "ResetValue",
            "value": "REAL"
          }, {
            "column": "PayoutOnTermination",
            "value": "NUMERIC"
          }, {
            "column": "EntitlementAfterMonth",
            "value": "INTEGER"
          }, {
            "column": "ExportType",
            "value": "INTEGER"
          }, {
            "column": "PayrollCategory",
            "value": "TEXT"
          }, {
            "column": "CalcType",
            "value": "INTEGER"
          }, {
            "column": "Calc",
            "value": "TEXT"
          }, {
            "column": "F00",
            "value": "TEXT"
          }, {
            "column": "F01",
            "value": "TEXT"
          }, {
            "column": "F02",
            "value": "TEXT"
          }, {
            "column": "F03",
            "value": "TEXT"
          }, {
            "column": "F04",
            "value": "TEXT"
          }, {
            "column": "F05",
            "value": "TEXT"
          }, {
            "column": "F06",
            "value": "TEXT"
          }, {
            "column": "F07",
            "value": "TEXT"
          }, {
            "column": "F08",
            "value": "TEXT"
          }, {
            "column": "F09",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "memos",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "ShowFrom",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "ShowTill",
            "value": "TEXT"
          }, {
            "column": "Title",
            "value": "TEXT"
          }, {
            "column": "Content",
            "value": "TEXT"
          }, {
            "column": "Type",
            "value": "INTEGER"
          }, {
            "column": "File",
            "value": "INTEGER"
          }, {
            "column": "Url",
            "value": "TEXT"
          }, {
            "column": "ConfirmText",
            "value": "TEXT"
          }, {
            "column": "Keyword",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "_DPMetaData",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "operational_units",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "Company",
            "value": "INTEGER"
          }, {
            "column": "WorkType",
            "value": "TEXT"
          }, {
            "column": "ParentOperationalUnit",
            "value": "INTEGER"
          }, {
            "column": "OperationalUnitName",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "PayrollExportName",
            "value": "TEXT"
          }, {
            "column": "Address",
            "value": "INTEGER"
          }, {
            "column": "Contact",
            "value": "INTEGER"
          }, {
            "column": "RosterSortOrder",
            "value": "INTEGER"
          }, {
            "column": "ShowOnRoster",
            "value": "NUMERIC"
          }, {
            "column": "Colour",
            "value": "TEXT"
          }, {
            "column": "RosterActiveHoursSchedule",
            "value": "INTEGER"
          }, {
            "column": "DailyRosterBudget",
            "value": "REAL"
          }, {
            "column": "OperationalUnitType",
            "value": "INTEGER"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "pay_periods",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "StartDate",
            "value": "TEXT"
          }, {
            "column": "Cycle",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "pay_rules",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "PayTitle",
            "value": "TEXT"
          }, {
            "column": "RemunerationType",
            "value": "INTEGER"
          }, {
            "column": "RemunerationBy",
            "value": "INTEGER"
          }, {
            "column": "AnnualSalary",
            "value": "REAL"
          }, {
            "column": "HourlyRate",
            "value": "REAL"
          }, {
            "column": "IsMultiplier",
            "value": "NUMERIC"
          }, {
            "column": "MultiplierValue",
            "value": "REAL"
          }, {
            "column": "MultiplierBaseRate",
            "value": "INTEGER"
          }, {
            "column": "MinimumType",
            "value": "INTEGER"
          }, {
            "column": "MaximumType",
            "value": "INTEGER"
          }, {
            "column": "MinimumValue",
            "value": "REAL"
          }, {
            "column": "MaximumValue",
            "value": "REAL"
          }, {
            "column": "MinimumShiftLength",
            "value": "TEXT"
          }, {
            "column": "MaximumShiftLength",
            "value": "TEXT"
          }, {
            "column": "AdvancedCalculation",
            "value": "TEXT"
          }, {
            "column": "IsExported",
            "value": "NUMERIC"
          }, {
            "column": "UnitValue",
            "value": "REAL"
          }, {
            "column": "Schedule",
            "value": "INTEGER"
          }, {
            "column": "RecommendWith",
            "value": "INTEGER"
          }, {
            "column": "DexmlScript",
            "value": "INTEGER"
          }, {
            "column": "DexmlScriptParam",
            "value": "TEXT"
          }, {
            "column": "PeriodType",
            "value": "INTEGER"
          }, {
            "column": "PayPortionRule",
            "value": "INTEGER"
          }, {
            "column": "PayrollCategory",
            "value": "TEXT"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "public_holidays",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Title",
            "value": "TEXT"
          }, {
            "column": "Schedule",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "rosters",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "StartTime",
            "value": "INTEGER"
          }, {
            "column": "EndTime",
            "value": "INTEGER"
          }, {
            "column": "Mealbreak",
            "value": "TEXT"
          }, {
            "column": "Slots",
            "value": "TEXT"
          }, {
            "column": "TotalTime",
            "value": "REAL"
          }, {
            "column": "Cost",
            "value": "REAL"
          }, {
            "column": "OperationalUnit",
            "value": "INTEGER"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "Warning",
            "value": "TEXT"
          }, {
            "column": "WarningOverrideComment",
            "value": "TEXT"
          }, {
            "column": "Published",
            "value": "NUMERIC"
          }, {
            "column": "MatchedByTimesheet",
            "value": "INTEGER"
          }, {
            "column": "Open",
            "value": "NUMERIC"
          }, {
            "column": "ApprovalRequired",
            "value": "NUMERIC"
          }, {
            "column": "ConfirmStatus",
            "value": "INTEGER"
          }, {
            "column": "ConfirmComment",
            "value": "TEXT"
          }, {
            "column": "ConfirmBy",
            "value": "INTEGER"
          }, {
            "column": "ConfirmTime",
            "value": "INTEGER"
          }, {
            "column": "SwapStatus",
            "value": "INTEGER"
          }, {
            "column": "SwapManageBy",
            "value": "INTEGER"
          }, {
            "column": "ShiftTemplate",
            "value": "INTEGER"
          }, {
            "column": "ConnectStatus",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "roster_opens",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Roster",
            "value": "INTEGER"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "Accepted",
            "value": "NUMERIC"
          }, {
            "column": "Seen",
            "value": "NUMERIC"
          }, {
            "column": "Declined",
            "value": "NUMERIC"
          }, {
            "column": "Link",
            "value": "TEXT"
          }, {
            "column": "Message",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "roster_swaps",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "SourceRoster",
            "value": "INTEGER"
          }, {
            "column": "TargetRoster",
            "value": "INTEGER"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "Status",
            "value": "INTEGER"
          }, {
            "column": "RequestMessage",
            "value": "TEXT"
          }, {
            "column": "ResponseMessage",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "sales_data",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "Timestamp",
            "value": "INTEGER"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "OperationalUnit",
            "value": "INTEGER"
          }, {
            "column": "SalesType",
            "value": "TEXT"
          }, {
            "column": "SalesRef",
            "value": "TEXT"
          }, {
            "column": "SalesQty",
            "value": "REAL"
          }, {
            "column": "SalesAmount",
            "value": "REAL"
          }, {
            "column": "SalesPayload",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "schedules",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "StartDate",
            "value": "TEXT"
          }, {
            "column": "StartTime",
            "value": "TEXT"
          }, {
            "column": "EndTime",
            "value": "TEXT"
          }, {
            "column": "RepeatType",
            "value": "INTEGER"
          }, {
            "column": "RepeatEvery",
            "value": "INTEGER"
          }, {
            "column": "WeeklyOnDays",
            "value": "TEXT"
          }, {
            "column": "MonthlyOnDates",
            "value": "TEXT"
          }, {
            "column": "MonthlyOnDays",
            "value": "TEXT"
          }, {
            "column": "EndDate",
            "value": "TEXT"
          }, {
            "column": "Exception",
            "value": "TEXT"
          }, {
            "column": "Saved",
            "value": "NUMERIC"
          }, {
            "column": "Orm",
            "value": "TEXT"
          }, {
            "column": "Template",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "sms_logs",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Destination",
            "value": "TEXT"
          }, {
            "column": "Message",
            "value": "TEXT"
          }, {
            "column": "Count",
            "value": "INTEGER"
          }, {
            "column": "SmsId",
            "value": "TEXT"
          }, {
            "column": "DeliveryReport",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "states",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Country",
            "value": "INTEGER"
          }, {
            "column": "Code",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "SortOrder",
            "value": "INTEGER"
          }, {
            "column": "State",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }],
          "values": [[10, 224, "AL", 1, 10, "Alabama", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [11, 224, "AK", 1, 10, "Alaska", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [12, 224, "AZ", 1, 10, "Arizona", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [13, 224, "AR", 1, 10, "Arkansas", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [15, 224, "CA", 1, 10, "California", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:43:49+09:00", 1634878320], [16, 224, "CO", 1, 10, "Colorado", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [17, 224, "CT", 1, 10, "Connecticut", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [18, 224, "DE", 1, 10, "Delaware", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [19, 224, "DC", 1, 10, "Washington DC", 1, "2009-03-03T12:31:40+09:00", "2015-09-15T16:35:40+08:00", 1634878320], [20, 224, "FL", 1, 10, "Florida", 1, "2009-03-03T12:31:40+09:00", "2009-03-11T09:21:53+09:00", 1634878320], [21, 224, "GA", 1, 10, "Georgia", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [22, 224, "GU", 1, 10, "Guam", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [23, 224, "HI", 1, 10, "Hawaii", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [24, 224, "ID", 1, 10, "Idaho", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [25, 224, "IL", 1, 10, "Illinois", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [26, 224, "IN", 1, 10, "Indiana", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [27, 224, "IA", 1, 10, "Iowa", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [28, 224, "KS", 1, 10, "Kansas", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [29, 224, "KY", 1, 10, "Kentucky", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [30, 224, "LA", 1, 10, "Louisiana", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [31, 224, "ME", 1, 10, "Maine", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [32, 224, "MD", 1, 10, "Maryland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [33, 224, "MA", 1, 10, "Massachusetts", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [34, 224, "MI", 1, 10, "Michigan", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [35, 224, "MN", 1, 10, "Minnesota", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [36, 224, "MS", 1, 10, "Mississippi", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [37, 224, "MO", 1, 10, "Missouri", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [38, 224, "MT", 1, 10, "Montana", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [39, 224, "NE", 1, 10, "Nebraska", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [40, 224, "NV", 1, 10, "Nevada", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [41, 224, "NH", 1, 10, "New Hampshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [42, 224, "NJ", 1, 10, "New Jersey", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [43, 224, "NM", 1, 10, "New Mexico", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [44, 224, "NY", 1, 10, "New York", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [45, 224, "NC", 1, 10, "North Carolina", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [46, 224, "ND", 1, 10, "North Dakota", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [47, 224, "OH", 1, 10, "Ohio", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [48, 224, "OK", 1, 10, "Oklahoma", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [49, 224, "OR", 1, 10, "Oregon", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [50, 224, "PA", 1, 10, "Pennsylvania", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [51, 224, "PR", 1, 10, "Puerto Rico", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [52, 224, "RI", 1, 10, "Rhode Island", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [53, 224, "SC", 1, 10, "South Carolina", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [54, 224, "SD", 1, 10, "South Dakota", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [55, 224, "TN", 1, 10, "Tennessee", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [56, 224, "TX", 1, 10, "Texas", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [57, 224, "UT", 1, 10, "Utah", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [58, 224, "VT", 1, 10, "Vermont", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [59, 224, "VI", 1, 10, "Virgin Islands", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [60, 224, "VA", 1, 10, "Virginia", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [61, 224, "WA", 1, 10, "Washington", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [62, 224, "WV", 1, 10, "West Virginia", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [63, 224, "WI", 1, 10, "Wisconsin", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [64, 224, "WY", 1, 10, "Wyoming", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [66, 74, "02", 1, 10, "Aisne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [67, 74, "03", 1, 10, "Allier", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [68, 74, "04", 1, 10, "Alpes-de-Haute-Provence", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [69, 74, "06", 1, 10, "Alpes-Maritimes", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [70, 74, "07", 1, 10, "Ardèche", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [71, 74, "08", 1, 10, "Ardennes", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [72, 74, "09", 1, 10, "Ariège", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [73, 74, "10", 1, 10, "Aube", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [74, 74, "01", 1, 10, "Ain", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [75, 74, "11", 1, 10, "Aude", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [76, 74, "12", 1, 10, "Aveyron", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [77, 74, "13", 1, 10, "Bouches-du-Rhône", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [78, 74, "14", 1, 10, "Calvados", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [79, 74, "15", 1, 10, "Cantal", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [80, 74, "16", 1, 10, "Charente", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [81, 74, "17", 1, 10, "Charente-Maritime", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [82, 74, "18", 1, 10, "Cher", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [83, 74, "19", 1, 10, "Corrèze", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [84, 74, "2A", 1, 10, "Corse-du-Sud", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [85, 74, "21", 1, 10, "Côte-d'Or", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [86, 74, "22", 1, 10, "Côtes-d'Armor", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:43:26+08:00", 1634878320], [87, 74, "23", 1, 10, "Creuse", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [88, 74, "24", 1, 10, "Dordogne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [89, 74, "25", 1, 10, "Doubs", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [90, 74, "26", 1, 10, "Drôme", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [91, 74, "91", 1, 10, "Essonne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [92, 74, "27", 1, 10, "Eure", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [93, 74, "28", 1, 10, "Eure-et-Loir", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [94, 74, "29", 1, 10, "Finistère", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [95, 74, "30", 1, 10, "Gard", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [96, 74, "32", 1, 10, "Gers", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [97, 74, "33", 1, 10, "Gironde", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [98, 74, "2B", 1, 10, "Haute-Corse", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [99, 74, "31", 1, 10, "Haute-Garonne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [100, 74, "43", 1, 10, "Haute-Loire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [101, 74, "52", 1, 10, "Haute-Marne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [102, 74, "87", 1, 10, "Haute-Vienne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [103, 74, "05", 1, 10, "Haute-Vienne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [104, 74, "92", 1, 10, "Hauts-de-Seine", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [105, 74, "34", 1, 10, "Hérault", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [106, 74, "35", 1, 10, "Ille-et-Vilaine", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [107, 74, "36", 1, 10, "Indre", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [108, 74, "37", 1, 10, "Indre-et-Loire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [109, 74, "38", 1, 10, "Isère", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [110, 74, "39", 1, 10, "Jura", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [111, 74, "40", 1, 10, "Landes", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [112, 74, "41", 1, 10, "Loir-et-Cher", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [113, 74, "42", 1, 10, "Loire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [114, 74, "44", 1, 10, "Loire-Atlantique", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [115, 74, "45", 1, 10, "Loiret", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [116, 74, "46", 1, 10, "Lot", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [117, 74, "47", 1, 10, "Lot-et-Garonne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [118, 74, "48", 1, 10, "Lozère", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [119, 74, "49", 1, 10, "Maine-et-Loire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [120, 74, "50", 1, 10, "Manche", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [121, 74, "51", 1, 10, "Marne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [122, 74, "75", 1, 10, "Paris", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [123, 74, "93", 1, 10, "Seine-Saint-Denis", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [124, 74, "80", 1, 10, "Somme", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [125, 74, "81", 1, 10, "Tarn", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [126, 74, "82", 1, 10, "Tarn-et-Garonne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [127, 74, "90", 1, 10, "Territoire de Belfort", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [128, 74, "95", 1, 10, "Val-d'Oise", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [129, 74, "94", 1, 10, "Val-de-Marne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [130, 74, "83", 1, 10, "Var", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [131, 74, "84", 1, 10, "Vaucluse", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [132, 74, "85", 1, 10, "Vendée", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [133, 74, "86", 1, 10, "Vienne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [134, 74, "88", 1, 10, "Vosges", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [135, 74, "89", 1, 10, "Yonne", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [136, 39, "AB", 1, 10, "Alberta", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [137, 39, "BC", 1, 10, "British Columbia", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [138, 39, "MB", 1, 10, "Manitoba", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [139, 39, "NB", 1, 10, "New Brunswick", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [140, 39, "NL", 1, 10, "Newfoundland and Labrador", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [141, 39, "NT", 1, 10, "Northwest Territories", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [142, 39, "NS", 1, 10, "Nova Scotia", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [143, 39, "NU", 1, 10, "Nunavut", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [144, 39, "ON", 1, 10, "Ontario", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [145, 39, "PE", 1, 10, "Prince Edward Island", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [146, 39, "QC", 1, 10, "Québec", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [147, 39, "SK", 1, 10, "Saskatchewan", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [148, 39, "YT", 1, 10, "Yukon Territory", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [149, 13, "ACT", 1, 10, "Australian Capital Territory", 1, "2009-03-03T12:31:40+09:00", "2009-03-11T09:20:30+09:00", 1634878320], [150, 13, "NSW", 1, 10, "New South Wales", 1, "2009-03-03T12:31:40+09:00", "2009-03-11T09:20:36+09:00", 1634878320], [151, 13, "NT", 1, 10, "Northern Territory", 1, "2009-03-03T12:31:40+09:00", "2009-03-11T09:21:03+09:00", 1634878320], [152, 13, "QLD", 1, 10, "Queensland", 1, "2009-03-03T12:31:40+09:00", "2009-03-11T09:20:51+09:00", 1634878320], [153, 13, "SA", 1, 10, "South Australia", 1, "2009-03-03T12:31:40+09:00", "2009-03-11T09:21:09+09:00", 1634878320], [154, 13, "TAS", 1, 10, "Tasmania", 1, "2009-03-03T12:31:40+09:00", "2009-03-11T09:21:14+09:00", 1634878320], [155, 13, "VIC", 1, 10, "Victoria", 1, "2009-03-03T12:31:40+09:00", "2009-03-11T09:20:58+09:00", 1634878320], [156, 13, "WA", 1, 10, "Western Australia", 1, "2009-03-03T12:31:40+09:00", "2009-03-11T09:21:20+09:00", 1634878320], [157, 152, "DR", 1, 10, "Drenthe", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [158, 152, "FL", 1, 10, "Flevoland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [159, 152, "FR", 1, 10, "Friesland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [160, 152, "GE", 1, 10, "Gelderland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [161, 152, "GR", 1, 10, "Groningen", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [162, 152, "LI", 1, 10, "Limburg", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [163, 152, "NB", 1, 10, "Noord Brabant", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [164, 152, "NH", 1, 10, "Noord Holland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [165, 152, "OV", 1, 10, "Overijssel", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [166, 152, "UT", 1, 10, "Utrecht", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [167, 152, "ZE", 1, 10, "Zeeland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [168, 152, "ZH", 1, 10, "Zuid Holland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [169, 83, "BAW", 1, 10, "Baden-Württemberg", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [170, 83, "BAY", 1, 10, "Bayern", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [171, 83, "BER", 1, 10, "Berlin", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [172, 83, "BRG", 1, 10, "Branderburg", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [173, 83, "BRE", 1, 10, "Bremen", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [174, 83, "HAM", 1, 10, "Hamburg", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [175, 83, "HES", 1, 10, "Hessen", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [176, 83, "MEC", 1, 10, "Mecklenburg-Vorpommern", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [177, 83, "NDS", 1, 10, "Niedersachsen", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [178, 83, "NRW", 1, 10, "Nordrhein-Westfalen", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [179, 83, "RHE", 1, 10, "Rheinland-Pfalz", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [180, 83, "SAR", 1, 10, "Saarland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [181, 83, "SAS", 1, 10, "Sachsen", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [182, 83, "SAC", 1, 10, "Sachsen-Anhalt", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [183, 83, "SCN", 1, 10, "Schleswig-Holstein", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [184, 83, "THE", 1, 10, "Thüringen", 1, "2009-03-03T12:31:40+09:00", "2017-09-07T12:31:49+08:00", 1634878320], [185, 223, "ABN", 1, 10, "Aberdeen", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [186, 223, "ABNS", 1, 10, "Aberdeenshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [187, 223, "ANG", 1, 10, "Anglesey", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [188, 223, "AGS", 1, 10, "Angus", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [189, 223, "ARY", 1, 10, "Argyll and Bute", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [190, 223, "BEDS", 1, 10, "Bedfordshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [191, 223, "BERKS", 1, 10, "Berkshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [192, 223, "BLA", 1, 10, "Blaenau Gwent", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [193, 223, "BRI", 1, 10, "Bridgend", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [194, 223, "BSTL", 1, 10, "Bristol", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [195, 223, "BUCKS", 1, 10, "Buckinghamshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [196, 223, "CAE", 1, 10, "Caerphilly", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [197, 223, "CAMBS", 1, 10, "Cambridgeshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [198, 223, "CDF", 1, 10, "Cardiff", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [199, 223, "CARM", 1, 10, "Carmarthenshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [200, 223, "CDGN", 1, 10, "Ceredigion", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [201, 223, "CHE", 1, 10, "Cheshire East", 1, "2009-03-03T12:31:40+09:00", "2018-01-29T20:02:53+08:00", 1634878320], [202, 223, "CLACK", 1, 10, "Clackmannanshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [203, 223, "CON", 1, 10, "Conwy", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [204, 223, "CORN", 1, 10, "Cornwall", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [205, 223, "DNBG", 1, 10, "Denbighshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [206, 223, "DERBY", 1, 10, "Derbyshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [207, 223, "DVN", 1, 10, "Devon", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [208, 223, "DOR", 1, 10, "Dorset", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [209, 223, "DGL", 1, 10, "Dumfries and Galloway", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [210, 223, "DUND", 1, 10, "Dundee", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [211, 223, "DHM", 1, 10, "Durham", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [212, 223, "ARYE", 1, 10, "East Ayrshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [213, 223, "DUNBE", 1, 10, "East Dunbartonshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [214, 223, "LOTE", 1, 10, "East Lothian", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [215, 223, "RENE", 1, 10, "East Renfrewshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [216, 223, "ERYS", 1, 10, "East Riding of Yorkshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [217, 223, "SXE", 1, 10, "East Sussex", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [218, 223, "EDIN", 1, 10, "Edinburgh", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [219, 223, "ESX", 1, 10, "Essex", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [220, 223, "FALK", 1, 10, "Falkirk", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [221, 223, "FFE", 1, 10, "Fife", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [222, 223, "FLINT", 1, 10, "Flintshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [223, 223, "GLAS", 1, 10, "Glasgow", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [224, 223, "GLOS", 1, 10, "Gloucestershire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [225, 223, "LDN", 1, 10, "Greater London", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [226, 223, "MCH", 1, 10, "Greater Manchester", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [227, 223, "GDD", 1, 10, "Gwynedd", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [228, 223, "HANTS", 1, 10, "Hampshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [229, 223, "HWR", 1, 10, "Herefordshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [230, 223, "HERTS", 1, 10, "Hertfordshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [231, 223, "HLD", 1, 10, "Highlands", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [232, 223, "IVER", 1, 10, "Inverclyde", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [233, 223, "IOW", 1, 10, "Isle of Wight", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [234, 223, "KNT", 1, 10, "Kent", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [235, 223, "LANCS", 1, 10, "Lancashire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [236, 223, "LEC", 1, 10, "Leicestershire", 1, "2009-03-03T12:31:40+09:00", "2018-01-29T20:02:55+08:00", 1634878320], [237, 223, "LINCS", 1, 10, "Lincolnshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [238, 223, "MSY", 1, 10, "Merseyside", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [239, 223, "MERT", 1, 10, "Merthyr Tydfil", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [240, 223, "MLOT", 1, 10, "Midlothian", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [241, 223, "MMOUTH", 1, 10, "Monmouthshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [242, 223, "MORAY", 1, 10, "Moray", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [243, 223, "NPRTAL", 1, 10, "Neath Port Talbot", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [244, 223, "NEWPT", 1, 10, "Newport", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [245, 223, "NOR", 1, 10, "Norfolk", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [246, 223, "ARYN", 1, 10, "North Ayrshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [247, 223, "LANN", 1, 10, "North Lanarkshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [248, 223, "YSN", 1, 10, "North Yorkshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [249, 223, "NHM", 1, 10, "Northamptonshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [250, 223, "NLD", 1, 10, "Northumberland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [251, 223, "NTT", 1, 10, "Nottinghamshire", 1, "2009-03-03T12:31:40+09:00", "2018-01-29T20:02:56+08:00", 1634878320], [252, 223, "ORK", 1, 10, "Orkney Islands", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [253, 223, "OFE", 1, 10, "Oxfordshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [254, 223, "PEM", 1, 10, "Pembrokeshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [255, 223, "PERTH", 1, 10, "Perth and Kinross", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [256, 223, "PWS", 1, 10, "Powys", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [257, 223, "REN", 1, 10, "Renfrewshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [258, 223, "RHON", 1, 10, "Rhondda Cynon Taff", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [259, 223, "RUT", 1, 10, "Rutland", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [260, 223, "BOR", 1, 10, "Scottish Borders", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [261, 223, "SHET", 1, 10, "Shetland Islands", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [262, 223, "SPE", 1, 10, "Shropshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [263, 223, "SOM", 1, 10, "Somerset", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [264, 223, "ARYS", 1, 10, "South Ayrshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [265, 223, "LANS", 1, 10, "South Lanarkshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [266, 223, "YSS", 1, 10, "South Yorkshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [267, 223, "SFD", 1, 10, "Staffordshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [268, 223, "STIR", 1, 10, "Stirling", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [269, 223, "SFK", 1, 10, "Suffolk", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [270, 223, "SRY", 1, 10, "Surrey", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [271, 223, "SWAN", 1, 10, "Swansea", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [272, 223, "TORF", 1, 10, "Torfaen", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [273, 223, "TWR", 1, 10, "Tyne and Wear", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [274, 223, "VGLAM", 1, 10, "Vale of Glamorgan", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [275, 223, "WARKS", 1, 10, "Warwickshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [276, 223, "WDUN", 1, 10, "West Dunbartonshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [277, 223, "WLOT", 1, 10, "West Lothian", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [278, 223, "WMD", 1, 10, "West Midlands", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [279, 223, "SXW", 1, 10, "West Sussex", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [280, 223, "YSW", 1, 10, "West Yorkshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [281, 223, "WIL", 1, 10, "Western Isles", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [282, 223, "WLT", 1, 10, "Wiltshire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [283, 223, "WORCS", 1, 10, "Worcestershire", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [284, 223, "WRX", 1, 10, "Wrexham", 1, "2009-03-03T12:31:40+09:00", "2009-03-12T10:44:10+09:00", 1634878320], [285, 223, "BAS", 1, 10, "Bath and North East Somerset", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:52+08:00", 1634878320], [286, 223, "BBD", 1, 10, "Blackburn with Darwen", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:52+08:00", 1634878320], [287, 223, "BPL", 1, 10, "Blackpool", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:52+08:00", 1634878320], [288, 223, "BGW", 1, 10, "Blaenau Gwent", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:52+08:00", 1634878320], [289, 223, "BMH", 1, 10, "Bournemouth", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:52+08:00", 1634878320], [290, 223, "BRC", 1, 10, "Bracknell Forest", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:53+08:00", 1634878320], [291, 223, "BNH", 1, 10, "Brighton and Hove", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:53+08:00", 1634878320], [292, 223, "CBF", 1, 10, "Central Bedfordshire", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:53+08:00", 1634878320], [293, 223, "CHW", 1, 10, "Cheshire West and Chester", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:53+08:00", 1634878320], [294, 223, "CMA", 1, 10, "Cumbria", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:53+08:00", 1634878320], [295, 223, "DAL", 1, 10, "Darlington", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:54+08:00", 1634878320], [296, 223, "DER", 1, 10, "Derby", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:54+08:00", 1634878320], [297, 223, "ELS", 1, 10, "Eilean Siar", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:54+08:00", 1634878320], [298, 223, "HAL", 1, 10, "Halton", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:54+08:00", 1634878320], [299, 223, "HPL", 1, 10, "Hartlepool", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:54+08:00", 1634878320], [300, 223, "IOS", 1, 10, "Isles of Scilly", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:54+08:00", 1634878320], [301, 223, "KHL", 1, 10, "Kingston upon Hull", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:55+08:00", 1634878320], [302, 223, "LCE", 1, 10, "Leicester", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:55+08:00", 1634878320], [303, 223, "LUT", 1, 10, "Luton", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:55+08:00", 1634878320], [304, 223, "MDW", 1, 10, "Medway", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:55+08:00", 1634878320], [305, 223, "MDB", 1, 10, "Middlesbrough", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:55+08:00", 1634878320], [306, 223, "MIK", 1, 10, "Milton Keynes", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:56+08:00", 1634878320], [307, 223, "NEL", 1, 10, "North East Lincolnshire", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:56+08:00", 1634878320], [308, 223, "NLN", 1, 10, "North Lincolnshire", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:56+08:00", 1634878320], [309, 223, "NSM", 1, 10, "North Somerset", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:56+08:00", 1634878320], [310, 223, "NGM", 1, 10, "Nottingham", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:56+08:00", 1634878320], [311, 223, "PTE", 1, 10, "Peterborough", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:57+08:00", 1634878320], [312, 223, "PLY", 1, 10, "Plymouth", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:57+08:00", 1634878320], [313, 223, "POL", 1, 10, "Poole", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:57+08:00", 1634878320], [314, 223, "POR", 1, 10, "Portsmouth", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:57+08:00", 1634878320], [315, 223, "RDG", 1, 10, "Reading", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:57+08:00", 1634878320], [316, 223, "RCC", 1, 10, "Redcar and Cleveland", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:57+08:00", 1634878320], [317, 223, "SLG", 1, 10, "Slough", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:58+08:00", 1634878320], [318, 223, "SGC", 1, 10, "South Gloucestershire", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:58+08:00", 1634878320], [319, 223, "STH", 1, 10, "Southampton", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:58+08:00", 1634878320], [320, 223, "SOS", 1, 10, "Southend-on-Sea", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:58+08:00", 1634878320], [321, 223, "STT", 1, 10, "Stockton-on-Tees", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:58+08:00", 1634878320], [322, 223, "STE", 1, 10, "Stoke-on-Trent", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:58+08:00", 1634878320], [323, 223, "SWD", 1, 10, "Swindon", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:59+08:00", 1634878320], [324, 223, "TFW", 1, 10, "Telford and Wrekin", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:59+08:00", 1634878320], [325, 223, "THR", 1, 10, "Thurrock", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:59+08:00", 1634878320], [326, 223, "TOB", 1, 10, "Torbay", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:59+08:00", 1634878320], [327, 223, "WRT", 1, 10, "Warrington", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:59+08:00", 1634878320], [328, 223, "WBK", 1, 10, "West Berkshire", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:02:59+08:00", 1634878320], [329, 223, "WNM", 1, 10, "Windsor and Maidenhead", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:03:00+08:00", 1634878320], [330, 223, "WOK", 1, 10, "Wokingham", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:03:00+08:00", 1634878320], [331, 223, "YOK", 1, 10, "York", 1, "2018-01-29T20:00:00+08:00", "2018-01-29T20:03:00+08:00", 1634878320], [332, 223, "ANN", 1, 10, "Antrim", 1, "2021-01-12T20:00:00+08:00", "2021-01-18T09:52:38+08:00", 1634878320], [333, 223, "ABC", 1, 10, "Armagh", 1, "2021-01-12T20:00:00+08:00", "2021-01-18T09:52:38+08:00", 1634878320], [334, 223, "DOW", 1, 10, "Down", 1, "2021-01-12T20:00:00+08:00", "2021-01-18T09:52:38+08:00", 1634878320], [335, 223, "FMO", 1, 10, "Fermanagh", 1, "2021-01-12T20:00:00+08:00", "2021-01-18T09:52:38+08:00", 1634878320], [336, 223, "LDY", 1, 10, "Londonderry", 1, "2021-01-12T20:00:00+08:00", "2021-01-18T09:52:39+08:00", 1634878320], [337, 223, "TYR", 1, 10, "Tyrone", 1, "2021-01-12T20:00:00+08:00", "2021-01-18T09:52:39+08:00", 1634878320]]
        }, {
          "name": "stress_profiles",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "MaxHoursPerShift",
            "value": "REAL"
          }, {
            "column": "MaxHoursPerPeriod",
            "value": "REAL"
          }, {
            "column": "MaxDaysPerPeriod",
            "value": "REAL"
          }, {
            "column": "MaxHoursPerDay",
            "value": "REAL"
          }, {
            "column": "GapHoursBetweenShifts",
            "value": "REAL"
          }, {
            "column": "CustomRules",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "system_usage_balances",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Type",
            "value": "INTEGER"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "Credit",
            "value": "REAL"
          }, {
            "column": "Description",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "system_usage_tracking",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "EmpId",
            "value": "INTEGER"
          }, {
            "column": "CompanyId",
            "value": "INTEGER"
          }, {
            "column": "BalanceId",
            "value": "INTEGER"
          }, {
            "column": "UsageType",
            "value": "INTEGER"
          }, {
            "column": "UsageRecordId",
            "value": "INTEGER"
          }, {
            "column": "Usage",
            "value": "REAL"
          }, {
            "column": "Description",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "tasks",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "TaskSetupId",
            "value": "INTEGER"
          }, {
            "column": "OpUnitId",
            "value": "INTEGER"
          }, {
            "column": "GroupId",
            "value": "INTEGER"
          }, {
            "column": "DayTimestamp",
            "value": "INTEGER"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "OrigDayTimestamp",
            "value": "INTEGER"
          }, {
            "column": "OrigDate",
            "value": "TEXT"
          }, {
            "column": "AvailableAfterTimestamp",
            "value": "INTEGER"
          }, {
            "column": "DueDate",
            "value": "TEXT"
          }, {
            "column": "DueTimestamp",
            "value": "INTEGER"
          }, {
            "column": "RepeatIfNotCompleted",
            "value": "NUMERIC"
          }, {
            "column": "SortOrder",
            "value": "INTEGER"
          }, {
            "column": "Type",
            "value": "INTEGER"
          }, {
            "column": "Question",
            "value": "TEXT"
          }, {
            "column": "Answer",
            "value": "TEXT"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "UserEntry",
            "value": "INTEGER"
          }, {
            "column": "UserPerformTask",
            "value": "INTEGER"
          }, {
            "column": "UserResponsible",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "TsCompleted",
            "value": "INTEGER"
          }, {
            "column": "Start",
            "value": "INTEGER"
          }, {
            "column": "`End`",
            "value": "INTEGER"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "task_groups",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "GroupSetupId",
            "value": "INTEGER"
          }, {
            "column": "`Key`",
            "value": "TEXT"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "DayTimestamp",
            "value": "INTEGER"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "OrigDayTimestamp",
            "value": "INTEGER"
          }, {
            "column": "OrigDate",
            "value": "TEXT"
          }, {
            "column": "OpUnitId",
            "value": "INTEGER"
          }, {
            "column": "SortOrder",
            "value": "INTEGER"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "task_group_setups",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "`Key`",
            "value": "TEXT"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "Compulsory",
            "value": "NUMERIC"
          }, {
            "column": "Notification",
            "value": "TEXT"
          }, {
            "column": "Deadline",
            "value": "REAL"
          }, {
            "column": "Plugins",
            "value": "TEXT"
          }, {
            "column": "Oncreate",
            "value": "TEXT"
          }, {
            "column": "Onsubmit",
            "value": "TEXT"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "task_opunit_configs",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "TaskSetupId",
            "value": "INTEGER"
          }, {
            "column": "TaskGroupId",
            "value": "INTEGER"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "SortOrder",
            "value": "INTEGER"
          }, {
            "column": "OpUnitId",
            "value": "INTEGER"
          }, {
            "column": "Schedule",
            "value": "INTEGER"
          }, {
            "column": "Type",
            "value": "INTEGER"
          }, {
            "column": "AvailableAfter",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "task_setups",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "GroupId",
            "value": "INTEGER"
          }, {
            "column": "Type",
            "value": "INTEGER"
          }, {
            "column": "Parent",
            "value": "INTEGER"
          }, {
            "column": "Question",
            "value": "TEXT"
          }, {
            "column": "`Default`",
            "value": "TEXT"
          }, {
            "column": "SortOrder",
            "value": "INTEGER"
          }, {
            "column": "Schedule",
            "value": "INTEGER"
          }, {
            "column": "OnYes",
            "value": "TEXT"
          }, {
            "column": "OnNo",
            "value": "TEXT"
          }, {
            "column": "RenderFunc",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "AvailableAfter",
            "value": "TEXT"
          }, {
            "column": "RepeatIfNotCompleted",
            "value": "NUMERIC"
          }, {
            "column": "Time",
            "value": "TEXT"
          }, {
            "column": "Section",
            "value": "TEXT"
          }, {
            "column": "Priority",
            "value": "TEXT"
          }, {
            "column": "Helptext",
            "value": "TEXT"
          }, {
            "column": "SupercedePrev",
            "value": "NUMERIC"
          }, {
            "column": "Colour",
            "value": "TEXT"
          }, {
            "column": "OnStart",
            "value": "TEXT"
          }, {
            "column": "OnSubmit",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "teams",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "LeaderEmployee",
            "value": "INTEGER"
          }, {
            "column": "Name",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "timesheets",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "EmployeeHistory",
            "value": "INTEGER"
          }, {
            "column": "EmployeeAgreement",
            "value": "INTEGER"
          }, {
            "column": "Date",
            "value": "TEXT"
          }, {
            "column": "StartTime",
            "value": "INTEGER"
          }, {
            "column": "EndTime",
            "value": "INTEGER"
          }, {
            "column": "Mealbreak",
            "value": "TEXT"
          }, {
            "column": "MealbreakSlots",
            "value": "TEXT"
          }, {
            "column": "Slots",
            "value": "TEXT"
          }, {
            "column": "TotalTime",
            "value": "REAL"
          }, {
            "column": "TotalTimeInv",
            "value": "REAL"
          }, {
            "column": "Cost",
            "value": "REAL"
          }, {
            "column": "Roster",
            "value": "INTEGER"
          }, {
            "column": "EmployeeComment",
            "value": "TEXT"
          }, {
            "column": "SupervisorComment",
            "value": "TEXT"
          }, {
            "column": "Supervisor",
            "value": "INTEGER"
          }, {
            "column": "Disputed",
            "value": "NUMERIC"
          }, {
            "column": "TimeApproved",
            "value": "NUMERIC"
          }, {
            "column": "TimeApprover",
            "value": "INTEGER"
          }, {
            "column": "Discarded",
            "value": "NUMERIC"
          }, {
            "column": "ValidationFlag",
            "value": "INTEGER"
          }, {
            "column": "OperationalUnit",
            "value": "INTEGER"
          }, {
            "column": "IsInProgress",
            "value": "NUMERIC"
          }, {
            "column": "IsLeave",
            "value": "NUMERIC"
          }, {
            "column": "LeaveId",
            "value": "INTEGER"
          }, {
            "column": "LeaveRule",
            "value": "INTEGER"
          }, {
            "column": "Invoiced",
            "value": "NUMERIC"
          }, {
            "column": "InvoiceComment",
            "value": "TEXT"
          }, {
            "column": "PayRuleApproved",
            "value": "NUMERIC"
          }, {
            "column": "Exported",
            "value": "NUMERIC"
          }, {
            "column": "StagingId",
            "value": "INTEGER"
          }, {
            "column": "PayStaged",
            "value": "NUMERIC"
          }, {
            "column": "PaycycleId",
            "value": "INTEGER"
          }, {
            "column": "File",
            "value": "INTEGER"
          }, {
            "column": "CustomFieldData",
            "value": "INTEGER"
          }, {
            "column": "RealTime",
            "value": "NUMERIC"
          }, {
            "column": "AutoProcessed",
            "value": "NUMERIC"
          }, {
            "column": "AutoRounded",
            "value": "NUMERIC"
          }, {
            "column": "AutoTimeApproved",
            "value": "NUMERIC"
          }, {
            "column": "AutoPayRuleApproved",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "timesheet_pay_returns",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Timesheet",
            "value": "INTEGER"
          }, {
            "column": "PayRule",
            "value": "INTEGER"
          }, {
            "column": "Overridden",
            "value": "NUMERIC"
          }, {
            "column": "Value",
            "value": "REAL"
          }, {
            "column": "Cost",
            "value": "REAL"
          }, {
            "column": "OverrideComment",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "training_modules",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Title",
            "value": "TEXT"
          }, {
            "column": "Provider",
            "value": "TEXT"
          }, {
            "column": "ProviderAddress",
            "value": "INTEGER"
          }, {
            "column": "Cost",
            "value": "REAL"
          }, {
            "column": "TimeRequiredDays",
            "value": "INTEGER"
          }, {
            "column": "RenewalPeriodMonths",
            "value": "INTEGER"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "training_records",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Employee",
            "value": "INTEGER"
          }, {
            "column": "Module",
            "value": "INTEGER"
          }, {
            "column": "TrainingDate",
            "value": "TEXT"
          }, {
            "column": "ExpiryDate",
            "value": "TEXT"
          }, {
            "column": "Active",
            "value": "NUMERIC"
          }, {
            "column": "Comment",
            "value": "TEXT"
          }, {
            "column": "File",
            "value": "INTEGER"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "webhooks",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Topic",
            "value": "TEXT"
          }, {
            "column": "Filters",
            "value": "TEXT"
          }, {
            "column": "Address",
            "value": "TEXT"
          }, {
            "column": "Type",
            "value": "TEXT"
          }, {
            "column": "Headers",
            "value": "TEXT"
          }, {
            "column": "Enabled",
            "value": "NUMERIC"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexIdModifiedDesc",
            "value": "Id DESC, Modified DESC"
          }]
        }, {
          "name": "colleagues",
          "schema": [{
            "column": "EmpId",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Company",
            "value": "INTEGER"
          }, {
            "column": "DisplayName",
            "value": "TEXT"
          }, {
            "column": "Email",
            "value": "TEXT"
          }, {
            "column": "FirstName",
            "value": "TEXT"
          }, {
            "column": "IsSameWorkplace",
            "value": "INTEGER"
          }, {
            "column": "IsSubordinate",
            "value": "INTEGER"
          }, {
            "column": "LastName",
            "value": "TEXT"
          }, {
            "column": "Mobile",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "Photo",
            "value": "TEXT"
          }, {
            "column": "PhotoLinkId",
            "value": "TEXT"
          }, {
            "column": "Position",
            "value": "INTEGER"
          }, {
            "column": "Role",
            "value": "INTEGER"
          }, {
            "column": "Status",
            "value": "INTEGER"
          }, {
            "column": "UserId",
            "value": "INTEGER"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexOnEmpId",
            "value": "EmpId DESC"
          }, {
            "name": "IndexOnModified",
            "value": "Modified DESC"
          }]
        }, {
          "name": "local_deets",
          "schema": [{
            "column": "id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "user_email",
            "value": "TEXT NOT NULL"
          }, {
            "column": "me_obj",
            "value": "TEXT"
          }, {
            "column": "my_obj",
            "value": "TEXT"
          }, {
            "column": "ppl_obj",
            "value": "TEXT"
          }, {
            "column": "me_ava",
            "value": "TEXT"
          }, {
            "column": "work_ava",
            "value": "TEXT"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }]
        }, {
          "name": "local_images",
          "schema": [{
            "column": "id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "img_name",
            "value": "TEXT"
          }, {
            "column": "img_uri",
            "value": "TEXT"
          }, {
            "column": "img_size",
            "value": "INTEGER"
          }, {
            "column": "img_mtime",
            "value": "INTEGER"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }]
        }, {
          "name": "notifications",
          "schema": [{
            "column": "Id",
            "value": "INTEGER PRIMARY KEY NOT NULL"
          }, {
            "column": "Created",
            "value": "TEXT"
          }, {
            "column": "Creator",
            "value": "INTEGER"
          }, {
            "column": "ExpiryDate",
            "value": "TEXT"
          }, {
            "column": "Link",
            "value": "INTEGER"
          }, {
            "column": "Message",
            "value": "TEXT"
          }, {
            "column": "Modified",
            "value": "TEXT"
          }, {
            "column": "Orm",
            "value": "INTEGER"
          }, {
            "column": "Recid",
            "value": "INTEGER"
          }, {
            "column": "TsCreated",
            "value": "INTEGER"
          }, {
            "column": "last_modified",
            "value": "INTEGER DEFAULT (strftime('%s', 'now'))"
          }],
          "indexes": [{
            "name": "IndexOnLastModified",
            "value": "last_modified DESC"
          }, {
            "name": "IndexOnId",
            "value": "Id DESC"
          }, {
            "name": "IndexOnModified",
            "value": "Modified DESC"
          }]
        }]
      };
      /***/
    },

    /***/
    49603:
    /*!**********************************************!*\
      !*** ./src/app/services/calendar.service.ts ***!
      \**********************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "CalendarService": function CalendarService() {
          return (
            /* binding */
            _CalendarService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! date-fns */
      45229);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! date-fns */
      8488);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _ionic_native_calendar_ngx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @ionic-native/calendar/ngx */
      20287);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _events_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./events.service */
      80106);
      /* harmony import */


      var _datetime_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./datetime.service */
      12826);
      /* harmony import */


      var _detail_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./detail.service */
      52153);
      /* harmony import */


      var _fairwork_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./fairwork.service */
      93405);
      /* harmony import */


      var _sqlite_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./sqlite.service */
      90636);
      /* harmony import */


      var _appTypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./appTypes */
      38670);
      /* harmony import */


      var _firebase_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./firebase.service */
      19446); ////////////////////////////////////////////////////////////////


      var _CalendarService = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////
        function CalendarService(logger, plt, evServ, dT, fwServ, sqlServ, cal, dS, fireServ) {
          _classCallCheck(this, CalendarService);

          this.logger = logger;
          this.plt = plt;
          this.evServ = evServ;
          this.dT = dT;
          this.fwServ = fwServ;
          this.sqlServ = sqlServ;
          this.cal = cal;
          this.dS = dS;
          this.fireServ = fireServ; ////////////////////////////////////////////////////////////////

          this.initDone = false;
          this.hasPerms = null;
          this.calEnabled = null;
          this.calEvents = {
            shift: null,
            task: null
          };
          this.calList = null;
          this.allCalList = null;
          this.selectedCal = null;
          this.calOpts = {
            id: null,
            firstReminderMinutes: null,
            calendarName: null,
            calendarId: null
          };
          this.isReschedule = false;
          this.beforeTimes = {
            shift: 60,
            task: 60
          };
          this.evIco = {
            shift: "\uD83D\uDEE1",
            confirm: "\uD83D\uDC4C",
            task: "\uD83D\uDCCB"
          };
          this.evBName = {
            shift: '𝗪𝗼𝗿𝗸 𝗦𝗵𝗶𝗳𝘁',
            confirm: '𝘊𝘰𝘯𝘧𝘪𝘳𝘮 𝘚𝘩𝘪𝘧𝘵',
            task: '𝗪𝗼𝗿𝗸 𝗧𝗮𝘀𝗸'
          };
          this.tasksInProg = false;
          this.shiftsInProg = false;
          this.schedEvs = {
            shift: [],
            task: []
          };
          this.showIncome = null; // GVars -----------------------------------------------------

          this.myObj = null;
          this.workAreas = null;
          this.workName = null;
          this.workCode = null;
          this.workPeople = [];
          this.workLocation = null;
        } ////////////////////////////////////////////////////////////////


        _createClass(CalendarService, [{
          key: "doInitCal",
          value: function doInitCal() {
            var _this75 = this;

            this.plt.ready().then(function () {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(_this75, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee106() {
                var _this76 = this;

                return regeneratorRuntime.wrap(function _callee106$(_context106) {
                  while (1) {
                    switch (_context106.prev = _context106.next) {
                      case 0:
                        this.evServ.subscribe('calInit', function (stage) {
                          return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(_this76, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee105() {
                            var checkSCalRes;
                            return regeneratorRuntime.wrap(function _callee105$(_context105) {
                              while (1) {
                                switch (_context105.prev = _context105.next) {
                                  case 0:
                                    this.logger.info("\uD83D\uDCC5 [calServ|doInitCal] (EVENT) [STAGE] = " + stage + ' ... ');

                                    if (!(stage === 'calenabled')) {
                                      _context105.next = 10;
                                      break;
                                    }

                                    _context105.next = 4;
                                    return this.checkSheriffCal();

                                  case 4:
                                    checkSCalRes = _context105.sent;
                                    _context105.next = 7;
                                    return this.setSelectedCal(checkSCalRes.data);

                                  case 7:
                                    this.initGVars();
                                    _context105.next = 12;
                                    break;

                                  case 10:
                                    this.initDone = true;
                                    this.doScheduleEvents();

                                  case 12:
                                  case "end":
                                    return _context105.stop();
                                }
                              }
                            }, _callee105, this);
                          }));
                        });
                        this.initRefreshCalSettings();

                      case 2:
                      case "end":
                        return _context106.stop();
                    }
                  }
                }, _callee106, this);
              }));
            });
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "doScheduleEvents",
          value: function doScheduleEvents() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee107() {
              var _this77 = this;

              var schedTypeTtl, schedTypeCount, schedSTime, cM, _i12, _Object$values, v;

              return regeneratorRuntime.wrap(function _callee107$(_context107) {
                while (1) {
                  switch (_context107.prev = _context107.next) {
                    case 0:
                      schedTypeTtl = 0;
                      schedTypeCount = 0;
                      schedSTime = new Date();
                      this.isReschedule ? cM = '♻️[RE]Scheduling' : cM = 'Init Scheduling';
                      this.evServ.subscribe('calSched', function () {
                        schedTypeCount++;

                        if (schedTypeCount === schedTypeTtl) {
                          var schedTT = (_this77.evServ.getDur(schedSTime) / 1000).toFixed(2) + 's';
                          var tShifts = _this77.schedEvs.shift.length;
                          var tTasks = _this77.schedEvs.task.length;
                          var tEvs = tShifts + tTasks;

                          _this77.logger.info("\uD83D\uDCC5 - \uD83C\uDFC1 FINISHED " + cM + ': ' + tEvs + ' Total Events Added in ' + schedTT + 's:');

                          var sShiftsIds = [];

                          for (var i = 0; i < _this77.schedEvs.shift.length; i++) {
                            sShiftsIds.push(_this77.schedEvs.shift[i].dId + '|' + _this77.schedEvs.shift[i].cId);
                          }

                          ;

                          _this77.logger.info("\uD83D\uDCC5 - \uD83D\uDCD1 Shifts: " + sShiftsIds.join(', ') + ' (' + tShifts + ')');

                          var sTasksIds = [];

                          for (var _i11 = 0; _i11 < _this77.schedEvs.task.length; _i11++) {
                            sTasksIds.push(_this77.schedEvs.task[_i11].dId + '|' + _this77.schedEvs.task[_i11].cId);
                          }

                          ;

                          _this77.logger.info("\uD83D\uDCC5 - \uD83E\uDD39\uD83C\uDFFC Tasks: " + sTasksIds.join(', ') + ' (' + tTasks + ')');

                          if (_this77.isReschedule) {
                            _this77.evServ.publish('reschedFinish', 'calendar');

                            _this77.isReschedule = false;
                          }

                          ;

                          _this77.evServ.destroy('calSched');
                        }
                      });
                      _context107.next = 7;
                      return this.deleteAllSheriffEvs();

                    case 7:
                      this.schedEvs.shift = [];
                      this.schedEvs.task = [];
                      this.evServ.publish('alertsStatus', true);

                      if (this.calEnabled) {
                        this.logger.info("\uD83D\uDCC5 {alertMethods.calendar=TRUE}");

                        for (_i12 = 0, _Object$values = Object.values(this.calEvents); _i12 < _Object$values.length; _i12++) {
                          v = _Object$values[_i12];

                          if (v) {
                            schedTypeTtl++;
                          }
                        }

                        ;

                        if (schedTypeTtl > 0) {
                          if (this.calEvents.shift) {
                            this.logger.info("\uD83D\uDCC5 {alertEvents.shift=TRUE} - " + cM + ' Shifts...');
                            this.calCheckShifts(null);
                          } else {
                            this.logger.info("\uD83D\uDCC5 {alertEvents.shift=FALSE} - !SKIPPING! " + cM + ' Shifts.');
                          }

                          ;

                          if (this.calEvents.task) {
                            this.logger.info("\uD83D\uDCC5 {alertEvents.task=TRUE} - " + cM + ' Tasks...');
                            this.calCheckTasks(null);
                          } else {
                            this.logger.info("\uD83D\uDCC5 {alertEvents.task=FALSE} - !SKIPPING! " + cM + 'Tasks.');
                          }
                        } else {
                          if (this.isReschedule) {
                            this.evServ.publish('reschedFinish', 'calendar');
                            this.isReschedule = false;
                          }

                          ;
                          this.logger.info("\uD83D\uDD14 {alertEvents.shift=FALSE} && {alertEvents.task=FALSE} - !SKIPPING! Notification " + cM);
                        }
                      } else {
                        if (this.isReschedule) {
                          this.evServ.publish('reschedFinish', 'calendar');
                          this.isReschedule = false;
                        }

                        ;
                        this.logger.info("\uD83D\uDCC5 {alertMethods.calendar=FALSE}");
                      }

                    case 11:
                    case "end":
                      return _context107.stop();
                  }
                }
              }, _callee107, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "updateCalSettings",
          value: function updateCalSettings() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee108() {
              return regeneratorRuntime.wrap(function _callee108$(_context108) {
                while (1) {
                  switch (_context108.prev = _context108.next) {
                    case 0:
                      this.logger.info('[calServ|updateCalSettings] ()...');
                      this.isReschedule = true;
                      _context108.next = 4;
                      return this.initRefreshCalSettings();

                    case 4:
                      this.doScheduleEvents();
                      return _context108.abrupt("return", Promise.resolve(true));

                    case 6:
                    case "end":
                      return _context108.stop();
                  }
                }
              }, _callee108, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "createCal",
          value: function createCal() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee109() {
              var newCalOpts;
              return regeneratorRuntime.wrap(function _callee109$(_context109) {
                while (1) {
                  switch (_context109.prev = _context109.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCC5 [calServ|createCal] ()...");
                      newCalOpts = {
                        calendarName: 'Sheriff Calendar',
                        calendarColor: '#FF9800'
                      };
                      _context109.prev = 2;
                      _context109.next = 5;
                      return this.cal.createCalendar(newCalOpts);

                    case 5:
                      return _context109.abrupt("return", Promise.resolve(true));

                    case 8:
                      _context109.prev = 8;
                      _context109.t0 = _context109["catch"](2);
                      return _context109.abrupt("return", Promise.resolve(false));

                    case 11:
                    case "end":
                      return _context109.stop();
                  }
                }
              }, _callee109, this, [[2, 8]]);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "checkSheriffCal",
          value: function checkSheriffCal() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee110() {
              var cLResAll, cLRes, hasSCal, newCLResAll, newCLRes, hasNewSCal;
              return regeneratorRuntime.wrap(function _callee110$(_context110) {
                while (1) {
                  switch (_context110.prev = _context110.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCC5 [calSev|checkSheriffCal] ()...");
                      _context110.prev = 1;
                      _context110.next = 4;
                      return this.cal.listCalendars();

                    case 4:
                      cLResAll = _context110.sent;
                      this.allCalList = cLResAll;
                      cLRes = cLResAll.filter(function (c) {
                        return c.isPrimary;
                      });
                      this.calList = cLRes;
                      hasSCal = cLRes.filter(function (c) {
                        return c.name.toString() === 'Sheriff Calendar';
                      })[0];

                      if (!hasSCal) {
                        _context110.next = 13;
                        break;
                      }

                      return _context110.abrupt("return", Promise.resolve({
                        result: true,
                        data: hasSCal.id
                      }));

                    case 13:
                      _context110.next = 15;
                      return this.createCal();

                    case 15:
                      if (!_context110.sent) {
                        _context110.next = 26;
                        break;
                      }

                      _context110.next = 18;
                      return this.cal.listCalendars();

                    case 18:
                      newCLResAll = _context110.sent;
                      this.allCalList = newCLResAll;
                      newCLRes = newCLResAll.filter(function (c) {
                        return c.isPrimary;
                      });
                      this.calList = newCLRes;
                      hasNewSCal = newCLRes.filter(function (c) {
                        return c.name.toString() === 'Sheriff Calendar';
                      })[0];
                      return _context110.abrupt("return", Promise.resolve({
                        result: true,
                        data: hasNewSCal.id
                      }));

                    case 26:
                      return _context110.abrupt("return", Promise.resolve({
                        result: false,
                        data: null
                      }));

                    case 27:
                      _context110.next = 33;
                      break;

                    case 29:
                      _context110.prev = 29;
                      _context110.t0 = _context110["catch"](1);
                      this.logger.info('[checkSheriffCal] (ERROR): ' + JSON.stringify(_context110.t0));
                      return _context110.abrupt("return", Promise.resolve({
                        result: false,
                        data: null
                      }));

                    case 33:
                    case "end":
                      return _context110.stop();
                  }
                }
              }, _callee110, this, [[1, 29]]);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "setSelectedCal",
          value: function setSelectedCal(sheriffCalId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee112() {
              var _this78 = this;

              var saveSettCalId, calChoice, sCalObj, selCalId, matchCal;
              return regeneratorRuntime.wrap(function _callee112$(_context112) {
                while (1) {
                  switch (_context112.prev = _context112.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCC5 [calServ|setSelectedCal] (sheriffCalId[backupOnly]" + sheriffCalId + ')... ');

                      saveSettCalId = function saveSettCalId(id) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(_this78, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee111() {
                          return regeneratorRuntime.wrap(function _callee111$(_context111) {
                            while (1) {
                              switch (_context111.prev = _context111.next) {
                                case 0:
                                  this.userSettings.alerts.options.alertCal.value = id;
                                  _context111.next = 3;
                                  return this.sqlServ.setSettings(this.userSettings);

                                case 3:
                                  _context111.next = 5;
                                  return this.fireServ.updateSettingsObj(this.userSettings);

                                case 5:
                                  return _context111.abrupt("return", Promise.resolve(true));

                                case 6:
                                case "end":
                                  return _context111.stop();
                              }
                            }
                          }, _callee111, this);
                        }));
                      };

                      calChoice = null;

                      if (sheriffCalId !== null) {
                        sCalObj = this.calList.filter(function (c) {
                          return c.id.toString() === sheriffCalId;
                        })[0];
                      }

                      ;

                      if (this.uAlertOpts.alertCal.value !== null) {
                        selCalId = this.uAlertOpts.alertCal.value;
                        matchCal = this.calList.filter(function (c) {
                          return c.id.toString() === selCalId.toString();
                        })[0];

                        if (matchCal) {
                          calChoice = matchCal;
                        } else {
                          if (sheriffCalId !== null) {
                            calChoice = sCalObj;
                          } else {
                            if (this.calList.length > 0) {
                              calChoice = this.calList[0];
                            }
                          }
                        }
                      } else {
                        if (sheriffCalId !== null) {
                          calChoice = sCalObj;
                        } else {
                          if (this.calList.length > 0) {
                            calChoice = this.calList[0];
                          }
                        }
                      }

                      ;
                      this.selectedCal = calChoice;
                      this.calOpts.id = String(calChoice.id);
                      this.calOpts.calendarName = String(calChoice.name);
                      this.calOpts.calendarId = Number(calChoice.id);
                      _context112.next = 13;
                      return saveSettCalId(calChoice.id);

                    case 13:
                      return _context112.abrupt("return", Promise.resolve(true));

                    case 14:
                    case "end":
                      return _context112.stop();
                  }
                }
              }, _callee112, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "checkCalPerms",
          value: function checkCalPerms() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee113() {
              var hRWP;
              return regeneratorRuntime.wrap(function _callee113$(_context113) {
                while (1) {
                  switch (_context113.prev = _context113.next) {
                    case 0:
                      _context113.next = 2;
                      return this.cal.hasReadWritePermission();

                    case 2:
                      hRWP = _context113.sent;
                      this.hasPerms = hRWP;
                      return _context113.abrupt("return", Promise.resolve(hRWP));

                    case 5:
                    case "end":
                      return _context113.stop();
                  }
                }
              }, _callee113, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "reqCalPerms",
          value: function reqCalPerms() {
            this.cal.requestReadWritePermission();
            return Promise.resolve(true);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "initGVars",
          value: function initGVars() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee114() {
              var loc;
              return regeneratorRuntime.wrap(function _callee114$(_context114) {
                while (1) {
                  switch (_context114.prev = _context114.next) {
                    case 0:
                      _context114.next = 2;
                      return this.dS.getMy();

                    case 2:
                      this.myObj = _context114.sent;
                      this.workAreas = this.dS.workAreas;
                      this.workPeople = this.dS.pplArr;
                      this.workName = this.dS.workName;
                      this.workCode = this.dS.workCode;

                      if (this.myObj !== null && this.myObj.hasOwnProperty('Workplace')) {
                        if (this.myObj.Workplace.length > 0) {
                          loc = this.myObj.Workplace[0]._DPMetaData.AddressObject.Print;

                          if (loc !== null && loc !== undefined && loc.length > 0) {
                            this.workLocation = loc.replace('\n', '');
                          } else {
                            this.workLocation = this.workName;
                          }
                        } else {
                          this.workLocation = this.workName;
                        }

                        ;
                      }

                      ;
                      this.evServ.publish('calInit', 'gvars');

                    case 10:
                    case "end":
                      return _context114.stop();
                  }
                }
              }, _callee114, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "initRefreshCalSettings",
          value: function initRefreshCalSettings() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee115() {
              var _this79 = this;

              var savedUSettObj, dsRes, dbRes, fireRes, freshCL, matchCArr, matchCal;
              return regeneratorRuntime.wrap(function _callee115$(_context115) {
                while (1) {
                  switch (_context115.prev = _context115.next) {
                    case 0:
                      _context115.next = 2;
                      return this.dS.getSettings();

                    case 2:
                      dsRes = _context115.sent;

                      if (!(dsRes !== null)) {
                        _context115.next = 7;
                        break;
                      }

                      savedUSettObj = dsRes;
                      _context115.next = 18;
                      break;

                    case 7:
                      _context115.next = 9;
                      return this.sqlServ.getSettings();

                    case 9:
                      dbRes = _context115.sent;

                      if (!dbRes.result) {
                        _context115.next = 14;
                        break;
                      }

                      savedUSettObj = dbRes.data;
                      _context115.next = 18;
                      break;

                    case 14:
                      _context115.next = 16;
                      return this.fireServ.getSettingsValue(null);

                    case 16:
                      fireRes = _context115.sent;

                      if (fireRes.result) {
                        savedUSettObj = fireRes.data;
                      } else {
                        savedUSettObj = (0, _appTypes__WEBPACK_IMPORTED_MODULE_6__.defaultAUSettings)();
                      }

                    case 18:
                      ;
                      this.userSettings = savedUSettObj;
                      this.uAlertOpts = this.userSettings.alerts.options;
                      this.calEnabled = Boolean(this.uAlertOpts.alertMethods.value.calendar);
                      this.calEvents.shift = Boolean(this.uAlertOpts.alertEvents.value.shift);
                      this.calEvents.task = Boolean(this.uAlertOpts.alertEvents.value.task);
                      this.beforeTimes.shift = Number(this.uAlertOpts.alertBefore.value.shift.mins);
                      this.beforeTimes.task = Number(this.uAlertOpts.alertBefore.value.task.mins);
                      this.showIncome = Boolean(this.userSettings.payrates.options.show.value);

                      if (this.initDone) {
                        _context115.next = 32;
                        break;
                      }

                      this.evServ.publish('calInit', 'calenabled');
                      return _context115.abrupt("return", Promise.resolve(true));

                    case 32:
                      _context115.next = 34;
                      return this.cal.listCalendars();

                    case 34:
                      freshCL = _context115.sent.filter(function (c) {
                        return Boolean(c.isPrimary) === true;
                      });

                      if (!(freshCL && freshCL.length > 0)) {
                        _context115.next = 54;
                        break;
                      }

                      this.calList = freshCL;

                      if (!(String(this.calOpts.id) !== String(this.uAlertOpts.alertCal.value))) {
                        _context115.next = 51;
                        break;
                      }

                      matchCArr = this.calList.filter(function (c) {
                        return String(c.id) === String(_this79.uAlertOpts.alertCal.value);
                      });

                      if (!(matchCArr && matchCArr.length > 0)) {
                        _context115.next = 48;
                        break;
                      }

                      matchCal = matchCArr[0];
                      this.selectedCal = matchCal;
                      this.calOpts.id = String(matchCal.id);
                      this.calOpts.calendarName = String(matchCal.name);
                      this.calOpts.calendarId = Number(matchCal.id);
                      return _context115.abrupt("return", Promise.resolve(true));

                    case 48:
                      return _context115.abrupt("return", Promise.resolve(true));

                    case 49:
                      _context115.next = 52;
                      break;

                    case 51:
                      return _context115.abrupt("return", Promise.resolve(true));

                    case 52:
                      _context115.next = 55;
                      break;

                    case 54:
                      return _context115.abrupt("return", Promise.resolve(true));

                    case 55:
                      ;

                    case 56:
                    case "end":
                      return _context115.stop();
                  }
                }
              }, _callee115, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "updateBeforeTimes",
          value: function updateBeforeTimes(event, mins) {
            this.logger.info("\uD83D\uDCC5 [calServ|updateBeforeTimes] (" + event + ',' + mins + ')...');
            this.beforeTimes[event] = mins;
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "capType",
          value: function capType(lowT) {
            return lowT.charAt(0).toUpperCase() + lowT.slice(1);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "triggerTime",
          value: function triggerTime(evD, beforeT) {
            return this.dT.subMs(evD, beforeT);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "deleteAllSched",
          value: function deleteAllSched() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee116() {
              return regeneratorRuntime.wrap(function _callee116$(_context116) {
                while (1) {
                  switch (_context116.prev = _context116.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCC5 [calServ|deleteAllSched] ()...");
                      _context116.next = 3;
                      return this.deleteAllSheriffEvs();

                    case 3:
                      this.schedEvs.shift = [];
                      this.schedEvs.task = [];
                      return _context116.abrupt("return", Promise.resolve(true));

                    case 6:
                    case "end":
                      return _context116.stop();
                  }
                }
              }, _callee116, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "reScheduleAll",
          value: function reScheduleAll() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee117() {
              return regeneratorRuntime.wrap(function _callee117$(_context117) {
                while (1) {
                  switch (_context117.prev = _context117.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCC5 [calServ|reScheduleAll] ()...");
                      this.isReschedule = true;
                      _context117.next = 4;
                      return this.deleteAllSched();

                    case 4:
                      this.doInitCal();

                    case 5:
                    case "end":
                      return _context117.stop();
                  }
                }
              }, _callee117, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "getBeforeTime",
          value: function getBeforeTime(event) {
            return this.beforeTimes[event];
          }
        }, {
          key: "getFName",
          value: ////////////////////////////////////////////////////////////////
          function getFName(empId) {
            var isE = function isE(name) {
              if (name === '' || name === ' ' || name === null || name === undefined) {
                return true;
              } else {
                return false;
              }
            };

            var fN;
            var pObArr = this.workPeople.filter(function (p) {
              return p.EmpId === empId;
            });

            if (pObArr.length > 0) {
              var rawFN = pObArr[0].FirstName;
              var rawLN = pObArr[0].LastName;
              var rawDN = pObArr[0].DisplayName;

              if (!isE(rawFN) && !isE(rawLN)) {
                fN = this.capType(rawFN) + ' ' + this.capType(rawLN.charAt(0)) + '.';
              } else if (!isE(rawFN)) {
                fN = this.capType(rawFN);
              } else if (!isE(rawDN)) {
                var rDNArr = rawDN.split(' ');

                if (rDNArr.length > 1) {
                  fN = this.capType(rDNArr[0]);
                } else {
                  fN = this.capType(rawDN);
                }
              }
            } else {
              fN = 'NK';
            }

            ;
            return fN;
          }
        }, {
          key: "deleteCal",
          value: ////////////////////////////////////////////////////////////////
          function deleteCal(calName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee118() {
              var delName, dCalRes;
              return regeneratorRuntime.wrap(function _callee118$(_context118) {
                while (1) {
                  switch (_context118.prev = _context118.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCC5 [calServ|deleteCal] (" + calName + ')...');
                      calName !== null ? delName = calName : delName = 'Sheriff Calendar';
                      _context118.next = 4;
                      return this.cal.deleteCalendar(delName);

                    case 4:
                      dCalRes = _context118.sent;

                      if (!dCalRes) {
                        _context118.next = 9;
                        break;
                      }

                      return _context118.abrupt("return", Promise.resolve({
                        result: true,
                        data: dCalRes
                      }));

                    case 9:
                      return _context118.abrupt("return", Promise.resolve({
                        result: false,
                        data: dCalRes
                      }));

                    case 10:
                    case "end":
                      return _context118.stop();
                  }
                }
              }, _callee118, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "getPay",
          value: function getPay(rosterObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee119() {
              var payRes;
              return regeneratorRuntime.wrap(function _callee119$(_context119) {
                while (1) {
                  switch (_context119.prev = _context119.next) {
                    case 0:
                      _context119.next = 2;
                      return this.fwServ.getShiftPay(rosterObj);

                    case 2:
                      payRes = _context119.sent;
                      return _context119.abrupt("return", Promise.resolve(payRes));

                    case 4:
                    case "end":
                      return _context119.stop();
                  }
                }
              }, _callee119, this);
            }));
          } /////////////////////////////////////////////////////////////////

        }, {
          key: "formatShift",
          value: function formatShift(rawNS) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee120() {
              var _this80 = this;

              var wNames, niceNS, nN, nStartEndObj, calcPay, tT, ttArr, lnConfirmBy;
              return regeneratorRuntime.wrap(function _callee120$(_context120) {
                while (1) {
                  switch (_context120.prev = _context120.next) {
                    case 0:
                      wNames = function wNames(oUId) {
                        var oUArr = _this80.workAreas.filter(function (oU) {
                          return oU.Id === oUId;
                        });

                        return {
                          cname: oUArr[0]['CompanyCode'],
                          warea: oUArr[0]['OperationalUnitName']
                        };
                      };

                      niceNS = rawNS;
                      nN = wNames(rawNS.OperationalUnit);
                      nN.warea ? niceNS['nOpUnit'] = nN.warea : niceNS['nOpUnit'] = '';
                      nN.cname ? niceNS['nCompanyName'] = nN.cname : niceNS['nCompanyName'] = this.workName;
                      niceNS['nDate'] = this.dT.format(new Date(rawNS.Date), 'EEEE, d MMMM yyyy');
                      nStartEndObj = this.dT.rosterSETimes(rawNS.StartTime, rawNS.EndTime);
                      niceNS['nStart'] = nStartEndObj.s.trim();
                      niceNS['nEnd'] = nStartEndObj.e.trim();
                      _context120.next = 11;
                      return this.getPay(rawNS);

                    case 11:
                      calcPay = _context120.sent;
                      niceNS['nIncomeObj'] = calcPay;
                      niceNS['nIncome'] = calcPay.t.toFixed(0);
                      tT = {
                        hours: 0,
                        minutes: 0
                      };

                      if (rawNS.TotalTime.toString().includes('.')) {
                        ttArr = rawNS.TotalTime.toString().split('.');
                        tT.hours = parseInt(ttArr[0]);
                        tT.minutes = Math.round(Number('0.' + ttArr[1]) * 60);
                      } else {
                        tT.hours = rawNS.TotalTime;
                      }

                      ;
                      niceNS['nTotalTime'] = tT;
                      niceNS['nConfirmStatus'] = rawNS.ConfirmStatus;
                      rawNS.ConfirmBy === 0 ? lnConfirmBy = false : lnConfirmBy = this.dT.Dut(rawNS.ConfirmBy);
                      niceNS['nConfirmBy'] = lnConfirmBy;
                      return _context120.abrupt("return", Promise.resolve(niceNS));

                    case 22:
                    case "end":
                      return _context120.stop();
                  }
                }
              }, _callee120, this);
            }));
          } /////////////////////////////////////////////////////////////////

        }, {
          key: "createCalEv",
          value: function createCalEv(eventObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee121() {
              var evType, reqConf, cCEvArr, cCEvObj, rawShiftO, shiftEvObj, shiftEvCalOpts, aNDur, nDurStr, aNIncome, sD, eD, confEvObj, confEvCalOpts, rawTaskO, taskEvObj, taskEvCalOpts, i, cCEO, cCEvRes;
              return regeneratorRuntime.wrap(function _callee121$(_context121) {
                while (1) {
                  switch (_context121.prev = _context121.next) {
                    case 0:
                      cCEvArr = [];
                      cCEvObj = {
                        title: null,
                        location: null,
                        notes: null,
                        startDate: null,
                        endDate: null,
                        options: {}
                      }; // SHIFTS -------------------------------------------------

                      if (eventObj.hasOwnProperty('MatchedByTimesheet')) {
                        evType = 'shift';
                        rawShiftO = eventObj;
                        shiftEvObj = cCEvObj;
                        shiftEvCalOpts = this.calOpts;
                        shiftEvCalOpts.firstReminderMinutes = this.beforeTimes[evType];
                        shiftEvObj.title = this.evIco.shift + this.evBName.shift + ' @ ' + this.workCode + ' (' + rawShiftO.nOpUnit + ')';
                        shiftEvObj.location = this.workLocation;
                        aNDur = rawShiftO.nTotalTime;

                        if (aNDur.hours > 0 && aNDur.minutes > 0) {
                          nDurStr = aNDur.hours + ':' + aNDur.minutes;
                        } else {
                          if (aNDur.hours > 0) {
                            nDurStr = aNDur.hours + 'h';
                          } else {
                            nDurStr = aNDur.minutes + 'm';
                          }
                        }

                        ;
                        this.showIncome ? aNIncome = "\n\uD83D\uDCB2 " + rawShiftO.nIncome : aNIncome = '';
                        shiftEvObj.notes = 'Sheriff Event ID #' + rawShiftO.Id.toString() + "\n\u23F1 " + nDurStr + aNIncome;
                        sD = this.dT.Dut(rawShiftO.StartTime);
                        eD = this.dT.Dut(rawShiftO.EndTime);
                        shiftEvObj.startDate = sD;
                        shiftEvObj.endDate = eD;
                        shiftEvObj.options = shiftEvCalOpts;
                        cCEvArr.push(shiftEvObj); // Confirm Shift ----------------------------------------

                        if (rawShiftO.ConfirmStatus === 1 && rawShiftO.nConfirmBy !== false) {
                          reqConf = true;
                          confEvObj = cCEvObj;
                          confEvCalOpts = this.calOpts;
                          confEvCalOpts.firstReminderMinutes = this.beforeTimes[evType];
                          confEvObj.title = this.evIco.confirm + this.evBName.confirm + ' Deadline: ' + this.dT.format(new Date(rawShiftO.Date), 'EEE, d MMM') + ' @ ' + this.workCode + ' (' + rawShiftO.nOpUnit + ')';
                          confEvObj.location = null;
                          confEvObj.notes = 'Sheriff Event ID #' + rawShiftO.Id.toString();
                          confEvObj.startDate = rawShiftO.nConfirmBy;
                          confEvObj.endDate = this.dT.addHrs(rawShiftO.nConfirmBy, 1);
                          confEvObj.options = confEvCalOpts;
                          cCEvArr.push(confEvObj);
                        } // TASKS --------------------------------------------------

                      } else if (eventObj.hasOwnProperty('TaskSetupId')) {
                        evType = 'task';
                        rawTaskO = eventObj;
                        taskEvObj = cCEvObj;
                        taskEvCalOpts = this.calOpts;
                        taskEvCalOpts.firstReminderMinutes = this.beforeTimes[evType];
                        taskEvObj.title = this.evIco.task + this.evBName.task + '- Task #' + rawTaskO.Id + ' from ' + this.getFName(rawTaskO.UserEntry) + ' @ ' + this.workCode;
                        taskEvObj.location = this.workLocation;
                        taskEvObj.notes = 'Sheriff Event ID #' + rawTaskO.Id.toString();
                        taskEvObj.startDate = new Date(rawTaskO.DueDate);
                        taskEvObj.endDate = this.dT.addHrs(taskEvObj.startDate, 1);
                        taskEvObj.options = taskEvCalOpts;
                        cCEvArr.push(taskEvObj);
                      } else {
                        this.logger.info("\uD83D\uDCC5 [calServ|createCalEv] (Error): Unknown eventObj Type?");
                      }

                      ; // FN ------------------------------------------------------

                      i = 0;

                    case 5:
                      if (!(i < cCEvArr.length)) {
                        _context121.next = 22;
                        break;
                      }

                      cCEO = cCEvArr[i];
                      _context121.prev = 7;
                      _context121.next = 10;
                      return this.cal.createEventWithOptions(cCEO.title, cCEO.location, cCEO.notes, cCEO.startDate, cCEO.endDate, cCEO.options);

                    case 10:
                      cCEvRes = _context121.sent;
                      this.schedEvs[evType].push({
                        dId: eventObj.Id,
                        cId: cCEvRes
                      });
                      return _context121.abrupt("return", Promise.resolve({
                        result: true,
                        data: cCEvRes
                      }));

                    case 15:
                      _context121.prev = 15;
                      _context121.t0 = _context121["catch"](7);
                      this.logger.info("\uD83D\uDCC5 [calServ|createCalEv] (Error): " + _context121.t0);
                      return _context121.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context121.t0
                      }));

                    case 19:
                      i++;
                      _context121.next = 5;
                      break;

                    case 22:
                    case "end":
                      return _context121.stop();
                  }
                }
              }, _callee121, this, [[7, 15]]);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "findCalEvent",
          value: function findCalEvent(eventId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee122() {
              var sD, eD, searchStr, fCERes;
              return regeneratorRuntime.wrap(function _callee122$(_context122) {
                while (1) {
                  switch (_context122.prev = _context122.next) {
                    case 0:
                      sD = this.dT.subDays(new Date(), 28);
                      eD = this.dT.addDays(new Date(), 28);
                      eventId !== null ? searchStr = 'Sheriff Event ID #' + eventId.toString() : searchStr = 'Sheriff Event ID #';
                      _context122.next = 5;
                      return this.cal.findEvent(null, null, searchStr, sD, eD);

                    case 5:
                      fCERes = _context122.sent;

                      if (!fCERes) {
                        _context122.next = 10;
                        break;
                      }

                      return _context122.abrupt("return", Promise.resolve({
                        result: true,
                        data: fCERes
                      }));

                    case 10:
                      return _context122.abrupt("return", Promise.resolve({
                        result: true,
                        data: fCERes
                      }));

                    case 11:
                    case "end":
                      return _context122.stop();
                  }
                }
              }, _callee122, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "listCalEvents",
          value: function listCalEvents(startDate, endDate) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee123() {
              return regeneratorRuntime.wrap(function _callee123$(_context123) {
                while (1) {
                  switch (_context123.prev = _context123.next) {
                    case 0:
                      return _context123.abrupt("return", this.cal.listEventsInRange(startDate, endDate));

                    case 1:
                    case "end":
                      return _context123.stop();
                  }
                }
              }, _callee123, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "deleteAllSheriffEvs",
          value: function deleteAllSheriffEvs() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee124() {
              var sT, sD, eD, allCals, i, thisCalDelIdList, sheriffEvs10Y, _i13, deputyEvs10Y, _i14, delGood, delBad, _i15;

              return regeneratorRuntime.wrap(function _callee124$(_context124) {
                while (1) {
                  switch (_context124.prev = _context124.next) {
                    case 0:
                      sT = new Date();
                      this.logger.info("\uD83D\uDCC5 >\uD83D\uDDD1\uFE0F> [calServ|deleteAllSheriffEvs] (STARTED)...");
                      sD = (0, date_fns__WEBPACK_IMPORTED_MODULE_9__["default"])(new Date(), 5);
                      eD = (0, date_fns__WEBPACK_IMPORTED_MODULE_10__["default"])(new Date(), 5);
                      allCals = this.allCalList;
                      i = 0;

                    case 6:
                      if (!(i < allCals.length)) {
                        _context124.next = 41;
                        break;
                      }

                      thisCalDelIdList = [];
                      _context124.next = 10;
                      return this.cal.findEvent(null, null, 'Sheriff Event ID #', sD, eD);

                    case 10:
                      sheriffEvs10Y = _context124.sent;

                      if (sheriffEvs10Y.length > 0) {
                        for (_i13 = 0; _i13 < sheriffEvs10Y.length; _i13++) {
                          thisCalDelIdList.push(String(sheriffEvs10Y[_i13].id));
                        }
                      }

                      ;
                      _context124.next = 15;
                      return this.cal.findEvent(null, null, 'Open in Deputy:', sD, eD);

                    case 15:
                      deputyEvs10Y = _context124.sent;

                      if (deputyEvs10Y.length > 0) {
                        for (_i14 = 0; _i14 < deputyEvs10Y.length; _i14++) {
                          thisCalDelIdList.push(String(deputyEvs10Y[_i14].id));
                        }
                      }

                      ;
                      this.logger.info(' 🗑️ FOUND ' + thisCalDelIdList.length + ' in ' + allCals[i].name + '(' + allCals[i].id + ') - Deleting...');
                      delGood = 0;
                      delBad = 0;
                      _i15 = 0;

                    case 22:
                      if (!(_i15 < thisCalDelIdList.length)) {
                        _context124.next = 35;
                        break;
                      }

                      _context124.prev = 23;
                      _context124.next = 26;
                      return this.cal.deleteEventById(String(thisCalDelIdList[_i15]), sD);

                    case 26:
                      delGood++;
                      _context124.next = 32;
                      break;

                    case 29:
                      _context124.prev = 29;
                      _context124.t0 = _context124["catch"](23);
                      delBad++;

                    case 32:
                      _i15++;
                      _context124.next = 22;
                      break;

                    case 35:
                      ;

                      if (delGood === thisCalDelIdList.length) {
                        this.logger.info(' ✔️ REMOVED ALL (' + delGood + '/' + thisCalDelIdList.length + ')');
                      } else {
                        this.logger.info(' ❌ REMOVED ONLY ' + delGood + '/' + thisCalDelIdList.length + ')');
                      }

                      ;

                    case 38:
                      i++;
                      _context124.next = 6;
                      break;

                    case 41:
                      ;
                      this.logger.info("\uD83D\uDCC5 <\uD83D\uDDD1\uFE0F< [calServ|deleteAllSheriffEvs] (FINISHED!) - " + this.evServ.getDur(sT) + 'ms');
                      return _context124.abrupt("return", Promise.resolve(true));

                    case 44:
                    case "end":
                      return _context124.stop();
                  }
                }
              }, _callee124, this, [[23, 29]]);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "deleteCalEvent",
          value: function deleteCalEvent(eventId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee125() {
              var dCERes;
              return regeneratorRuntime.wrap(function _callee125$(_context125) {
                while (1) {
                  switch (_context125.prev = _context125.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCC5 [calServ|deleteEvent] (" + eventId + ')...');
                      _context125.next = 3;
                      return this.cal.deleteEvent(null, null, 'Sheriff Event ID #' + eventId.toString(), null, null);

                    case 3:
                      dCERes = _context125.sent;

                      if (!dCERes) {
                        _context125.next = 8;
                        break;
                      }

                      return _context125.abrupt("return", Promise.resolve({
                        result: true,
                        data: dCERes
                      }));

                    case 8:
                      return _context125.abrupt("return", Promise.resolve({
                        result: true,
                        data: dCERes
                      }));

                    case 9:
                    case "end":
                      return _context125.stop();
                  }
                }
              }, _callee125, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "deleteCalEventById",
          value: function deleteCalEventById(calEventId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee126() {
              var nowLess28, dCEBIdRes;
              return regeneratorRuntime.wrap(function _callee126$(_context126) {
                while (1) {
                  switch (_context126.prev = _context126.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCC5 [calServ|deleteCalEventById] (" + calEventId + ')...');
                      nowLess28 = this.dT.subDays(new Date(), 28);
                      _context126.prev = 2;
                      _context126.next = 5;
                      return this.cal.deleteEventById(calEventId, nowLess28);

                    case 5:
                      dCEBIdRes = _context126.sent;
                      console.log(dCEBIdRes);
                      return _context126.abrupt("return", Promise.resolve(dCEBIdRes));

                    case 10:
                      _context126.prev = 10;
                      _context126.t0 = _context126["catch"](2);
                      this.logger.info('[calServ|deleteCalEventById] (ERROR): ' + JSON.stringify(_context126.t0));

                    case 13:
                    case "end":
                      return _context126.stop();
                  }
                }
              }, _callee126, this, [[2, 10]]);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "openCal",
          value: function openCal(openDate) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee127() {
              var oD, oCRes;
              return regeneratorRuntime.wrap(function _callee127$(_context127) {
                while (1) {
                  switch (_context127.prev = _context127.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCC5 [calServ|openCal] (" + openDate + ')...');
                      openDate !== null ? oD = openDate : oD = new Date();
                      _context127.next = 4;
                      return this.cal.openCalendar(oD);

                    case 4:
                      oCRes = _context127.sent;

                      if (!oCRes) {
                        _context127.next = 9;
                        break;
                      }

                      return _context127.abrupt("return", Promise.resolve({
                        result: true,
                        data: oCRes
                      }));

                    case 9:
                      return _context127.abrupt("return", Promise.resolve({
                        result: true,
                        data: oCRes
                      }));

                    case 10:
                    case "end":
                      return _context127.stop();
                  }
                }
              }, _callee127, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "cShiftsDelay",
          value: function cShiftsDelay(shiftData) {
            var _this81 = this;

            this.logger.info("\uD83D\uDCC5 [calServ|cShiftsDelay] ()...");
            var cSDelayLoop = setInterval(function () {
              if (!_this81.tasksInProg) {
                _this81.logger.info("\uD83D\uDCC5 [calServ|cShiftsDelay] [TasksInProg=" + _this81.tasksInProg + '] - Running checkShifts()...');

                clearInterval(cSDelayLoop);
                setTimeout(function () {
                  _this81.calCheckShifts(shiftData);
                }, 250);
              } else {
                _this81.logger.info("\uD83D\uDCC5 [calServ|cShiftsDelay] [TasksInProg=" + _this81.tasksInProg + '] - Waiting...');
              }
            }, 500);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "calCheckShifts",
          value: function calCheckShifts(shiftData) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee128() {
              var allFSSs, dbSRes, sSArr, schedGood, schedBad, schedSkip, i, rawTSO, tSO, tSOStart, findExist, _i16, doSchedRes;

              return regeneratorRuntime.wrap(function _callee128$(_context128) {
                while (1) {
                  switch (_context128.prev = _context128.next) {
                    case 0:
                      allFSSs = [];

                      if (!(shiftData !== null)) {
                        _context128.next = 5;
                        break;
                      }

                      allFSSs = shiftData;
                      _context128.next = 9;
                      break;

                    case 5:
                      _context128.next = 7;
                      return this.sqlServ.getFutureStartShifts();

                    case 7:
                      dbSRes = _context128.sent;

                      if (dbSRes.result) {
                        allFSSs = dbSRes.data;
                      } else {
                        allFSSs = [];
                      }

                    case 9:
                      ;
                      allFSSs.push(_appTypes__WEBPACK_IMPORTED_MODULE_6__.testShift);

                      if (!(allFSSs.length > 0)) {
                        _context128.next = 59;
                        break;
                      }

                      this.logger.info("\uD83D\uDCC5 [calServ|checkShifts] Found [" + allFSSs.length + '] Shifts to Schedule...');

                      if (!this.tasksInProg) {
                        _context128.next = 18;
                        break;
                      }

                      this.logger.info("\uD83D\uDCC5 [calServ|checkShifts] (WARNING) tasksInProg=" + this.tasksInProg.toString().toUpperCase() + ' - Running cShiftsDelay()...');
                      this.cShiftsDelay(allFSSs);
                      _context128.next = 57;
                      break;

                    case 18:
                      this.shiftsInProg = true;
                      sSArr = allFSSs;
                      schedGood = 0;
                      schedBad = 0;
                      schedSkip = 0;
                      i = 0;

                    case 24:
                      if (!(i < sSArr.length)) {
                        _context128.next = 53;
                        break;
                      }

                      rawTSO = sSArr[i];
                      _context128.next = 28;
                      return this.formatShift(rawTSO);

                    case 28:
                      tSO = _context128.sent;
                      tSOStart = this.dT.Dut(tSO.StartTime);

                      if (!this.dT.isA(tSOStart, new Date())) {
                        _context128.next = 49;
                        break;
                      }

                      _context128.next = 33;
                      return this.findCalEvent(tSO.Id);

                    case 33:
                      findExist = _context128.sent;

                      if (!(findExist.length > 0)) {
                        _context128.next = 42;
                        break;
                      }

                      _i16 = 0;

                    case 36:
                      if (!(_i16 < findExist.length)) {
                        _context128.next = 42;
                        break;
                      }

                      _context128.next = 39;
                      return this.deleteCalEventById(findExist[_i16].id);

                    case 39:
                      _i16++;
                      _context128.next = 36;
                      break;

                    case 42:
                      ;
                      _context128.next = 45;
                      return this.createCalEv(tSO);

                    case 45:
                      doSchedRes = _context128.sent;

                      if (doSchedRes.result) {
                        schedGood++;
                      } else {
                        schedBad++;
                      }

                      _context128.next = 50;
                      break;

                    case 49:
                      schedSkip++;

                    case 50:
                      i++;
                      _context128.next = 24;
                      break;

                    case 53:
                      ;
                      this.logger.info("\uD83D\uDCC5 [calServ|checkShifts] (FINISHED) RESULTS: \u2714\uFE0F " + schedGood + ', ❌ ' + schedBad + ', ➖ ' + schedSkip);
                      this.shiftsInProg = false;
                      this.evServ.publish('calSched', true);

                    case 57:
                      _context128.next = 62;
                      break;

                    case 59:
                      this.logger.info("\uD83D\uDCC5 [calServ|checkShifts] (NIL) No Future Start Shifts To Schedule.");
                      this.shiftsInProg = false;
                      this.evServ.publish('calSched', true);

                    case 62:
                    case "end":
                      return _context128.stop();
                  }
                }
              }, _callee128, this);
            }));
          } //////////////////////////////////////////////////////////////// 

        }, {
          key: "cTasksDelay",
          value: function cTasksDelay(taskData) {
            var _this82 = this;

            this.logger.info("\uD83D\uDCC5 [calServ|cTasksDelay] ()...");
            var cTDelayLoop = setInterval(function () {
              if (!_this82.shiftsInProg) {
                _this82.logger.info("\uD83D\uDCC5 [calServ|cTasksDelay] [ShiftsInProg=" + _this82.shiftsInProg + '] - Running checkTasks()...');

                clearInterval(cTDelayLoop);
                setTimeout(function () {
                  _this82.calCheckTasks(taskData);
                }, 250);
              } else {
                _this82.logger.info("\uD83D\uDCC5 [calServ|cTasksDelay] [ShiftsInProg=" + _this82.shiftsInProg + '] - Waiting...');
              }
            }, 500);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "calCheckTasks",
          value: function calCheckTasks(taskData) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee129() {
              var allFDTs, dbTRes, schedGood, schedBad, schedSkip, i, tT, findExist, _i17, doSchedRes;

              return regeneratorRuntime.wrap(function _callee129$(_context129) {
                while (1) {
                  switch (_context129.prev = _context129.next) {
                    case 0:
                      allFDTs = [];

                      if (!(taskData !== null)) {
                        _context129.next = 5;
                        break;
                      }

                      allFDTs = taskData;
                      _context129.next = 9;
                      break;

                    case 5:
                      _context129.next = 7;
                      return this.sqlServ.getFutureDueTasks();

                    case 7:
                      dbTRes = _context129.sent;

                      if (dbTRes.result) {
                        allFDTs = dbTRes.data;
                      } else {
                        allFDTs = [];
                      }

                    case 9:
                      ;

                      if (!(allFDTs.length > 0)) {
                        _context129.next = 53;
                        break;
                      }

                      this.logger.info("\uD83D\uDCC5 [calServ|checkTasks] Found [" + allFDTs.length + '] Tasks to Schedule...');

                      if (!this.shiftsInProg) {
                        _context129.next = 17;
                        break;
                      }

                      this.logger.info("\uD83D\uDCC5 [calServ|checkShifts] (WARNING) shiftsInProg=" + this.shiftsInProg.toString().toUpperCase() + ' - Running cTasksDelay()...');
                      this.cTasksDelay(allFDTs);
                      _context129.next = 51;
                      break;

                    case 17:
                      this.tasksInProg = true;
                      schedGood = 0;
                      schedBad = 0;
                      schedSkip = 0;
                      i = 0;

                    case 22:
                      if (!(i < allFDTs.length)) {
                        _context129.next = 47;
                        break;
                      }

                      tT = allFDTs[i];

                      if (!this.dT.isA(new Date(tT.DueDate), new Date())) {
                        _context129.next = 43;
                        break;
                      }

                      _context129.next = 27;
                      return this.findCalEvent(tT.Id);

                    case 27:
                      findExist = _context129.sent;

                      if (!(findExist.length > 0)) {
                        _context129.next = 36;
                        break;
                      }

                      _i17 = 0;

                    case 30:
                      if (!(_i17 < findExist.length)) {
                        _context129.next = 36;
                        break;
                      }

                      _context129.next = 33;
                      return this.deleteCalEventById(findExist[_i17].id);

                    case 33:
                      _i17++;
                      _context129.next = 30;
                      break;

                    case 36:
                      ;
                      _context129.next = 39;
                      return this.createCalEv(tT);

                    case 39:
                      doSchedRes = _context129.sent;

                      if (doSchedRes.result) {
                        schedGood++;
                      } else {
                        schedBad++;
                      }

                      _context129.next = 44;
                      break;

                    case 43:
                      schedSkip++;

                    case 44:
                      i++;
                      _context129.next = 22;
                      break;

                    case 47:
                      ;
                      this.logger.info("\uD83D\uDCC5 [calServ|checkTasks] (FINISHED) RESULTS: \u2714\uFE0F " + schedGood + ', ❌ ' + schedBad + ', ➖ ' + schedSkip);
                      this.tasksInProg = false;
                      this.evServ.publish('calSched', true);

                    case 51:
                      _context129.next = 56;
                      break;

                    case 53:
                      this.logger.info("\uD83D\uDCC5 [calServ|checkTasks] (NIL) No Future Due Tasks Not Completed.");
                      this.tasksInProg = false;
                      this.evServ.publish('calSched', true);

                    case 56:
                    case "end":
                      return _context129.stop();
                  }
                }
              }, _callee129, this);
            }));
          }
        }]);

        return CalendarService;
      }();

      _CalendarService.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_11__.NGXLogger
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_12__.Platform
        }, {
          type: _events_service__WEBPACK_IMPORTED_MODULE_1__.EventsService
        }, {
          type: _datetime_service__WEBPACK_IMPORTED_MODULE_2__.DateTimeService
        }, {
          type: _fairwork_service__WEBPACK_IMPORTED_MODULE_4__.FairworkService
        }, {
          type: _sqlite_service__WEBPACK_IMPORTED_MODULE_5__.SQLiteService
        }, {
          type: _ionic_native_calendar_ngx__WEBPACK_IMPORTED_MODULE_0__.Calendar
        }, {
          type: _detail_service__WEBPACK_IMPORTED_MODULE_3__.DetailService
        }, {
          type: _firebase_service__WEBPACK_IMPORTED_MODULE_7__.FirebaseService
        }];
      };

      _CalendarService = (0, tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_13__.Injectable)({
        providedIn: 'root'
      }) ////////////////////////////////////////////////////////////////
      ], _CalendarService);
      /***/
    },

    /***/
    12826:
    /*!**********************************************!*\
      !*** ./src/app/services/datetime.service.ts ***!
      \**********************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "DateTimeService": function DateTimeService() {
          return (
            /* binding */
            _DateTimeService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _ionic_native_date_picker_ngx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @ionic-native/date-picker/ngx */
      61194);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! date-fns */
      92707);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! date-fns */
      22100);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! date-fns */
      93812);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! date-fns */
      50752);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! date-fns */
      94513);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! date-fns */
      63818);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! date-fns */
      51056);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! date-fns */
      45255);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! date-fns */
      21805);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! date-fns */
      84839);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! date-fns */
      46436);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! date-fns */
      30331);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! date-fns */
      15102);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! date-fns */
      77071);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! date-fns */
      69934);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! date-fns */
      61023);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! date-fns */
      76175);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! date-fns */
      54323);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! date-fns */
      91747);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! date-fns */
      12541);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
      /*! date-fns */
      12297);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
      /*! date-fns */
      27920);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
      /*! date-fns */
      18344);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
      /*! date-fns */
      38537);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
      /*! date-fns */
      57888);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
      /*! date-fns */
      44840);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
      /*! date-fns */
      33550);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
      /*! date-fns */
      35759);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
      /*! date-fns */
      87482);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
      /*! date-fns */
      64465);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
      /*! date-fns */
      98120);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
      /*! date-fns */
      23501);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
      /*! date-fns */
      29399);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
      /*! date-fns */
      39705);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
      /*! date-fns */
      16031);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
      /*! date-fns */
      50820);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
      /*! date-fns */
      48069);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
      /*! date-fns */
      23246);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
      /*! date-fns */
      45229);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
      /*! date-fns */
      79223);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
      /*! date-fns */
      20013);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
      /*! date-fns */
      4547);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
      /*! date-fns */
      87592);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
      /*! date-fns */
      51000);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
      /*! date-fns */
      76784); ////////////////////////////////////////////////////////////////////////////////////////////////////


      var _DateTimeService = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        function DateTimeService(logger, datePicker) {
          var _this83 = this;

          _classCallCheck(this, DateTimeService);

          this.logger = logger;
          this.datePicker = datePicker; ////////////////////////////////////////////////////////////////////////////////////////////////////

          this.dPOpts = {
            mode: '',
            date: '',
            minDate: '',
            maxDate: '',
            titleText: '',
            is24Hour: false,
            androidTheme: 4,
            allowOldDates: true,
            allowFutureDates: true,
            todayText: 'Today'
          };
          this.tPOpts = {
            mode: 'time',
            date: '',
            titleText: 'Select Time',
            is24Hour: false,
            androidTheme: 4,
            nowText: 'Now'
          };
          this.monthNo = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
          this.weekDayNo = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

          this.uTokExpd = function (authObj) {
            if (_this83.gUT() - 600 > Number(authObj.expires_at)) {
              return true;
            } else {
              return false;
            }
          };
        } ////////////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(DateTimeService, [{
          key: "checkServ",
          value: function checkServ() {
            this.logger.info('[DTServ|checkServ] (TRUE) Date: ' + new Date().getDate());
            return Promise.resolve(true);
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "rCalWVDH",
          value: function rCalWVDH(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(d, 'EEE') + ' ' + (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(d, 'd');
          }
        }, {
          key: "rCalWVT",
          value: function rCalWVT(d) {
            var soW = this.sOW(d);
            var eoW = this.eOW(d);
            var soWD = (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(soW, 'd');
            var eoWD = (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(eoW, 'd');
            return soWD + ' - ' + eoWD + ' ' + (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(d, 'MMMM');
          }
        }, {
          key: "rCalWVHC",
          value: function rCalWVHC(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(d, 'haaa');
          }
        }, {
          key: "rCalDVT",
          value: function rCalDVT(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(d, 'EEE, d MMM yyyy');
          }
        }, {
          key: "addS",
          value: function addS(d, secs) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_2__["default"])(d, secs);
          }
        }, {
          key: "no2WD",
          value: function no2WD(weekdayNo) {
            return this.weekDayNo[weekdayNo];
          }
        }, {
          key: "parseStr",
          value: function parseStr(Dstr, strF) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_3__["default"])(Dstr, strF, new Date());
          }
        }, {
          key: "format",
          value: function format(Date, form) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(Date, form);
          }
        }, {
          key: "gDate",
          value: function gDate(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_4__["default"])(d);
          }
        }, {
          key: "tD",
          value: function tD(ut) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_5__["default"])(ut);
          }
        }, {
          key: "fDtN",
          value: function fDtN(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_6__["default"])(d, {
              addSuffix: true
            });
          }
        }, {
          key: "gD",
          value: function gD(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_7__["default"])(d);
          }
        }, {
          key: "gY",
          value: function gY(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_8__["default"])(d);
          }
        }, {
          key: "gH",
          value: function gH(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_9__["default"])(d);
          }
        }, {
          key: "gm",
          value: function gm(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_10__["default"])(d);
          }
        }, {
          key: "Dln",
          value: function Dln(longNiceDate) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_3__["default"])(longNiceDate, 'EEEE, d MMMM yyyy', new Date());
          }
        }, {
          key: "LNd",
          value: function LNd(Date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(Date, 'EEEE, d MMMM yyyy');
          }
        }, {
          key: "LNdS",
          value: function LNdS(Date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(Date, 'EEEE, d MMMM');
          }
        }, {
          key: "Dn",
          value: function Dn(niceDate) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_3__["default"])(niceDate, 'd MMM yyyy', new Date());
          }
        }, {
          key: "Nd",
          value: function Nd(Date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(Date, 'd MMM yyyy');
          }
        }, {
          key: "Id",
          value: function Id(Date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_11__["default"])(Date);
          }
        }, {
          key: "Di",
          value: function Di(ISO) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_12__["default"])(ISO);
          }
        }, {
          key: "pISO",
          value: function pISO(ISO) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_12__["default"])(ISO);
          }
        }, {
          key: "pJSON",
          value: function pJSON(JSON) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_13__["default"])(JSON);
          }
        }, {
          key: "UTSd",
          value: function UTSd(Date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(Date, 'T');
          }
        }, {
          key: "UTd",
          value: function UTd(Date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_14__["default"])(Date);
          }
        }, {
          key: "NTut",
          value: function NTut(UTS) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])((0, date_fns__WEBPACK_IMPORTED_MODULE_15__["default"])(UTS), 'h:mmaaa');
          }
        }, {
          key: "TFHut",
          value: function TFHut(UTS) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])((0, date_fns__WEBPACK_IMPORTED_MODULE_15__["default"])(UTS), 'HH:mm');
          }
        }, {
          key: "Dut",
          value: function Dut(unixTime) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_15__["default"])(unixTime);
          }
        }, {
          key: "DiffInDays",
          value: function DiffInDays(laterDate, earlierDate) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_16__["default"])(laterDate, earlierDate);
          }
        }, {
          key: "DifDurStr",
          value: function DifDurStr(startDate, endDate) {
            var dur = (0, date_fns__WEBPACK_IMPORTED_MODULE_17__["default"])({
              start: startDate,
              end: endDate
            });
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_18__["default"])(dur, {
              delimiter: ', '
            });
          }
        }, {
          key: "DurAsObj",
          value: function DurAsObj(startDate, endDate) {
            var rawDurObj = (0, date_fns__WEBPACK_IMPORTED_MODULE_17__["default"])({
              start: startDate,
              end: endDate
            });
            var dPs = ['seconds', 'minutes', 'hours', 'days', 'weeks', 'months', 'years'];

            for (var i = 0; i < dPs.length; i++) {
              if (!rawDurObj.hasOwnProperty(dPs[i])) {
                rawDurObj[dPs[i]] = 0;
              }
            }

            ;
            return rawDurObj;
          }
        }, {
          key: "syncStr",
          value: function syncStr(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_19__["default"])(d, {
              fractionDigits: 3
            });
          }
        }, {
          key: "dISO",
          value: function dISO(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_11__["default"])(d);
          }
        }, {
          key: "dMax",
          value: function dMax(dArr) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_20__["default"])(dArr);
          }
        }, {
          key: "isSD",
          value: function isSD(date1, date2) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_21__["default"])(date1, date2);
          }
        }, {
          key: "isA",
          value: function isA(testDate, afterDate) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_22__["default"])(testDate, afterDate);
          }
        }, {
          key: "isB",
          value: function isB(testDate, beforeDate) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_23__["default"])(testDate, beforeDate);
          }
        }, {
          key: "isSW",
          value: function isSW(date1, date2) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_24__["default"])(date1, date2, {
              weekStartsOn: 1
            });
          }
        }, {
          key: "isSM",
          value: function isSM(date1, date2) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_25__["default"])(date1, date2);
          }
        }, {
          key: "sOW",
          value: function sOW(Date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_26__["default"])(Date, {
              weekStartsOn: 1
            });
          }
        }, {
          key: "eOW",
          value: function eOW(Date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_27__["default"])(Date, {
              weekStartsOn: 1
            });
          }
        }, {
          key: "isTW",
          value: function isTW(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_28__["default"])(d, {
              weekStartsOn: 1
            });
          }
        }, {
          key: "gM",
          value: function gM(Date) {
            return this.monthNo[(0, date_fns__WEBPACK_IMPORTED_MODULE_29__["default"])(Date)];
          }
        }, {
          key: "addHrs",
          value: function addHrs(date, hrs) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_30__["default"])(date, hrs);
          }
        }, {
          key: "subDays",
          value: function subDays(date, days) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_31__["default"])(date, days);
          }
        }, {
          key: "addDays",
          value: function addDays(date, days) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_32__["default"])(date, days);
          }
        }, {
          key: "isThisFN",
          value: function isThisFN(date) {
            var ftDAgo = this.subDays(new Date(), 14);

            if (this.isA(date, ftDAgo) && this.isB(date, new Date())) {
              return true;
            } else {
              return false;
            }
          }
        }, {
          key: "endOfHr",
          value: function endOfHr(date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_33__["default"])(date);
          }
        }, {
          key: "startOfHr",
          value: function startOfHr(date) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_34__["default"])(date);
          }
        }, {
          key: "parse",
          value: function parse(dateStr, datePtn) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_3__["default"])(dateStr, datePtn, new Date());
          }
        }, {
          key: "round5",
          value: function round5(d) {
            var ms = 1000 * 60 * 5;
            var rD = new Date(Math.round(new Date(d).getTime() / ms) * ms);
            return rD;
          }
        }, {
          key: "round5_24h",
          value: function round5_24h(date) {
            var roundD = this.round5(date);
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(roundD, 'HH:mm');
          }
        }, {
          key: "isBW",
          value: function isBW(d, range) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_35__["default"])(d, range);
          }
        }, {
          key: "gUT",
          value: function gUT() {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_36__["default"])(new Date());
          }
        }, {
          key: "getUT",
          value: function getUT(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_36__["default"])(d);
          }
        }, {
          key: "addWs",
          value: function addWs(d, w) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_37__["default"])(d, w);
          }
        }, {
          key: "isV",
          value: function isV(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_38__["default"])(d);
          }
        }, {
          key: "subYs",
          value: function subYs(d, years) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_39__["default"])(d, years);
          }
        }, {
          key: "subWs",
          value: function subWs(d, weeks) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_40__["default"])(d, weeks);
          }
        }, {
          key: "subMs",
          value: function subMs(d, mins) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_41__["default"])(d, mins);
          }
        }, {
          key: "addMs",
          value: function addMs(d, mins) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_42__["default"])(d, mins);
          }
        }, {
          key: "sOfM",
          value: function sOfM(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_43__["default"])(d);
          }
        }, {
          key: "eOfM",
          value: function eOfM(d) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_44__["default"])(d);
          }
        }, {
          key: "sOfW",
          value: function sOfW(mode) {
            var sD = (0, date_fns__WEBPACK_IMPORTED_MODULE_26__["default"])(new Date(), {
              weekStartsOn: 1
            });

            if (mode === 'date') {
              return sD;
            } else {
              return this.getUT(sD);
            }
          }
        }, {
          key: "eOfW",
          value: function eOfW(mode) {
            var eD = (0, date_fns__WEBPACK_IMPORTED_MODULE_27__["default"])(new Date(), {
              weekStartsOn: 1
            });

            if (mode === 'date') {
              return eD;
            } else {
              return this.getUT(eD);
            }
          }
        }, {
          key: "authExpAt",
          value: function authExpAt(authObj) {
            var newAuthObj = authObj;
            var nowUTS = this.getUT(new Date());
            var addExpSecs = Number(authObj.expires_in);
            var expAtSecs = nowUTS + addExpSecs;
            newAuthObj['expires_at'] = String(expAtSecs);
            newAuthObj['expires_in'] = String(authObj.expires_in);
            return newAuthObj;
          }
        }, {
          key: "shiftTTToDur",
          value: function shiftTTToDur(shiftTT) {
            var sTT = {
              hours: 0,
              minutes: 0
            };
            sTT.hours = Math.floor(shiftTT);
            sTT.minutes = Math.round((0, date_fns__WEBPACK_IMPORTED_MODULE_45__["default"])(shiftTT - sTT.hours));
            return sTT;
          }
        }, {
          key: "rosVsTSTTDiff",
          value: function rosVsTSTTDiff(rosterTT, tsheetTT) {
            var ttDiff = {
              hours: 0,
              minutes: 0
            };
            var isNeg = false;
            var ttDiffRawHrs = tsheetTT - rosterTT;
            var ttDiffSign = Math.sign(ttDiffRawHrs);
            var ttDiffRawAbsHrs;

            if (ttDiffSign === 0) {
              return ttDiff;
            } else if (ttDiffSign === -1) {
              ttDiffRawAbsHrs = Math.abs(ttDiffRawHrs);
              isNeg = true;
            } else if (ttDiffSign === 1) {
              ttDiffRawAbsHrs = ttDiffRawHrs;
              isNeg = false;
            }

            ;
            var ttDiffWholeHrs = Math.floor(ttDiffRawAbsHrs);

            if (ttDiffWholeHrs === 0) {
              ttDiff.hours = 0;
            } else {
              if (isNeg) {
                ttDiff.hours = -ttDiffWholeHrs;
              } else {
                ttDiff.hours = ttDiffWholeHrs;
              }
            }

            ;
            var ttDiffPartHrs2Fixed = (ttDiffRawAbsHrs - ttDiffWholeHrs).toFixed(2);
            var ttDiffPartHrs = Number(ttDiffPartHrs2Fixed);

            if (ttDiffPartHrs === 0) {
              ttDiff.minutes = 0;
            } else {
              var ttDiffPHInMins = (0, date_fns__WEBPACK_IMPORTED_MODULE_45__["default"])(ttDiffPartHrs);
              var ttDiffPHInMinsRounded = Math.round(ttDiffPHInMins);

              if (isNeg) {
                ttDiff.minutes = -ttDiffPHInMinsRounded;
              } else {
                ttDiff.minutes = ttDiffPHInMinsRounded;
              }
            }

            ;
            return ttDiff;
          }
        }, {
          key: "getShiftWeek",
          value: function getShiftWeek() {
            var _this84 = this;

            var nowD = new Date();

            var getTN = function getTN(d) {
              var res;

              if (_this84.isSD(d, nowD)) {
                res = 'T';
              } else if (_this84.isB(d, nowD)) {
                res = 'B';
              } else {
                res = 'A';
              }

              ;
              return res;
            };

            var tMon = (0, date_fns__WEBPACK_IMPORTED_MODULE_26__["default"])(nowD, {
              weekStartsOn: 1
            });
            var rW = [{
              sn: 'mo',
              ln: 'monday',
              d: null,
              day: null,
              isshift: false,
              tonow: ''
            }, {
              sn: 'tu',
              ln: 'tuesday',
              d: null,
              day: null,
              isshift: false,
              tonow: ''
            }, {
              sn: 'we',
              ln: 'wednesday',
              d: null,
              day: null,
              isshift: false,
              tonow: ''
            }, {
              sn: 'th',
              ln: 'thursday',
              d: null,
              day: null,
              isshift: false,
              tonow: ''
            }, {
              sn: 'fr',
              ln: 'friday',
              d: null,
              day: null,
              isshift: false,
              tonow: ''
            }, {
              sn: 'sa',
              ln: 'saturday',
              d: null,
              day: null,
              isshift: false,
              tonow: ''
            }, {
              sn: 'su',
              ln: 'sunday',
              d: null,
              day: null,
              isshift: false,
              tonow: ''
            }];

            for (var i = 0; i < rW.length; i++) {
              var pI = i;

              if (i === 0) {
                rW[i]['d'] = tMon;
                rW[i]['day'] = (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(tMon, 'd');
                rW[i]['tonow'] = getTN(tMon);
              } else {
                var tDay = this.addDays(tMon, pI);
                rW[i]['d'] = tDay;
                rW[i]['day'] = (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(tDay, 'd');
                rW[i]['tonow'] = getTN(tDay);
              }
            }

            ;
            return Promise.resolve(rW);
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "rosterSETimes",
          value: function rosterSETimes(StartUTS, EndUTS) {
            var sD = (0, date_fns__WEBPACK_IMPORTED_MODULE_15__["default"])(StartUTS);
            var eD = (0, date_fns__WEBPACK_IMPORTED_MODULE_15__["default"])(EndUTS);
            var finalS;
            var finalSPat = 'h:mm';
            var finalE;
            var finalEPat = 'h:mmaaa';

            if ((0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(sD, 'aaa') !== (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(eD, 'aaa')) {
              finalSPat += 'aaa';
            }

            ;
            finalS = (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(sD, finalSPat);
            finalE = (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(eD, finalEPat);
            return {
              s: finalS,
              e: finalE
            };
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "rosterSEDoneTimes",
          value: function rosterSEDoneTimes(StartUTS, EndUTS) {
            var sD = (0, date_fns__WEBPACK_IMPORTED_MODULE_15__["default"])(StartUTS);
            var eD = (0, date_fns__WEBPACK_IMPORTED_MODULE_15__["default"])(EndUTS);
            var sT = (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(sD, 'h:mm');
            var eT = (0, date_fns__WEBPACK_IMPORTED_MODULE_1__["default"])(eD, 'h:mm');
            return {
              s: sT,
              e: eT
            };
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "openDRPicker",
          value: function openDRPicker(oPList, oPFromTo, oPDate, oPMin, oPMax) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_46__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee130() {
              var stdLists, defOpts;
              return regeneratorRuntime.wrap(function _callee130$(_context130) {
                while (1) {
                  switch (_context130.prev = _context130.next) {
                    case 0:
                      this.logger.info('[DTServ|openPicker] (' + oPList + ',' + oPFromTo + ',' + oPDate + ',' + oPMin + ',' + oPMax + ')...');
                      stdLists = ['rosters', 'tsheets', 'tasks', 'news'];
                      defOpts = this.dPOpts;
                      defOpts.mode = 'date';
                      defOpts.date = oPDate;
                      defOpts.minDate = oPMin;
                      defOpts.maxDate = oPMax;

                      if (stdLists.includes(oPList)) {
                        defOpts.mode = 'date';
                        defOpts.titleText = "\uD83D\uDCC5 \uD835\uDDB2\uD835\uDDBE\uD835\uDDC5\uD835\uDDBE\uD835\uDDBC\uD835\uDDCD " + (oPFromTo === 'start' ? '𝗦𝗧𝗔𝗥𝗧' : '𝗘𝗡𝗗') + ' 𝖣𝖺𝗍𝖾:';
                        defOpts.allowFutureDates = false;
                      }

                      _context130.next = 10;
                      return this.datePicker.show(defOpts);

                    case 10:
                      return _context130.abrupt("return", _context130.sent);

                    case 11:
                    case "end":
                      return _context130.stop();
                  }
                }
              }, _callee130, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "openTimePicker",
          value: function openTimePicker(newBOpenTime, startOrEnd) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_46__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee131() {
              return regeneratorRuntime.wrap(function _callee131$(_context131) {
                while (1) {
                  switch (_context131.prev = _context131.next) {
                    case 0:
                      this.logger.info('[DTServ|openTimePicker] ()...');
                      _context131.next = 3;
                      return this.datePicker.show({
                        mode: 'datetime',
                        date: newBOpenTime,
                        titleText: (startOrEnd === 'start' ? '𝗦𝗧𝗔𝗥𝗧' : '𝗘𝗡𝗗') + ' 𝖳𝗂𝗆𝖾:',
                        nowText: 'Now',
                        is24Hour: false,
                        androidTheme: 4
                      });

                    case 3:
                      return _context131.abrupt("return", _context131.sent);

                    case 4:
                    case "end":
                      return _context131.stop();
                  }
                }
              }, _callee131, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "dpDateOnly",
          value: function dpDateOnly(openDate) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_46__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee132() {
              return regeneratorRuntime.wrap(function _callee132$(_context132) {
                while (1) {
                  switch (_context132.prev = _context132.next) {
                    case 0:
                      this.logger.info('[DTServ|dpDateOnly] ()...');
                      _context132.next = 3;
                      return this.datePicker.show({
                        mode: 'date',
                        date: openDate,
                        androidTheme: 4
                      });

                    case 3:
                      return _context132.abrupt("return", _context132.sent);

                    case 4:
                    case "end":
                      return _context132.stop();
                  }
                }
              }, _callee132, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "pickerProfileDOB",
          value: function pickerProfileDOB(openAt) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_46__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee133() {
              var openD, pPDOBRes;
              return regeneratorRuntime.wrap(function _callee133$(_context133) {
                while (1) {
                  switch (_context133.prev = _context133.next) {
                    case 0:
                      openAt !== null ? openD = openAt : openD = new Date();
                      _context133.next = 3;
                      return this.datePicker.show({
                        mode: 'date',
                        date: openD,
                        androidTheme: 4
                      });

                    case 3:
                      pPDOBRes = _context133.sent;
                      return _context133.abrupt("return", Promise.resolve(pPDOBRes));

                    case 5:
                    case "end":
                      return _context133.stop();
                  }
                }
              }, _callee133, this);
            }));
          }
        }]);

        return DateTimeService;
      }();

      _DateTimeService.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_47__.NGXLogger
        }, {
          type: _ionic_native_date_picker_ngx__WEBPACK_IMPORTED_MODULE_0__.DatePicker
        }];
      };

      _DateTimeService = (0, tslib__WEBPACK_IMPORTED_MODULE_46__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_48__.Injectable)({
        providedIn: 'root'
      }) ////////////////////////////////////////////////////////////////////////////////////////////////////
      ], _DateTimeService);
      /***/
    },

    /***/
    22092:
    /*!********************************************!*\
      !*** ./src/app/services/deputy.service.ts ***!
      \********************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "DeputyService": function DeputyService() {
          return (
            /* binding */
            _DeputyService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _datetime_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./datetime.service */
      12826);
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @capacitor/core */
      68384);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _filesystem_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./filesystem.service */
      22904);
      /* harmony import */


      var _storage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./storage.service */
      71188);
      /* harmony import */


      var _events_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./events.service */
      80106);
      /* harmony import */


      var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ionic-native/http/ngx */
      68589);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _ionic_native_file_transfer_ngx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic-native/file-transfer/ngx */
      97905);
      /* harmony import */


      var _baseDB__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./baseDB */
      96414);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! rxjs */
      26215);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! date-fns */
      92707);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! date-fns */
      93812);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! date-fns */
      61023);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! date-fns */
      87482);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! date-fns */
      45255);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! date-fns */
      50752);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! date-fns */
      46436);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! date-fns */
      49387);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! date-fns */
      12297);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! date-fns */
      71879);
      /* harmony import */


      var lodash__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! lodash */
      23815);
      /* harmony import */


      var lodash__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_8__); ////////////////////////////////////////////////////////////////////////////////////////////////////


      var _DeputyService = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        function DeputyService(fileServ, storeServ, eventServ, logger, shttp, dT, transfer, platform) {
          var _this85 = this;

          _classCallCheck(this, DeputyService);

          this.fileServ = fileServ;
          this.storeServ = storeServ;
          this.eventServ = eventServ;
          this.logger = logger;
          this.shttp = shttp;
          this.dT = dT;
          this.transfer = transfer;
          this.platform = platform; ////////////////////////////////////////////////////////////////////////////////////////////////////

          this.logP = '[DeputyService]';
          this.mod = this.logP;
          this.didRefresh = false;
          this.uUK = null;
          this.userEmail = null;
          this.isAuthenticated = new rxjs__WEBPACK_IMPORTED_MODULE_9__.BehaviorSubject(null);
          this.Client = {
            id: 'd06f14114b6005d5935e1ea13af4f3658b889302',
            secret: 'b9d5d47aa18cf73d890c933fabd156f469abedab',
            redirect: 'http://localhost/callback',
            scope: 'longlife_refresh_token',
            authUrl: 'https://once.deputy.com/my/oauth/access_token',
            auth: {
              access_token: null,
              expires_in: null,
              expires_at: null,
              scope: null,
              endpoint: null,
              refresh_token: null
            },
            authhead: null,
            apiUrl: null
          };
          this.SServer = {
            baseUrl: 'http://sheriff.zer0ne.dev:6969/',
            FCT: {
              custom_token: null,
              expires_at: null,
              fe_token: null
            }
          };
          this.testCount = 0; ////////////////////////////////////////////////////////////////////////////////////////////////////

          this.getAuthRefreshOpts = function (authOrRefresh, codeOrRefreshToken) {
            var gAROpts = {
              method: 'post',
              responseType: 'json',
              data: {
                client_id: _this85.Client.id,
                client_secret: _this85.Client.secret,
                redirect_uri: _this85.Client.redirect,
                scope: _this85.Client.scope
              }
            };

            if (authOrRefresh === 'auth') {
              gAROpts['data']['grant_type'] = 'authorization_code';
              gAROpts['data']['code'] = codeOrRefreshToken;
            } else {
              gAROpts['data']['grant_type'] = 'refresh_token';
              gAROpts['data']['refresh_token'] = codeOrRefreshToken;
            }

            ;
            return gAROpts;
          };

          this.platform.ready().then(function () {
            _this85.fileTransfer = _this85.transfer.create();
          });
        } ////////////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(DeputyService, [{
          key: "doSServerDPLogin",
          value: function doSServerDPLogin(upCreds) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee134() {
              var dplOpts, _yield$this$shttp$sen2, _status2, data;

              return regeneratorRuntime.wrap(function _callee134$(_context134) {
                while (1) {
                  switch (_context134.prev = _context134.next) {
                    case 0:
                      this.logger.info('[Deputy|doSServerDPLogin] (' + upCreds.user + '|' + upCreds.pass + ')...');
                      dplOpts = {
                        method: 'post',
                        data: {
                          email: upCreds.user,
                          password: upCreds.pass
                        },
                        responseType: 'json',
                        timeout: 30
                      };
                      _context134.prev = 2;
                      _context134.next = 5;
                      return this.shttp.sendRequest('http://sheriff.zer0ne.dev:6969/app/iablogin', dplOpts);

                    case 5:
                      _yield$this$shttp$sen2 = _context134.sent;
                      _status2 = _yield$this$shttp$sen2.status;
                      data = _yield$this$shttp$sen2.data;

                      if (!(_status2 === 200)) {
                        _context134.next = 12;
                        break;
                      }

                      return _context134.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 12:
                      this.logger.info('[Deputy|doSServerDPLogin] (ERROR): ' + JSON.stringify(data));
                      return _context134.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 14:
                      _context134.next = 20;
                      break;

                    case 16:
                      _context134.prev = 16;
                      _context134.t0 = _context134["catch"](2);
                      this.logger.info('[Deputy|doSServerDPLogin] (ERROR): ' + JSON.stringify(_context134.t0));
                      return _context134.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 20:
                    case "end":
                      return _context134.stop();
                  }
                }
              }, _callee134, this, [[2, 16]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "setSServerFCM",
          value: function setSServerFCM(newFCM) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee135() {
              var sFCMOpts, _yield$this$shttp$sen3, _status3, data;

              return regeneratorRuntime.wrap(function _callee135$(_context135) {
                while (1) {
                  switch (_context135.prev = _context135.next) {
                    case 0:
                      sFCMOpts = {
                        method: 'post',
                        data: {
                          ssauth: this.Client.auth.access_token,
                          email: this.userEmail,
                          fcm: newFCM
                        },
                        responseType: 'json'
                      };
                      _context135.prev = 1;
                      _context135.next = 4;
                      return this.shttp.sendRequest('http://sheriff.zer0ne.dev:6969/msg/setfcm', sFCMOpts);

                    case 4:
                      _yield$this$shttp$sen3 = _context135.sent;
                      _status3 = _yield$this$shttp$sen3.status;
                      data = _yield$this$shttp$sen3.data;

                      if (!(_status3 === 200)) {
                        _context135.next = 11;
                        break;
                      }

                      return _context135.abrupt("return", Promise.resolve(true));

                    case 11:
                      this.logger.info('[Deputy|setSServerFCM] (ERROR): (' + data.code + ') ' + data.msg);
                      return _context135.abrupt("return", Promise.resolve(false));

                    case 13:
                      _context135.next = 19;
                      break;

                    case 15:
                      _context135.prev = 15;
                      _context135.t0 = _context135["catch"](1);
                      this.logger.info('[Deputy|setSServerFCM] (ERROR): ' + JSON.stringify(_context135.t0));
                      return _context135.abrupt("return", Promise.resolve(false));

                    case 19:
                    case "end":
                      return _context135.stop();
                  }
                }
              }, _callee135, this, [[1, 15]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getServerLog",
          value: function getServerLog() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee136() {
              var gSLOpts, _yield$this$shttp$sen4, _status4, data;

              return regeneratorRuntime.wrap(function _callee136$(_context136) {
                while (1) {
                  switch (_context136.prev = _context136.next) {
                    case 0:
                      gSLOpts = {
                        method: 'post',
                        data: {
                          ssauth: this.Client.auth.access_token,
                          email: this.userEmail
                        },
                        responseType: 'text'
                      };
                      _context136.prev = 1;
                      _context136.next = 4;
                      return this.shttp.sendRequest('http://sheriff.zer0ne.dev:6969/app/log', gSLOpts);

                    case 4:
                      _yield$this$shttp$sen4 = _context136.sent;
                      _status4 = _yield$this$shttp$sen4.status;
                      data = _yield$this$shttp$sen4.data;

                      if (!(_status4 === 200)) {
                        _context136.next = 11;
                        break;
                      }

                      return _context136.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 11:
                      return _context136.abrupt("return", Promise.resolve({
                        result: false,
                        data: data
                      }));

                    case 12:
                      _context136.next = 18;
                      break;

                    case 14:
                      _context136.prev = 14;
                      _context136.t0 = _context136["catch"](1);
                      this.logger.info('[Deputy|getServerLog] (ERROR): ' + JSON.stringify(_context136.t0));
                      return _context136.abrupt("return", Promise.resolve({
                        result: false,
                        data: JSON.stringify(_context136.t0)
                      }));

                    case 18:
                    case "end":
                      return _context136.stop();
                  }
                }
              }, _callee136, this, [[1, 14]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getSnoopData",
          value: function getSnoopData() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee137() {
              var gSDOpts, _yield$this$shttp$sen5, _status5, data;

              return regeneratorRuntime.wrap(function _callee137$(_context137) {
                while (1) {
                  switch (_context137.prev = _context137.next) {
                    case 0:
                      gSDOpts = {
                        method: 'post',
                        data: {
                          ssauth: this.Client.auth.access_token,
                          email: this.userEmail
                        },
                        responseType: 'json'
                      };
                      _context137.prev = 1;
                      _context137.next = 4;
                      return this.shttp.sendRequest('http://sheriff.zer0ne.dev:6969/app/snoophrs', gSDOpts);

                    case 4:
                      _yield$this$shttp$sen5 = _context137.sent;
                      _status5 = _yield$this$shttp$sen5.status;
                      data = _yield$this$shttp$sen5.data;

                      if (!(_status5 === 200)) {
                        _context137.next = 11;
                        break;
                      }

                      return _context137.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 11:
                      return _context137.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 12:
                      _context137.next = 18;
                      break;

                    case 14:
                      _context137.prev = 14;
                      _context137.t0 = _context137["catch"](1);
                      this.logger.info('[Deputy|getSnoopData] (ERROR): ' + JSON.stringify(_context137.t0));
                      return _context137.abrupt("return", Promise.resolve({
                        result: false,
                        data: JSON.stringify(_context137.t0)
                      }));

                    case 18:
                    case "end":
                      return _context137.stop();
                  }
                }
              }, _callee137, this, [[1, 14]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getServerNotif",
          value: function getServerNotif() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee138() {
              var gSNOpts, _yield$this$shttp$sen6, _status6, data;

              return regeneratorRuntime.wrap(function _callee138$(_context138) {
                while (1) {
                  switch (_context138.prev = _context138.next) {
                    case 0:
                      gSNOpts = {
                        method: 'post',
                        data: {
                          ssauth: this.Client.auth.access_token,
                          email: this.userEmail
                        },
                        responseType: 'text'
                      };
                      _context138.prev = 1;
                      _context138.next = 4;
                      return this.shttp.sendRequest('http://sheriff.zer0ne.dev:6969/app/notif', gSNOpts);

                    case 4:
                      _yield$this$shttp$sen6 = _context138.sent;
                      _status6 = _yield$this$shttp$sen6.status;
                      data = _yield$this$shttp$sen6.data;

                      if (!(_status6 === 200)) {
                        _context138.next = 11;
                        break;
                      }

                      return _context138.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 11:
                      return _context138.abrupt("return", Promise.resolve({
                        result: false,
                        data: data
                      }));

                    case 12:
                      _context138.next = 18;
                      break;

                    case 14:
                      _context138.prev = 14;
                      _context138.t0 = _context138["catch"](1);
                      this.logger.info('[Deputy|getServerNotif] (ERROR): ' + JSON.stringify(_context138.t0));
                      return _context138.abrupt("return", Promise.resolve({
                        result: false,
                        data: JSON.stringify(_context138.t0)
                      }));

                    case 18:
                    case "end":
                      return _context138.stop();
                  }
                }
              }, _callee138, this, [[1, 14]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "doAuthToken",
          value: function doAuthToken(code) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee139() {
              var authOpts, _yield$this$shttp$sen7, _status7, error, data, addExpAtRes, allStrData, _i18, _Object$entries, _Object$entries$_i, key, value;

              return regeneratorRuntime.wrap(function _callee139$(_context139) {
                while (1) {
                  switch (_context139.prev = _context139.next) {
                    case 0:
                      _context139.prev = 0;

                      if (!code) {
                        _context139.next = 21;
                        break;
                      }

                      this.logger.info('[Deputy|doAuthToken] Requesting DP Tokens using CODE: ' + code);
                      authOpts = this.getAuthRefreshOpts('auth', code);
                      _context139.next = 6;
                      return this.shttp.sendRequest(this.Client.authUrl, authOpts);

                    case 6:
                      _yield$this$shttp$sen7 = _context139.sent;
                      _status7 = _yield$this$shttp$sen7.status;
                      error = _yield$this$shttp$sen7.error;
                      data = _yield$this$shttp$sen7.data;

                      if (!(_status7 === 200)) {
                        _context139.next = 18;
                        break;
                      }

                      addExpAtRes = this.dT.authExpAt(data);
                      allStrData = addExpAtRes;

                      for (_i18 = 0, _Object$entries = Object.entries(allStrData); _i18 < _Object$entries.length; _i18++) {
                        _Object$entries$_i = _slicedToArray(_Object$entries[_i18], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];

                        if (typeof value !== 'string') {
                          allStrData[key] = String(value);
                        }

                        ;

                        if (key.toString() === 'endpoint') {
                          allStrData[key] = String(value).replace('https://', '');
                        }

                        ;
                      }

                      ;
                      return _context139.abrupt("return", Promise.resolve({
                        result: true,
                        data: allStrData
                      }));

                    case 18:
                      return _context139.abrupt("return", Promise.resolve({
                        result: false,
                        data: JSON.stringify(error)
                      }));

                    case 19:
                      _context139.next = 22;
                      break;

                    case 21:
                      return _context139.abrupt("return", Promise.resolve({
                        result: false,
                        data: '[Deputy|doAuthToken] (ERROR): Missing/Invalid Code Provided'
                      }));

                    case 22:
                      _context139.next = 27;
                      break;

                    case 24:
                      _context139.prev = 24;
                      _context139.t0 = _context139["catch"](0);
                      return _context139.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context139.t0.error.description
                      }));

                    case 27:
                    case "end":
                      return _context139.stop();
                  }
                }
              }, _callee139, this, [[0, 24]]);
            }));
          }
        }, {
          key: "doRefreshToken",
          value: ////////////////////////////////////////////////////////////////////////////////////////////////////
          function doRefreshToken(refreshAuthObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee140() {
              var refOpts, refRes, addExpAtRes, allStrData, _i19, _Object$entries2, _Object$entries2$_i, key, value;

              return regeneratorRuntime.wrap(function _callee140$(_context140) {
                while (1) {
                  switch (_context140.prev = _context140.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|doRefreshToken] ()...');
                      _context140.prev = 1;
                      refOpts = this.getAuthRefreshOpts('refresh', refreshAuthObj.refresh_token);
                      this.shttp.setHeader(this.Client.auth.endpoint, 'Authorization', null);
                      this.shttp.clearCookies();
                      this.shttp.setFollowRedirect(false);
                      this.shttp.setServerTrustMode('default');
                      this.shttp.setDataSerializer('urlencoded');
                      _context140.next = 10;
                      return this.shttp.sendRequest('https://' + refreshAuthObj.endpoint + '/oauth/access_token', refOpts);

                    case 10:
                      refRes = _context140.sent;

                      if (refRes.status === 200 && refRes.data.hasOwnProperty('access_token') && refRes.data.access_token !== refreshAuthObj.access_token) {
                        addExpAtRes = this.dT.authExpAt(refRes.data);
                        allStrData = addExpAtRes;

                        for (_i19 = 0, _Object$entries2 = Object.entries(allStrData); _i19 < _Object$entries2.length; _i19++) {
                          _Object$entries2$_i = _slicedToArray(_Object$entries2[_i19], 2), key = _Object$entries2$_i[0], value = _Object$entries2$_i[1];

                          if (typeof value !== 'string') {
                            allStrData[key] = String(value);
                          }

                          ;

                          if (key.toString() === 'endpoint') {
                            allStrData[key] = String(value).replace('https://', '');
                          }

                          ;
                        }

                        ;
                        this.setAuthGVars(allStrData);
                      } else {
                        this.setAuthGVars(false);
                      }

                      _context140.next = 19;
                      break;

                    case 14:
                      _context140.prev = 14;
                      _context140.t0 = _context140["catch"](1);
                      console.log(_context140.t0);
                      this.logger.info('[Deputy|doRefreshToken] (Error): ' + JSON.stringify(_context140.t0));
                      this.setAuthGVars(false);

                    case 19:
                    case "end":
                      return _context140.stop();
                  }
                }
              }, _callee140, this, [[1, 14]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "setAuthGVars",
          value: function setAuthGVars(dpAuthObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee141() {
              var tIVRes, evResO;
              return regeneratorRuntime.wrap(function _callee141$(_context141) {
                while (1) {
                  switch (_context141.prev = _context141.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|setAuthGVars] ()...');
                      this.shttp.clearCookies();

                      if (dpAuthObj) {
                        _context141.next = 6;
                        break;
                      }

                      tIVRes = false;
                      _context141.next = 9;
                      break;

                    case 6:
                      _context141.next = 8;
                      return this.tokenIsValid(dpAuthObj);

                    case 8:
                      tIVRes = _context141.sent;

                    case 9:
                      if (tIVRes) {
                        this.isAuthenticated.next(true);
                        this.Client.auth = dpAuthObj;
                        this.Client.authhead = {
                          'Authorization': 'OAuth ' + this.Client.auth.access_token
                        };
                        this.Client.apiUrl = 'https://' + this.Client.auth.endpoint + '/api/v1/';
                        this.shttp.setHeader(this.Client.auth.endpoint, 'Authorization', 'OAuth ' + this.Client.auth.access_token);
                        this.shttp.setFollowRedirect(true);
                        this.shttp.setRequestTimeout(20);
                        this.shttp.setServerTrustMode('nocheck');
                        this.shttp.setDataSerializer('json');
                        evResO = {
                          result: true,
                          refresh: this.didRefresh,
                          data: this.Client.auth
                        };

                        if (!this.didRefresh) {
                          this.eventServ.showToast('success', 'ᴛᴏᴋᴇɴ ᴠᴀʟɪᴅ');
                        } else {
                          this.eventServ.showToast('success', 'ᴛᴏᴋᴇɴ ʀᴇꜰʀᴇꜱʜᴇᴅ');
                          this.didRefresh = false;
                        }

                        ;
                        this.storeServ.setObject(this.uUK + 'DPAuth', dpAuthObj);
                        this.storeServ.setItem('userEmail', this.userEmail);
                        this.storeServ.setItem('currentUUK', this.uUK); // ----------------------------------------

                        this.eventServ.publish('setAuthGVarsDone', evResO); // ----------------------------------------

                        this.logger.info('🔑🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️');
                        this.logger.info('🔑 𝗗𝗘𝗣𝗨𝗧𝗬 𝗔𝗨𝗧𝗛 𝗘𝗩 {Object} - "setAuthGVarsDone"');
                        this.logger.info('🔑 .result:boolean  = TRUE');
                        this.logger.info('🔑 .refresh:boolean = ' + evResO.refresh.toString().toUpperCase());
                        this.logger.info('🔑 .data:object     = {');
                        this.logger.info('🔑   access_token:string  = ' + evResO.data.access_token);
                        this.logger.info('🔑   expires_in:string    = ' + evResO.data.expires_in);
                        this.logger.info('🔑   expires_at:string    = ' + evResO.data.expires_at);
                        this.logger.info('🔑   scope:string         = ' + evResO.data.scope);
                        this.logger.info('🔑   endpoint:string      = ' + evResO.data.endpoint);
                        this.logger.info('🔑   refresh_token:string = ' + evResO.data.refresh_token);
                        this.logger.info('🔑 }');
                        this.logger.info('🔑🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️🎟️');
                      } else {
                        if (!this.didRefresh) {
                          this.didRefresh = true;
                          this.eventServ.showToast('refresh', 'ʀᴇꜰʀᴇꜱʜɪɴɢ...');

                          if (dpAuthObj) {
                            this.doRefreshToken(dpAuthObj);
                          } // Try Refresh Token (x1)
                          else {
                              this.doRefreshToken(this.Client.auth);
                            }
                        } else {
                          this.didRefresh = false;
                          this.eventServ.showToast('error', 'ʀᴇꜰʀᴇꜱʜ ꜰᴀɪʟᴇᴅ: ʀᴇꜰʀᴇꜱʜ ᴇrror');
                          this.eventServ.publish('setAuthGVarsDone', {
                            result: false
                          });
                          this.clearAuthGVars();
                        }
                      }

                    case 10:
                    case "end":
                      return _context141.stop();
                  }
                }
              }, _callee141, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "clearAuthGVars",
          value: function clearAuthGVars() {
            this.logger.info('[DeputyApiService|clearAuthGVars] ()...');
            this.Client.auth = null;
            this.Client.authhead = null;
            this.Client.apiUrl = null;
            this.uUK = null;
            this.userEmail = null;
            this.isAuthenticated.next(false);
            this.eventServ.publish('clearAuthGVarsDone', true);
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "tokenIsValid",
          value: function tokenIsValid(testAuth) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee142() {
              var testOpts, _yield$this$shttp$sen8, _status8;

              return regeneratorRuntime.wrap(function _callee142$(_context142) {
                while (1) {
                  switch (_context142.prev = _context142.next) {
                    case 0:
                      testOpts = {
                        method: 'get',
                        headers: {
                          'Authorization': 'OAuth ' + testAuth.access_token
                        },
                        responseType: 'json'
                      };
                      _context142.prev = 1;
                      _context142.next = 4;
                      return this.shttp.sendRequest('https://' + testAuth.endpoint + '/api/v1/me', testOpts);

                    case 4:
                      _yield$this$shttp$sen8 = _context142.sent;
                      _status8 = _yield$this$shttp$sen8.status;

                      if (!(_status8 === 200)) {
                        _context142.next = 10;
                        break;
                      }

                      return _context142.abrupt("return", Promise.resolve(true));

                    case 10:
                      return _context142.abrupt("return", Promise.resolve(false));

                    case 11:
                      _context142.next = 16;
                      break;

                    case 13:
                      _context142.prev = 13;
                      _context142.t0 = _context142["catch"](1);
                      return _context142.abrupt("return", Promise.resolve(false));

                    case 16:
                    case "end":
                      return _context142.stop();
                  }
                }
              }, _callee142, this, [[1, 13]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getFCT",
          value: function getFCT(tToken) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee143() {
              var _yield$this$shttp$sen9, _status9, data;

              return regeneratorRuntime.wrap(function _callee143$(_context143) {
                while (1) {
                  switch (_context143.prev = _context143.next) {
                    case 0:
                      _context143.prev = 0;
                      _context143.next = 3;
                      return this.shttp.sendRequest('http://sheriff.zer0ne.dev:6969/fct/getfct', {
                        method: 'post',
                        data: {
                          email: this.userEmail,
                          token: tToken
                        },
                        responseType: 'json',
                        timeout: 10
                      });

                    case 3:
                      _yield$this$shttp$sen9 = _context143.sent;
                      _status9 = _yield$this$shttp$sen9.status;
                      data = _yield$this$shttp$sen9.data;

                      if (!(_status9 === 200)) {
                        _context143.next = 13;
                        break;
                      }

                      this.logger.info('[Deputy|getFCT] 🔥🎟️ (SUCCESS): [TOKEN]: ' + data.custom_token.substring(0, 20) + '... [EXPIRES]: ' + data.expires_at + ' [FE_TOKEN]: ' + data.fe_token);
                      this.SServer.FCT = data;
                      this.storeServ.setItem('currentFEToken', data.fe_token);
                      return _context143.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 13:
                      return _context143.abrupt("return", Promise.resolve({
                        result: false,
                        data: data
                      }));

                    case 14:
                      _context143.next = 20;
                      break;

                    case 16:
                      _context143.prev = 16;
                      _context143.t0 = _context143["catch"](0);
                      this.logger.info('[Deputy|getFCT] (ERROR): ' + JSON.stringify(_context143.t0));
                      return _context143.abrupt("return", Promise.resolve({
                        result: false,
                        data: JSON.stringify(_context143.t0)
                      }));

                    case 20:
                    case "end":
                      return _context143.stop();
                  }
                }
              }, _callee143, this, [[0, 16]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "quickMeAva",
          value: function quickMeAva() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee144() {
              var statMeAva, meAvaUri, _yield$this$shttp$sen10, _status10, data;

              return regeneratorRuntime.wrap(function _callee144$(_context144) {
                while (1) {
                  switch (_context144.prev = _context144.next) {
                    case 0:
                      this.logger.info('[' + this.mod + '|quickMeAva] ()...');
                      _context144.next = 3;
                      return this.fileServ.stat(this.fileServ.phoneFS, '/Sheriff/assets/meAvatar');

                    case 3:
                      statMeAva = _context144.sent;
                      meAvaUri = _capacitor_core__WEBPACK_IMPORTED_MODULE_1__.Capacitor.convertFileSrc(statMeAva.data.uri);
                      _context144.prev = 5;
                      _context144.next = 8;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'me', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 8:
                      _yield$this$shttp$sen10 = _context144.sent;
                      _status10 = _yield$this$shttp$sen10.status;
                      data = _yield$this$shttp$sen10.data;

                      if (!(_status10 === 200)) {
                        _context144.next = 14;
                        break;
                      }

                      _context144.next = 14;
                      return this.fileServ.replaceMeAva(data.UserObjectForAPI.Photo);

                    case 14:
                      if (!this.storeServ.getItem(this.uUK + 'meAvatar')) {
                        _context144.next = 18;
                        break;
                      }

                      return _context144.abrupt("return", Promise.resolve({
                        result: true,
                        data: meAvaUri
                      }));

                    case 18:
                      this.storeServ.setItem(this.uUK + 'meAvatar', meAvaUri);
                      return _context144.abrupt("return", Promise.resolve({
                        result: true,
                        data: meAvaUri
                      }));

                    case 20:
                      _context144.next = 25;
                      break;

                    case 22:
                      _context144.prev = 22;
                      _context144.t0 = _context144["catch"](5);
                      return _context144.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 25:
                    case "end":
                      return _context144.stop();
                  }
                }
              }, _callee144, this, [[5, 22]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "quickWorkAva",
          value: function quickWorkAva() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee145() {
              var statWorkAva, workAvaUri, _yield$this$shttp$sen11, _status11, data;

              return regeneratorRuntime.wrap(function _callee145$(_context145) {
                while (1) {
                  switch (_context145.prev = _context145.next) {
                    case 0:
                      this.logger.info('[' + this.mod + '|quickWorkAva] ()...');
                      _context145.next = 3;
                      return this.fileServ.stat(this.fileServ.phoneFS, '/Sheriff/assets/workAvatar');

                    case 3:
                      statWorkAva = _context145.sent;
                      workAvaUri = _capacitor_core__WEBPACK_IMPORTED_MODULE_1__.Capacitor.convertFileSrc(statWorkAva.data.uri);
                      _context145.prev = 5;
                      _context145.next = 8;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'my/setup', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 8:
                      _yield$this$shttp$sen11 = _context145.sent;
                      _status11 = _yield$this$shttp$sen11.status;
                      data = _yield$this$shttp$sen11.data;

                      if (!(_status11 === 200)) {
                        _context145.next = 14;
                        break;
                      }

                      _context145.next = 14;
                      return this.fileServ.replaceWorkAva(data.PortfolioLogoUrl);

                    case 14:
                      if (!this.storeServ.getItem(this.uUK + 'workAvatar')) {
                        _context145.next = 18;
                        break;
                      }

                      return _context145.abrupt("return", Promise.resolve({
                        result: true,
                        data: workAvaUri
                      }));

                    case 18:
                      this.storeServ.setItem(this.uUK + 'workAvatar', workAvaUri);
                      return _context145.abrupt("return", Promise.resolve({
                        result: true,
                        data: workAvaUri
                      }));

                    case 20:
                      _context145.next = 25;
                      break;

                    case 22:
                      _context145.prev = 22;
                      _context145.t0 = _context145["catch"](5);
                      return _context145.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 25:
                    case "end":
                      return _context145.stop();
                  }
                }
              }, _callee145, this, [[5, 22]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "dlConvertMeWorkAvas",
          value: function dlConvertMeWorkAvas() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee148() {
              var _this86 = this;

              var meRes, workRes, meAvaStr, workAvaStr, webMeAvaURL, webWorkAvaURL, doMeErr, doWorkErr, getMeAva, getWorkAva;
              return regeneratorRuntime.wrap(function _callee148$(_context148) {
                while (1) {
                  switch (_context148.prev = _context148.next) {
                    case 0:
                      this.logger.info('[' + this.mod + '|dlConvertMeWorkAvas] ()...');

                      doMeErr = function doMeErr(err) {
                        meRes = false;

                        _this86.logger.info('[meAva] (Error): ' + JSON.stringify(err));

                        _this86.eventServ.publish('avaTasksCounter', {
                          name: 'me',
                          data: null
                        });
                      };

                      doWorkErr = function doWorkErr(err) {
                        workRes = false;

                        _this86.logger.info('[workAva] (Error): ' + JSON.stringify(err));

                        _this86.eventServ.publish('avaTasksCounter', {
                          name: 'work',
                          data: null
                        });
                      };

                      getMeAva = function getMeAva() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this86, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee146() {
                          var freshMeObj, storedMeObj, uriForSaveMe, existMeAvaRes, replacedMe, consMTxt;
                          return regeneratorRuntime.wrap(function _callee146$(_context146) {
                            while (1) {
                              switch (_context146.prev = _context146.next) {
                                case 0:
                                  _context146.next = 2;
                                  return this.shttp.sendRequest(this.Client.apiUrl + 'me', {
                                    method: 'get',
                                    responseType: 'json'
                                  });

                                case 2:
                                  freshMeObj = _context146.sent;

                                  if (!(freshMeObj.status === 200)) {
                                    _context146.next = 7;
                                    break;
                                  }

                                  storedMeObj = freshMeObj.data;
                                  _context146.next = 10;
                                  break;

                                case 7:
                                  _context146.next = 9;
                                  return this.storeServ.getObject(this.uUK + 'MeData');

                                case 9:
                                  storedMeObj = _context146.sent;

                                case 10:
                                  ;
                                  webMeAvaURL = storedMeObj.UserObjectForAPI.Photo;
                                  _context146.prev = 12;
                                  uriForSaveMe = null;
                                  _context146.next = 16;
                                  return this.fileServ.stat(this.fileServ.phoneFS, '/Sheriff/assets/meAvatar');

                                case 16:
                                  existMeAvaRes = _context146.sent;

                                  if (!existMeAvaRes.result) {
                                    _context146.next = 26;
                                    break;
                                  }

                                  _context146.next = 20;
                                  return this.fileServ.compareReplaceAva('me', webMeAvaURL, existMeAvaRes.data.size);

                                case 20:
                                  replacedMe = _context146.sent;
                                  replacedMe ? consMTxt = '✔️Replaced' : consMTxt = '🔸Retained';
                                  this.logger.info('[Deputy|dlConvertMeWorkAvas] 🎇 (Keep/Replace|meAva) ' + consMTxt);
                                  uriForSaveMe = _capacitor_core__WEBPACK_IMPORTED_MODULE_1__.Capacitor.convertFileSrc(existMeAvaRes.data.uri);
                                  _context146.next = 29;
                                  break;

                                case 26:
                                  _context146.next = 28;
                                  return this.fileServ.dlFile(webMeAvaURL, 'meAvatar');

                                case 28:
                                  uriForSaveMe = _context146.sent;

                                case 29:
                                  ;

                                  if (uriForSaveMe !== null) {
                                    meRes = true;
                                    this.storeServ.setItem(this.uUK + 'meAvatar', uriForSaveMe);
                                    this.eventServ.publish('avaTasksCounter', {
                                      name: 'me',
                                      data: uriForSaveMe
                                    });
                                  } else {
                                    this.logger.info('[Deputy|dlConvertMeWorkAvas] - ERROR: uriForSaveMe===null');
                                  }

                                  _context146.next = 36;
                                  break;

                                case 33:
                                  _context146.prev = 33;
                                  _context146.t0 = _context146["catch"](12);
                                  doMeErr(_context146.t0);

                                case 36:
                                case "end":
                                  return _context146.stop();
                              }
                            }
                          }, _callee146, this, [[12, 33]]);
                        }));
                      };

                      getWorkAva = function getWorkAva() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this86, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee147() {
                          var storedMySetupData, storeAvaExpUTS, nowUTS, freshWorkAva, uriForSaveWork, existWorkAvaRes, replacedWork, consMTxt;
                          return regeneratorRuntime.wrap(function _callee147$(_context147) {
                            while (1) {
                              switch (_context147.prev = _context147.next) {
                                case 0:
                                  _context147.next = 2;
                                  return this.storeServ.getObject(this.uUK + 'MySetupData');

                                case 2:
                                  storedMySetupData = _context147.sent;
                                  storeAvaExpUTS = Number(storedMySetupData.PortfolioLogoUrl.split('Expires=')[1].substring(0, 10));
                                  nowUTS = this.dT.getUT(new Date());

                                  if (!(nowUTS > storeAvaExpUTS)) {
                                    _context147.next = 13;
                                    break;
                                  }

                                  _context147.next = 8;
                                  return this.getMyWorkAva();

                                case 8:
                                  freshWorkAva = _context147.sent;

                                  if (freshWorkAva !== 'error') {
                                    webWorkAvaURL = freshWorkAva;
                                  }

                                  webWorkAvaURL = null;
                                  _context147.next = 14;
                                  break;

                                case 13:
                                  webWorkAvaURL = storedMySetupData.PortfolioLogoUrl;

                                case 14:
                                  ;
                                  _context147.prev = 15;
                                  uriForSaveWork = null;
                                  _context147.next = 19;
                                  return this.fileServ.stat(this.fileServ.phoneFS, '/Sheriff/assets/workAvatar');

                                case 19:
                                  existWorkAvaRes = _context147.sent;

                                  if (!existWorkAvaRes.result) {
                                    _context147.next = 31;
                                    break;
                                  }

                                  if (!(webWorkAvaURL !== null)) {
                                    _context147.next = 27;
                                    break;
                                  }

                                  _context147.next = 24;
                                  return this.fileServ.compareReplaceAva('work', webWorkAvaURL, existWorkAvaRes.data.size);

                                case 24:
                                  replacedWork = _context147.sent;
                                  replacedWork ? consMTxt = '✔️Replaced' : consMTxt = '🔸Retained';
                                  this.logger.info('[Deputy|dlConvertMeWorkAvas] 🎇 (Keep/Replace|workAva) ' + consMTxt);

                                case 27:
                                  ;
                                  uriForSaveWork = _capacitor_core__WEBPACK_IMPORTED_MODULE_1__.Capacitor.convertFileSrc(existWorkAvaRes.data.uri);
                                  _context147.next = 38;
                                  break;

                                case 31:
                                  if (!(webWorkAvaURL !== null)) {
                                    _context147.next = 37;
                                    break;
                                  }

                                  _context147.next = 34;
                                  return this.fileServ.dlFile(webWorkAvaURL, 'workAvatar');

                                case 34:
                                  uriForSaveWork = _context147.sent;
                                  _context147.next = 38;
                                  break;

                                case 37:
                                  uriForSaveWork = './../../assets/img/icon.png';

                                case 38:
                                  ;

                                  if (uriForSaveWork !== null) {
                                    workRes = true;
                                    this.storeServ.setItem(this.uUK + 'workAvatar', uriForSaveWork);
                                    this.eventServ.publish('avaTasksCounter', {
                                      name: 'work',
                                      data: uriForSaveWork
                                    });
                                  } else {
                                    this.logger.info('[Deputy|dlConvertMeWorkAvas] - ERROR: uriForSaveWork===null');
                                  }

                                  _context147.next = 45;
                                  break;

                                case 42:
                                  _context147.prev = 42;
                                  _context147.t0 = _context147["catch"](15);
                                  doWorkErr(_context147.t0);

                                case 45:
                                case "end":
                                  return _context147.stop();
                              }
                            }
                          }, _callee147, this, [[15, 42]]);
                        }));
                      };

                      this.eventServ.subscribe('avaTasksCounter', function (taskData) {
                        if (taskData.name === 'me') {
                          _this86.logger.info('[DAS|dlConvertMeWorkAvas] - Converting [workAvatar]...');

                          meAvaStr = taskData.data;
                          getWorkAva();
                        } else if (taskData.name === 'work') {
                          _this86.eventServ.destroy('avaTasksCounter');

                          _this86.logger.info('[DAS|dlConvertMeWorkAvas] - Conversion Attempts Finished.');

                          workAvaStr = taskData.data;

                          if (meRes && workRes) {
                            _this86.eventServ.publish('dlConvAvasFinished', {
                              result: true,
                              data: {
                                me: meAvaStr,
                                work: workAvaStr
                              }
                            });
                          } else {
                            _this86.eventServ.publish('dlConvAvasFinished', {
                              result: false,
                              data: null
                            });
                          }
                        }
                      });
                      this.logger.info('[DAS|dlConvertMeWorkAvas] - Converting [meAvatar]...');
                      getMeAva();

                    case 8:
                    case "end":
                      return _context148.stop();
                  }
                }
              }, _callee148, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "frFastStart",
          value: function frFastStart() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee149() {
              var sT, allEPs, ucEPs, i, _yield$this$getMy, data;

              return regeneratorRuntime.wrap(function _callee149$(_context149) {
                while (1) {
                  switch (_context149.prev = _context149.next) {
                    case 0:
                      sT = new Date();
                      this.dlConvertMeWorkAvas();
                      allEPs = ['colleague', 'roster', 'timesheet', 'task', 'memo', 'contactaddress/all', 'notifications', 'leave', 'unavail'];
                      ucEPs = ['roster', 'timesheet', 'task', 'memo', 'leave'];
                      i = 0;

                    case 5:
                      if (!(i < allEPs.length)) {
                        _context149.next = 14;
                        break;
                      }

                      _context149.next = 8;
                      return this.getMy(allEPs[i]);

                    case 8:
                      _yield$this$getMy = _context149.sent;
                      data = _yield$this$getMy.data;

                      // If This MyEP is Core 
                      if (ucEPs.includes(allEPs[i])) {
                        this.storeServ.setObject('fr-' + (allEPs[i].charAt(0).toUpperCase() + allEPs[i].slice(1)), data);
                      } else {
                        if (allEPs[i] === 'colleague') {
                          this.storeServ.setObject(this.uUK + 'MyColleagues', data);
                          this.storeServ.setObject(this.uUK + 'fr-colleague', data);
                        } else if (allEPs[i] === 'leave') {
                          this.storeServ.setObject('fr-EmployeeAvailability', data);
                        } else {
                          this.storeServ.setObject('fr-' + allEPs[i], data);
                        }
                      }

                    case 11:
                      i++;
                      _context149.next = 5;
                      break;

                    case 14:
                      return _context149.abrupt("return", Promise.resolve(sT));

                    case 15:
                    case "end":
                      return _context149.stop();
                  }
                }
              }, _callee149, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getMeMyData",
          value: function getMeMyData() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee150() {
              var _this87 = this;

              var doErr, doSuccess, meAPIRes, myAPIRes, errStr;
              return regeneratorRuntime.wrap(function _callee150$(_context150) {
                while (1) {
                  switch (_context150.prev = _context150.next) {
                    case 0:
                      this.logger.info('[' + this.mod + '|getMeMyData] ()...');

                      doErr = function doErr(err) {
                        _this87.eventServ.publish('getMeMyDataDone', {
                          result: false,
                          data: err
                        });
                      };

                      doSuccess = function doSuccess(meO, myO) {
                        _this87.eventServ.publish('getMeMyDataDone', {
                          result: true,
                          data: {
                            me: meO,
                            my: myO
                          }
                        });
                      };

                      _context150.prev = 3;
                      _context150.next = 6;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'me', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 6:
                      meAPIRes = _context150.sent;

                      if (meAPIRes.status === 200) {
                        this.storeServ.setObject(this.uUK + 'MeData', meAPIRes.data);
                      }

                      ;
                      _context150.next = 11;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'my/setup', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 11:
                      myAPIRes = _context150.sent;

                      if (myAPIRes.status === 200) {
                        this.storeServ.setObject(this.uUK + 'MySetupData', myAPIRes.data);
                      }

                      ;

                      if (meAPIRes.status === 200 && myAPIRes.status === 200) {
                        doSuccess(meAPIRes.data, myAPIRes.data);
                      } else {
                        if (meAPIRes.hasOwnProperty('error')) {
                          errStr = JSON.stringify(meAPIRes.error);
                        }

                        ;

                        if (myAPIRes.hasOwnProperty('error')) {
                          errStr = errStr + ' | ' + JSON.stringify(myAPIRes.error);
                        }

                        ;
                        doErr(errStr);
                      }

                      _context150.next = 21;
                      break;

                    case 17:
                      _context150.prev = 17;
                      _context150.t0 = _context150["catch"](3);
                      this.logger.info('[Deputy|getMeMyData] (ERROR):');
                      this.logger.info(_context150.t0);

                    case 21:
                    case "end":
                      return _context150.stop();
                  }
                }
              }, _callee150, this, [[3, 17]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getMe",
          value: function getMe() {
            this.logger.info('[DeputyApiService|getMe] ()...');
            return this.shttp.sendRequest(this.Client.apiUrl + 'me', {
              method: 'get',
              responseType: 'json'
            });
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getMy",
          value: function getMy(mySub) {
            this.logger.info('[DeputyApiService|getMy] ()...');
            return this.shttp.sendRequest(this.Client.apiUrl + 'my/' + mySub, {
              method: 'get',
              responseType: 'json'
            });
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getThis",
          value: function getThis(fullPath) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee151() {
              var _yield$this$shttp$sen12, data, error;

              return regeneratorRuntime.wrap(function _callee151$(_context151) {
                while (1) {
                  switch (_context151.prev = _context151.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getThis] (' + fullPath + ')...');
                      _context151.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + fullPath, {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen12 = _context151.sent;
                      data = _yield$this$shttp$sen12.data;
                      error = _yield$this$shttp$sen12.error;

                      if (error) {
                        _context151.next = 10;
                        break;
                      }

                      return _context151.abrupt("return", Promise.resolve({
                        r: true,
                        d: data
                      }));

                    case 10:
                      return _context151.abrupt("return", {
                        r: false,
                        d: error
                      });

                    case 11:
                    case "end":
                      return _context151.stop();
                  }
                }
              }, _callee151, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "postThis",
          value: function postThis(fullPath) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee152() {
              var _yield$this$shttp$sen13, data, error;

              return regeneratorRuntime.wrap(function _callee152$(_context152) {
                while (1) {
                  switch (_context152.prev = _context152.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|postThis] (' + fullPath + ')...');
                      _context152.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + fullPath, {
                        method: 'post',
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen13 = _context152.sent;
                      data = _yield$this$shttp$sen13.data;
                      error = _yield$this$shttp$sen13.error;

                      if (error) {
                        _context152.next = 10;
                        break;
                      }

                      return _context152.abrupt("return", Promise.resolve({
                        r: true,
                        d: data
                      }));

                    case 10:
                      return _context152.abrupt("return", {
                        r: false,
                        d: error
                      });

                    case 11:
                    case "end":
                      return _context152.stop();
                  }
                }
              }, _callee152, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getDetailMe",
          value: function getDetailMe() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee153() {
              var _yield$this$shttp$sen14, _status12, data, error;

              return regeneratorRuntime.wrap(function _callee153$(_context153) {
                while (1) {
                  switch (_context153.prev = _context153.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getDetailMe] ()...');
                      _context153.prev = 1;
                      _context153.next = 4;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'me', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 4:
                      _yield$this$shttp$sen14 = _context153.sent;
                      _status12 = _yield$this$shttp$sen14.status;
                      data = _yield$this$shttp$sen14.data;
                      error = _yield$this$shttp$sen14.error;

                      if (!(_status12 === 200)) {
                        _context153.next = 12;
                        break;
                      }

                      return _context153.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 12:
                      return _context153.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 13:
                      _context153.next = 18;
                      break;

                    case 15:
                      _context153.prev = 15;
                      _context153.t0 = _context153["catch"](1);
                      return _context153.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context153.t0
                      }));

                    case 18:
                    case "end":
                      return _context153.stop();
                  }
                }
              }, _callee153, this, [[1, 15]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getDetailMy",
          value: function getDetailMy() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee154() {
              var _yield$this$shttp$sen15, _status13, data, error;

              return regeneratorRuntime.wrap(function _callee154$(_context154) {
                while (1) {
                  switch (_context154.prev = _context154.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getDetailMy] ()...');
                      _context154.prev = 1;
                      _context154.next = 4;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'my/setup', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 4:
                      _yield$this$shttp$sen15 = _context154.sent;
                      _status13 = _yield$this$shttp$sen15.status;
                      data = _yield$this$shttp$sen15.data;
                      error = _yield$this$shttp$sen15.error;

                      if (!(_status13 === 200)) {
                        _context154.next = 12;
                        break;
                      }

                      return _context154.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 12:
                      return _context154.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 13:
                      _context154.next = 18;
                      break;

                    case 15:
                      _context154.prev = 15;
                      _context154.t0 = _context154["catch"](1);
                      return _context154.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context154.t0
                      }));

                    case 18:
                    case "end":
                      return _context154.stop();
                  }
                }
              }, _callee154, this, [[1, 15]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getDetailPpl",
          value: function getDetailPpl() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee155() {
              var _yield$this$shttp$sen16, _status14, data, error;

              return regeneratorRuntime.wrap(function _callee155$(_context155) {
                while (1) {
                  switch (_context155.prev = _context155.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getDetailPpl] ()...');
                      _context155.prev = 1;
                      _context155.next = 4;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'my/colleagues', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 4:
                      _yield$this$shttp$sen16 = _context155.sent;
                      _status14 = _yield$this$shttp$sen16.status;
                      data = _yield$this$shttp$sen16.data;
                      error = _yield$this$shttp$sen16.error;

                      if (!(_status14 === 200)) {
                        _context155.next = 12;
                        break;
                      }

                      return _context155.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 12:
                      return _context155.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 13:
                      _context155.next = 18;
                      break;

                    case 15:
                      _context155.prev = 15;
                      _context155.t0 = _context155["catch"](1);
                      return _context155.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context155.t0
                      }));

                    case 18:
                    case "end":
                      return _context155.stop();
                  }
                }
              }, _callee155, this, [[1, 15]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getMyWorkAva",
          value: function getMyWorkAva() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee156() {
              var _yield$this$shttp$sen17, status, data, wA;

              return regeneratorRuntime.wrap(function _callee156$(_context156) {
                while (1) {
                  switch (_context156.prev = _context156.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getMyWorkAva] ()...');
                      _context156.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'my/setup', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen17 = _context156.sent;
                      status = _yield$this$shttp$sen17.status;
                      data = _yield$this$shttp$sen17.data;

                      if (status === 200) {
                        wA = data.PortfolioLogoUrl;
                      } else {
                        wA = 'error';
                      }

                      ;
                      return _context156.abrupt("return", wA);

                    case 9:
                    case "end":
                      return _context156.stop();
                  }
                }
              }, _callee156, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getMyOwnAva",
          value: function getMyOwnAva() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee157() {
              var _yield$this$shttp$sen18, status, data, mA;

              return regeneratorRuntime.wrap(function _callee157$(_context157) {
                while (1) {
                  switch (_context157.prev = _context157.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getMyOwnAva] ()...');
                      _context157.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'me', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen18 = _context157.sent;
                      status = _yield$this$shttp$sen18.status;
                      data = _yield$this$shttp$sen18.data;

                      if (status === 200) {
                        mA = data.UserObjectForAPI.Photo;
                      } else {
                        mA = 'error';
                      }

                      ;
                      return _context157.abrupt("return", mA);

                    case 9:
                    case "end":
                      return _context157.stop();
                  }
                }
              }, _callee157, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getResource",
          value: function getResource(resSub) {
            this.logger.info('[DeputyApiService|getResource] ()...');
            return this.shttp.sendRequest(this.Client.apiUrl + 'resource/' + resSub, {
              method: 'get',
              responseType: 'json'
            });
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "syncDBCount",
          value: function syncDBCount(dbEP, epType) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee158() {
              var infoEP, isRes, _yield$this$shttp$sen19, status, data, error;

              return regeneratorRuntime.wrap(function _callee158$(_context158) {
                while (1) {
                  switch (_context158.prev = _context158.next) {
                    case 0:
                      if (epType === 'res') {
                        isRes = true;
                        infoEP = '/INFO';
                      } else {
                        isRes = false;
                        infoEP = '';
                      }

                      _context158.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + dbEP + infoEP, {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen19 = _context158.sent;
                      status = _yield$this$shttp$sen19.status;
                      data = _yield$this$shttp$sen19.data;
                      error = _yield$this$shttp$sen19.error;

                      if (!status) {
                        _context158.next = 15;
                        break;
                      }

                      if (!isRes) {
                        _context158.next = 12;
                        break;
                      }

                      return _context158.abrupt("return", Promise.resolve({
                        result: true,
                        data: data.count
                      }));

                    case 12:
                      return _context158.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 13:
                      _context158.next = 16;
                      break;

                    case 15:
                      return _context158.abrupt("return", Promise.resolve({
                        result: false,
                        data: data.status + ': ' + error
                      }));

                    case 16:
                    case "end":
                      return _context158.stop();
                  }
                }
              }, _callee158, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getMemo",
          value: function getMemo(memoId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee159() {
              var memoQBody, _yield$this$shttp$sen20, status, data, error;

              return regeneratorRuntime.wrap(function _callee159$(_context159) {
                while (1) {
                  switch (_context159.prev = _context159.next) {
                    case 0:
                      memoId === null ? memoQBody = {
                        'search': {
                          's1': {
                            'field': 'Id',
                            'type': 'ge',
                            'data': 1
                          }
                        },
                        'sort': {
                          'Id': 'desc'
                        }
                      } : memoQBody = {
                        'search': {
                          's1': {
                            'field': 'Id',
                            'type': 'eq',
                            'data': memoId
                          }
                        },
                        'sort': {
                          'Id': 'desc'
                        }
                      };
                      _context159.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/Memo/QUERY', {
                        method: 'post',
                        data: memoQBody,
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen20 = _context159.sent;
                      status = _yield$this$shttp$sen20.status;
                      data = _yield$this$shttp$sen20.data;
                      error = _yield$this$shttp$sen20.error;

                      if (!(status === 200)) {
                        _context159.next = 11;
                        break;
                      }

                      return _context159.abrupt("return", Promise.resolve(data));

                    case 11:
                      return _context159.abrupt("return", Promise.resolve(error));

                    case 12:
                    case "end":
                      return _context159.stop();
                  }
                }
              }, _callee159, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getWeekTSheets",
          value: function getWeekTSheets() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee160() {
              var startWeek, endWeek, gWTSBody, _yield$this$shttp$sen21, status, data, error;

              return regeneratorRuntime.wrap(function _callee160$(_context160) {
                while (1) {
                  switch (_context160.prev = _context160.next) {
                    case 0:
                      startWeek = this.dT.sOW(new Date());
                      endWeek = this.dT.eOW(new Date());
                      gWTSBody = {
                        'search': {
                          's1': {
                            'field': 'Date',
                            'type': 'ge',
                            'data': startWeek
                          },
                          's2': {
                            'field': 'Date',
                            'type': 'le',
                            'data': endWeek
                          }
                        },
                        'sort': {
                          'Date': 'asc'
                        }
                      };
                      _context160.next = 5;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/Timesheet/QUERY', {
                        method: 'post',
                        data: gWTSBody,
                        responseType: 'json'
                      });

                    case 5:
                      _yield$this$shttp$sen21 = _context160.sent;
                      status = _yield$this$shttp$sen21.status;
                      data = _yield$this$shttp$sen21.data;
                      error = _yield$this$shttp$sen21.error;

                      if (error) {
                        _context160.next = 13;
                        break;
                      }

                      return _context160.abrupt("return", Promise.resolve(data));

                    case 13:
                      return _context160.abrupt("return", Promise.resolve(error));

                    case 14:
                    case "end":
                      return _context160.stop();
                  }
                }
              }, _callee160, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getSyncItems",
          value: function getSyncItems(dbEP, apiCount) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee161() {
              var batchBodyObj, _yield$this$shttp$sen22, status, data, error;

              return regeneratorRuntime.wrap(function _callee161$(_context161) {
                while (1) {
                  switch (_context161.prev = _context161.next) {
                    case 0:
                      batchBodyObj = {
                        start: apiCount - 100,
                        max: 500
                      };
                      _context161.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + dbEP + '/QUERY', {
                        method: 'post',
                        data: batchBodyObj,
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen22 = _context161.sent;
                      status = _yield$this$shttp$sen22.status;
                      data = _yield$this$shttp$sen22.data;
                      error = _yield$this$shttp$sen22.error;

                      if (!(status === 200)) {
                        _context161.next = 11;
                        break;
                      }

                      return _context161.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 11:
                      return _context161.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 12:
                    case "end":
                      return _context161.stop();
                  }
                }
              }, _callee161, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "crawlAPI",
          value: function crawlAPI() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee162() {
              var sT, allResEP, allLen, allC, allTables, failedTables, pk, rn, gT, joinsTable, assocsTable, countTable, _i20, _allResEP, _allResEP$_i, key, value, fieldsSchema, _yield$this$shttp$sen23, _status15, data, error, tblFields, i;

              return regeneratorRuntime.wrap(function _callee162$(_context162) {
                while (1) {
                  switch (_context162.prev = _context162.next) {
                    case 0:
                      sT = new Date();
                      allResEP = Object.entries(_baseDB__WEBPACK_IMPORTED_MODULE_7__.Resources);
                      allLen = allResEP.length;
                      allC = 0;
                      allTables = [];
                      failedTables = [];
                      pk = ' PRIMARY KEY NOT NULL';
                      rn = 'resource_name';

                      gT = function gT(n, t) {
                        var fStr;

                        var fT = _baseDB__WEBPACK_IMPORTED_MODULE_7__.TypeMap[t.toLowerCase()];

                        fT ? fT = fT.toUpperCase() : fT = 'TEXT';
                        n === 'Id' ? fStr = fT + pk : fStr = fT;
                        return fStr;
                      };

                      joinsTable = {
                        name: 'joins',
                        schema: [{
                          column: rn,
                          value: 'TEXT' + pk
                        }, {
                          column: 'joins',
                          value: 'TEXT'
                        }],
                        values: []
                      };
                      assocsTable = {
                        name: 'assocs',
                        schema: [{
                          column: rn,
                          value: 'TEXT' + pk
                        }, {
                          column: 'assocs',
                          value: 'TEXT'
                        }],
                        values: []
                      };
                      countTable = {
                        name: 'count',
                        schema: [{
                          column: rn,
                          value: 'TEXT' + pk
                        }, {
                          column: 'count',
                          value: 'INTEGER'
                        }],
                        values: []
                      };
                      _i20 = 0, _allResEP = allResEP;

                    case 13:
                      if (!(_i20 < _allResEP.length)) {
                        _context162.next = 27;
                        break;
                      }

                      _allResEP$_i = _slicedToArray(_allResEP[_i20], 2), key = _allResEP$_i[0], value = _allResEP$_i[1];
                      allC++;
                      fieldsSchema = [];
                      _context162.next = 19;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/' + key + '/INFO', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 19:
                      _yield$this$shttp$sen23 = _context162.sent;
                      _status15 = _yield$this$shttp$sen23.status;
                      data = _yield$this$shttp$sen23.data;
                      error = _yield$this$shttp$sen23.error;

                      if (_status15 !== 200) {
                        failedTables.push({
                          name: key,
                          status: _status15,
                          error: error
                        });
                      } else {
                        tblFields = Object.entries(data.fields);

                        for (i = 0; i < tblFields.length; i++) {
                          fieldsSchema.push({
                            column: tblFields[i][0],
                            value: gT(tblFields[i][0], tblFields[i][1])
                          });
                        }

                        allTables.push({
                          name: value,
                          schema: fieldsSchema,
                          indexes: [{
                            name: 'IndexIdModifiedDesc',
                            value: 'Id DESC, Modified, DESC'
                          }]
                        });
                        joinsTable.values.push([value, data.joins, JSON.stringify(data.joins)]);
                        assocsTable.values.push([value, JSON.stringify(data.assocs)]);
                        countTable.values.push([value, data.count]);
                      }

                    case 24:
                      _i20++;
                      _context162.next = 13;
                      break;

                    case 27:
                      allTables.push(joinsTable);
                      allTables.push(assocsTable);
                      allTables.push(countTable);
                      console.log('SUCCESS: ' + allTables.length + ' | FAILED: ' + failedTables.length + ' - Total Time: ' + this.eventServ.getDur(sT) / 1000 + 's');

                    case 31:
                    case "end":
                      return _context162.stop();
                  }
                }
              }, _callee162, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "firstRunRecordsCheck",
          value: function firstRunRecordsCheck() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee163() {
              var frRecordsCatArr, isOK, isER, i, recCat, _yield$this$shttp$sen24, _status16, data, error;

              return regeneratorRuntime.wrap(function _callee163$(_context163) {
                while (1) {
                  switch (_context163.prev = _context163.next) {
                    case 0:
                      this.logger.info('[Deputy|firstRunResCheck] (STARTED)...');
                      frRecordsCatArr = [];
                      isOK = 0;
                      isER = 0; //frCheckResArr

                      i = 0;

                    case 5:
                      if (!(i < _baseDB__WEBPACK_IMPORTED_MODULE_7__.resEndPointArr.length)) {
                        _context163.next = 24;
                        break;
                      }

                      recCat = _baseDB__WEBPACK_IMPORTED_MODULE_7__.resEndPointArr[i];
                      _context163.prev = 7;
                      _context163.next = 10;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/' + recCat + '/INFO', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 10:
                      _yield$this$shttp$sen24 = _context163.sent;
                      _status16 = _yield$this$shttp$sen24.status;
                      data = _yield$this$shttp$sen24.data;
                      error = _yield$this$shttp$sen24.error;

                      if (_status16 === 200) {
                        isOK++;
                        frRecordsCatArr.push({
                          name: recCat,
                          access: true,
                          fields: data.fields,
                          count: data.count
                        });
                      } else {
                        isER++;
                        frRecordsCatArr.push({
                          name: recCat,
                          access: false,
                          error: error,
                          count: 0
                        });
                      }

                      _context163.next = 21;
                      break;

                    case 17:
                      _context163.prev = 17;
                      _context163.t0 = _context163["catch"](7);
                      isER++;
                      frRecordsCatArr.push({
                        name: recCat,
                        access: false,
                        error: _context163.t0,
                        count: 0
                      });

                    case 21:
                      i++;
                      _context163.next = 5;
                      break;

                    case 24:
                      ;
                      this.logger.info('[DeputyApiService|firstRunResCheck] (COMPLETED): ' + isOK + ' GOOD + ' + isER + ' BAD - Saving/Publishing frRecordsCatObj...');
                      return _context163.abrupt("return", Promise.resolve(frRecordsCatArr));

                    case 27:
                    case "end":
                      return _context163.stop();
                  }
                }
              }, _callee163, this, [[7, 17]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getNo",
          value: function getNo(tR) {
            var oTyp;
            var oLen;

            var isA = function isA(tR) {
              if (Array.isArray(tR)) {
                return true;
              } else {
                return false;
              }
            };

            var isO = function isO(tR) {
              if (tR === Object(tR) && !Array.isArray(tR)) {
                return true;
              } else {
                return false;
              }
            };

            if (isA(tR)) {
              oTyp = 'array';
              oLen = tR.length;
            }

            ;

            if (isO(tR)) {
              oTyp = 'object';
              oLen = Object.keys(tR).length;
            }

            ;

            if (!isA(tR) && !isO(tR)) {
              oTyp = 'nk';
              oLen = 0;
            }

            ;
            return Promise.resolve({
              o: oTyp,
              l: oLen
            });
          }
        }, {
          key: "firstRunMyCheck",
          value: ////////////////////////////////////////////////////////////////////////////////////////////////////
          function firstRunMyCheck() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee164() {
              var frMyCatArr, isOK, isER, i, myCat, _yield$this$shttp$sen25, _status17, data, dataInfo;

              return regeneratorRuntime.wrap(function _callee164$(_context164) {
                while (1) {
                  switch (_context164.prev = _context164.next) {
                    case 0:
                      this.logger.info('[Deputy|firstRunMyCheck] (STARTED)...');
                      frMyCatArr = [];
                      isOK = 0;
                      isER = 0;
                      i = 0;

                    case 5:
                      if (!(i < _baseDB__WEBPACK_IMPORTED_MODULE_7__.frCheckMyArr.length)) {
                        _context164.next = 32;
                        break;
                      }

                      myCat = _baseDB__WEBPACK_IMPORTED_MODULE_7__.frCheckMyArr[i];
                      _context164.prev = 7;
                      _context164.next = 10;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'my/' + myCat, {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 10:
                      _yield$this$shttp$sen25 = _context164.sent;
                      _status17 = _yield$this$shttp$sen25.status;
                      data = _yield$this$shttp$sen25.data;

                      if (!(_status17 === 200)) {
                        _context164.next = 21;
                        break;
                      }

                      isOK++;
                      _context164.next = 17;
                      return this.getNo(data);

                    case 17:
                      dataInfo = _context164.sent;
                      frMyCatArr.push({
                        name: myCat,
                        error: false,
                        type: dataInfo.o,
                        count: dataInfo.l,
                        data: data
                      });
                      _context164.next = 23;
                      break;

                    case 21:
                      isER++;
                      frMyCatArr.push({
                        name: myCat,
                        error: true
                      });

                    case 23:
                      _context164.next = 29;
                      break;

                    case 25:
                      _context164.prev = 25;
                      _context164.t0 = _context164["catch"](7);
                      isER++;
                      frMyCatArr.push({
                        name: myCat,
                        error: true
                      });

                    case 29:
                      i++;
                      _context164.next = 5;
                      break;

                    case 32:
                      ;
                      this.logger.info('[Deputy|firstRunMyCheck] (COMPLETED): ' + isOK + ' GOOD + ' + isER + ' BAD - Saving/Publishing frMyCatObj...');
                      return _context164.abrupt("return", Promise.resolve(frMyCatArr));

                    case 35:
                    case "end":
                      return _context164.stop();
                  }
                }
              }, _callee164, this, [[7, 25]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "frDLMyItems",
          value: function frDLMyItems(myEP) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee167() {
              var _this88 = this;

              var getSingleMyItems;
              return regeneratorRuntime.wrap(function _callee167$(_context167) {
                while (1) {
                  switch (_context167.prev = _context167.next) {
                    case 0:
                      this.logger.info('[Deputy|frDLMyItems] (' + myEP + ')');

                      getSingleMyItems = function getSingleMyItems(mEP) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this88, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee165() {
                          var fEP, _yield$this$shttp$sen26, status, data, dataInfo;

                          return regeneratorRuntime.wrap(function _callee165$(_context165) {
                            while (1) {
                              switch (_context165.prev = _context165.next) {
                                case 0:
                                  mEP === 'location' || mEP === 'contactaddress' ? fEP = mEP + '/all' : fEP = mEP;
                                  _context165.next = 3;
                                  return this.shttp.sendRequest(this.Client.apiUrl + 'my/' + fEP, {
                                    method: 'get',
                                    responseType: 'json'
                                  });

                                case 3:
                                  _yield$this$shttp$sen26 = _context165.sent;
                                  status = _yield$this$shttp$sen26.status;
                                  data = _yield$this$shttp$sen26.data;

                                  if (!(status === 200)) {
                                    _context165.next = 19;
                                    break;
                                  }

                                  _context165.next = 9;
                                  return this.getNo(data);

                                case 9:
                                  dataInfo = _context165.sent;

                                  if (!(dataInfo.l > 0)) {
                                    _context165.next = 15;
                                    break;
                                  }

                                  this.eventServ.publish('frDLMyItems', {
                                    stage: 'update',
                                    getThisPBar: 1
                                  });
                                  return _context165.abrupt("return", {
                                    error: false,
                                    count: dataInfo.l,
                                    result: data
                                  });

                                case 15:
                                  this.eventServ.publish('frDLMyItems', {
                                    stage: 'update',
                                    getThisPBar: 1
                                  });
                                  return _context165.abrupt("return", {
                                    error: false,
                                    count: 0,
                                    result: null
                                  });

                                case 17:
                                  _context165.next = 21;
                                  break;

                                case 19:
                                  this.eventServ.publish('frDLMyItems', {
                                    stage: 'update',
                                    getThisPBar: 1
                                  });
                                  return _context165.abrupt("return", {
                                    error: true,
                                    count: 0,
                                    result: null
                                  });

                                case 21:
                                case "end":
                                  return _context165.stop();
                              }
                            }
                          }, _callee165, this);
                        }));
                      };

                      (function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this88, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee166() {
                          var finalSingleObj, finalMyArr, finalEP, resRos, mySet;
                          return regeneratorRuntime.wrap(function _callee166$(_context166) {
                            while (1) {
                              switch (_context166.prev = _context166.next) {
                                case 0:
                                  this.logger.info('[Deputy|frDLMyItems] (' + myEP + ') - [START]');
                                  _context166.next = 3;
                                  return getSingleMyItems(myEP);

                                case 3:
                                  finalSingleObj = _context166.sent;

                                  if (!(!finalSingleObj.error && finalSingleObj.count > 0)) {
                                    _context166.next = 20;
                                    break;
                                  }

                                  finalMyArr = [];
                                  finalEP = 'fr-' + myEP;

                                  if (!(myEP !== 'roster')) {
                                    _context166.next = 11;
                                    break;
                                  }

                                  finalMyArr = finalSingleObj.result;
                                  _context166.next = 16;
                                  break;

                                case 11:
                                  _context166.next = 13;
                                  return this.storeServ.getObject('fr-Roster');

                                case 13:
                                  resRos = _context166.sent;
                                  mySet = new Set([].concat(_toConsumableArray(resRos), _toConsumableArray(finalSingleObj.result)));
                                  finalMyArr = Array.from(mySet);

                                case 16:
                                  this.logger.info('[Deputy|frDLMyItems] (' + myEP + ') - [FINISH] (Saved OK): ' + finalMyArr.length);
                                  this.eventServ.publish('frDLMyItems', {
                                    stage: 'end',
                                    error: false,
                                    myEPName: myEP,
                                    records: finalMyArr.length,
                                    data: finalMyArr
                                  });
                                  _context166.next = 21;
                                  break;

                                case 20:
                                  if (finalSingleObj.error) {
                                    this.logger.info('[DeputyApiService|frDLMyItems] (' + myEP + ') - [FINISH] (Request Error)');
                                    this.eventServ.publish('frDLMyItems', {
                                      stage: 'end',
                                      error: true,
                                      records: null
                                    });
                                  } else {
                                    this.logger.info('[DeputyApiService|frDLMyItems] (' + myEP + ') - [FINISH] (No Data) (0 length)');
                                    this.eventServ.publish('frDLMyItems', {
                                      stage: 'end',
                                      error: false,
                                      records: null
                                    });
                                  }

                                case 21:
                                case "end":
                                  return _context166.stop();
                              }
                            }
                          }, _callee166, this);
                        }));
                      })();

                    case 3:
                    case "end":
                      return _context167.stop();
                  }
                }
              }, _callee167, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "gotEPAccess",
          value: function gotEPAccess(ep) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee168() {
              var epRes, i, _yield$this$shttp$sen27, error;

              return regeneratorRuntime.wrap(function _callee168$(_context168) {
                while (1) {
                  switch (_context168.prev = _context168.next) {
                    case 0:
                      this.logger.info('[Deputy|gotEPAccess] (ep(s))...');
                      epRes = [];
                      i = 0;

                    case 3:
                      if (!(i < ep.length)) {
                        _context168.next = 18;
                        break;
                      }

                      _context168.prev = 4;
                      _context168.next = 7;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/' + ep[i] + '/QUERY', {
                        method: 'post',
                        data: {
                          max: 200
                        },
                        responseType: 'json'
                      });

                    case 7:
                      _yield$this$shttp$sen27 = _context168.sent;
                      error = _yield$this$shttp$sen27.error;

                      if (!error) {
                        epRes.push({
                          ep: ep[i],
                          result: true
                        });
                      } else {
                        epRes.push({
                          ep: ep[i],
                          result: false
                        });
                      }

                      _context168.next = 15;
                      break;

                    case 12:
                      _context168.prev = 12;
                      _context168.t0 = _context168["catch"](4);
                      epRes.push({
                        ep: ep[i],
                        result: false
                      });

                    case 15:
                      i++;
                      _context168.next = 3;
                      break;

                    case 18:
                      ;
                      return _context168.abrupt("return", Promise.resolve(epRes));

                    case 20:
                    case "end":
                      return _context168.stop();
                  }
                }
              }, _callee168, this, [[4, 12]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "frDLResItems",
          value: function frDLResItems(recCount, recTotal, recEP, recMax, recValue) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee171() {
              var _this89 = this;

              var getMultiResItems;
              return regeneratorRuntime.wrap(function _callee171$(_context171) {
                while (1) {
                  switch (_context171.prev = _context171.next) {
                    case 0:
                      this.logger.info('[Deputy|frDLResItems] (' + recCount + ',' + recTotal + ',' + recEP + ',' + recMax + ',' + recValue + ')');

                      getMultiResItems = function getMultiResItems(tMO) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this89, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee169() {
                          var myMultiArr, totalBatches, errCount, errArr, batch, batchBodyObj, _yield$this$shttp$sen28, _status18, data, error, oldArr, newArr, calcThisPBar;

                          return regeneratorRuntime.wrap(function _callee169$(_context169) {
                            while (1) {
                              switch (_context169.prev = _context169.next) {
                                case 0:
                                  myMultiArr = [];
                                  totalBatches = Math.ceil(tMO.value / 500);
                                  errCount = 0;
                                  errArr = [];
                                  batch = 0;

                                case 5:
                                  if (!(batch < totalBatches)) {
                                    _context169.next = 40;
                                    break;
                                  }

                                  batchBodyObj = {
                                    start: tMO.max - tMO.value + 500 * batch,
                                    max: 500,
                                    sort: {
                                      'Id': 'desc'
                                    }
                                  };
                                  _context169.prev = 7;
                                  _context169.next = 10;
                                  return this.shttp.sendRequest(this.Client.apiUrl + 'resource/' + recEP + '/QUERY', {
                                    method: 'post',
                                    data: batchBodyObj,
                                    responseType: 'json'
                                  });

                                case 10:
                                  _yield$this$shttp$sen28 = _context169.sent;
                                  _status18 = _yield$this$shttp$sen28.status;
                                  data = _yield$this$shttp$sen28.data;
                                  error = _yield$this$shttp$sen28.error;

                                  if (!(_status18 === 200)) {
                                    _context169.next = 23;
                                    break;
                                  }

                                  oldArr = myMultiArr;
                                  newArr = data;
                                  myMultiArr = lodash__WEBPACK_IMPORTED_MODULE_8__.union(oldArr, newArr);
                                  calcThisPBar = (myMultiArr.length / recValue).toFixed(2);
                                  this.eventServ.publish('frDLResItems', {
                                    stage: 'update',
                                    thisDataValue: myMultiArr.length,
                                    getThisPBar: Number(calcThisPBar)
                                  });
                                  this.logger.info('[Deputy|frDLResItems] (' + recEP + ') - [BATCH] - ' + batch);
                                  _context169.next = 30;
                                  break;

                                case 23:
                                  errCount++;
                                  errArr.push({
                                    errCount: errCount,
                                    batchNo: batch,
                                    batchTotal: totalBatches,
                                    statusCode: error
                                  });

                                  if (!(_status18 === 401 || errCount > 1)) {
                                    _context169.next = 29;
                                    break;
                                  }

                                  return _context169.abrupt("break", 40);

                                case 29:
                                  return _context169.abrupt("continue", 37);

                                case 30:
                                  _context169.next = 37;
                                  break;

                                case 32:
                                  _context169.prev = 32;
                                  _context169.t0 = _context169["catch"](7);

                                  if (!(_context169.t0.error.code.toString() === '403')) {
                                    _context169.next = 36;
                                    break;
                                  }

                                  return _context169.abrupt("return", {
                                    error: false,
                                    result: []
                                  });

                                case 36:
                                  ;

                                case 37:
                                  batch++;
                                  _context169.next = 5;
                                  break;

                                case 40:
                                  ;

                                  if (!(errCount > 0)) {
                                    _context169.next = 45;
                                    break;
                                  }

                                  return _context169.abrupt("return", {
                                    error: true,
                                    result: errArr
                                  });

                                case 45:
                                  return _context169.abrupt("return", {
                                    error: false,
                                    result: myMultiArr
                                  });

                                case 46:
                                case "end":
                                  return _context169.stop();
                              }
                            }
                          }, _callee169, this, [[7, 32]]);
                        }));
                      };

                      (function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this89, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee170() {
                          var thisMultiObj, finalMultiResObj, allItemsArrForSave;
                          return regeneratorRuntime.wrap(function _callee170$(_context170) {
                            while (1) {
                              switch (_context170.prev = _context170.next) {
                                case 0:
                                  this.logger.info('[Deputy|frDLResItems] (' + recEP + ') - [START]...');
                                  thisMultiObj = {
                                    ep: recEP,
                                    max: recMax,
                                    value: recValue
                                  };
                                  _context170.next = 4;
                                  return getMultiResItems(thisMultiObj);

                                case 4:
                                  finalMultiResObj = _context170.sent;

                                  if (!finalMultiResObj.error) {
                                    allItemsArrForSave = [];

                                    if (recEP === 'SystemUsageTracking') {
                                      allItemsArrForSave = finalMultiResObj.result.reverse();
                                    } else {
                                      allItemsArrForSave = finalMultiResObj.result;
                                    }

                                    ;
                                    this.logger.info('[Deputy|frDLResItems] (' + recEP + ') - [FINISH] (Saved OK): ' + finalMultiResObj.result.length);
                                    this.eventServ.publish('frDLResItems', {
                                      stage: 'end',
                                      recEPName: recEP,
                                      records: allItemsArrForSave.length,
                                      data: allItemsArrForSave
                                    });
                                  } else {
                                    this.logger.info('[Deputy|frDLResItems] (' + recEP + ') - [FINISH] (Request Error): ' + finalMultiResObj.result[0].statusCode);
                                    this.eventServ.publish('frDLResItems', {
                                      stage: 'error',
                                      recEPName: recEP,
                                      error: finalMultiResObj.result
                                    });
                                  }

                                case 6:
                                case "end":
                                  return _context170.stop();
                              }
                            }
                          }, _callee170, this);
                        }));
                      })();

                    case 3:
                    case "end":
                      return _context171.stop();
                  }
                }
              }, _callee171, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getMyWebPhoto",
          value: function getMyWebPhoto() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee172() {
              var _yield$this$shttp$sen29, _status19, data, error;

              return regeneratorRuntime.wrap(function _callee172$(_context172) {
                while (1) {
                  switch (_context172.prev = _context172.next) {
                    case 0:
                      _context172.prev = 0;
                      _context172.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'my/photo', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen29 = _context172.sent;
                      _status19 = _yield$this$shttp$sen29.status;
                      data = _yield$this$shttp$sen29.data;
                      error = _yield$this$shttp$sen29.error;

                      if (!(_status19 === 200)) {
                        _context172.next = 11;
                        break;
                      }

                      return _context172.abrupt("return", Promise.resolve({
                        result: true,
                        data: data.DownloadLink.toString()
                      }));

                    case 11:
                      return _context172.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 12:
                      _context172.next = 17;
                      break;

                    case 14:
                      _context172.prev = 14;
                      _context172.t0 = _context172["catch"](0);
                      return _context172.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context172.t0
                      }));

                    case 17:
                    case "end":
                      return _context172.stop();
                  }
                }
              }, _callee172, this, [[0, 14]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getRoster",
          value: function getRoster() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee173() {
              return regeneratorRuntime.wrap(function _callee173$(_context173) {
                while (1) {
                  switch (_context173.prev = _context173.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getRoster] ()...');
                      _context173.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/roster/' + (0, date_fns__WEBPACK_IMPORTED_MODULE_11__["default"])(new Date(), 'yyyy-MM-dd'), {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 3:
                      return _context173.abrupt("return", _context173.sent);

                    case 4:
                    case "end":
                      return _context173.stop();
                  }
                }
              }, _callee173, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getRosterByDate",
          value: function getRosterByDate(rosterDate) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee174() {
              var rosterDateStr;
              return regeneratorRuntime.wrap(function _callee174$(_context174) {
                while (1) {
                  switch (_context174.prev = _context174.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getRosterByDate] ()...');
                      rosterDateStr = this.dT.format(rosterDate, 'yyyy-MM-dd');
                      _context174.next = 4;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/roster/' + rosterDateStr, {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 4:
                      return _context174.abrupt("return", _context174.sent);

                    case 5:
                    case "end":
                      return _context174.stop();
                  }
                }
              }, _callee174, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getMissTSRoster",
          value: function getMissTSRoster(rosterDate) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee175() {
              var rosterDateStr, _yield$this$shttp$sen30, _status20, data, error;

              return regeneratorRuntime.wrap(function _callee175$(_context175) {
                while (1) {
                  switch (_context175.prev = _context175.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getMissTSRoster] ()...');
                      rosterDateStr = this.dT.format(rosterDate, 'yyyy-MM-dd');
                      _context175.prev = 2;
                      _context175.next = 5;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/roster/' + rosterDateStr, {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 5:
                      _yield$this$shttp$sen30 = _context175.sent;
                      _status20 = _yield$this$shttp$sen30.status;
                      data = _yield$this$shttp$sen30.data;
                      error = _yield$this$shttp$sen30.error;

                      if (!(_status20 === 200)) {
                        _context175.next = 13;
                        break;
                      }

                      return _context175.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 13:
                      return _context175.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 14:
                      _context175.next = 19;
                      break;

                    case 16:
                      _context175.prev = 16;
                      _context175.t0 = _context175["catch"](2);
                      return _context175.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context175.t0
                      }));

                    case 19:
                    case "end":
                      return _context175.stop();
                  }
                }
              }, _callee175, this, [[2, 16]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "findRosters",
          value: function findRosters(startDStr, endDStr) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee177() {
              var _this90 = this;

              var fnStartDRange, fnEndDRange, delay, pDateStr, startDRange, endDRange, rangeLen, startM, startY, foundRosDates, foundRosData, checkDate, startD, newD, cDate;
              return regeneratorRuntime.wrap(function _callee177$(_context177) {
                while (1) {
                  switch (_context177.prev = _context177.next) {
                    case 0:
                      this.logger.info('[DeputyApi|findRosters] ()...');
                      fnStartDRange = startDStr;
                      fnEndDRange = endDStr;

                      delay = function delay(ms) {
                        return new Promise(function (resolve) {
                          return setTimeout(resolve, ms);
                        });
                      };

                      pDateStr = function pDateStr(dateStr) {
                        return (0, date_fns__WEBPACK_IMPORTED_MODULE_12__["default"])(dateStr, 'yyyy-MM-dd', new Date());
                      };

                      startDRange = pDateStr(fnStartDRange);
                      endDRange = pDateStr(fnEndDRange);
                      rangeLen = (0, date_fns__WEBPACK_IMPORTED_MODULE_13__["default"])(endDRange, startDRange);
                      startM = (0, date_fns__WEBPACK_IMPORTED_MODULE_14__["default"])(startDRange);
                      startY = (0, date_fns__WEBPACK_IMPORTED_MODULE_15__["default"])(startDRange);
                      foundRosDates = [];
                      foundRosData = [];

                      checkDate = function checkDate(cDate) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this90, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee176() {
                          var _yield$this$shttp$sen31, status, data, error;

                          return regeneratorRuntime.wrap(function _callee176$(_context176) {
                            while (1) {
                              switch (_context176.prev = _context176.next) {
                                case 0:
                                  _context176.next = 2;
                                  return delay(100);

                                case 2:
                                  _context176.next = 4;
                                  return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/roster/' + cDate, {
                                    method: 'get',
                                    serializer: 'json',
                                    timeout: 20,
                                    responseType: 'json'
                                  });

                                case 4:
                                  _yield$this$shttp$sen31 = _context176.sent;
                                  status = _yield$this$shttp$sen31.status;
                                  data = _yield$this$shttp$sen31.data;
                                  error = _yield$this$shttp$sen31.error;

                                  if (!(status === 200)) {
                                    _context176.next = 12;
                                    break;
                                  }

                                  if (data.length > 0) {
                                    foundRosDates.push(cDate);
                                    foundRosData.push(data);
                                  } else {
                                    Promise.resolve(true);
                                  }

                                  _context176.next = 14;
                                  break;

                                case 12:
                                  this.logger.info(error);
                                  return _context176.abrupt("return", Promise.resolve(false));

                                case 14:
                                case "end":
                                  return _context176.stop();
                              }
                            }
                          }, _callee176, this);
                        }));
                      };

                      startD = (0, date_fns__WEBPACK_IMPORTED_MODULE_16__["default"])(startDRange);

                    case 14:
                      if (!(startD < rangeLen)) {
                        _context177.next = 26;
                        break;
                      }

                      newD = new Date(startY, startM, startD);
                      cDate = (0, date_fns__WEBPACK_IMPORTED_MODULE_17__["default"])(newD, {
                        representation: 'date'
                      });
                      _context177.next = 19;
                      return checkDate(cDate);

                    case 19:
                      if ((0, date_fns__WEBPACK_IMPORTED_MODULE_18__["default"])(newD)) {
                        startD = 1;
                        startM++;
                      }

                      if ((0, date_fns__WEBPACK_IMPORTED_MODULE_19__["default"])(newD, (0, date_fns__WEBPACK_IMPORTED_MODULE_20__["default"])(newD))) {
                        startD = 1;
                        startM = 0;
                        startY++;
                      }

                      if (!(0, date_fns__WEBPACK_IMPORTED_MODULE_19__["default"])(newD, endDRange)) {
                        _context177.next = 23;
                        break;
                      }

                      return _context177.abrupt("break", 26);

                    case 23:
                      startD++;
                      _context177.next = 14;
                      break;

                    case 26:
                      this.storeServ.setObject('FindRosResults', {
                        dates: foundRosDates,
                        data: foundRosData
                      });
                      console.log('[DeputyApi|findRosters] (Finished) - Found: [' + foundRosDates.length + '] Rosters - ' + foundRosDates.join(','));

                    case 28:
                    case "end":
                      return _context177.stop();
                  }
                }
              }, _callee177, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "saveNativeImage",
          value: function saveNativeImage(imgWebURL, fileName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee178() {
              var saveRes, fileEntry, convURI;
              return regeneratorRuntime.wrap(function _callee178$(_context178) {
                while (1) {
                  switch (_context178.prev = _context178.next) {
                    case 0:
                      this.logger.info(this.mod + '|saveNativeImage] ()...');
                      _context178.next = 3;
                      return this.fileServ.stat(this.fileServ.phoneFS, 'Sheriff/assets');

                    case 3:
                      saveRes = _context178.sent;
                      _context178.next = 6;
                      return this.shttp.downloadFile(imgWebURL, null, this.Client.authhead, saveRes.data.uri + '/' + fileName);

                    case 6:
                      fileEntry = _context178.sent;
                      console.log(fileEntry);
                      convURI = _capacitor_core__WEBPACK_IMPORTED_MODULE_1__.Capacitor.convertFileSrc(fileEntry.nativeURL);
                      this.logger.info('[DAS|saveNativeImg] (DL/Save): Success: ' + convURI);
                      return _context178.abrupt("return", Promise.resolve(convURI));

                    case 11:
                    case "end":
                      return _context178.stop();
                  }
                }
              }, _callee178, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "diffMyWorkplace",
          value: function diffMyWorkplace(currentWPArr) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee179() {
              var oldWPArr, newWPArr, _yield$this$getMy2, _status21, data;

              return regeneratorRuntime.wrap(function _callee179$(_context179) {
                while (1) {
                  switch (_context179.prev = _context179.next) {
                    case 0:
                      this.logger.info('[' + this.mod + '|diffMyWorkplace](currentWPArr)...');
                      oldWPArr = [];
                      currentWPArr !== null ? oldWPArr = currentWPArr : oldWPArr = [];
                      newWPArr = [];
                      _context179.prev = 4;
                      _context179.next = 7;
                      return this.getMy('setup');

                    case 7:
                      _yield$this$getMy2 = _context179.sent;
                      _status21 = _yield$this$getMy2.status;
                      data = _yield$this$getMy2.data;

                      if (!(_status21 === 200)) {
                        _context179.next = 14;
                        break;
                      }

                      newWPArr = data['Workplace'];
                      _context179.next = 15;
                      break;

                    case 14:
                      return _context179.abrupt("return", Promise.resolve({
                        "new": false
                      }));

                    case 15:
                      ;

                      if (!(oldWPArr.length < 1 || newWPArr.length < 1 || oldWPArr.length === newWPArr.length)) {
                        _context179.next = 20;
                        break;
                      }

                      return _context179.abrupt("return", Promise.resolve({
                        "new": false
                      }));

                    case 20:
                      return _context179.abrupt("return", Promise.resolve({
                        "new": true,
                        newno: Math.abs(newWPArr.length - oldWPArr.length),
                        data: data
                      }));

                    case 21:
                      _context179.next = 26;
                      break;

                    case 23:
                      _context179.prev = 23;
                      _context179.t0 = _context179["catch"](4);
                      return _context179.abrupt("return", Promise.resolve({
                        "new": false
                      }));

                    case 26:
                    case "end":
                      return _context179.stop();
                  }
                }
              }, _callee179, this, [[4, 23]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getResSyncCount",
          value: function getResSyncCount(tableN) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee180() {
              var resName, _i21, _Object$entries3, _Object$entries3$_i, key, value, _yield$this$shttp$sen32, status, data, error;

              return regeneratorRuntime.wrap(function _callee180$(_context180) {
                while (1) {
                  switch (_context180.prev = _context180.next) {
                    case 0:
                      this.logger.info('[DeputyApiService|getCount] (' + tableN + ')...');

                      for (_i21 = 0, _Object$entries3 = Object.entries(_baseDB__WEBPACK_IMPORTED_MODULE_7__.Resources); _i21 < _Object$entries3.length; _i21++) {
                        _Object$entries3$_i = _slicedToArray(_Object$entries3[_i21], 2), key = _Object$entries3$_i[0], value = _Object$entries3$_i[1];

                        if (tableN === value) {
                          resName = key.toString();
                        }
                      }

                      ;
                      _context180.next = 5;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/' + resName + '/INFO', {
                        method: 'get',
                        responseType: 'json'
                      });

                    case 5:
                      _yield$this$shttp$sen32 = _context180.sent;
                      status = _yield$this$shttp$sen32.status;
                      data = _yield$this$shttp$sen32.data;
                      error = _yield$this$shttp$sen32.error;

                      if (!(status === 200)) {
                        _context180.next = 13;
                        break;
                      }

                      return _context180.abrupt("return", Promise.resolve(data.count));

                    case 13:
                      return _context180.abrupt("return", Promise.reject(error));

                    case 14:
                    case "end":
                      return _context180.stop();
                  }
                }
              }, _callee180, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getTSheetSyncRange",
          value: function getTSheetSyncRange(range, start, end, staged) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee181() {
              var TSSRBody, _yield$this$shttp$sen33, _status22, data, error;

              return regeneratorRuntime.wrap(function _callee181$(_context181) {
                while (1) {
                  switch (_context181.prev = _context181.next) {
                    case 0:
                      this.logger.info('[' + this.mod + '|getTSheetSyncRange]()...');

                      if (staged) {
                        _context181.next = 17;
                        break;
                      }

                      range ? TSSRBody = {
                        'search': {
                          's1': {
                            'field': 'Date',
                            'type': 'ge',
                            'data': this.dT.format(start, 'yyyy-MM-dd')
                          },
                          's2': {
                            'field': 'Date',
                            'type': 'le',
                            'data': this.dT.format(end, 'yyyy-MM-dd')
                          },
                          's3': {
                            'field': 'Modified',
                            'type': 'ge',
                            'data': this.dT.format(start, 'yyyy-MM-dd')
                          },
                          's4': {
                            'field': 'Modified',
                            'type': 'le',
                            'data': this.dT.format(end, 'yyyy-MM-dd')
                          }
                        },
                        'sort': {
                          'Id': 'desc'
                        }
                      } : TSSRBody = {
                        'sort': {
                          'Id': 'desc'
                        }
                      };
                      _context181.next = 5;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/Timesheet/QUERY', {
                        method: 'post',
                        data: TSSRBody,
                        responseType: 'json'
                      });

                    case 5:
                      _yield$this$shttp$sen33 = _context181.sent;
                      _status22 = _yield$this$shttp$sen33.status;
                      data = _yield$this$shttp$sen33.data;
                      error = _yield$this$shttp$sen33.error;

                      if (!(_status22 === 200)) {
                        _context181.next = 16;
                        break;
                      }

                      console.log(_status22);
                      console.log(data);
                      console.log(error);
                      return _context181.abrupt("return", Promise.resolve(data));

                    case 16:
                      return _context181.abrupt("return", Promise.reject(error));

                    case 17:
                    case "end":
                      return _context181.stop();
                  }
                }
              }, _callee181, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getAllTSheetsOrderById",
          value: function getAllTSheetsOrderById() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee182() {
              var queryBody, _yield$this$shttp$sen34, _status23, data, error;

              return regeneratorRuntime.wrap(function _callee182$(_context182) {
                while (1) {
                  switch (_context182.prev = _context182.next) {
                    case 0:
                      this.logger.info('[' + this.mod + '|getAllTSheetsOrderById] ()...');
                      _context182.prev = 1;
                      queryBody = {
                        'sort': {
                          'Id': 'desc'
                        }
                      };
                      _context182.next = 5;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/Timesheet/QUERY', {
                        method: 'post',
                        data: queryBody,
                        responseType: 'json'
                      });

                    case 5:
                      _yield$this$shttp$sen34 = _context182.sent;
                      _status23 = _yield$this$shttp$sen34.status;
                      data = _yield$this$shttp$sen34.data;
                      error = _yield$this$shttp$sen34.error;

                      if (!(_status23 === 200)) {
                        _context182.next = 13;
                        break;
                      }

                      return _context182.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 13:
                      return _context182.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 14:
                      _context182.next = 19;
                      break;

                    case 16:
                      _context182.prev = 16;
                      _context182.t0 = _context182["catch"](1);
                      return _context182.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context182.t0
                      }));

                    case 19:
                    case "end":
                      return _context182.stop();
                  }
                }
              }, _callee182, this, [[1, 16]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getSingleTS",
          value: function getSingleTS(tsId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee183() {
              var tsQBody, _yield$this$shttp$sen35, status, data, error;

              return regeneratorRuntime.wrap(function _callee183$(_context183) {
                while (1) {
                  switch (_context183.prev = _context183.next) {
                    case 0:
                      tsQBody = {
                        'search': {
                          's1': {
                            'field': 'Id',
                            'type': 'eq',
                            'data': tsId
                          }
                        }
                      };
                      _context183.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/Timesheet/QUERY', {
                        method: 'post',
                        data: tsQBody,
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen35 = _context183.sent;
                      status = _yield$this$shttp$sen35.status;
                      data = _yield$this$shttp$sen35.data;
                      error = _yield$this$shttp$sen35.error;

                      if (!(status === 200)) {
                        _context183.next = 11;
                        break;
                      }

                      return _context183.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 11:
                      return _context183.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 12:
                    case "end":
                      return _context183.stop();
                  }
                }
              }, _callee183, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getTodayShiftColleagues",
          value: function getTodayShiftColleagues() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee184() {
              var t, _yield$this$shttp$sen36, status, data, error;

              return regeneratorRuntime.wrap(function _callee184$(_context184) {
                while (1) {
                  switch (_context184.prev = _context184.next) {
                    case 0:
                      this.logger.info('[DeputyApi|getTodayShiftColleagues] ()...');
                      t = (0, date_fns__WEBPACK_IMPORTED_MODULE_11__["default"])(new Date(), 'yyyy-MM-dd');
                      _context184.next = 4;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/roster/' + t, {
                        method: 'get',
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 4:
                      _yield$this$shttp$sen36 = _context184.sent;
                      status = _yield$this$shttp$sen36.status;
                      data = _yield$this$shttp$sen36.data;
                      error = _yield$this$shttp$sen36.error;

                      if (!(status === 200)) {
                        _context184.next = 12;
                        break;
                      }

                      return _context184.abrupt("return", Promise.resolve(data));

                    case 12:
                      this.logger.info('[DeputyApi|getTodayShiftColleagues] (ERROR): ' + error);
                      return _context184.abrupt("return", Promise.reject(error));

                    case 14:
                    case "end":
                      return _context184.stop();
                  }
                }
              }, _callee184, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getThisShiftColleagues",
          value: function getThisShiftColleagues(d) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee185() {
              var t, _yield$this$shttp$sen37, status, data, error;

              return regeneratorRuntime.wrap(function _callee185$(_context185) {
                while (1) {
                  switch (_context185.prev = _context185.next) {
                    case 0:
                      this.logger.info('[DeputyApi|getThisShiftColleagues] ()...');
                      t = (0, date_fns__WEBPACK_IMPORTED_MODULE_11__["default"])(d, 'yyyy-MM-dd');
                      _context185.next = 4;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/roster/' + t, {
                        method: 'get',
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 4:
                      _yield$this$shttp$sen37 = _context185.sent;
                      status = _yield$this$shttp$sen37.status;
                      data = _yield$this$shttp$sen37.data;
                      error = _yield$this$shttp$sen37.error;

                      if (!(status === 200)) {
                        _context185.next = 12;
                        break;
                      }

                      return _context185.abrupt("return", Promise.resolve(data));

                    case 12:
                      this.logger.info('[DeputyApi|getTodayShiftColleagues] (ERROR): ' + error);
                      return _context185.abrupt("return", Promise.reject(error));

                    case 14:
                    case "end":
                      return _context185.stop();
                  }
                }
              }, _callee185, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////
          ///// TASKS
          ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "updateTask",
          value: function updateTask(taskId, userEntry, assignTo, taskTitle, taskDueDate, taskDueTS, taskNotes) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee186() {
              var updateTaskObj, _yield$this$shttp$sen38, status, data, error;

              return regeneratorRuntime.wrap(function _callee186$(_context186) {
                while (1) {
                  switch (_context186.prev = _context186.next) {
                    case 0:
                      this.logger.info('[DeputyApi|updateTask] ()...');
                      updateTaskObj = {
                        'intUserResponsible': assignTo,
                        'strQuestion': taskTitle,
                        'strComment': taskNotes,
                        'strDueDate': taskDueDate,
                        'intDueTimestamp': taskDueTS
                      };
                      _context186.next = 4;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/task/' + taskId, {
                        method: 'put',
                        data: updateTaskObj,
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 4:
                      _yield$this$shttp$sen38 = _context186.sent;
                      status = _yield$this$shttp$sen38.status;
                      data = _yield$this$shttp$sen38.data;
                      error = _yield$this$shttp$sen38.error;

                      if (!(status === 200)) {
                        _context186.next = 12;
                        break;
                      }

                      return _context186.abrupt("return", Promise.resolve(data));

                    case 12:
                      this.logger.info('[DeputyApi|updateTask] (ERROR): ' + error);
                      return _context186.abrupt("return", Promise.reject(error));

                    case 14:
                    case "end":
                      return _context186.stop();
                  }
                }
              }, _callee186, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "createTask",
          value: function createTask(myAss, userE, assignTo, taskTitle, taskSortOrder, taskDueDate, taskNotes) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee187() {
              var createTaskObj, nowDateObj, cTRes, _status24, error, data;

              return regeneratorRuntime.wrap(function _callee187$(_context187) {
                while (1) {
                  switch (_context187.prev = _context187.next) {
                    case 0:
                      this.logger.info('[DeputyApi|createTask] ()...');
                      _context187.prev = 1;
                      createTaskObj = {
                        intTaskSetupId: 0,
                        intOpUnitId: 0,
                        intGroupId: 0,
                        strDate: null,
                        intDayTimestamp: null,
                        strDueDate: null,
                        intDueTimestamp: null,
                        intSortOrder: taskSortOrder,
                        strQuestion: taskTitle,
                        strComment: null,
                        intUserEntry: userE,
                        intUserResponsible: assignTo
                      };
                      nowDateObj = new Date();
                      createTaskObj.strDate = this.dT.Id(nowDateObj);
                      createTaskObj.intDayTimestamp = this.dT.getUT(nowDateObj);

                      if (taskDueDate === null) {
                        createTaskObj.strDueDate = '';
                        createTaskObj.intDueTimestamp = -1;
                      } else {
                        createTaskObj.strDueDate = this.dT.Id(taskDueDate);
                        createTaskObj.intDueTimestamp = this.dT.getUT(taskDueDate);
                      }

                      ;
                      taskNotes === null ? createTaskObj.strComment = '' : createTaskObj.strComment = taskNotes;
                      this.logger.info(createTaskObj);
                      _context187.next = 12;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/task', {
                        method: 'put',
                        data: createTaskObj,
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 12:
                      cTRes = _context187.sent;
                      console.log(cTRes);
                      _status24 = cTRes.status;
                      error = cTRes.error;
                      data = cTRes.data;

                      if (!(_status24 === 200)) {
                        _context187.next = 22;
                        break;
                      }

                      this.logger.info('[DeputyApi|createTask] (SUCCESS): ' + _status24 + ' - Added Task Successfully');
                      return _context187.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 22:
                      this.logger.info('[DeputyApi|createTask] (ERROR): ' + error);
                      return _context187.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 24:
                      _context187.next = 29;
                      break;

                    case 26:
                      _context187.prev = 26;
                      _context187.t0 = _context187["catch"](1);
                      this.logger.info(_context187.t0);

                    case 29:
                    case "end":
                      return _context187.stop();
                  }
                }
              }, _callee187, this, [[1, 26]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "deleteTask",
          value: function deleteTask(taskId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee188() {
              var delTOpts, _yield$this$shttp$sen39, _status25, data, error;

              return regeneratorRuntime.wrap(function _callee188$(_context188) {
                while (1) {
                  switch (_context188.prev = _context188.next) {
                    case 0:
                      this.logger.info('[DeputyApi|deleteTask] (' + taskId + ')...');
                      delTOpts = {
                        method: 'delete',
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      };
                      _context188.prev = 2;
                      _context188.next = 5;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/task/' + taskId, delTOpts);

                    case 5:
                      _yield$this$shttp$sen39 = _context188.sent;
                      _status25 = _yield$this$shttp$sen39.status;
                      data = _yield$this$shttp$sen39.data;
                      error = _yield$this$shttp$sen39.error;

                      if (!(_status25 === 200)) {
                        _context188.next = 13;
                        break;
                      }

                      return _context188.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 13:
                      return _context188.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 14:
                      _context188.next = 19;
                      break;

                    case 16:
                      _context188.prev = 16;
                      _context188.t0 = _context188["catch"](2);
                      return _context188.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context188.t0
                      }));

                    case 19:
                    case "end":
                      return _context188.stop();
                  }
                }
              }, _callee188, this, [[2, 16]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "reorderTask",
          value: function reorderTask(myEmpId, taskObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee189() {
              var roData, roTOpts, _yield$this$shttp$sen40, _status26, data, error;

              return regeneratorRuntime.wrap(function _callee189$(_context189) {
                while (1) {
                  switch (_context189.prev = _context189.next) {
                    case 0:
                      this.logger.info('[DeputyApi|reorderTask] (myTasksToDoObj)...');
                      roData = {
                        'intUserResponsible': myEmpId,
                        'strQuestion': taskObj.Question,
                        'intSortOrder': taskObj.SortOrder,
                        'strDate': taskObj.Date,
                        'intUserEntry': taskObj.UserEntry,
                        'intTsCompleted': -1
                      };

                      if (taskObj.DueDate !== '' && taskObj.DueDate !== null && taskObj.DueDate !== undefined && taskObj.DueDate !== -1) {
                        roData['strDueDate'] = taskObj.DueDate;
                      } else {
                        roData['strDueDate'] = '';
                      }

                      ;

                      if (taskObj.Comment !== '' && taskObj.Comment !== null && taskObj.Comment !== undefined && taskObj.Comment !== -1) {
                        roData['strComment'] = taskObj.Comment;
                      } else {
                        roData['strComment'] = '';
                      }

                      ;

                      if (taskObj.DueTimestamp !== '' && taskObj.DueTimestamp !== null && taskObj.DueTimestamp !== undefined && taskObj.DueTimestamp !== -1) {
                        roData['intDueTimestamp'] = taskObj.DueTimestamp;
                      } else {
                        roData['intDueTimestamp'] = -1;
                      }

                      ;
                      roTOpts = {
                        method: 'put',
                        data: roData,
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      };
                      _context189.prev = 9;
                      _context189.next = 12;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/task/' + taskObj.Id, roTOpts);

                    case 12:
                      _yield$this$shttp$sen40 = _context189.sent;
                      _status26 = _yield$this$shttp$sen40.status;
                      data = _yield$this$shttp$sen40.data;
                      error = _yield$this$shttp$sen40.error;

                      if (!(_status26 === 200)) {
                        _context189.next = 20;
                        break;
                      }

                      return _context189.abrupt("return", Promise.resolve({
                        result: true,
                        data: taskObj
                      }));

                    case 20:
                      return _context189.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 21:
                      _context189.next = 27;
                      break;

                    case 23:
                      _context189.prev = 23;
                      _context189.t0 = _context189["catch"](9);
                      console.log(_context189.t0);
                      return _context189.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context189.t0
                      }));

                    case 27:
                    case "end":
                      return _context189.stop();
                  }
                }
              }, _callee189, this, [[9, 23]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "doTask",
          value: function doTask(taskId, assignedTo) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee190() {
              var myId, mOrS, dTOpts, _yield$this$shttp$sen41, _status27, data, error;

              return regeneratorRuntime.wrap(function _callee190$(_context190) {
                while (1) {
                  switch (_context190.prev = _context190.next) {
                    case 0:
                      this.logger.info('[DeputyApi|doTask] (' + taskId + ')...');
                      _context190.next = 3;
                      return this.storeServ.getObject(this.uUK + 'MeData');

                    case 3:
                      myId = _context190.sent.EmployeeId;
                      assignedTo === myId ? mOrS = 'my' : mOrS = 'supervise';
                      dTOpts = {
                        method: 'post',
                        data: {
                          'intUserPerformTaskId': myId
                        },
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      };
                      _context190.prev = 6;
                      _context190.next = 9;
                      return this.shttp.sendRequest(this.Client.apiUrl + mOrS + '/task/' + taskId + '/do', dTOpts);

                    case 9:
                      _yield$this$shttp$sen41 = _context190.sent;
                      _status27 = _yield$this$shttp$sen41.status;
                      data = _yield$this$shttp$sen41.data;
                      error = _yield$this$shttp$sen41.error;

                      if (!(_status27 === 200)) {
                        _context190.next = 17;
                        break;
                      }

                      return _context190.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 17:
                      return _context190.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 18:
                      _context190.next = 23;
                      break;

                    case 20:
                      _context190.prev = 20;
                      _context190.t0 = _context190["catch"](6);
                      return _context190.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context190.t0
                      }));

                    case 23:
                    case "end":
                      return _context190.stop();
                  }
                }
              }, _callee190, this, [[6, 20]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "undoTask",
          value: function undoTask(taskId, assignedTo) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee191() {
              var myId, mOrS, udTOpts, _yield$this$shttp$sen42, _status28, data, error;

              return regeneratorRuntime.wrap(function _callee191$(_context191) {
                while (1) {
                  switch (_context191.prev = _context191.next) {
                    case 0:
                      this.logger.info('[DeputyApi|undoTask] (' + taskId + ')...');
                      _context191.next = 3;
                      return this.storeServ.getObject(this.uUK + 'MeData');

                    case 3:
                      myId = _context191.sent.EmployeeId;
                      assignedTo === myId ? mOrS = 'my' : mOrS = 'supervise';
                      udTOpts = {
                        method: 'post',
                        data: {
                          'intUserPerformTaskId': myId
                        },
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      };
                      _context191.prev = 6;
                      _context191.next = 9;
                      return this.shttp.sendRequest(this.Client.apiUrl + mOrS + '/task/' + taskId + '/undo', udTOpts);

                    case 9:
                      _yield$this$shttp$sen42 = _context191.sent;
                      _status28 = _yield$this$shttp$sen42.status;
                      data = _yield$this$shttp$sen42.data;
                      error = _yield$this$shttp$sen42.error;

                      if (!(_status28 === 200)) {
                        _context191.next = 17;
                        break;
                      }

                      return _context191.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 17:
                      return _context191.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 18:
                      _context191.next = 24;
                      break;

                    case 20:
                      _context191.prev = 20;
                      _context191.t0 = _context191["catch"](6);
                      console.log(_context191.t0);
                      return _context191.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context191.t0
                      }));

                    case 24:
                    case "end":
                      return _context191.stop();
                  }
                }
              }, _callee191, this, [[6, 20]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////
          ///// NEWS/MEMOS
          ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "postMemo",
          value: function postMemo(showFrom, active, showTill, title, content, fileId, url, reqConfirm) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee192() {
              var pMObj, _yield$this$shttp$sen43, status, data, error;

              return regeneratorRuntime.wrap(function _callee192$(_context192) {
                while (1) {
                  switch (_context192.prev = _context192.next) {
                    case 0:
                      pMObj = {
                        ShowFrom: '',
                        Active: true,
                        ShowTill: '',
                        Title: '',
                        Content: content,
                        Type: 1,
                        File: -1,
                        Url: '',
                        ConfirmText: ''
                      };
                      showFrom !== null ? pMObj.ShowFrom = showFrom : pMObj.ShowFrom = new Date();
                      active !== null ? pMObj.Active = active : pMObj.Active = true;
                      showTill !== null ? pMObj.ShowTill = showTill : pMObj.ShowTill = '';
                      title !== null ? pMObj.Title = title : pMObj.Title = '';
                      fileId !== null ? pMObj.File = fileId : pMObj.File = -1;
                      url !== null ? pMObj.Url = url : pMObj.Url = '';
                      reqConfirm ? pMObj.ConfirmText = 'dpRequireConfirmation' : pMObj.ConfirmText = '';
                      _context192.next = 10;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/memo', {
                        method: 'put',
                        data: pMObj,
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 10:
                      _yield$this$shttp$sen43 = _context192.sent;
                      status = _yield$this$shttp$sen43.status;
                      data = _yield$this$shttp$sen43.data;
                      error = _yield$this$shttp$sen43.error;

                      if (!(status === 200)) {
                        _context192.next = 18;
                        break;
                      }

                      return _context192.abrupt("return", Promise.resolve(data));

                    case 18:
                      this.logger.info('[DeputyApi|postMemo] (ERROR): ' + error);
                      return _context192.abrupt("return", Promise.reject(error));

                    case 20:
                    case "end":
                      return _context192.stop();
                  }
                }
              }, _callee192, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "postComment",
          value: function postComment(memoId, feed, ignorePerms, comment) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee193() {
              var pCObj, _yield$this$shttp$sen44, status, data, error;

              return regeneratorRuntime.wrap(function _callee193$(_context193) {
                while (1) {
                  switch (_context193.prev = _context193.next) {
                    case 0:
                      pCObj = {
                        Orm: 'DeputecMemo',
                        RecId: memoId,
                        InFeed: feed,
                        IgnorePermission: ignorePerms,
                        Comment: comment
                      };
                      _context193.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'supervise/comment', {
                        method: 'put',
                        data: pCObj,
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen44 = _context193.sent;
                      status = _yield$this$shttp$sen44.status;
                      data = _yield$this$shttp$sen44.data;
                      error = _yield$this$shttp$sen44.error;

                      if (!(status === 200)) {
                        _context193.next = 11;
                        break;
                      }

                      return _context193.abrupt("return", Promise.resolve(data));

                    case 11:
                      this.logger.info('[DeputyApi|postComment] (ERROR): ' + error);
                      return _context193.abrupt("return", Promise.reject(error));

                    case 13:
                    case "end":
                      return _context193.stop();
                  }
                }
              }, _callee193, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getDBBUTS",
          value: function getDBBUTS() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee194() {
              var _yield$this$shttp$sen45, status, data, msTS, ts, tsD;

              return regeneratorRuntime.wrap(function _callee194$(_context194) {
                while (1) {
                  switch (_context194.prev = _context194.next) {
                    case 0:
                      this.logger.info('[DeputyApi|getDBBUTS] ()...');
                      _context194.next = 3;
                      return this.shttp.sendRequest('https://zer0ne.dev/sheriff/up/' + this.uUK + 'dbSQLite.txt', {
                        method: 'get',
                        timeout: 20,
                        responseType: 'text'
                      });

                    case 3:
                      _yield$this$shttp$sen45 = _context194.sent;
                      status = _yield$this$shttp$sen45.status;
                      data = _yield$this$shttp$sen45.data;
                      msTS = Number(data);
                      ts = Math.floor(msTS / 1000);
                      tsD = this.dT.Dut(ts);

                      if (!(status === 200)) {
                        _context194.next = 13;
                        break;
                      }

                      return _context194.abrupt("return", Promise.resolve(tsD));

                    case 13:
                      return _context194.abrupt("return", Promise.resolve('error'));

                    case 14:
                    case "end":
                      return _context194.stop();
                  }
                }
              }, _callee194, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////
          ///// PROFILE
          ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "upProfilePhoto",
          value: function upProfilePhoto(ulPhotoObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee195() {
              return regeneratorRuntime.wrap(function _callee195$(_context195) {
                while (1) {
                  switch (_context195.prev = _context195.next) {
                    case 0:
                      this.logger.info('[Deputy|upProfilePhoto] ()...');
                      return _context195.abrupt("return", Promise.resolve({
                        result: true
                      }));

                    case 2:
                    case "end":
                      return _context195.stop();
                  }
                }
              }, _callee195, this);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getCAProfileObs",
          value: function getCAProfileObs() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee196() {
              var _yield$this$shttp$sen46, _status29, data, error, gPObsRes, foundObIds, _i22, _Object$entries4, _Object$entries4$_i, key, oKey, oId, resEP, CARec;

              return regeneratorRuntime.wrap(function _callee196$(_context196) {
                while (1) {
                  switch (_context196.prev = _context196.next) {
                    case 0:
                      _context196.prev = 0;
                      _context196.next = 3;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'my/contactaddress/all', {
                        method: 'get',
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 3:
                      _yield$this$shttp$sen46 = _context196.sent;
                      _status29 = _yield$this$shttp$sen46.status;
                      data = _yield$this$shttp$sen46.data;
                      error = _yield$this$shttp$sen46.error;

                      if (!(_status29 === 200)) {
                        _context196.next = 44;
                        break;
                      }

                      gPObsRes = data;
                      foundObIds = {};

                      if (gPObsRes.hasOwnProperty('MainAddressObject')) {
                        foundObIds['address'] = {
                          id: gPObsRes.MainAddressObject.Id
                        };
                      } else {
                        foundObIds['address'] = {
                          id: 0
                        };
                      }

                      if (gPObsRes.hasOwnProperty('ContactObject')) {
                        foundObIds['contact'] = {
                          id: gPObsRes.ContactObject.Id
                        };
                      } else {
                        foundObIds['contact'] = {
                          id: 0
                        };
                      }

                      ;

                      if (gPObsRes.hasOwnProperty('EmergencyContactAddressObject')) {
                        foundObIds['emergency'] = {
                          id: gPObsRes.EmergencyContactAddressObject.Id
                        };
                      } else {
                        foundObIds['emergency'] = {
                          id: 0
                        };
                      }

                      ;
                      _i22 = 0, _Object$entries4 = Object.entries(foundObIds);

                    case 16:
                      if (!(_i22 < _Object$entries4.length)) {
                        _context196.next = 40;
                        break;
                      }

                      _Object$entries4$_i = _slicedToArray(_Object$entries4[_i22], 1), key = _Object$entries4$_i[0];
                      oKey = key.toString();
                      oId = Number(foundObIds[oKey]['id']);

                      if (!(oId > 0)) {
                        _context196.next = 36;
                        break;
                      }

                      resEP = void 0;

                      if (oKey === 'address' || oKey === 'emergency') {
                        resEP = 'Address';
                      } else {
                        resEP = 'Contact';
                      }

                      ;
                      _context196.prev = 24;
                      _context196.next = 27;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/' + resEP + '/' + oId.toString(), {
                        method: 'get',
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 27:
                      CARec = _context196.sent;

                      if (CARec.status === 200) {
                        foundObIds[oKey]['data'] = CARec.data;
                      } else {
                        foundObIds[oKey]['data'] = null;
                      }

                      _context196.next = 34;
                      break;

                    case 31:
                      _context196.prev = 31;
                      _context196.t0 = _context196["catch"](24);
                      foundObIds[oKey]['data'] = null;

                    case 34:
                      _context196.next = 37;
                      break;

                    case 36:
                      foundObIds[oKey]['data'] = null;

                    case 37:
                      _i22++;
                      _context196.next = 16;
                      break;

                    case 40:
                      ;
                      return _context196.abrupt("return", Promise.resolve({
                        result: true,
                        data: foundObIds
                      }));

                    case 44:
                      return _context196.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 45:
                      _context196.next = 50;
                      break;

                    case 47:
                      _context196.prev = 47;
                      _context196.t1 = _context196["catch"](0);
                      return _context196.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context196.t1
                      }));

                    case 50:
                    case "end":
                      return _context196.stop();
                  }
                }
              }, _callee196, this, [[0, 47], [24, 31]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "updateCAProfileObs",
          value: function updateCAProfileObs(newObs) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee197() {
              var getChckPtyName, updatedObs, _i23, _Object$entries5, _Object$entries5$_i, key, value, newKey, newId, newData, resEP, upCARec, newCARecDataStr, chckMyCA, chckPtyName, newMyCAData, newMyCADataStr;

              return regeneratorRuntime.wrap(function _callee197$(_context197) {
                while (1) {
                  switch (_context197.prev = _context197.next) {
                    case 0:
                      this.logger.info('[Deputy|updateCAProfileObs] ()...');

                      getChckPtyName = function getChckPtyName(obKeyName) {
                        if (obKeyName === 'address') {
                          return 'MainAddressObject';
                        } else if (obKeyName === 'contact') {
                          return 'ContactObject';
                        } else {
                          return 'EmergencyContactAddressObject';
                        }
                      };

                      updatedObs = {};
                      _i23 = 0, _Object$entries5 = Object.entries(newObs);

                    case 4:
                      if (!(_i23 < _Object$entries5.length)) {
                        _context197.next = 58;
                        break;
                      }

                      _Object$entries5$_i = _slicedToArray(_Object$entries5[_i23], 2), key = _Object$entries5$_i[0], value = _Object$entries5$_i[1];
                      newKey = key.toString();
                      newId = value['Id'].toString();
                      newData = value;
                      resEP = void 0;

                      if (newKey === 'address' || newKey === 'emergency') {
                        resEP = 'Address';
                      } else {
                        resEP = 'Contact';
                      }

                      ;
                      _context197.prev = 12;
                      _context197.next = 15;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/' + resEP + '/' + newId, {
                        method: 'put',
                        data: newData,
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 15:
                      upCARec = _context197.sent;

                      if (!(upCARec.status === 200)) {
                        _context197.next = 45;
                        break;
                      }

                      newCARecDataStr = JSON.stringify(upCARec.data);
                      _context197.prev = 18;
                      _context197.next = 21;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'my/contactaddress/all', {
                        method: 'get',
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 21:
                      chckMyCA = _context197.sent;

                      if (!(chckMyCA.status === 200)) {
                        _context197.next = 35;
                        break;
                      }

                      chckPtyName = getChckPtyName(newKey);
                      newMyCAData = chckMyCA.data[chckPtyName];
                      newMyCADataStr = JSON.stringify(newMyCAData);

                      if (!(newMyCADataStr === newCARecDataStr)) {
                        _context197.next = 31;
                        break;
                      }

                      updatedObs[newKey] = {
                        result: true,
                        data: upCARec.data
                      };
                      return _context197.abrupt("return", Promise.resolve(updatedObs));

                    case 31:
                      updatedObs[newKey] = {
                        result: false,
                        data: 'my/contactaddress Object !== resource/Contact Object.'
                      };
                      return _context197.abrupt("return", Promise.resolve(updatedObs));

                    case 33:
                      _context197.next = 37;
                      break;

                    case 35:
                      updatedObs[newKey] = {
                        result: false,
                        data: chckMyCA.error
                      };
                      return _context197.abrupt("return", Promise.resolve(updatedObs));

                    case 37:
                      _context197.next = 43;
                      break;

                    case 39:
                      _context197.prev = 39;
                      _context197.t0 = _context197["catch"](18);
                      updatedObs[newKey] = {
                        result: false,
                        data: _context197.t0
                      };
                      return _context197.abrupt("return", Promise.resolve(updatedObs));

                    case 43:
                      _context197.next = 47;
                      break;

                    case 45:
                      updatedObs[newKey] = {
                        result: false,
                        data: upCARec.error
                      };
                      return _context197.abrupt("return", Promise.resolve(updatedObs));

                    case 47:
                      _context197.next = 55;
                      break;

                    case 49:
                      _context197.prev = 49;
                      _context197.t1 = _context197["catch"](12);
                      console.log(_context197.t1);
                      console.log(JSON.stringify(_context197.t1));
                      updatedObs[newKey] = {
                        result: false,
                        data: _context197.t1
                      };
                      return _context197.abrupt("return", Promise.resolve(updatedObs));

                    case 55:
                      _i23++;
                      _context197.next = 4;
                      break;

                    case 58:
                      ;

                    case 59:
                    case "end":
                      return _context197.stop();
                  }
                }
              }, _callee197, this, [[12, 49], [18, 39]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////
          ///// PAYMENT
          ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getPayPeriod",
          value: function getPayPeriod() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee198() {
              var _yield$this$shttp$sen47, data, error;

              return regeneratorRuntime.wrap(function _callee198$(_context198) {
                while (1) {
                  switch (_context198.prev = _context198.next) {
                    case 0:
                      this.logger.info('[Deputy|getPayPeriod] ()...');
                      _context198.prev = 1;
                      _context198.next = 4;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/PayPeriod', {
                        method: 'get',
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 4:
                      _yield$this$shttp$sen47 = _context198.sent;
                      data = _yield$this$shttp$sen47.data;
                      error = _yield$this$shttp$sen47.error;

                      if (error) {
                        _context198.next = 11;
                        break;
                      }

                      return _context198.abrupt("return", Promise.resolve({
                        result: true,
                        data: data[0]
                      }));

                    case 11:
                      return _context198.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 12:
                      _context198.next = 17;
                      break;

                    case 14:
                      _context198.prev = 14;
                      _context198.t0 = _context198["catch"](1);
                      return _context198.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context198.t0
                      }));

                    case 17:
                    case "end":
                      return _context198.stop();
                  }
                }
              }, _callee198, this, [[1, 14]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getEmpPayCycle",
          value: function getEmpPayCycle() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee199() {
              var getObj, _yield$this$shttp$sen48, data, error;

              return regeneratorRuntime.wrap(function _callee199$(_context199) {
                while (1) {
                  switch (_context199.prev = _context199.next) {
                    case 0:
                      this.logger.info('[Deputy|getPayPeriod] ()...');
                      getObj = {
                        "search": {
                          "s1": {
                            "field": "EmployeeId",
                            "type": "eq",
                            "data": "421"
                          }
                        },
                        "sort": {
                          "Id": "desc"
                        }
                      };
                      _context199.prev = 2;
                      _context199.next = 5;
                      return this.shttp.sendRequest(this.Client.apiUrl + 'resource/EmployeePaycycle/QUERY', {
                        method: 'post',
                        data: getObj,
                        serializer: 'json',
                        timeout: 20,
                        responseType: 'json'
                      });

                    case 5:
                      _yield$this$shttp$sen48 = _context199.sent;
                      data = _yield$this$shttp$sen48.data;
                      error = _yield$this$shttp$sen48.error;

                      if (error) {
                        _context199.next = 12;
                        break;
                      }

                      return _context199.abrupt("return", Promise.resolve({
                        result: true,
                        data: data
                      }));

                    case 12:
                      return _context199.abrupt("return", Promise.resolve({
                        result: false,
                        data: error
                      }));

                    case 13:
                      _context199.next = 18;
                      break;

                    case 15:
                      _context199.prev = 15;
                      _context199.t0 = _context199["catch"](2);
                      return _context199.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context199.t0
                      }));

                    case 18:
                    case "end":
                      return _context199.stop();
                  }
                }
              }, _callee199, this, [[2, 15]]);
            }));
          }
        }]);

        return DeputyService;
      }();

      _DeputyService.ctorParameters = function () {
        return [{
          type: _filesystem_service__WEBPACK_IMPORTED_MODULE_2__.FileSystemService
        }, {
          type: _storage_service__WEBPACK_IMPORTED_MODULE_3__.StorageService
        }, {
          type: _events_service__WEBPACK_IMPORTED_MODULE_4__.EventsService
        }, {
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_21__.NGXLogger
        }, {
          type: _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__.HTTP
        }, {
          type: _datetime_service__WEBPACK_IMPORTED_MODULE_0__.DateTimeService
        }, {
          type: _ionic_native_file_transfer_ngx__WEBPACK_IMPORTED_MODULE_6__.FileTransfer
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_22__.Platform
        }];
      };

      _DeputyService = (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_23__.Injectable)({
        providedIn: 'root'
      }) ////////////////////////////////////////////////////////////////////////////////////////////////////
      ], _DeputyService);
      /***/
    },

    /***/
    52153:
    /*!********************************************!*\
      !*** ./src/app/services/detail.service.ts ***!
      \********************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "DetailService": function DetailService() {
          return (
            /* binding */
            _DetailService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _deputy_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./deputy.service */
      22092);
      /* harmony import */


      var _storage_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./storage.service */
      71188);
      /* harmony import */


      var _datetime_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./datetime.service */
      12826);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _events_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./events.service */
      80106);
      /* harmony import */


      var _capacitor_network__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @capacitor/network */
      63848);

      var myls = localStorage; ///////////////////////////////////////////////////////////////////////////

      var _DetailService = /*#__PURE__*/function () {
        ///////////////////////////////////////////////////////////////////////////
        function DetailService(logger, storeServ, deputy, evServ, dT) {
          _classCallCheck(this, DetailService);

          this.logger = logger;
          this.storeServ = storeServ;
          this.deputy = deputy;
          this.evServ = evServ;
          this.dT = dT; ///////////////////////////////////////////////////////////////////////////
          //// DATABASES //////////////////////

          this.pS = '🔌';
          this.mySQLReady = false; // User DB ------------------------

          this.isUserConnOpen = false;
          this.uDBIsOpen = false;
          this.uDBSetupDone = null;
          this.uDBTables = [];
          this.uDBWasImported = null; // Auth DB ------------------------

          this.isAuthConnOpen = false;
          this.aDBIsOpen = false;
          this.aDBSetupDone = null;
          this.aDBTables = []; //// NAV/PAGES //////////////////////

          this.FRSetupDone = null;
          this.authLogout = false;
          this.shouldSave = {
            value: false,
            data: null
          };
          this.doneSessionProfile = false;
          this.doneInitProfile = false; //// APP GVARS ////////////////////

          this.hasNetConn = null; // ME Vars ------------------------

          this.meObj = null;
          this.meEmpId = null;
          this.workName = null;
          this.workCode = null;
          this.meName = null;
          this.meFName = null;
          this.meLName = null;
          this.meEmail = null;
          this.mePhone = null;
          this.inProgressTS = null;
          this.memosToConf = [];
          this.meDefaultOpUnit = null;
          this.mePermissions = []; // MY Vars ------------------------

          this.myObj = null;
          this.wpId = null;
          this.workAreas = null;
          this.workColor = null;
          this.incBright = null;
          this.pplArr = []; // AVAS ---------------------------

          this.meAva = null;
          this.workAva = null; //// APP SETTINGS ///////////////////

          this.appSettings = null;
        } ///////////////////////////////////////////////////////////////////////////
        ///// DATABASES
        ///////////////////////////////////////////////////////////////////////////


        _createClass(DetailService, [{
          key: "setMySQLReady",
          value: function setMySQLReady(tf) {
            this.mySQLReady = tf;
            this.logger.info(this.pS + ' [Detail|mySQLReady] (SET) to: ' + tf);
          }
        }, {
          key: "getMySQLReady",
          value: function getMySQLReady() {
            return this.mySQLReady;
          }
        }, {
          key: "setUDBWasImported",
          value: //-----------------------------------------------------------------------
          // User Database
          //-----------------------------------------------------------------------
          function setUDBWasImported(tf) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee200() {
              return regeneratorRuntime.wrap(function _callee200$(_context200) {
                while (1) {
                  switch (_context200.prev = _context200.next) {
                    case 0:
                      this.uDBWasImported = tf;
                      this.storeServ.setItem(this.deputy.uUK + 'UDBWasImported', String(tf));
                      this.logger.info(this.pS + ' [Detail|uDBWasImported] (SET) to: ' + tf);
                      return _context200.abrupt("return", Promise.resolve(true));

                    case 4:
                    case "end":
                      return _context200.stop();
                  }
                }
              }, _callee200, this);
            }));
          }
        }, {
          key: "getUDBWasImported",
          value: function getUDBWasImported() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee201() {
              var storeRes, storeVal;
              return regeneratorRuntime.wrap(function _callee201$(_context201) {
                while (1) {
                  switch (_context201.prev = _context201.next) {
                    case 0:
                      if (!(this.uDBWasImported !== null)) {
                        _context201.next = 4;
                        break;
                      }

                      return _context201.abrupt("return", Promise.resolve(this.uDBWasImported));

                    case 4:
                      _context201.next = 6;
                      return this.storeServ.getItem(this.deputy.uUK + 'UDBWasImported');

                    case 6:
                      storeRes = _context201.sent;

                      if (!storeRes) {
                        _context201.next = 13;
                        break;
                      }

                      storeVal = Boolean(JSON.parse(storeRes));
                      this.uDBWasImported = storeVal;
                      return _context201.abrupt("return", Promise.resolve(storeVal));

                    case 13:
                      return _context201.abrupt("return", Promise.resolve(false));

                    case 14:
                    case "end":
                      return _context201.stop();
                  }
                }
              }, _callee201, this);
            }));
          }
        }, {
          key: "setUDBSetupDone",
          value: //-----------------------------------------------------------------------
          function setUDBSetupDone(tf) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee202() {
              return regeneratorRuntime.wrap(function _callee202$(_context202) {
                while (1) {
                  switch (_context202.prev = _context202.next) {
                    case 0:
                      this.uDBSetupDone = tf;
                      this.storeServ.setItem(this.deputy.uUK + 'UDBSetupDone', String(tf));
                      this.logger.info(this.pS + ' [Detail|uDBSetupDone] (SET) to: ' + tf);
                      return _context202.abrupt("return", Promise.resolve(true));

                    case 4:
                    case "end":
                      return _context202.stop();
                  }
                }
              }, _callee202, this);
            }));
          }
        }, {
          key: "getUDBSetupDone",
          value: function getUDBSetupDone() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee203() {
              var storeStr, storeVal;
              return regeneratorRuntime.wrap(function _callee203$(_context203) {
                while (1) {
                  switch (_context203.prev = _context203.next) {
                    case 0:
                      if (!(this.uDBSetupDone !== null)) {
                        _context203.next = 4;
                        break;
                      }

                      return _context203.abrupt("return", Promise.resolve(this.uDBSetupDone));

                    case 4:
                      _context203.next = 6;
                      return this.storeServ.getItem(this.deputy.uUK + 'UDBSetupDone');

                    case 6:
                      storeStr = _context203.sent;

                      if (!(storeStr !== null && storeStr !== undefined && typeof storeStr === 'string')) {
                        _context203.next = 13;
                        break;
                      }

                      storeVal = Boolean(JSON.parse(storeStr));
                      this.uDBSetupDone = storeVal;
                      return _context203.abrupt("return", Promise.resolve(this.uDBSetupDone));

                    case 13:
                      return _context203.abrupt("return", Promise.resolve(false));

                    case 14:
                    case "end":
                      return _context203.stop();
                  }
                }
              }, _callee203, this);
            }));
          } //-----------------------------------------------------------------------

        }, {
          key: "setUDBTables",
          value: function setUDBTables(udbTables) {
            this.uDBTables = udbTables;
            this.logger.info(this.pS + ' [DBDetail|userDBTables] (SET)');
          }
        }, {
          key: "getUDBTables",
          value: function getUDBTables() {
            return this.uDBTables;
          } //-----------------------------------------------------------------------

        }, {
          key: "setIsUserConnOpen",
          value: function setIsUserConnOpen(tf) {
            this.isUserConnOpen = tf;
            this.logger.info(this.pS + ' [Detail|IsUserConnOpen] (SET) to: ' + tf);

            if (tf === false) {
              myls.setItem('lrConnClosed', 'true');
              this.logger.info('[+ADD] lrConnClosed (lS)');
              return Promise.resolve(true);
            } else {
              myls.removeItem('lrConnClosed');
              this.logger.info('[-] lrConnClosed (lS)');
            }
          }
        }, {
          key: "getIsUserConnOpen",
          value: function getIsUserConnOpen() {
            return this.isUserConnOpen;
          }
        }, {
          key: "setUDBIsOpen",
          value: //-----------------------------------------------------------------------
          function setUDBIsOpen(tf) {
            this.uDBIsOpen = tf;
            this.logger.info(this.pS + ' [Detail|uDBIsOpen] (SET) to: ' + tf);

            if (tf === false) {
              myls.setItem('lrUDBClosed', 'true');
              this.logger.info('[+ADD] lrUDBClosed (lS)');
              return Promise.resolve(true);
            } else {
              myls.removeItem('lrUDBClosed');
              this.logger.info('[-REM] lrUDBClosed (lS)');
              return Promise.resolve(true);
            }
          }
        }, {
          key: "getUDBIsOpen",
          value: function getUDBIsOpen() {
            return this.uDBIsOpen;
          }
        }, {
          key: "setADBSetupDone",
          value: //-----------------------------------------------------------------------
          // Auth Database
          //-----------------------------------------------------------------------
          function setADBSetupDone(tf) {
            this.aDBSetupDone = tf;
            this.storeServ.setItem(this.deputy.uUK + 'ADBSetupDone', String(tf));
            this.logger.info(this.pS + ' [Detail|aDBSetupDone] (SET) to: ' + tf);
            return Promise.resolve(true);
          }
        }, {
          key: "getADBSetupDone",
          value: function getADBSetupDone() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee204() {
              var storeStr, storeVal;
              return regeneratorRuntime.wrap(function _callee204$(_context204) {
                while (1) {
                  switch (_context204.prev = _context204.next) {
                    case 0:
                      if (!(this.aDBSetupDone !== null && typeof this.aDBSetupDone === 'boolean')) {
                        _context204.next = 4;
                        break;
                      }

                      return _context204.abrupt("return", Promise.resolve(this.aDBSetupDone));

                    case 4:
                      _context204.next = 6;
                      return this.storeServ.getItem(this.deputy.uUK + 'ADBSetupDone');

                    case 6:
                      storeStr = _context204.sent;

                      if (!(storeStr !== null && storeStr !== undefined && typeof storeStr === 'string')) {
                        _context204.next = 13;
                        break;
                      }

                      storeVal = Boolean(JSON.parse(storeStr));
                      this.aDBSetupDone = storeVal;
                      return _context204.abrupt("return", Promise.resolve(this.aDBSetupDone));

                    case 13:
                      return _context204.abrupt("return", Promise.resolve(false));

                    case 14:
                    case "end":
                      return _context204.stop();
                  }
                }
              }, _callee204, this);
            }));
          } //-----------------------------------------------------------------------

        }, {
          key: "setADBTables",
          value: function setADBTables(adbTables) {
            this.aDBTables = adbTables;
            this.logger.info(this.pS + ' [DBDetail|authDBTables] (SET)');
          }
        }, {
          key: "getADBTables",
          value: function getADBTables() {
            return this.aDBTables;
          } //-----------------------------------------------------------------------

        }, {
          key: "setIsAuthConnOpen",
          value: function setIsAuthConnOpen(tf) {
            this.isAuthConnOpen = tf;
            this.logger.info(this.pS + ' [Detail|IsAuthConnOpen] (SET) to: ' + tf);

            if (tf === false) {
              myls.setItem('lrAuthConnClosed', 'true');
              this.logger.info('[+ADD] lrAuthConnClosed (lS)');
              return Promise.resolve(true);
            } else {
              myls.removeItem('lrAuthConnClosed');
              this.logger.info('[-] lrConnAuthClosed (lS)');
              return Promise.resolve(true);
            }
          }
        }, {
          key: "getIsAuthConnOpen",
          value: function getIsAuthConnOpen() {
            return this.isAuthConnOpen;
          }
        }, {
          key: "setADBIsOpen",
          value: //-----------------------------------------------------------------------
          function setADBIsOpen(tf) {
            this.aDBIsOpen = tf;
            this.logger.info(this.pS + ' [Detail|aDBIsOpen] (SET) to: ' + tf);

            if (tf === false) {
              myls.setItem('lrADBClosed', 'true');
              this.logger.info('[+ADD] lrADBClosed (lS)');
              return Promise.resolve(true);
            } else {
              myls.removeItem('lrADBClosed');
              this.logger.info('[-REM] lrADBClosed (lS)');
              return Promise.resolve(true);
            }
          }
        }, {
          key: "getADBIsOpen",
          value: function getADBIsOpen() {
            return this.aDBIsOpen;
          }
        }, {
          key: "setMe",
          value: //-----------------------------------------------------------------------
          // FIRE CUSTOM TOKEN
          //-----------------------------------------------------------------------
          ///////////////////////////////////////////////////////////////////////////
          ///// ME/MY/PPL/WORK
          ///////////////////////////////////////////////////////////////////////////
          function setMe(meO) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee205() {
              var _this91 = this;

              var setMeVars, gotMeO;
              return regeneratorRuntime.wrap(function _callee205$(_context205) {
                while (1) {
                  switch (_context205.prev = _context205.next) {
                    case 0:
                      setMeVars = function setMeVars(mO) {
                        _this91.meObj = mO;
                        _this91.meEmpId = _this91.meObj.EmployeeId;
                        _this91.workName = _this91.meObj.CompanyObject.CompanyName;
                        _this91.workCode = _this91.meObj.CompanyObject.Code;
                        _this91.meName = _this91.meObj.Name;
                        _this91.meFName = _this91.meObj.FirstName;
                        _this91.meLName = _this91.meObj.LastName;
                        _this91.meEmail = _this91.meObj.PrimaryEmail;
                        _this91.deputy.userEmail = _this91.meEmail;
                        _this91.mePhone = _this91.meObj.PrimaryPhone;
                        _this91.meObj.InProgressTS === null || !_this91.meObj.InProgressTS || _this91.meObj.InProgressTS < 1 ? _this91.inProgressTS = false : _this91.inProgressTS = true;
                        _this91.memosToConf = _this91.meObj.MemosToConfirm;
                        _this91.meObj.OPS.length > 0 ? _this91.meDefaultOpUnit = _this91.meObj.OPS[0] : _this91.meDefaultOpUnit = null;
                        _this91.mePermissions = _this91.meObj.Permissions;

                        _this91.storeServ.setObject(_this91.deputy.uUK + 'MeData', _this91.meObj);

                        return Promise.resolve(true);
                      };

                      if (!(meO !== null)) {
                        _context205.next = 7;
                        break;
                      }

                      _context205.next = 4;
                      return setMeVars(meO);

                    case 4:
                      return _context205.abrupt("return", Promise.resolve(true));

                    case 7:
                      _context205.next = 9;
                      return this.getMe();

                    case 9:
                      gotMeO = _context205.sent;

                      if (!(gotMeO !== null)) {
                        _context205.next = 16;
                        break;
                      }

                      _context205.next = 13;
                      return setMeVars(gotMeO);

                    case 13:
                      return _context205.abrupt("return", Promise.resolve(true));

                    case 16:
                      return _context205.abrupt("return", Promise.resolve(false));

                    case 17:
                      ;

                    case 18:
                    case "end":
                      return _context205.stop();
                  }
                }
              }, _callee205, this);
            }));
          }
        }, {
          key: "getMe",
          value: function getMe() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee206() {
              var apiMeRes, storeMeObj;
              return regeneratorRuntime.wrap(function _callee206$(_context206) {
                while (1) {
                  switch (_context206.prev = _context206.next) {
                    case 0:
                      if (!(this.meObj !== null)) {
                        _context206.next = 4;
                        break;
                      }

                      return _context206.abrupt("return", Promise.resolve(this.meObj));

                    case 4:
                      _context206.next = 6;
                      return this.deputy.getDetailMe();

                    case 6:
                      apiMeRes = _context206.sent;

                      if (!apiMeRes.result) {
                        _context206.next = 13;
                        break;
                      }

                      _context206.next = 10;
                      return this.setMe(apiMeRes.data);

                    case 10:
                      return _context206.abrupt("return", Promise.resolve(apiMeRes.data));

                    case 13:
                      _context206.next = 15;
                      return this.storeServ.getObject(this.deputy.uUK + 'MeData');

                    case 15:
                      storeMeObj = _context206.sent;

                      if (!(storeMeObj !== null)) {
                        _context206.next = 22;
                        break;
                      }

                      _context206.next = 19;
                      return this.setMe(storeMeObj);

                    case 19:
                      return _context206.abrupt("return", Promise.resolve(storeMeObj));

                    case 22:
                      return _context206.abrupt("return", Promise.resolve(false));

                    case 23:
                    case "end":
                      return _context206.stop();
                  }
                }
              }, _callee206, this);
            }));
          }
        }, {
          key: "setMy",
          value: //-----------------------------------------------------------------------
          function setMy(myO) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee207() {
              var _this92 = this;

              var setMyVars, gotMyO;
              return regeneratorRuntime.wrap(function _callee207$(_context207) {
                while (1) {
                  switch (_context207.prev = _context207.next) {
                    case 0:
                      setMyVars = function setMyVars(mO) {
                        var checkWC = function checkWC(color) {
                          return _this92.evServ.isConOK('#121212', color);
                        };

                        _this92.myObj = mO;
                        _this92.workAreas = _this92.myObj.Department;

                        if (_this92.myObj.ColorThemeCode.length > 0 && _this92.myObj.ColorThemeCode.includes('#')) {
                          _this92.workColor = _this92.myObj.ColorThemeCode;
                          checkWC(_this92.workColor) ? _this92.incBright = false : _this92.incBright = true;
                        } else {
                          _this92.workColor = '#848484';
                        }

                        ;

                        _this92.storeServ.setObject(_this92.deputy.uUK + 'MySetupData', _this92.myObj);

                        return Promise.resolve(true);
                      };

                      if (!(myO !== null)) {
                        _context207.next = 7;
                        break;
                      }

                      _context207.next = 4;
                      return setMyVars(myO);

                    case 4:
                      return _context207.abrupt("return", Promise.resolve(true));

                    case 7:
                      _context207.next = 9;
                      return this.getMy();

                    case 9:
                      gotMyO = _context207.sent;

                      if (!(gotMyO !== null)) {
                        _context207.next = 16;
                        break;
                      }

                      _context207.next = 13;
                      return setMyVars(gotMyO);

                    case 13:
                      return _context207.abrupt("return", Promise.resolve(true));

                    case 16:
                      return _context207.abrupt("return", Promise.resolve(false));

                    case 17:
                      ;

                    case 18:
                    case "end":
                      return _context207.stop();
                  }
                }
              }, _callee207, this);
            }));
          }
        }, {
          key: "getMy",
          value: function getMy() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee208() {
              var apiMyRes, storeMyObj;
              return regeneratorRuntime.wrap(function _callee208$(_context208) {
                while (1) {
                  switch (_context208.prev = _context208.next) {
                    case 0:
                      if (!(this.myObj !== null)) {
                        _context208.next = 4;
                        break;
                      }

                      return _context208.abrupt("return", Promise.resolve(this.myObj));

                    case 4:
                      _context208.next = 6;
                      return this.deputy.getDetailMy();

                    case 6:
                      apiMyRes = _context208.sent;

                      if (!apiMyRes.result) {
                        _context208.next = 13;
                        break;
                      }

                      _context208.next = 10;
                      return this.setMy(apiMyRes.data);

                    case 10:
                      return _context208.abrupt("return", Promise.resolve(apiMyRes.data));

                    case 13:
                      _context208.next = 15;
                      return this.storeServ.getObject(this.deputy.uUK + 'MySetupData');

                    case 15:
                      storeMyObj = _context208.sent;

                      if (!storeMyObj) {
                        _context208.next = 22;
                        break;
                      }

                      _context208.next = 19;
                      return this.setMy(storeMyObj);

                    case 19:
                      return _context208.abrupt("return", Promise.resolve(storeMyObj));

                    case 22:
                      return _context208.abrupt("return", Promise.resolve(null));

                    case 23:
                    case "end":
                      return _context208.stop();
                  }
                }
              }, _callee208, this);
            }));
          }
        }, {
          key: "setPpl",
          value: //-----------------------------------------------------------------------
          function setPpl(pplArr) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee209() {
              var _this93 = this;

              var setPplVars, gotPplO;
              return regeneratorRuntime.wrap(function _callee209$(_context209) {
                while (1) {
                  switch (_context209.prev = _context209.next) {
                    case 0:
                      setPplVars = function setPplVars(pA) {
                        _this93.pplArr = pA;

                        _this93.storeServ.setObject(_this93.deputy.uUK + 'MyColleagues', _this93.pplArr);

                        return Promise.resolve(true);
                      };

                      if (!(pplArr !== null)) {
                        _context209.next = 7;
                        break;
                      }

                      _context209.next = 4;
                      return setPplVars(pplArr);

                    case 4:
                      return _context209.abrupt("return", Promise.resolve(true));

                    case 7:
                      _context209.next = 9;
                      return this.getPpl();

                    case 9:
                      gotPplO = _context209.sent;

                      if (!(gotPplO !== null)) {
                        _context209.next = 16;
                        break;
                      }

                      _context209.next = 13;
                      return setPplVars(gotPplO);

                    case 13:
                      return _context209.abrupt("return", Promise.resolve(true));

                    case 16:
                      return _context209.abrupt("return", Promise.resolve(false));

                    case 17:
                    case "end":
                      return _context209.stop();
                  }
                }
              }, _callee209, this);
            }));
          }
        }, {
          key: "getPpl",
          value: function getPpl() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee210() {
              var apiPplRes, storePpl;
              return regeneratorRuntime.wrap(function _callee210$(_context210) {
                while (1) {
                  switch (_context210.prev = _context210.next) {
                    case 0:
                      if (!(this.pplArr.length > 0)) {
                        _context210.next = 4;
                        break;
                      }

                      return _context210.abrupt("return", Promise.resolve(this.pplArr));

                    case 4:
                      _context210.next = 6;
                      return this.deputy.getDetailPpl();

                    case 6:
                      apiPplRes = _context210.sent;

                      if (!apiPplRes.result) {
                        _context210.next = 13;
                        break;
                      }

                      _context210.next = 10;
                      return this.setPpl(apiPplRes.data);

                    case 10:
                      return _context210.abrupt("return", Promise.resolve(apiPplRes.data));

                    case 13:
                      _context210.next = 15;
                      return this.storeServ.getObject(this.deputy.uUK + 'MyColleagues');

                    case 15:
                      storePpl = _context210.sent;

                      if (!(storePpl !== null)) {
                        _context210.next = 22;
                        break;
                      }

                      _context210.next = 19;
                      return this.setPpl(storePpl);

                    case 19:
                      return _context210.abrupt("return", Promise.resolve(storePpl));

                    case 22:
                      return _context210.abrupt("return", Promise.resolve(null));

                    case 23:
                    case "end":
                      return _context210.stop();
                  }
                }
              }, _callee210, this);
            }));
          } //------------------------------------------------------------------------

        }, {
          key: "setAvas",
          value: function setAvas(avasO) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee211() {
              var _this94 = this;

              var setAvasVars, gotAvasO;
              return regeneratorRuntime.wrap(function _callee211$(_context211) {
                while (1) {
                  switch (_context211.prev = _context211.next) {
                    case 0:
                      setAvasVars = function setAvasVars(aO) {
                        _this94.meAva = aO.me;
                        _this94.workAva = aO.work;

                        _this94.storeServ.setItem(_this94.deputy.uUK + 'meAvatar', _this94.meAva);

                        _this94.storeServ.setItem(_this94.deputy.uUK + 'workAvatar', _this94.workAva);

                        return Promise.resolve(true);
                      };

                      if (!(avasO !== null)) {
                        _context211.next = 7;
                        break;
                      }

                      _context211.next = 4;
                      return setAvasVars(avasO);

                    case 4:
                      this.evServ.publish('avasDone', true);
                      _context211.next = 17;
                      break;

                    case 7:
                      _context211.next = 9;
                      return this.getAvas();

                    case 9:
                      gotAvasO = _context211.sent;

                      if (!(gotAvasO !== null)) {
                        _context211.next = 16;
                        break;
                      }

                      _context211.next = 13;
                      return setAvasVars(gotAvasO);

                    case 13:
                      this.evServ.publish('avasDone', true);
                      _context211.next = 17;
                      break;

                    case 16:
                      this.evServ.publish('avasDone', false);

                    case 17:
                    case "end":
                      return _context211.stop();
                  }
                }
              }, _callee211, this);
            }));
          }
        }, {
          key: "getAvas",
          value: function getAvas() {
            var _this95 = this;

            if (this.meAva !== null && this.workAva !== null) {
              return Promise.resolve({
                me: this.meAva,
                work: this.workAva
              });
            } else {
              var dsAvaSub = this.evServ.subscribe('dlConvAvasFinished', function (avaRes) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(_this95, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee212() {
                  var storeAvas, storeMeAva, storeWorkAva;
                  return regeneratorRuntime.wrap(function _callee212$(_context212) {
                    while (1) {
                      switch (_context212.prev = _context212.next) {
                        case 0:
                          if (!avaRes.result) {
                            _context212.next = 7;
                            break;
                          }

                          _context212.next = 3;
                          return this.setAvas(avaRes.data);

                        case 3:
                          dsAvaSub.unsubscribe();
                          return _context212.abrupt("return", Promise.resolve(avaRes.data));

                        case 7:
                          storeAvas = {
                            me: './../../assets/img/sheriff-tsheet-detail-unknown-sv-ico.png',
                            work: './../../assets/img/icon.png'
                          };
                          _context212.next = 10;
                          return this.storeServ.getItem(this.deputy.uUK + 'meAvatar');

                        case 10:
                          storeMeAva = _context212.sent;

                          if (storeMeAva) {
                            storeAvas.me = storeMeAva;
                          }

                          ;
                          _context212.next = 15;
                          return this.storeServ.getItem(this.deputy.uUK + 'workAvatar');

                        case 15:
                          storeWorkAva = _context212.sent;

                          if (storeWorkAva) {
                            storeAvas.work = storeWorkAva;
                          }

                          ;
                          _context212.next = 20;
                          return this.setAvas(storeAvas);

                        case 20:
                          dsAvaSub.unsubscribe();
                          return _context212.abrupt("return", Promise.resolve(storeAvas));

                        case 22:
                        case "end":
                          return _context212.stop();
                      }
                    }
                  }, _callee212, this);
                }));
              });
              this.deputy.dlConvertMeWorkAvas();
            }
          } //------------------------------------------------------------------------

        }, {
          key: "setProfileLastSync",
          value: function setProfileLastSync() {
            var nowUTS = this.dT.gUT();
            var utsStr = nowUTS.toString();
            this.storeServ.setItem(this.deputy.uUK + 'ProfileSync', utsStr);
          }
        }, {
          key: "getProfileLastSync",
          value: function getProfileLastSync() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee213() {
              var plsRes;
              return regeneratorRuntime.wrap(function _callee213$(_context213) {
                while (1) {
                  switch (_context213.prev = _context213.next) {
                    case 0:
                      _context213.next = 2;
                      return this.storeServ.getItem(this.deputy.uUK + 'ProfileSync');

                    case 2:
                      plsRes = _context213.sent;

                      if (!(plsRes !== null)) {
                        _context213.next = 7;
                        break;
                      }

                      return _context213.abrupt("return", Promise.resolve(Number(plsRes)));

                    case 7:
                      return _context213.abrupt("return", Promise.resolve(0));

                    case 8:
                    case "end":
                      return _context213.stop();
                  }
                }
              }, _callee213, this);
            }));
          } ///////////////////////////////////////////////////////////////////////////
          ///// SETTINGS
          ///////////////////////////////////////////////////////////////////////////

        }, {
          key: "setSettings",
          value: function setSettings(settingsObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee214() {
              return regeneratorRuntime.wrap(function _callee214$(_context214) {
                while (1) {
                  switch (_context214.prev = _context214.next) {
                    case 0:
                      this.appSettings = settingsObj;
                      this.storeServ.setObject(this.deputy.uUK + 'AppSettings', settingsObj);
                      return _context214.abrupt("return", Promise.resolve(true));

                    case 3:
                    case "end":
                      return _context214.stop();
                  }
                }
              }, _callee214, this);
            }));
          }
        }, {
          key: "getSettings",
          value: function getSettings() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee215() {
              var storeSettRes;
              return regeneratorRuntime.wrap(function _callee215$(_context215) {
                while (1) {
                  switch (_context215.prev = _context215.next) {
                    case 0:
                      if (!(this.appSettings !== null)) {
                        _context215.next = 4;
                        break;
                      }

                      return _context215.abrupt("return", Promise.resolve(this.appSettings));

                    case 4:
                      _context215.next = 6;
                      return this.storeServ.getObject(this.deputy.uUK + 'AppSettings');

                    case 6:
                      storeSettRes = _context215.sent;

                      if (!storeSettRes) {
                        _context215.next = 12;
                        break;
                      }

                      this.appSettings = storeSettRes;
                      return _context215.abrupt("return", Promise.resolve(this.appSettings));

                    case 12:
                      return _context215.abrupt("return", Promise.resolve(null));

                    case 13:
                    case "end":
                      return _context215.stop();
                  }
                }
              }, _callee215, this);
            }));
          } ///////////////////////////////////////////////////////////////////////////
          ///// NAV/PAGES/CONNECTION
          ///////////////////////////////////////////////////////////////////////////

        }, {
          key: "setHasNetConn",
          value: function setHasNetConn(tf) {
            this.hasNetConn = tf;
            var tfI;
            tf ? tfI = '🟢' : tfI = '🔴';
            this.logger.info('[Detail|setHasNetConn] (SET) to: 🔌' + tfI + ' - ' + tf);
          }
        }, {
          key: "getHasNetConn",
          value: function getHasNetConn() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee216() {
              var _this96 = this;

              var tf;
              return regeneratorRuntime.wrap(function _callee216$(_context216) {
                while (1) {
                  switch (_context216.prev = _context216.next) {
                    case 0:
                      if (!(this.hasNetConn === null)) {
                        _context216.next = 10;
                        break;
                      }

                      _context216.next = 3;
                      return _capacitor_network__WEBPACK_IMPORTED_MODULE_4__.Network.getStatus();

                    case 3:
                      tf = _context216.sent.connected;
                      this.hasNetConn = tf;

                      _capacitor_network__WEBPACK_IMPORTED_MODULE_4__.Network.removeAllListeners();

                      _capacitor_network__WEBPACK_IMPORTED_MODULE_4__.Network.addListener('networkStatusChange', function (newStatus) {
                        _this96.hasNetConn = newStatus.connected;

                        _this96.evServ.publish('globalHasNetConn', _this96.hasNetConn);
                      });

                      return _context216.abrupt("return", Promise.resolve(this.hasNetConn));

                    case 10:
                      return _context216.abrupt("return", Promise.resolve(this.hasNetConn));

                    case 11:
                    case "end":
                      return _context216.stop();
                  }
                }
              }, _callee216, this);
            }));
          }
        }, {
          key: "setAuthLogout",
          value: //-----------------------------------------------------------------------
          function setAuthLogout(tf) {
            this.authLogout = tf;
            this.logger.info('[Detail|authLogout] (SET) to: ' + tf);
          }
        }, {
          key: "getAuthLogout",
          value: function getAuthLogout() {
            return this.authLogout;
          } //-----------------------------------------------------------------------

        }, {
          key: "setFRSetupDone",
          value: function setFRSetupDone(tf) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee217() {
              return regeneratorRuntime.wrap(function _callee217$(_context217) {
                while (1) {
                  switch (_context217.prev = _context217.next) {
                    case 0:
                      this.FRSetupDone = tf;
                      this.storeServ.setItem(this.deputy.uUK + 'FRSetupDone', String(tf));
                      this.logger.info('[Detail|uFRSetupDone] (SET) to: ' + tf);
                      return _context217.abrupt("return", Promise.resolve(true));

                    case 4:
                    case "end":
                      return _context217.stop();
                  }
                }
              }, _callee217, this);
            }));
          }
        }, {
          key: "getFRSetupDone",
          value: function getFRSetupDone() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee218() {
              var storeStr, storeVal;
              return regeneratorRuntime.wrap(function _callee218$(_context218) {
                while (1) {
                  switch (_context218.prev = _context218.next) {
                    case 0:
                      if (!(this.FRSetupDone !== null)) {
                        _context218.next = 4;
                        break;
                      }

                      return _context218.abrupt("return", Promise.resolve(this.FRSetupDone));

                    case 4:
                      _context218.next = 6;
                      return this.storeServ.getItem(this.deputy.uUK + 'FRSetupDone');

                    case 6:
                      storeStr = _context218.sent;

                      if (!storeStr) {
                        _context218.next = 13;
                        break;
                      }

                      storeVal = Boolean(JSON.parse(storeStr));
                      this.FRSetupDone = storeVal;
                      return _context218.abrupt("return", Promise.resolve(this.FRSetupDone));

                    case 13:
                      return _context218.abrupt("return", Promise.resolve(false));

                    case 14:
                    case "end":
                      return _context218.stop();
                  }
                }
              }, _callee218, this);
            }));
          } //-----------------------------------------------------------------------

        }, {
          key: "setWpId",
          value: function setWpId(wpId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee219() {
              return regeneratorRuntime.wrap(function _callee219$(_context219) {
                while (1) {
                  switch (_context219.prev = _context219.next) {
                    case 0:
                      this.wpId = wpId;
                      this.storeServ.setItem(this.deputy.uUK + 'WPId', String(wpId));
                      this.logger.info('[Detail|wpId] (SET) to: ' + wpId);
                      return _context219.abrupt("return", Promise.resolve(true));

                    case 4:
                    case "end":
                      return _context219.stop();
                  }
                }
              }, _callee219, this);
            }));
          }
        }, {
          key: "getWpId",
          value: function getWpId() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee220() {
              var storeStr, storeVal;
              return regeneratorRuntime.wrap(function _callee220$(_context220) {
                while (1) {
                  switch (_context220.prev = _context220.next) {
                    case 0:
                      if (!(this.wpId !== null)) {
                        _context220.next = 4;
                        break;
                      }

                      return _context220.abrupt("return", Promise.resolve(this.wpId));

                    case 4:
                      _context220.next = 6;
                      return this.storeServ.getItem(this.deputy.uUK + 'WPId');

                    case 6:
                      storeStr = _context220.sent;

                      if (!storeStr) {
                        _context220.next = 13;
                        break;
                      }

                      storeVal = Number(storeStr);
                      this.wpId = storeVal;
                      return _context220.abrupt("return", Promise.resolve(this.wpId));

                    case 13:
                      return _context220.abrupt("return", Promise.resolve(1));

                    case 14:
                    case "end":
                      return _context220.stop();
                  }
                }
              }, _callee220, this);
            }));
          } //-----------------------------------------------------------------------

        }, {
          key: "setShouldSave",
          value: function setShouldSave(tf, d) {
            this.shouldSave = {
              value: tf,
              data: d
            };
            this.logger.info('[Detail|setShouldSave] (SET) to: ' + tf + ' with data property: ' + d);
          }
        }, {
          key: "getShouldSave",
          value: function getShouldSave() {
            return this.shouldSave;
          }
        }]);

        return DetailService;
      }();

      _DetailService.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_6__.NGXLogger
        }, {
          type: _storage_service__WEBPACK_IMPORTED_MODULE_1__.StorageService
        }, {
          type: _deputy_service__WEBPACK_IMPORTED_MODULE_0__.DeputyService
        }, {
          type: _events_service__WEBPACK_IMPORTED_MODULE_3__.EventsService
        }, {
          type: _datetime_service__WEBPACK_IMPORTED_MODULE_2__.DateTimeService
        }];
      };

      _DetailService = (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)() ///////////////////////////////////////////////////////////////////////////
      ], _DetailService);
      /***/
    },

    /***/
    80106:
    /*!********************************************!*\
      !*** ./src/app/services/events.service.ts ***!
      \********************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "EventsService": function EventsService() {
          return (
            /* binding */
            _EventsService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! rxjs */
      79765);
      /* harmony import */


      var _capacitor_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @capacitor/toast */
      40074);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! date-fns */
      61801); ///////////////////////////////////////////////////////////////


      var _EventsService = /*#__PURE__*/function () {
        function EventsService() {
          _classCallCheck(this, EventsService);

          ///////////////////////////////////////////////////////////////
          this.cPage = {
            url: null,
            lName: null,
            cName: null
          };
          this.channels = {}; ///////////////////////////////////////////////////////////////

          this.isValidJSON = function (jsonStr) {
            try {
              JSON.parse(jsonStr);
            } catch (e) {
              return false;
            }

            return true;
          }; ///////////////////////////////////////////////////////////////
          ///////////////////////////////////////////////////////////////

        } ///////////////////////////////////////////////////////////////


        _createClass(EventsService, [{
          key: "subscribe",
          value: function subscribe(topic, observer) {
            if (!this.channels[topic]) {
              this.channels[topic] = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subject();
            }

            ;
            return this.channels[topic].subscribe(observer);
          } ///////////////////////////////////////////////////////////////

        }, {
          key: "publish",
          value: function publish(topic, data) {
            var subject = this.channels[topic];

            if (!subject) {
              return;
            }

            ;
            subject.next(data);
          } ///////////////////////////////////////////////////////////////

        }, {
          key: "check",
          value: function check(topic) {
            var subject = this.channels[topic];

            if (!subject) {
              return Promise.resolve(false);
            } else {
              return Promise.resolve(true);
            }
          } ///////////////////////////////////////////////////////////////

        }, {
          key: "destroy",
          value: function destroy(topic) {
            var subject = this.channels[topic];

            if (!subject) {
              return;
            }

            ;
            subject.complete();
            delete this.channels[topic];
          } ///////////////////////////////////////////////////////////////

        }, {
          key: "currentPageName",
          value: function currentPageName(cPageObj) {
            this.cPage = cPageObj;
            this.publish('newPage', cPageObj.lName);
          } ///////////////////////////////////////////////////////////////

        }, {
          key: "getDur",
          value: function getDur(start) {
            return (0, date_fns__WEBPACK_IMPORTED_MODULE_2__["default"])(new Date(), start);
          } ///////////////////////////////////////////////////////////////

        }, {
          key: "showToast",
          value: function showToast(tIco, tText) {
            var _this97 = this;

            var icoObj = {
              general: "\uD83D\uDEE1\uFE0F",
              success: "\uD83D\uDFE2",
              error: "\uD83D\uDD34",
              warning: "\uD83D\uDFE0",
              check: "\u2714\uFE0F",
              cross: "\u274C",
              refresh: "\u267B\uFE0F",
              smiley: '🙃',
              locked: "\uD83D\uDD10",
              fire: "\uD83D\uDD25",
              email: "\uD83D\uDCEB",
              msg: "\uD83D\uDCAC"
            };

            (function () {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(_this97, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee221() {
                return regeneratorRuntime.wrap(function _callee221$(_context221) {
                  while (1) {
                    switch (_context221.prev = _context221.next) {
                      case 0:
                        _context221.next = 2;
                        return _capacitor_toast__WEBPACK_IMPORTED_MODULE_0__.Toast.show({
                          text: icoObj[tIco] + ' ' + tText,
                          duration: 'short',
                          position: 'bottom'
                        });

                      case 2:
                      case "end":
                        return _context221.stop();
                    }
                  }
                }, _callee221);
              }));
            })();
          } //////////////////////////////////////////////////////////////

        }, {
          key: "showPushToast",
          value: function showPushToast(ico, title, body, dur, pos) {
            var _this98 = this;

            var spIco, spTxt, spDur, spPos;
            ico !== null ? spIco = ico : spIco = '🛡️';
            title !== null ? spTxt = spIco + ' ' + title + ': ' + body : spTxt = spIco + ' ' + body;
            dur !== null ? spDur = dur : spDur = 'long';
            pos !== null ? spPos = pos : spPos = 'bottom';

            (function () {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(_this98, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee222() {
                return regeneratorRuntime.wrap(function _callee222$(_context222) {
                  while (1) {
                    switch (_context222.prev = _context222.next) {
                      case 0:
                        _context222.next = 2;
                        return _capacitor_toast__WEBPACK_IMPORTED_MODULE_0__.Toast.show({
                          text: spTxt,
                          duration: spDur,
                          position: spPos
                        });

                      case 2:
                      case "end":
                        return _context222.stop();
                    }
                  }
                }, _callee222);
              }));
            })();
          } //////////////////////////////////////////////////////////////

        }, {
          key: "isConOK",
          value: function isConOK(color1, color2) {
            var hexToRgb = function hexToRgb(hex) {
              var shRX = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
              hex = hex.replace(shRX, function (m, r, g, b) {
                return r + r + g + g + b + b;
              });
              var rs = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
              return rs ? {
                r: parseInt(rs[1], 16),
                g: parseInt(rs[2], 16),
                b: parseInt(rs[3], 16)
              } : null;
            };

            var lum = function lum(r, g, b) {
              var a = [r, g, b].map(function (v) {
                v /= 255;
                return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);
              });
              return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;
            };

            var calcR = function calcR() {
              var c1rgb = hexToRgb(color1);
              var c2rgb = hexToRgb(color2);
              var c1lum = lum(c1rgb.r, c1rgb.g, c1rgb.b);
              var c2lum = lum(c2rgb.r, c2rgb.g, c2rgb.b);
              var ratio = c1lum > c2lum ? (c2lum + 0.05) / (c1lum + 0.05) : (c1lum + 0.05) / (c2lum + 0.05);
              return ratio;
            };

            var ratio = calcR();

            if (ratio < 1 / 4.5) {
              return true;
            } else {
              return false;
            }
          } ///////////////////////////////////////////////////////////////

        }, {
          key: "incBright",
          value: function incBright(color, percent) {
            var hex = color.replace(/^\s*#|\s*$/g, '');

            if (hex.length == 3) {
              hex = hex.replace(/(.)/g, '$1$1');
            }

            ;
            var r = parseInt(hex.substr(0, 2), 16),
                g = parseInt(hex.substr(2, 2), 16),
                b = parseInt(hex.substr(4, 2), 16);
            return '#' + (0 | (1 << 8) + r + (256 - r) * percent / 100).toString(16).substr(1) + (0 | (1 << 8) + g + (256 - g) * percent / 100).toString(16).substr(1) + (0 | (1 << 8) + b + (256 - b) * percent / 100).toString(16).substr(1);
          }
        }]);

        return EventsService;
      }();

      _EventsService = (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable)({
        providedIn: 'root'
      }) ///////////////////////////////////////////////////////////////
      ], _EventsService);
      /***/
    },

    /***/
    93405:
    /*!**********************************************!*\
      !*** ./src/app/services/fairwork.service.ts ***!
      \**********************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "FairworkService": function FairworkService() {
          return (
            /* binding */
            _FairworkService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _datetime_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./datetime.service */
      12826);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _services_fairworkVars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../services/fairworkVars */
      93081);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! date-fns */
      76175);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! date-fns */
      62094);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! date-fns */
      43257);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! date-fns */
      12297);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! date-fns */
      45255);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! date-fns */
      87482);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! date-fns */
      50752);
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! date-fns */
      4547); ////////////////////////////////////////////////////////////////////////////////////////////////////


      var _FairworkService = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        function FairworkService(logger, dT) {
          _classCallCheck(this, FairworkService);

          this.logger = logger;
          this.dT = dT; ////////////////////////////////////////////////////////////////////////////////////////////////////

          this.mPR = {
            base: {
              0: 38.36,
              1: 27.40,
              2: 27.40,
              3: 27.40,
              4: 27.40,
              5: 27.40,
              6: 32.88
            },
            penalty: {
              hrs: {
                night: {
                  start: {
                    h: 0,
                    m: 0,
                    s: 0
                  },
                  end: {
                    h: 5,
                    m: 59,
                    s: 59
                  }
                },
                eve: {
                  start: {
                    h: 22,
                    m: 0,
                    s: 0
                  },
                  end: {
                    h: 23,
                    m: 59,
                    s: 59
                  }
                }
              },
              0: {
                night: 0,
                eve: 0
              },
              1: {
                night: 3.40,
                eve: 2.27
              },
              2: {
                night: 3.40,
                eve: 2.27
              },
              3: {
                night: 3.40,
                eve: 2.27
              },
              4: {
                night: 3.40,
                eve: 2.27
              },
              5: {
                night: 3.40,
                eve: 2.27
              },
              6: {
                n: 0,
                e: 0
              }
            },
            ph: 54.80
          };
        } ////////////////////////////////////////////////////////////////////////////////////////////////////


        _createClass(FairworkService, [{
          key: "r2d",
          value: function r2d(no) {
            var rN = Math.round((no + Number.EPSILON) * 100) / 100;
            var rS = rN.toFixed(2);
            var nN = +rS;
            return nN;
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getShiftPay",
          value: function getShiftPay(shiftObj) {
            var _this99 = this;

            var sO = shiftObj;
            var shiftCalcArr = []; //let hasPH:boolean;this.inclPublicHoliday(sO).s.res||this.inclPublicHoliday(sO).e.res?hasPH=true:hasPH=false;if(hasPH){console.log('Includes Public Holiday - Skipping.');return};

            var sTDate = this.dT.Dut(sO.StartTime);
            var eTDate = this.dT.Dut(sO.EndTime);
            var sTDay = this.dT.gD(sTDate);
            var eTDay = this.dT.gD(eTDate);

            var getNoSplitDur = function getNoSplitDur() {
              var gNSDRes = [{
                day: sTDay,
                start: sTDate,
                end: eTDate,
                dur: {}
              }];
              gNSDRes[0].dur = (0, date_fns__WEBPACK_IMPORTED_MODULE_2__["default"])({
                start: sTDate,
                end: eTDate
              });
              return gNSDRes;
            };

            var getSplitDur = function getSplitDur() {
              var gSDRes = [{
                day: sTDay,
                start: null,
                end: null,
                dur: {}
              }, {
                day: eTDay,
                start: null,
                end: null,
                dur: {}
              }];
              gSDRes[0].start = sTDate;
              gSDRes[0].end = (0, date_fns__WEBPACK_IMPORTED_MODULE_3__["default"])(sTDate);
              gSDRes[0].dur = (0, date_fns__WEBPACK_IMPORTED_MODULE_2__["default"])({
                start: sTDate,
                end: (0, date_fns__WEBPACK_IMPORTED_MODULE_3__["default"])(sTDate)
              });
              gSDRes[1].start = (0, date_fns__WEBPACK_IMPORTED_MODULE_4__["default"])(eTDate);
              gSDRes[1].end = eTDate;
              gSDRes[1].dur = (0, date_fns__WEBPACK_IMPORTED_MODULE_2__["default"])({
                start: (0, date_fns__WEBPACK_IMPORTED_MODULE_4__["default"])(eTDate),
                end: eTDate
              });
              return gSDRes;
            };

            var isSplit;

            if ((0, date_fns__WEBPACK_IMPORTED_MODULE_5__["default"])(sTDate, eTDate)) {
              isSplit = false;
            } else {
              isSplit = true;
            }

            ;
            isSplit ? shiftCalcArr = getSplitDur() : shiftCalcArr = getNoSplitDur(); ///////////////////////////////////////////////////////////////

            var basePay = 0;
            var penaltyPay = 0;
            var payTotal = 0;

            for (var sSec = 0; sSec < shiftCalcArr.length; sSec++) {
              var tSSec = shiftCalcArr[sSec]; // Base Pay

              var secBRate = this.mPR.base[tSSec.day];
              var secBRateHrs = tSSec.dur.hours + this.r2d(tSSec.dur.minutes / 60);
              var secBPay = this.r2d(secBRateHrs * secBRate);
              basePay += secBPay; // Penalty Pay

              if (tSSec.day >= 1 && tSSec.day <= 5) {
                (function () {
                  var ePSA = [(0, date_fns__WEBPACK_IMPORTED_MODULE_6__["default"])(tSSec.start), (0, date_fns__WEBPACK_IMPORTED_MODULE_7__["default"])(tSSec.start), (0, date_fns__WEBPACK_IMPORTED_MODULE_8__["default"])(tSSec.start), _this99.mPR.penalty.hrs.eve.start.h, _this99.mPR.penalty.hrs.eve.start.m, _this99.mPR.penalty.hrs.eve.start.s];
                  var ePSD = new Date(ePSA[0], ePSA[1], ePSA[2], ePSA[3], ePSA[4], ePSA[5]);

                  var ePSU = _this99.dT.getUT(ePSD);

                  var ePEA = [(0, date_fns__WEBPACK_IMPORTED_MODULE_6__["default"])(tSSec.start), (0, date_fns__WEBPACK_IMPORTED_MODULE_7__["default"])(tSSec.start), (0, date_fns__WEBPACK_IMPORTED_MODULE_8__["default"])(tSSec.start), _this99.mPR.penalty.hrs.eve.end.h, _this99.mPR.penalty.hrs.eve.end.m, _this99.mPR.penalty.hrs.eve.end.s];
                  var ePED = new Date(ePEA[0], ePEA[1], ePEA[2], ePEA[3], ePEA[4], ePEA[5]);

                  var ePEU = _this99.dT.getUT(ePED);

                  var isEveP = function isEveP(tT) {
                    if (tT >= ePSU && tT <= ePEU) {
                      return true;
                    } else {
                      return false;
                    }
                  };

                  var nPSA = [(0, date_fns__WEBPACK_IMPORTED_MODULE_6__["default"])(tSSec.start), (0, date_fns__WEBPACK_IMPORTED_MODULE_7__["default"])(tSSec.start), (0, date_fns__WEBPACK_IMPORTED_MODULE_8__["default"])(tSSec.start), _this99.mPR.penalty.hrs.night.start.h, _this99.mPR.penalty.hrs.night.start.m, _this99.mPR.penalty.hrs.night.start.s];
                  var nPSD = new Date(nPSA[0], nPSA[1], nPSA[2], nPSA[3], nPSA[4], nPSA[5]);

                  var nPSU = _this99.dT.getUT(nPSD);

                  var nPEA = [(0, date_fns__WEBPACK_IMPORTED_MODULE_6__["default"])(tSSec.start), (0, date_fns__WEBPACK_IMPORTED_MODULE_7__["default"])(tSSec.start), (0, date_fns__WEBPACK_IMPORTED_MODULE_8__["default"])(tSSec.start), _this99.mPR.penalty.hrs.night.end.h, _this99.mPR.penalty.hrs.night.end.m, _this99.mPR.penalty.hrs.night.end.s];
                  var nPED = new Date(nPEA[0], nPEA[1], nPEA[2], nPEA[3], nPEA[4], nPEA[5]);

                  var nPEU = _this99.dT.getUT(nPED);

                  var isNightP = function isNightP(tT) {
                    if (tT >= nPSU && tT <= nPEU) {
                      return true;
                    } else {
                      return false;
                    }
                  };

                  var tSecStartUT = _this99.dT.getUT(tSSec.start);

                  var tSecEndUT = _this99.dT.getUT(tSSec.end);

                  var isShiftSec = function isShiftSec(tT) {
                    if (tT >= tSecStartUT && tT <= tSecEndUT) {
                      return true;
                    } else {
                      return false;
                    }
                  }; // Evening Penalty


                  if (isShiftSec(ePSU) || isShiftSec(ePEU)) {
                    var secPEveRate = _this99.mPR.penalty[tSSec.day].eve;
                    var secPEveDur = {
                      hours: 0,
                      minutes: 0
                    };
                    var secAllEveMinsCount = 0;
                    var secAllEveMins = tSSec.dur.minutes + tSSec.dur.hours * 60;

                    for (var secMs = 0; secMs < secAllEveMins; secMs++) {
                      var etTUnixMin = _this99.dT.getUT((0, date_fns__WEBPACK_IMPORTED_MODULE_9__["default"])(tSSec.start, secMs));

                      if (isEveP(etTUnixMin)) {
                        secPEveDur.minutes++;
                      }
                    }

                    ;

                    if (secAllEveMinsCount > 0) {
                      secPEveDur.hours = Math.floor(secAllEveMins / 60);
                      secPEveDur.minutes = secAllEveMins - secPEveDur.hours * 60;
                    }

                    ;

                    var secPEveRateHrs = secPEveDur.hours + _this99.r2d(secPEveDur.minutes / 60);

                    var secPEvePay = _this99.r2d(secPEveRateHrs * secPEveRate);

                    penaltyPay += secPEvePay;
                  } // Night Penalty


                  if (isShiftSec(nPSU) || isShiftSec(nPEU)) {
                    var secPNightRate = _this99.mPR.penalty[tSSec.day].night;
                    var secPNightDur = {
                      hours: 0,
                      minutes: 0
                    };
                    var secAllNightMinsCount = 0;
                    var secAllNightMins = tSSec.dur.minutes + tSSec.dur.hours * 60;

                    for (var _secMs = 0; _secMs < secAllNightMins; _secMs++) {
                      var ntTUnixMin = _this99.dT.getUT((0, date_fns__WEBPACK_IMPORTED_MODULE_9__["default"])(tSSec.start, _secMs));

                      if (isNightP(ntTUnixMin)) {
                        secPNightDur.minutes++;
                      }
                    }

                    ;

                    if (secAllNightMinsCount > 0) {
                      secPNightDur.hours = Math.floor(secAllNightMins / 60);
                      secPNightDur.minutes = secAllNightMins - secPNightDur.hours * 60;
                    }

                    ;

                    var secPNightRateHrs = secPNightDur.hours + _this99.r2d(secPNightDur.minutes / 60);

                    var secPNightPay = _this99.r2d(secPNightRateHrs * secPNightRate);

                    penaltyPay += secPNightPay;
                  }
                })();
              }
            } ///////////////////////////////////////////////////////////////


            this.r2d(basePay);
            this.r2d(penaltyPay);
            payTotal = basePay + penaltyPay;
            this.r2d(payTotal);
            return Promise.resolve({
              b: basePay,
              p: penaltyPay,
              t: payTotal
            });
          } ////////////////////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "inclPublicHoliday",
          value: function inclPublicHoliday(sO) {
            var _this100 = this;

            var sDate = this.dT.Dut(sO.StartTime);
            var eDate = this.dT.Dut(sO.EndTime);
            var sSY = this.dT.gY(sDate);
            var sEY = this.dT.gY(eDate);
            var pHolsYrs = [];
            var pHolsDates = [];
            sSY === sEY ? pHolsYrs = [sSY] : pHolsYrs = [sSY, sEY];

            for (var y = 0; y < pHolsYrs.length; y++) {
              var tYHols = _services_fairworkVars__WEBPACK_IMPORTED_MODULE_1__.myPublicHolidays[pHolsYrs[y]];

              for (var h = 0; h < tYHols.length; h++) {
                var tHolDate = this.dT.parseStr(tYHols[h], 'dd/MM/yyyy');
                pHolsDates.push(tHolDate);
              }
            }

            ;
            var sOnPH = {
              res: false,
              ph: null
            };
            var eOnPH = {
              res: false,
              ph: null
            };
            var sMatch = pHolsDates.filter(function (pH) {
              return _this100.dT.isSD(sDate, pH);
            });

            if (sMatch.length > 0) {
              sOnPH.res = true;
              sOnPH.ph = sMatch[0];
            }

            ;
            var eMatch = pHolsDates.filter(function (pH) {
              return _this100.dT.isSD(eDate, pH);
            });

            if (eMatch.length > 0) {
              eOnPH.res = true;
              eOnPH.ph = eMatch[0];
            }

            ;
            return {
              s: sOnPH,
              e: eOnPH
            };
          }
        }]);

        return FairworkService;
      }();

      _FairworkService.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_10__.NGXLogger
        }, {
          type: _datetime_service__WEBPACK_IMPORTED_MODULE_0__.DateTimeService
        }];
      };

      _FairworkService = (0, tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_12__.Injectable)({
        providedIn: 'root'
      }) ////////////////////////////////////////////////////////////////////////////////////////////////////
      ], _FairworkService);
      /***/
    },

    /***/
    93081:
    /*!******************************************!*\
      !*** ./src/app/services/fairworkVars.ts ***!
      \******************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "myPayRates": function myPayRates() {
          return (
            /* binding */
            _myPayRates
          );
        },

        /* harmony export */
        "myPublicHolidays": function myPublicHolidays() {
          return (
            /* binding */
            _myPublicHolidays
          );
        },

        /* harmony export */
        "testObj": function testObj() {
          return (
            /* binding */
            _testObj
          );
        }
        /* harmony export */

      }); ///////////////////////////////////////////////////////////////////////////


      var _myPayRates = {
        base: {
          0: 38.36,
          1: 27.40,
          2: 27.40,
          3: 27.40,
          4: 27.40,
          5: 27.40,
          6: 32.88
        },
        penalty: {
          0: {
            n: 0,
            e: 0
          },
          1: {
            n: 3.41,
            e: 2.27
          },
          2: {
            n: 3.41,
            e: 2.27
          },
          3: {
            n: 3.41,
            e: 2.27
          },
          4: {
            n: 3.41,
            e: 2.27
          },
          5: {
            n: 3.41,
            e: 2.27
          },
          6: {
            n: 0,
            e: 0
          }
        },
        ph: 54.80
      }; ///////////////////////////////////////////////////////////////////////////

      var _myPublicHolidays = {
        2021: ['01/01/2021', '26/01/2021', '01/03/2021', '02/04/2021', '03/04/2021', '05/04/2021', '25/04/2021', '07/06/2021', '14/06/2021', '27/09/2021', '25/12/2021', '26/12/2021', '27/12/2021', '28/12/2021'],
        2022: ['01/01/2022', '03,01,2022', '26/01/2022', '07/03/2022', '15/04/2022', '18/04/2022', '25/04/2022', '06/06/2022', '26/09/2022', '25/12/2022', '26/12/2022', '27/12/2022'],
        2023: ['01/01/2023', '02,01,2023', '26/01/2023', '06/03/2023', '07/04/2023', '10/04/2023', '25/04/2023', '05/06/2023', '25/09/2023', '25/12/2022', '26/12/2022']
      };
      var _testObj = {
        Date: "2021-06-26T00:00:00+08:00",
        EndTime: 1624725300,
        StartTime: 1624699500,
        TotalTime: 7.170000076293945,
        TotalTimeInv: 6
      }; ///////////////////////////////////////////////////////////////////////////
      ///////////////////////////////////////////////////////////////////////////
      ///////////////////////////////////////////////////////////////////////////

      /***/
    },

    /***/
    22904:
    /*!************************************************!*\
      !*** ./src/app/services/filesystem.service.ts ***!
      \************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "FileSystemService": function FileSystemService() {
          return (
            /* binding */
            _FileSystemService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var src_app_services_datetime_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! src/app/services/datetime.service */
      12826);
      /* harmony import */


      var _ionic_native_file_transfer_ngx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @ionic-native/file-transfer/ngx */
      97905);
      /* harmony import */


      var _ionic_native_file_ngx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @ionic-native/file/ngx */
      20138);
      /* harmony import */


      var _ionic_native_file_path_ngx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ionic-native/file-path/ngx */
      59865);
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @capacitor/core */
      68384);
      /* harmony import */


      var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ionic-native/http/ngx */
      68589);
      /* harmony import */


      var _storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./storage.service */
      71188);
      /* harmony import */


      var _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @capacitor/filesystem */
      61977);
      /* harmony import */


      var _events_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./events.service */
      80106);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_native_file_chooser_ngx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! @ionic-native/file-chooser/ngx */
      81953);
      /* harmony import */


      var _capacitor_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! @capacitor/dialog */
      63540);
      /* harmony import */


      var _capacitor_app__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! @capacitor/app */
      42138);
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! @angular/common/http */
      91841);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! @ionic/angular */
      80476); ///////////////////////////////////////////////////////


      var _FileSystemService = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////
        function FileSystemService(fileChooser, evServ, shttp, logger, storeServ, transfer, file, fileP, httpClient, dT, plt) {
          var _this101 = this;

          _classCallCheck(this, FileSystemService);

          this.fileChooser = fileChooser;
          this.evServ = evServ;
          this.shttp = shttp;
          this.logger = logger;
          this.storeServ = storeServ;
          this.transfer = transfer;
          this.file = file;
          this.fileP = fileP;
          this.httpClient = httpClient;
          this.dT = dT;
          this.plt = plt; //////////////////////////////////////////////////////

          this.fsIsReady = null;
          this.fsReadyTime = null;
          this.permDenyCount = 0;
          this.phoneFS = _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Directory.External;
          this.appFS = _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Directory.External;
          this.buDir = 'Sheriff/backups/'; // --------------------------------------------------

          this.appDocs = _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Directory.Documents;
          this.appData = _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Directory.Data;
          this.appCache = _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Directory.Cache;
          this.appExt = _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Directory.External; //////////////////////////////////////////////////////

          this.extFileCodes = ['PAD', 'NOT_FOUND_ERR', 'SECURITY_ERR', 'ABORT_ERR', 'NOT_READABLE_ERR', 'ENCODING_ERR', 'NO_MODIFICATION_ALLOWED_ERR', 'INVALID_STATE_ERR', 'SYNTAX_ERR', 'INVALID_MODIFICATION_ERR', 'QUOTA_EXCEEDED_ERR', 'TYPE_MISMATCH_ERR', 'PATH_EXISTS_ERR'];
          this.plt.ready().then(function () {
            _this101.fileTransfer = _this101.transfer.create();
          });
        } /////////////////////////////////////////////////////


        _createClass(FileSystemService, [{
          key: "reInitFS",
          value: function reInitFS(uUK) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee223() {
              var _this102 = this;

              var fsPermErrOpts;
              return regeneratorRuntime.wrap(function _callee223$(_context223) {
                while (1) {
                  switch (_context223.prev = _context223.next) {
                    case 0:
                      fsPermErrOpts = {
                        title: 'Permission Required',
                        message: 'Without access to your device\'s filesysem, Sheriff cannot save/backup your Deputy records/data. Please ALLOW ACCESS when prompted again to continue, otherwise Sheriff will exit.',
                        okButtonTitle: 'Prompt Again',
                        cancelButtonTitle: 'Exit App'
                      };
                      this.evServ.subscribe('doReInitFS', function (doReInit) {
                        if (doReInit) {
                          _this102.evServ.destroy('doReInitFS');

                          _this102.initFS(uUK);
                        } else {
                          _this102.permDenyCount++;

                          if (_this102.permDenyCount < 2) {
                            _capacitor_dialog__WEBPACK_IMPORTED_MODULE_10__.Dialog.confirm(fsPermErrOpts).then(function (didConfirm) {
                              if (didConfirm) {
                                _this102.evServ.destroy('doReInitFS');

                                _this102.initFS(uUK);
                              } else {
                                _this102.evServ.destroy('doReInitFS');

                                _capacitor_app__WEBPACK_IMPORTED_MODULE_11__.App.exitApp();
                              }
                            });
                          } else {
                            _this102.evServ.destroy('doReInitFS');

                            _capacitor_app__WEBPACK_IMPORTED_MODULE_11__.App.exitApp();
                          }
                        }
                      });

                    case 2:
                    case "end":
                      return _context223.stop();
                  }
                }
              }, _callee223, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "initFS",
          value: function initFS(uUK) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee224() {
              var _this103 = this;

              var userPermStatus;
              return regeneratorRuntime.wrap(function _callee224$(_context224) {
                while (1) {
                  switch (_context224.prev = _context224.next) {
                    case 0:
                      this.logger.info('[FileService|initFS] ()...');
                      _context224.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.checkPermissions();

                    case 3:
                      userPermStatus = _context224.sent;

                      if (userPermStatus.publicStorage === 'granted') {
                        this.fsIsReady = true;
                        this.evServ.publish('fsPermsGranted', true);
                        this.logger.info("[FilesystemService|initFS] (PermCheck) Result: \uD83D\uDFE9[" + userPermStatus.publicStorage.toUpperCase() + ']');
                        this.storeServ.setItem(uUK + 'fsPerm', 'true').then(function () {
                          _this103.logger.info("[FilesystemService|initFS] (PermCheck -> Storage) \uD83D\uDD11 User's fsPerm Key Set to [TRUE].");
                        })["catch"](function () {
                          _this103.logger.info("[FilesystemService|initFS] (PermCheck -> Storage) \uD83D\uDD11 ERROR: \uD83D\uDFE5 Failed to Set User's fsPerm Key.");
                        });
                      } else {
                        this.logger.info("[FilesystemService|initFS] (PermCheck) Result: \uD83D\uDFE5[" + userPermStatus.publicStorage.toUpperCase() + ']');
                        this.reInitFS(uUK);

                        _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.requestPermissions().then(function (permStat) {
                          if (permStat.publicStorage === 'granted') {
                            _this103.evServ.publish('doReInitFS', true);
                          } else {
                            _this103.evServ.publish('doReInitFS', false);
                          }
                        })["catch"](function () {
                          _this103.evServ.publish('doReInitFS', false);
                        });
                      }

                    case 5:
                    case "end":
                      return _context224.stop();
                  }
                }
              }, _callee224, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "fileWrite",
          value: function fileWrite(baseFS, pathToFile, fileData) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee225() {
              var fWRes;
              return regeneratorRuntime.wrap(function _callee225$(_context225) {
                while (1) {
                  switch (_context225.prev = _context225.next) {
                    case 0:
                      _context225.prev = 0;
                      _context225.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.writeFile({
                        path: pathToFile,
                        data: fileData,
                        directory: baseFS,
                        encoding: _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Encoding.UTF8,
                        recursive: true
                      });

                    case 3:
                      fWRes = _context225.sent;
                      return _context225.abrupt("return", Promise.resolve({
                        result: true,
                        data: fWRes.uri
                      }));

                    case 7:
                      _context225.prev = 7;
                      _context225.t0 = _context225["catch"](0);
                      return _context225.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context225.t0.message
                      }));

                    case 10:
                    case "end":
                      return _context225.stop();
                  }
                }
              }, _callee225, null, [[0, 7]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "fileRead",
          value: function fileRead(baseFS, pathToFile) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee226() {
              var fRRes;
              return regeneratorRuntime.wrap(function _callee226$(_context226) {
                while (1) {
                  switch (_context226.prev = _context226.next) {
                    case 0:
                      _context226.prev = 0;
                      _context226.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.readFile({
                        path: pathToFile,
                        directory: baseFS,
                        encoding: _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Encoding.UTF8
                      });

                    case 3:
                      fRRes = _context226.sent;
                      return _context226.abrupt("return", Promise.resolve({
                        result: true,
                        data: fRRes.data
                      }));

                    case 7:
                      _context226.prev = 7;
                      _context226.t0 = _context226["catch"](0);
                      return _context226.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context226.t0.message
                      }));

                    case 10:
                    case "end":
                      return _context226.stop();
                  }
                }
              }, _callee226, null, [[0, 7]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "fileAppend",
          value: function fileAppend(baseFS, pathToFile, appendData) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee227() {
              return regeneratorRuntime.wrap(function _callee227$(_context227) {
                while (1) {
                  switch (_context227.prev = _context227.next) {
                    case 0:
                      _context227.prev = 0;
                      _context227.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.appendFile({
                        path: pathToFile,
                        data: appendData,
                        directory: baseFS,
                        encoding: _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Encoding.UTF8
                      });

                    case 3:
                      return _context227.abrupt("return", Promise.resolve({
                        result: true,
                        data: 'success'
                      }));

                    case 6:
                      _context227.prev = 6;
                      _context227.t0 = _context227["catch"](0);
                      return _context227.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context227.t0.message
                      }));

                    case 9:
                    case "end":
                      return _context227.stop();
                  }
                }
              }, _callee227, null, [[0, 6]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "fileDelete",
          value: function fileDelete(baseFS, pathToFile) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee228() {
              return regeneratorRuntime.wrap(function _callee228$(_context228) {
                while (1) {
                  switch (_context228.prev = _context228.next) {
                    case 0:
                      _context228.prev = 0;
                      _context228.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.deleteFile({
                        path: pathToFile,
                        directory: baseFS
                      });

                    case 3:
                      return _context228.abrupt("return", Promise.resolve({
                        result: true,
                        data: 'success'
                      }));

                    case 6:
                      _context228.prev = 6;
                      _context228.t0 = _context228["catch"](0);
                      return _context228.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context228.t0.message
                      }));

                    case 9:
                    case "end":
                      return _context228.stop();
                  }
                }
              }, _callee228, null, [[0, 6]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "mkdir",
          value: function mkdir(baseFS, pathToDir) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee229() {
              return regeneratorRuntime.wrap(function _callee229$(_context229) {
                while (1) {
                  switch (_context229.prev = _context229.next) {
                    case 0:
                      _context229.prev = 0;
                      _context229.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.mkdir({
                        path: pathToDir,
                        directory: baseFS,
                        recursive: true
                      });

                    case 3:
                      return _context229.abrupt("return", Promise.resolve({
                        result: true,
                        data: 'success'
                      }));

                    case 6:
                      _context229.prev = 6;
                      _context229.t0 = _context229["catch"](0);
                      return _context229.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context229.t0.message
                      }));

                    case 9:
                    case "end":
                      return _context229.stop();
                  }
                }
              }, _callee229, null, [[0, 6]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "rmdir",
          value: function rmdir(baseFS, pathToDir) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee230() {
              return regeneratorRuntime.wrap(function _callee230$(_context230) {
                while (1) {
                  switch (_context230.prev = _context230.next) {
                    case 0:
                      _context230.prev = 0;
                      _context230.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.rmdir({
                        path: pathToDir,
                        directory: baseFS
                      });

                    case 3:
                      return _context230.abrupt("return", Promise.resolve({
                        result: true,
                        data: 'success'
                      }));

                    case 6:
                      _context230.prev = 6;
                      _context230.t0 = _context230["catch"](0);
                      return _context230.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context230.t0.message
                      }));

                    case 9:
                    case "end":
                      return _context230.stop();
                  }
                }
              }, _callee230, null, [[0, 6]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "readdir",
          value: function readdir(baseFS, pathToDir) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee231() {
              var readdirRes;
              return regeneratorRuntime.wrap(function _callee231$(_context231) {
                while (1) {
                  switch (_context231.prev = _context231.next) {
                    case 0:
                      _context231.prev = 0;
                      _context231.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.readdir({
                        path: pathToDir,
                        directory: baseFS
                      });

                    case 3:
                      readdirRes = _context231.sent;
                      return _context231.abrupt("return", Promise.resolve({
                        result: true,
                        data: readdirRes
                      }));

                    case 7:
                      _context231.prev = 7;
                      _context231.t0 = _context231["catch"](0);
                      return _context231.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context231.t0.message
                      }));

                    case 10:
                    case "end":
                      return _context231.stop();
                  }
                }
              }, _callee231, null, [[0, 7]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "stat",
          value: function stat(baseFS, pathToFile) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee232() {
              var statRes;
              return regeneratorRuntime.wrap(function _callee232$(_context232) {
                while (1) {
                  switch (_context232.prev = _context232.next) {
                    case 0:
                      _context232.prev = 0;
                      _context232.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.stat({
                        path: pathToFile,
                        directory: baseFS
                      });

                    case 3:
                      statRes = _context232.sent;

                      if (!statRes) {
                        _context232.next = 6;
                        break;
                      }

                      return _context232.abrupt("return", Promise.resolve({
                        result: true,
                        data: statRes
                      }));

                    case 6:
                      _context232.next = 11;
                      break;

                    case 8:
                      _context232.prev = 8;
                      _context232.t0 = _context232["catch"](0);
                      return _context232.abrupt("return", Promise.resolve({
                        result: false,
                        data: null
                      }));

                    case 11:
                    case "end":
                      return _context232.stop();
                  }
                }
              }, _callee232, null, [[0, 8]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "copy",
          value: function copy(fromBaseFS, toBaseFS, fromFilePath, toFilePath) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee233() {
              return regeneratorRuntime.wrap(function _callee233$(_context233) {
                while (1) {
                  switch (_context233.prev = _context233.next) {
                    case 0:
                      _context233.prev = 0;
                      _context233.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.copy({
                        from: fromFilePath,
                        to: toFilePath,
                        directory: fromBaseFS,
                        toDirectory: toBaseFS
                      });

                    case 3:
                      return _context233.abrupt("return", Promise.resolve({
                        result: true,
                        data: 'success'
                      }));

                    case 6:
                      _context233.prev = 6;
                      _context233.t0 = _context233["catch"](0);
                      return _context233.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context233.t0.message
                      }));

                    case 9:
                    case "end":
                      return _context233.stop();
                  }
                }
              }, _callee233, null, [[0, 6]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "copyByPath",
          value: function copyByPath(fromFilePath, toFilePath) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee234() {
              return regeneratorRuntime.wrap(function _callee234$(_context234) {
                while (1) {
                  switch (_context234.prev = _context234.next) {
                    case 0:
                      _context234.prev = 0;
                      _context234.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.copy({
                        from: fromFilePath,
                        to: toFilePath
                      });

                    case 3:
                      return _context234.abrupt("return", Promise.resolve({
                        result: true,
                        data: 'success'
                      }));

                    case 6:
                      _context234.prev = 6;
                      _context234.t0 = _context234["catch"](0);
                      return _context234.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context234.t0.message
                      }));

                    case 9:
                    case "end":
                      return _context234.stop();
                  }
                }
              }, _callee234, null, [[0, 6]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "pickOpen",
          value: function pickOpen() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee235() {
              return regeneratorRuntime.wrap(function _callee235$(_context235) {
                while (1) {
                  switch (_context235.prev = _context235.next) {
                    case 0:
                      _context235.next = 2;
                      return this.fileChooser.open();

                    case 2:
                      return _context235.abrupt("return", _context235.sent);

                    case 3:
                    case "end":
                      return _context235.stop();
                  }
                }
              }, _callee235, this);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "pickPhoto",
          value: function pickPhoto() {
            return this.fileChooser.open();
          } //////////////////////////////////////////////////////

        }, {
          key: "dlFile",
          value: function dlFile(url, fileNExt) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee236() {
              var _yield$this$shttp$dow, isFile, nativeURL, convFileUri;

              return regeneratorRuntime.wrap(function _callee236$(_context236) {
                while (1) {
                  switch (_context236.prev = _context236.next) {
                    case 0:
                      this.logger.info('[fileServ|dlFile] (' + url + ')...');
                      _context236.prev = 1;
                      _context236.next = 4;
                      return this.shttp.downloadFile(url, null, null, 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/' + fileNExt);

                    case 4:
                      _yield$this$shttp$dow = _context236.sent;
                      isFile = _yield$this$shttp$dow.isFile;
                      nativeURL = _yield$this$shttp$dow.nativeURL;

                      if (!isFile) {
                        _context236.next = 14;
                        break;
                      }

                      convFileUri = _capacitor_core__WEBPACK_IMPORTED_MODULE_4__.Capacitor.convertFileSrc(nativeURL);

                      if (!(convFileUri !== null && convFileUri !== undefined && convFileUri.length > 0)) {
                        _context236.next = 13;
                        break;
                      }

                      return _context236.abrupt("return", Promise.resolve(convFileUri));

                    case 13:
                      return _context236.abrupt("return", Promise.resolve(null));

                    case 14:
                      _context236.next = 19;
                      break;

                    case 16:
                      _context236.prev = 16;
                      _context236.t0 = _context236["catch"](1);
                      return _context236.abrupt("return", Promise.resolve(null));

                    case 19:
                    case "end":
                      return _context236.stop();
                  }
                }
              }, _callee236, this, [[1, 16]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "replaceMeAva",
          value: function replaceMeAva(webUrl) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee237() {
              var _yield$this$shttp$dow2, isFile;

              return regeneratorRuntime.wrap(function _callee237$(_context237) {
                while (1) {
                  switch (_context237.prev = _context237.next) {
                    case 0:
                      this.logger.info('[fileServ|replaceMeAva] ()...');
                      _context237.prev = 1;
                      _context237.next = 4;
                      return this.shttp.downloadFile(webUrl, null, null, 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/meAvatarMeTemp');

                    case 4:
                      _yield$this$shttp$dow2 = _context237.sent;
                      isFile = _yield$this$shttp$dow2.isFile;

                      if (!isFile) {
                        _context237.next = 12;
                        break;
                      }

                      _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.deleteFile({
                        path: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/meAvatar'
                      });

                      _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.rename({
                        from: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/meAvatarMeTemp',
                        to: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/meAvatar'
                      });

                      return _context237.abrupt("return", Promise.resolve(true));

                    case 12:
                      return _context237.abrupt("return", Promise.resolve(false));

                    case 13:
                      _context237.next = 18;
                      break;

                    case 15:
                      _context237.prev = 15;
                      _context237.t0 = _context237["catch"](1);
                      return _context237.abrupt("return", Promise.resolve(false));

                    case 18:
                    case "end":
                      return _context237.stop();
                  }
                }
              }, _callee237, this, [[1, 15]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "replaceWorkAva",
          value: function replaceWorkAva(webUrl) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee238() {
              var _yield$this$shttp$dow3, isFile;

              return regeneratorRuntime.wrap(function _callee238$(_context238) {
                while (1) {
                  switch (_context238.prev = _context238.next) {
                    case 0:
                      this.logger.info('[fileServ|replaceWorkAva] ()...');
                      _context238.prev = 1;
                      _context238.next = 4;
                      return this.shttp.downloadFile(webUrl, null, null, 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/workAvatarWorkTemp');

                    case 4:
                      _yield$this$shttp$dow3 = _context238.sent;
                      isFile = _yield$this$shttp$dow3.isFile;

                      if (!isFile) {
                        _context238.next = 12;
                        break;
                      }

                      _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.deleteFile({
                        path: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/workAvatar'
                      });

                      _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.rename({
                        from: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/workAvatarWorkTemp',
                        to: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/workAvatar'
                      });

                      return _context238.abrupt("return", Promise.resolve(true));

                    case 12:
                      return _context238.abrupt("return", Promise.resolve(false));

                    case 13:
                      _context238.next = 18;
                      break;

                    case 15:
                      _context238.prev = 15;
                      _context238.t0 = _context238["catch"](1);
                      return _context238.abrupt("return", Promise.resolve(false));

                    case 18:
                    case "end":
                      return _context238.stop();
                  }
                }
              }, _callee238, this, [[1, 15]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "compareReplaceAva",
          value: function compareReplaceAva(avaName, newAvaWebUrl, currentAvaSize) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee239() {
              var _yield$this$shttp$dow4, isFile, tempStat;

              return regeneratorRuntime.wrap(function _callee239$(_context239) {
                while (1) {
                  switch (_context239.prev = _context239.next) {
                    case 0:
                      this.logger.info('[fileServ|compareReplaceAvas] (' + avaName + ',' + newAvaWebUrl + ',' + currentAvaSize + ')');
                      _context239.prev = 1;
                      _context239.next = 4;
                      return this.shttp.downloadFile(newAvaWebUrl, null, null, 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/' + avaName + 'AvatarTemp');

                    case 4:
                      _yield$this$shttp$dow4 = _context239.sent;
                      isFile = _yield$this$shttp$dow4.isFile;

                      if (!isFile) {
                        _context239.next = 21;
                        break;
                      }

                      _context239.next = 9;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.stat({
                        path: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/' + avaName + 'AvatarTemp'
                      });

                    case 9:
                      tempStat = _context239.sent;

                      if (!tempStat) {
                        _context239.next = 19;
                        break;
                      }

                      if (!(tempStat.size === currentAvaSize)) {
                        _context239.next = 16;
                        break;
                      }

                      _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.deleteFile({
                        path: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/' + avaName + 'AvatarTemp'
                      });

                      return _context239.abrupt("return", Promise.resolve(false));

                    case 16:
                      _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.deleteFile({
                        path: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/' + avaName + 'Avatar'
                      });

                      _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.rename({
                        from: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/' + avaName + 'AvatarTemp',
                        to: 'file:///storage/emulated/0/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/' + avaName + 'Avatar'
                      });

                      return _context239.abrupt("return", Promise.resolve(true));

                    case 19:
                      _context239.next = 22;
                      break;

                    case 21:
                      return _context239.abrupt("return", Promise.resolve(false));

                    case 22:
                      _context239.next = 27;
                      break;

                    case 24:
                      _context239.prev = 24;
                      _context239.t0 = _context239["catch"](1);
                      return _context239.abrupt("return", Promise.resolve(false));

                    case 27:
                    case "end":
                      return _context239.stop();
                  }
                }
              }, _callee239, this, [[1, 24]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "niceBytes",
          value: function niceBytes(bytes) {
            var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
            if (bytes === 0) return 'empty';
            var k = 1024;
            var dm = decimals < 0 ? 0 : decimals;
            var sizes = ['Bytes', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
            var i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
          } //////////////////////////////////////////////////////

        }, {
          key: "getDBBUTS",
          value: function getDBBUTS(uUK) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee240() {
              var _yield$this$shttp$sen49, status, data, msTS, ts, tsD;

              return regeneratorRuntime.wrap(function _callee240$(_context240) {
                while (1) {
                  switch (_context240.prev = _context240.next) {
                    case 0:
                      this.logger.info('[fileServ|getDBBUTS] ()...');
                      _context240.next = 3;
                      return this.shttp.sendRequest('https://zer0ne.dev/sheriff/up/' + uUK + 'dbSQLite.txt', {
                        method: 'get',
                        timeout: 20,
                        responseType: 'text'
                      });

                    case 3:
                      _yield$this$shttp$sen49 = _context240.sent;
                      status = _yield$this$shttp$sen49.status;
                      data = _yield$this$shttp$sen49.data;
                      msTS = Number(data);
                      ts = Math.floor(msTS / 1000);
                      tsD = this.dT.Dut(ts);

                      if (!(status === 200)) {
                        _context240.next = 13;
                        break;
                      }

                      return _context240.abrupt("return", Promise.resolve(tsD));

                    case 13:
                      return _context240.abrupt("return", Promise.resolve('error'));

                    case 14:
                    case "end":
                      return _context240.stop();
                  }
                }
              }, _callee240, this);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "renameExistBU",
          value: function renameExistBU(rnOpts) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee241() {
              return regeneratorRuntime.wrap(function _callee241$(_context241) {
                while (1) {
                  switch (_context241.prev = _context241.next) {
                    case 0:
                      _context241.prev = 0;
                      _context241.next = 3;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.rename(rnOpts);

                    case 3:
                      return _context241.abrupt("return", Promise.resolve({
                        result: true,
                        data: 'success'
                      }));

                    case 6:
                      _context241.prev = 6;
                      _context241.t0 = _context241["catch"](0);
                      return _context241.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context241.t0.message
                      }));

                    case 9:
                    case "end":
                      return _context241.stop();
                  }
                }
              }, _callee241, null, [[0, 6]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "dbbuUpload",
          value: function dbbuUpload(uUK) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee244() {
              var _this104 = this;

              var ulSuccess, ulFail, tempBUDirRes, tempBUDirPath, tempBULocalPath, sT, cpCheck;
              return regeneratorRuntime.wrap(function _callee244$(_context244) {
                while (1) {
                  switch (_context244.prev = _context244.next) {
                    case 0:
                      this.logger.info('[fileServ|uploadFile] (' + uUK + ')...');

                      ulSuccess = function ulSuccess() {
                        _this104.evServ.publish('dbbuUploadDone', true);
                      };

                      ulFail = function ulFail() {
                        _this104.evServ.publish('dbbuUploadDone', false);
                      };

                      _context244.next = 5;
                      return this.fileDelete(this.phoneFS, 'Sheriff/temp-' + uUK + '.db');

                    case 5:
                      _context244.next = 7;
                      return this.stat(this.phoneFS, 'Sheriff');

                    case 7:
                      tempBUDirRes = _context244.sent;
                      tempBUDirPath = tempBUDirRes.data.uri;
                      tempBULocalPath = tempBUDirPath + '/temp-' + uUK + '.db';
                      sT = new Date();
                      this.evServ.subscribe('cpDone', function (mt) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(_this104, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee242() {
                          var dur, dbbuOpts, dbbuServer, dbbuLocalFileData, dbbuLocalFileUri, dbbuFilePath, buRes, buResObj, dur2;
                          return regeneratorRuntime.wrap(function _callee242$(_context242) {
                            while (1) {
                              switch (_context242.prev = _context242.next) {
                                case 0:
                                  this.evServ.destroy('cpDone');
                                  dur = this.evServ.getDur(sT);
                                  this.logger.info('[fileServ|dbbuUpload|copyTemp] (Copy Time): ' + dur + 'ms');
                                  sT = new Date();
                                  _context242.prev = 4;
                                  dbbuOpts = {
                                    fileKey: 'file',
                                    fileName: uUK + 'dbSQLite.db',
                                    httpMethod: 'post',
                                    mimeType: 'application/x-sqlite3'
                                  };
                                  dbbuServer = encodeURI('http://zer0ne.dev:6969/upload');
                                  _context242.next = 9;
                                  return this.stat(this.appFS, '/Sheriff/temp-' + uUK + '.db');

                                case 9:
                                  dbbuLocalFileData = _context242.sent;
                                  console.log(dbbuLocalFileData);
                                  dbbuLocalFileUri = dbbuLocalFileData.data.uri;
                                  console.log(dbbuLocalFileUri);
                                  dbbuFilePath = _capacitor_core__WEBPACK_IMPORTED_MODULE_4__.Capacitor.convertFileSrc(dbbuLocalFileUri);
                                  console.log(dbbuFilePath);
                                  _context242.next = 17;
                                  return this.fileTransfer.upload('file:///sdcard/Android/data/dev.zer0ne.sheriff/files/Sheriff/temp-' + uUK + '.db', dbbuServer, dbbuOpts, true);

                                case 17:
                                  buRes = _context242.sent;
                                  console.log(buRes);

                                  if (buRes.responseCode === 200) {
                                    buResObj = JSON.parse(buRes.response);
                                    dur2 = this.evServ.getDur(sT);
                                    this.logger.info('[fileServ|dbbuUpload] Sheriff FS Replied: (' + buRes.responseCode + ') - success: ' + buResObj.success + ', message: ' + buResObj.message + ' - ' + dur2 + 'ms');
                                    ulSuccess();
                                  } else {
                                    ulFail();
                                  }

                                  _context242.next = 26;
                                  break;

                                case 22:
                                  _context242.prev = 22;
                                  _context242.t0 = _context242["catch"](4);
                                  ulFail();
                                  console.log(_context242.t0);

                                case 26:
                                case "end":
                                  return _context242.stop();
                              }
                            }
                          }, _callee242, this, [[4, 22]]);
                        }));
                      });
                      cpCheck = setInterval(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(_this104, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee243() {
                          var tfData, tfMTime;
                          return regeneratorRuntime.wrap(function _callee243$(_context243) {
                            while (1) {
                              switch (_context243.prev = _context243.next) {
                                case 0:
                                  _context243.next = 2;
                                  return this.stat(this.appFS, 'Sheriff/temp-' + uUK + '.db');

                                case 2:
                                  tfData = _context243.sent.data;

                                  if (tfData !== null) {
                                    clearInterval(cpCheck);
                                    tfMTime = this.dT.format(this.dT.tD(tfData.mtime), 'hh:mm:ss:SS');
                                    this.evServ.publish('cpDone', tfMTime);
                                  }

                                case 4:
                                case "end":
                                  return _context243.stop();
                              }
                            }
                          }, _callee243, this);
                        }));
                      }, 100);
                      this.copyByPath('/data/data/dev.zer0ne.sheriff/databases/' + uUK + 'dbSQLite.db', tempBULocalPath);

                    case 14:
                    case "end":
                      return _context244.stop();
                  }
                }
              }, _callee244, this);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "getCurrentDBStat",
          value: function getCurrentDBStat(uUK) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee245() {
              var dbStatRes;
              return regeneratorRuntime.wrap(function _callee245$(_context245) {
                while (1) {
                  switch (_context245.prev = _context245.next) {
                    case 0:
                      this.logger.info('[fileServ|getCurrentDBStats] ()...');
                      _context245.prev = 1;
                      _context245.next = 4;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.stat({
                        path: '/data/data/dev.zer0ne.sheriff/databases/' + uUK + 'dbSQLite.db'
                      });

                    case 4:
                      dbStatRes = _context245.sent;

                      if (!dbStatRes) {
                        _context245.next = 9;
                        break;
                      }

                      return _context245.abrupt("return", Promise.resolve({
                        result: true,
                        data: dbStatRes
                      }));

                    case 9:
                      return _context245.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 10:
                      _context245.next = 15;
                      break;

                    case 12:
                      _context245.prev = 12;
                      _context245.t0 = _context245["catch"](1);
                      return _context245.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 15:
                    case "end":
                      return _context245.stop();
                  }
                }
              }, _callee245, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "listDBFiles",
          value: function listDBFiles() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee246() {
              var dbDirRes;
              return regeneratorRuntime.wrap(function _callee246$(_context246) {
                while (1) {
                  switch (_context246.prev = _context246.next) {
                    case 0:
                      this.logger.info('[fileServ|listDBFiles] ()...');
                      _context246.prev = 1;
                      _context246.next = 4;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.readdir({
                        path: '/data/data/dev.zer0ne.sheriff/databases'
                      });

                    case 4:
                      dbDirRes = _context246.sent;

                      if (!(dbDirRes && dbDirRes.files.length > 0)) {
                        _context246.next = 9;
                        break;
                      }

                      return _context246.abrupt("return", Promise.resolve({
                        result: true,
                        data: dbDirRes.files
                      }));

                    case 9:
                      return _context246.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 10:
                      _context246.next = 15;
                      break;

                    case 12:
                      _context246.prev = 12;
                      _context246.t0 = _context246["catch"](1);
                      this.logger.info('[fileServ|listDBFiles] (Error): ' + JSON.stringify(_context246.t0));

                    case 15:
                    case "end":
                      return _context246.stop();
                  }
                }
              }, _callee246, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "getFireDBBUFile",
          value: function getFireDBBUFile(uUK) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee250() {
              var _this105 = this;

              var fbDBUri, doDel, doCopy, preEx;
              return regeneratorRuntime.wrap(function _callee250$(_context250) {
                while (1) {
                  switch (_context250.prev = _context250.next) {
                    case 0:
                      this.logger.info('[fileServ|getFireDBBUFile] ()...');

                      fbDBUri = function fbDBUri() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(_this105, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee247() {
                          var statRes;
                          return regeneratorRuntime.wrap(function _callee247$(_context247) {
                            while (1) {
                              switch (_context247.prev = _context247.next) {
                                case 0:
                                  _context247.prev = 0;
                                  _context247.next = 3;
                                  return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.stat({
                                    path: 'Sheriff/fireDBBU.db',
                                    directory: this.phoneFS
                                  });

                                case 3:
                                  statRes = _context247.sent;

                                  if (!statRes) {
                                    _context247.next = 8;
                                    break;
                                  }

                                  return _context247.abrupt("return", statRes.uri);

                                case 8:
                                  return _context247.abrupt("return", null);

                                case 9:
                                  _context247.next = 14;
                                  break;

                                case 11:
                                  _context247.prev = 11;
                                  _context247.t0 = _context247["catch"](0);
                                  return _context247.abrupt("return", null);

                                case 14:
                                case "end":
                                  return _context247.stop();
                              }
                            }
                          }, _callee247, this, [[0, 11]]);
                        }));
                      };

                      doDel = function doDel(delUri) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(_this105, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee248() {
                          var slp;
                          return regeneratorRuntime.wrap(function _callee248$(_context248) {
                            while (1) {
                              switch (_context248.prev = _context248.next) {
                                case 0:
                                  slp = function slp() {
                                    return new Promise(function (resolve) {
                                      return setTimeout(resolve, 500);
                                    });
                                  };

                                  _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.deleteFile({
                                    path: delUri
                                  });

                                  _context248.next = 4;
                                  return slp();

                                case 4:
                                  return _context248.abrupt("return", Promise.resolve(true));

                                case 5:
                                case "end":
                                  return _context248.stop();
                              }
                            }
                          }, _callee248);
                        }));
                      };

                      doCopy = function doCopy() {
                        var cpCheckLoop = setInterval(function () {
                          return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(_this105, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee249() {
                            var fU, ulfType, ulfDataSrc, rawBlob, ulfBlob;
                            return regeneratorRuntime.wrap(function _callee249$(_context249) {
                              while (1) {
                                switch (_context249.prev = _context249.next) {
                                  case 0:
                                    _context249.next = 2;
                                    return fbDBUri();

                                  case 2:
                                    fU = _context249.sent;

                                    if (!(fU !== null)) {
                                      _context249.next = 12;
                                      break;
                                    }

                                    clearInterval(cpCheckLoop);
                                    ulfType = 'application/x-sqlite3';
                                    ulfDataSrc = _capacitor_core__WEBPACK_IMPORTED_MODULE_4__.Capacitor.convertFileSrc(fU);
                                    _context249.next = 9;
                                    return fetch(ulfDataSrc).then(function (res) {
                                      return res.blob();
                                    });

                                  case 9:
                                    rawBlob = _context249.sent;
                                    ulfBlob = rawBlob.slice(0, rawBlob.size, ulfType);
                                    this.evServ.publish('dbbuBlob', ulfBlob);

                                  case 12:
                                  case "end":
                                    return _context249.stop();
                                }
                              }
                            }, _callee249, this);
                          }));
                        }, 100);

                        _this105.copyByPath('/data/data/dev.zer0ne.sheriff/databases/' + uUK + 'dbSQLite.db', 'file:///sdcard/Android/data/dev.zer0ne.sheriff/files/Sheriff/fireDBBU.db');
                      };

                      _context250.next = 6;
                      return fbDBUri();

                    case 6:
                      preEx = _context250.sent;

                      if (!(preEx !== null)) {
                        _context250.next = 13;
                        break;
                      }

                      _context250.next = 10;
                      return doDel(preEx.toString());

                    case 10:
                      doCopy();
                      _context250.next = 14;
                      break;

                    case 13:
                      doCopy();

                    case 14:
                    case "end":
                      return _context250.stop();
                  }
                }
              }, _callee250, this);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "dlFireBUForInstall",
          value: function dlFireBUForInstall(dlURL) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee251() {
              var buInstallUri, dlRes, dlBUStatRes;
              return regeneratorRuntime.wrap(function _callee251$(_context251) {
                while (1) {
                  switch (_context251.prev = _context251.next) {
                    case 0:
                      this.logger.info('[fileServ|dlFireBUForInstall] ()...');
                      buInstallUri = 'file:///sdcard/Android/data/dev.zer0ne.sheriff/files/Sheriff/backups/fireBUInstall.db';
                      _context251.prev = 2;
                      _context251.next = 5;
                      return this.shttp.downloadFile(dlURL, null, null, buInstallUri);

                    case 5:
                      dlRes = _context251.sent;

                      if (!dlRes.isFile) {
                        _context251.next = 17;
                        break;
                      }

                      _context251.next = 9;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.stat({
                        path: buInstallUri
                      });

                    case 9:
                      dlBUStatRes = _context251.sent;

                      if (!dlBUStatRes) {
                        _context251.next = 14;
                        break;
                      }

                      return _context251.abrupt("return", Promise.resolve(true));

                    case 14:
                      return _context251.abrupt("return", Promise.resolve(false));

                    case 15:
                      _context251.next = 18;
                      break;

                    case 17:
                      return _context251.abrupt("return", Promise.resolve(false));

                    case 18:
                      _context251.next = 24;
                      break;

                    case 20:
                      _context251.prev = 20;
                      _context251.t0 = _context251["catch"](2);
                      this.logger.info('[fileServ|dlFireDBBU] (Error): ' + JSON.stringify(_context251.t0));
                      return _context251.abrupt("return", Promise.resolve(false));

                    case 24:
                    case "end":
                      return _context251.stop();
                  }
                }
              }, _callee251, this, [[2, 20]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "dlImage4SQLite",
          value: function dlImage4SQLite(dlURL, saveNameWExt) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee252() {
              var sUri, dlRes, dlImgStatRes, lcUri;
              return regeneratorRuntime.wrap(function _callee252$(_context252) {
                while (1) {
                  switch (_context252.prev = _context252.next) {
                    case 0:
                      this.logger.info('[fileServ|dlImage4SQLite] (' + dlURL + ')...');
                      sUri = 'file:///sdcard/Android/data/dev.zer0ne.sheriff/files/Sheriff/assets/' + saveNameWExt;
                      _context252.prev = 2;
                      _context252.next = 5;
                      return this.shttp.downloadFile(dlURL, null, null, sUri);

                    case 5:
                      dlRes = _context252.sent;

                      if (!dlRes.isFile) {
                        _context252.next = 18;
                        break;
                      }

                      _context252.next = 9;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.stat({
                        path: sUri
                      });

                    case 9:
                      dlImgStatRes = _context252.sent;

                      if (!dlImgStatRes) {
                        _context252.next = 15;
                        break;
                      }

                      lcUri = _capacitor_core__WEBPACK_IMPORTED_MODULE_4__.Capacitor.convertFileSrc(dlImgStatRes.uri);
                      return _context252.abrupt("return", Promise.resolve({
                        result: true,
                        uri: lcUri,
                        size: dlImgStatRes.size,
                        mtime: dlImgStatRes.mtime
                      }));

                    case 15:
                      return _context252.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 16:
                      _context252.next = 19;
                      break;

                    case 18:
                      return _context252.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 19:
                      _context252.next = 25;
                      break;

                    case 21:
                      _context252.prev = 21;
                      _context252.t0 = _context252["catch"](2);
                      this.logger.info('[fileServ|dlImage4SQLite] (Error): ' + JSON.stringify(_context252.t0));
                      return _context252.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 25:
                    case "end":
                      return _context252.stop();
                  }
                }
              }, _callee252, this, [[2, 21]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "dlFireDBBU",
          value: function dlFireDBBU(dlURL) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee253() {
              var sUri, dlRes, dlBUStatRes;
              return regeneratorRuntime.wrap(function _callee253$(_context253) {
                while (1) {
                  switch (_context253.prev = _context253.next) {
                    case 0:
                      this.logger.info('[fileServ|dlFireDBBU] (' + dlURL + ')...');
                      sUri = 'file:///sdcard/Android/data/dev.zer0ne.sheriff/files/Sheriff/backups/fireDBBU.db';
                      _context253.prev = 2;
                      _context253.next = 5;
                      return this.shttp.downloadFile(dlURL, null, null, sUri);

                    case 5:
                      dlRes = _context253.sent;

                      if (!dlRes.isFile) {
                        _context253.next = 17;
                        break;
                      }

                      _context253.next = 9;
                      return _capacitor_filesystem__WEBPACK_IMPORTED_MODULE_7__.Filesystem.stat({
                        path: sUri
                      });

                    case 9:
                      dlBUStatRes = _context253.sent;

                      if (!dlBUStatRes) {
                        _context253.next = 14;
                        break;
                      }

                      return _context253.abrupt("return", Promise.resolve({
                        result: true,
                        uri: dlBUStatRes.uri
                      }));

                    case 14:
                      return _context253.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 15:
                      _context253.next = 18;
                      break;

                    case 17:
                      return _context253.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 18:
                      _context253.next = 24;
                      break;

                    case 20:
                      _context253.prev = 20;
                      _context253.t0 = _context253["catch"](2);
                      this.logger.info('[fileServ|dlFireDBBU] (Error): ' + JSON.stringify(_context253.t0));
                      return _context253.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 24:
                    case "end":
                      return _context253.stop();
                  }
                }
              }, _callee253, this, [[2, 20]]);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "dbbuDelete",
          value: function dbbuDelete(uUK) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee255() {
              var _this106 = this;

              var delSuccess, delFail, delServerBU, buLocals, i, oldDBPath, oldStat, delOldRes;
              return regeneratorRuntime.wrap(function _callee255$(_context255) {
                while (1) {
                  switch (_context255.prev = _context255.next) {
                    case 0:
                      this.logger.info('[fileServ|budbDelete] (' + uUK + ')');

                      delSuccess = function delSuccess() {
                        _this106.evServ.publish('dbbuDeleteDone', true);
                      };

                      delFail = function delFail() {
                        _this106.evServ.publish('dbbuDeleteDone', false);
                      }; // Delete Server DBBU


                      delServerBU = function delServerBU() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(_this106, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee254() {
                          var _yield$this$shttp$sen50, _status30, data, error, resObj;

                          return regeneratorRuntime.wrap(function _callee254$(_context254) {
                            while (1) {
                              switch (_context254.prev = _context254.next) {
                                case 0:
                                  _context254.prev = 0;
                                  _context254.next = 3;
                                  return this.shttp.sendRequest('http://zer0ne.dev:6969/delete', {
                                    method: 'post',
                                    data: {
                                      uuk: uUK
                                    },
                                    headers: {
                                      uuk: uUK
                                    }
                                  });

                                case 3:
                                  _yield$this$shttp$sen50 = _context254.sent;
                                  _status30 = _yield$this$shttp$sen50.status;
                                  data = _yield$this$shttp$sen50.data;
                                  error = _yield$this$shttp$sen50.error;

                                  if (_status30 === 200) {
                                    resObj = JSON.parse(data);
                                    this.logger.info('[fileServ|dbbuDelete|ServerBU] (RESULT): [' + _status30.toString() + '] - success: ' + resObj.success + ', message: ' + resObj.message);
                                    delSuccess();
                                  } else {
                                    this.logger.info('[fileServ|dbbuDelete|ServerBU] (RESULT): [' + _status30.toString() + '] - error: ' + error);
                                    delFail();
                                  }

                                  _context254.next = 14;
                                  break;

                                case 10:
                                  _context254.prev = 10;
                                  _context254.t0 = _context254["catch"](0);
                                  this.logger.info('[fileServ|dbbuDelete|ServerBU] (RESULT): [' + status.toString() + '] - error: ' + JSON.stringify(_context254.t0));
                                  delFail();

                                case 14:
                                case "end":
                                  return _context254.stop();
                              }
                            }
                          }, _callee254, this, [[0, 10]]);
                        }));
                      }; // Delete Local DBBUs


                      buLocals = ['Sheriff/backups/' + uUK + 'dbSQLite.db', 'Sheriff/db/' + uUK + 'dbSQLite.db', 'Sheriff/temp-' + uUK + '.db'];
                      i = 0;

                    case 6:
                      if (!(i < buLocals.length)) {
                        _context255.next = 23;
                        break;
                      }

                      oldDBPath = buLocals[i];
                      _context255.next = 10;
                      return this.stat(this.appFS, oldDBPath);

                    case 10:
                      oldStat = _context255.sent.data;

                      if (!(oldStat !== null)) {
                        _context255.next = 19;
                        break;
                      }

                      this.logger.info('[fileServ|dbbuDelete|OldLocalDBs] (Found): Old DB @ ' + oldStat.uri);
                      _context255.next = 15;
                      return this.fileDelete(this.phoneFS, oldDBPath);

                    case 15:
                      delOldRes = _context255.sent;

                      if (delOldRes.result) {
                        this.logger.info('[fileServ|dbbuDelete|OldLocalDBs] (Delete): SUCCESS.');
                      } else {
                        this.logger.info('[fileServ|dbbuDelete|OldLocalDBs] (Delete): FAIL.');
                      }

                      _context255.next = 20;
                      break;

                    case 19:
                      this.logger.info('[fileServ|dbbuDelete|OldLocalDBs] (Not Found): Old DB @ ' + oldDBPath);

                    case 20:
                      i++;
                      _context255.next = 6;
                      break;

                    case 23:
                      setTimeout(function () {
                        delServerBU();
                      }, 500);

                    case 24:
                    case "end":
                      return _context255.stop();
                  }
                }
              }, _callee255, this);
            }));
          } //////////////////////////////////////////////////////

        }, {
          key: "dbbuDownload",
          value: function dbbuDownload(uUK) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee258() {
              var _this107 = this;

              var doRename, undoRename, existBU, statExistBU, sUri, dlRes, newBUStatRes, newBUObj, buDate, serverBUDate, delOLD, rNUDRes, oldBUStatRes, oldBUObj, _rNUDRes, _oldBUStatRes, _oldBUObj;

              return regeneratorRuntime.wrap(function _callee258$(_context258) {
                while (1) {
                  switch (_context258.prev = _context258.next) {
                    case 0:
                      this.logger.info('[fileServ|dbbuDownload] (' + uUK + ')...');

                      doRename = function doRename() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(_this107, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee256() {
                          var rNOpts, rNRes;
                          return regeneratorRuntime.wrap(function _callee256$(_context256) {
                            while (1) {
                              switch (_context256.prev = _context256.next) {
                                case 0:
                                  rNOpts = {
                                    from: 'Sheriff/backups/' + uUK + 'dbSQLite.db',
                                    to: 'Sheriff/backups/OLD' + uUK + 'dbSQLite.db',
                                    directory: this.phoneFS,
                                    toDirectory: this.phoneFS
                                  };
                                  _context256.next = 3;
                                  return this.renameExistBU(rNOpts);

                                case 3:
                                  rNRes = _context256.sent;

                                  if (!rNRes.result) {
                                    _context256.next = 9;
                                    break;
                                  }

                                  this.logger.info('[fileServ|dbbuDownload|RenameOldBU] (SUCCESS) - Renamed Existing BU to OLD...');
                                  return _context256.abrupt("return", Promise.resolve(true));

                                case 9:
                                  this.logger.info('[fileServ|dbbuDownload|RenameOldBU] (ERROR) - Error Renaming Existing BU to OLD.');
                                  return _context256.abrupt("return", Promise.resolve(false));

                                case 11:
                                case "end":
                                  return _context256.stop();
                              }
                            }
                          }, _callee256, this);
                        }));
                      };

                      undoRename = function undoRename() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(_this107, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee257() {
                          var rNOpts, rNRes;
                          return regeneratorRuntime.wrap(function _callee257$(_context257) {
                            while (1) {
                              switch (_context257.prev = _context257.next) {
                                case 0:
                                  rNOpts = {
                                    from: 'Sheriff/backups/OLD' + uUK + 'dbSQLite.db',
                                    to: 'Sheriff/backups/' + uUK + 'dbSQLite.db',
                                    directory: this.phoneFS,
                                    toDirectory: this.phoneFS
                                  };
                                  _context257.next = 3;
                                  return this.renameExistBU(rNOpts);

                                case 3:
                                  rNRes = _context257.sent;

                                  if (!rNRes.result) {
                                    _context257.next = 9;
                                    break;
                                  }

                                  this.logger.info('[fileServ|dbbuDownload|UndoRenameOldBU] (SUCCESS) - Renamed Existing BU [REMOVED OLD].');
                                  return _context257.abrupt("return", Promise.resolve(true));

                                case 9:
                                  this.logger.info('[fileServ|dbbuDownload|UndoRenameOldBU] (ERROR) - Error Removing OLD from Existing BU Filename.');
                                  return _context257.abrupt("return", Promise.resolve(false));

                                case 11:
                                case "end":
                                  return _context257.stop();
                              }
                            }
                          }, _callee257, this);
                        }));
                      }; // Check for Existing BU 


                      existBU = false;
                      _context258.next = 6;
                      return this.stat(this.phoneFS, this.buDir + uUK + 'dbSQLite.db');

                    case 6:
                      statExistBU = _context258.sent;
                      statExistBU.result ? existBU = true : existBU = false; // Rename Existing BU (OLD) if Exists

                      if (!existBU) {
                        _context258.next = 11;
                        break;
                      }

                      _context258.next = 11;
                      return doRename();

                    case 11:
                      ; // Attempt Server BU Download

                      sUri = 'file:///sdcard/Android/data/dev.zer0ne.sheriff/files/Sheriff/backups/' + uUK + 'dbSQLite.db';
                      _context258.prev = 13;
                      _context258.next = 16;
                      return this.shttp.downloadFile('https://zer0ne.dev/sheriff/up/uploads/' + uUK + 'dbSQLite.db', null, null, sUri);

                    case 16:
                      dlRes = _context258.sent;

                      if (!dlRes.isFile) {
                        _context258.next = 39;
                        break;
                      }

                      _context258.next = 20;
                      return this.stat(this.appFS, 'Sheriff/backups/' + uUK + 'dbSQLite.db');

                    case 20:
                      newBUStatRes = _context258.sent;
                      newBUObj = {
                        rname: uUK + 'dbSQLite.db',
                        nname: 'dbSQLite.db',
                        uri: newBUStatRes.data.uri,
                        rsize: newBUStatRes.data.size,
                        nsize: null,
                        rdate: null,
                        ndate: null,
                        ago: null,
                        store: 'both'
                      };
                      newBUObj.nsize = this.niceBytes(newBUStatRes.data.size);
                      _context258.next = 25;
                      return this.getDBBUTS(uUK);

                    case 25:
                      serverBUDate = _context258.sent;

                      if (serverBUDate !== 'error') {
                        buDate = serverBUDate;
                      } else {
                        buDate = this.dT.tD(newBUStatRes.data.mtime);
                      }

                      ;
                      newBUObj.rdate = buDate;
                      newBUObj.ndate = this.dT.format(buDate, 'd MMM yyyy h:mma');
                      newBUObj.ago = this.dT.fDtN(buDate); // Delete OLD BU

                      _context258.next = 33;
                      return this.fileDelete(this.phoneFS, 'Sheriff/backups/OLD' + uUK + 'dbSQLite.db');

                    case 33:
                      delOLD = _context258.sent;

                      if (delOLD.result) {
                        this.logger.info('[fileServ|quickDBDownload|deleteOLD] (SUCCESS) Deleted Old BU');
                      } else {
                        this.logger.info('[fileServ|quickDBDownload|deleteOLD] (FAIL) Failed to Delete Old BU');
                      }

                      ; // Return New BU File Info

                      return _context258.abrupt("return", Promise.resolve({
                        result: true,
                        data: newBUObj
                      }));

                    case 39:
                      if (!existBU) {
                        _context258.next = 60;
                        break;
                      }

                      _context258.next = 42;
                      return undoRename();

                    case 42:
                      rNUDRes = _context258.sent;

                      if (!rNUDRes) {
                        _context258.next = 56;
                        break;
                      }

                      this.logger.info('[fileRes|dbbuDownload|UndoRename) (SUCCESS): OLD Local BU Renamed - OK - Using/Returning That...');
                      _context258.next = 47;
                      return this.stat(this.appFS, 'Sheriff/backups/' + uUK + 'dbSQLite.db');

                    case 47:
                      oldBUStatRes = _context258.sent;
                      oldBUObj = {
                        rname: uUK + 'dbSQLite.db',
                        nname: 'dbSQLite.db',
                        uri: oldBUStatRes.data.uri,
                        rsize: oldBUStatRes.data.size,
                        nsize: null,
                        rdate: null,
                        ndate: null,
                        ago: null,
                        store: 'local'
                      };
                      oldBUObj.nsize = this.niceBytes(oldBUStatRes.data.size);
                      oldBUObj.rdate = this.dT.tD(oldBUStatRes.data.mtime);
                      oldBUObj.ndate = this.dT.format(oldBUObj.rdate, 'd MMM yyyy h:mma');
                      oldBUObj.ago = this.dT.fDtN(oldBUObj.rdate);
                      return _context258.abrupt("return", Promise.resolve({
                        result: true,
                        data: oldBUObj
                      }));

                    case 56:
                      this.logger.info('[fileRes|dbbuDownload|UndoRename) (FAILED): Failed to Undo Rename of OLD Local BU - Returning No BU.');
                      return _context258.abrupt("return", Promise.resolve({
                        result: false,
                        data: 404
                      }));

                    case 58:
                      _context258.next = 62;
                      break;

                    case 60:
                      this.logger.info('[fileRes|dbbuDownload) Cloud DL 404 & No OLD Local BU Found - Returning No BU.');
                      return _context258.abrupt("return", Promise.resolve({
                        result: false,
                        data: 404
                      }));

                    case 62:
                      _context258.next = 89;
                      break;

                    case 64:
                      _context258.prev = 64;
                      _context258.t0 = _context258["catch"](13);

                      if (!existBU) {
                        _context258.next = 87;
                        break;
                      }

                      _context258.next = 69;
                      return undoRename();

                    case 69:
                      _rNUDRes = _context258.sent;

                      if (!_rNUDRes) {
                        _context258.next = 83;
                        break;
                      }

                      this.logger.info('[fileRes|dbbuDownload|UndoRename) (SUCCESS): OLD Local BU Renamed - OK - Using/Returning That...');
                      _context258.next = 74;
                      return this.stat(this.appFS, 'Sheriff/backups/' + uUK + 'dbSQLite.db');

                    case 74:
                      _oldBUStatRes = _context258.sent;
                      _oldBUObj = {
                        rname: uUK + 'dbSQLite.db',
                        nname: 'dbSQLite.db',
                        uri: _oldBUStatRes.data.uri,
                        rsize: _oldBUStatRes.data.size,
                        nsize: null,
                        rdate: null,
                        ndate: null,
                        ago: null,
                        store: 'local'
                      };
                      _oldBUObj.nsize = this.niceBytes(_oldBUStatRes.data.size);
                      _oldBUObj.rdate = this.dT.tD(_oldBUStatRes.data.mtime);
                      _oldBUObj.ndate = this.dT.format(_oldBUObj.rdate, 'd MMM yyyy h:mma');
                      _oldBUObj.ago = this.dT.fDtN(_oldBUObj.rdate);
                      return _context258.abrupt("return", Promise.resolve({
                        result: true,
                        data: _oldBUObj
                      }));

                    case 83:
                      this.logger.info('[fileRes|dbbuDownload|UndoRename) (FAILED): Failed to Undo Rename of OLD Local BU - Returning No BU.');
                      return _context258.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context258.t0
                      }));

                    case 85:
                      _context258.next = 89;
                      break;

                    case 87:
                      this.logger.info('[fileRes|dbbuDownload) Cloud DL 404 & No OLD Local BU Found - Returning No BU.');
                      return _context258.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context258.t0
                      }));

                    case 89:
                    case "end":
                      return _context258.stop();
                  }
                }
              }, _callee258, this, [[13, 64]]);
            }));
          }
        }]);

        return FileSystemService;
      }();

      _FileSystemService.ctorParameters = function () {
        return [{
          type: _ionic_native_file_chooser_ngx__WEBPACK_IMPORTED_MODULE_9__.FileChooser
        }, {
          type: _events_service__WEBPACK_IMPORTED_MODULE_8__.EventsService
        }, {
          type: _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_5__.HTTP
        }, {
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_13__.NGXLogger
        }, {
          type: _storage_service__WEBPACK_IMPORTED_MODULE_6__.StorageService
        }, {
          type: _ionic_native_file_transfer_ngx__WEBPACK_IMPORTED_MODULE_1__.FileTransfer
        }, {
          type: _ionic_native_file_ngx__WEBPACK_IMPORTED_MODULE_2__.File
        }, {
          type: _ionic_native_file_path_ngx__WEBPACK_IMPORTED_MODULE_3__.FilePath
        }, {
          type: _angular_common_http__WEBPACK_IMPORTED_MODULE_14__.HttpClient
        }, {
          type: src_app_services_datetime_service__WEBPACK_IMPORTED_MODULE_0__.DateTimeService
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_15__.Platform
        }];
      };

      _FileSystemService = (0, tslib__WEBPACK_IMPORTED_MODULE_12__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_16__.Injectable)({
        providedIn: 'root'
      }) //////////////////////////////////////////////////////
      ], _FileSystemService);
      /***/
    },

    /***/
    19446:
    /*!**********************************************!*\
      !*** ./src/app/services/firebase.service.ts ***!
      \**********************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "FirebaseService": function FirebaseService() {
          return (
            /* binding */
            _FirebaseService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! src/app/services/detail.service */
      52153);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _datetime_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./datetime.service */
      12826);
      /* harmony import */


      var _storage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./storage.service */
      71188);
      /* harmony import */


      var _angular_fire_compat_auth__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! @angular/fire/compat/auth */
      1325);
      /* harmony import */


      var _angular_fire_compat_firestore__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! @angular/fire/compat/firestore */
      52182);
      /* harmony import */


      var _angular_fire_compat_storage__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! @angular/fire/compat/storage */
      43893);
      /* harmony import */


      var firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! firebase/compat/app */
      37841);
      /* harmony import */


      var _deputy_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./deputy.service */
      22092);
      /* harmony import */


      var _events_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./events.service */
      80106);
      /* harmony import */


      var _sqlite_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./sqlite.service */
      90636);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! rxjs/operators */
      68939);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! rxjs/operators */
      68307);
      /* harmony import */


      var _filesystem_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./filesystem.service */
      22904);
      /* harmony import */


      var _profileData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./profileData */
      92472);
      /* harmony import */


      var lodash__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! lodash */
      23815);
      /* harmony import */


      var lodash__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_9__);

      ; /////////////////////////////////////////////////////

      var _FirebaseService = /*#__PURE__*/function () {
        /////////////////////////////////////////////////////
        function FirebaseService(logger, fireStore, fireStorage, fireAuth, dT, storeServ, deputy, evServ, dS, sqlServ, fileServ) {
          var _this108 = this;

          _classCallCheck(this, FirebaseService);

          this.logger = logger;
          this.fireStore = fireStore;
          this.fireStorage = fireStorage;
          this.fireAuth = fireAuth;
          this.dT = dT;
          this.storeServ = storeServ;
          this.deputy = deputy;
          this.evServ = evServ;
          this.dS = dS;
          this.sqlServ = sqlServ;
          this.fileServ = fileServ; /////////////////////////////////////////////////////
          /////////////////////////////////////////////////////
          // FB User Vars

          this.fbUser = null;
          this.fbLoggedIn = false;
          this.fbUId = null;
          this.fbMsgToken = null;
          this.fbToken = null;
          this.fbProfileUpdating = false;
          this.tLoopIsActive = false; /////////////////////////////////////////////////////

          this.fixLoopCount = 0; // FB Storage Vars

          this.settingsDocId = null;
          this.appSettingsObj = null;
          this.fileUploads = [];
          this.fbStoreDirs = {
            db: 'dbBackups/',
            image: 'imageFiles/',
            other: 'otherFiles/'
          };
          this.fileLists = {
            db: [],
            image: [],
            other: []
          };
          this.gFFLInProg = false;
          this.tempUPO = null;
          this.loginMethodKey = 'notsignedin';
          this.isFileULing = false;
          this.isFileULed = false;
          this.dbCollection = fireStore.collection('dbCollection');
          this.imageCollection = fireStore.collection('imageCollection');
          this.otherCollection = fireStore.collection('otherCollection');
          this.myFiles = this.dbCollection.valueChanges();
          fireAuth.onAuthStateChanged(function (oacFBUser) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this108, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee259() {
              var uJ;
              return regeneratorRuntime.wrap(function _callee259$(_context259) {
                while (1) {
                  switch (_context259.prev = _context259.next) {
                    case 0:
                      this.logger.info("\uD83D\uDD25 [fireServ|authState] \uD83D\uDD25\uD83D\uDE92\uD83E\uDDEF (EVENT) AuthState Changed:");
                      oacFBUser !== null ? uJ = oacFBUser.toJSON() : uJ = null;

                      if (!(uJ && uJ.uid)) {
                        _context259.next = 17;
                        break;
                      }

                      if (!this.fbLoggedIn) {
                        this.fbLoggedIn = true;
                      }

                      ;
                      this.fbUser = oacFBUser;
                      this.fbUId = uJ.uid;
                      _context259.next = 9;
                      return oacFBUser.getIdToken(false);

                    case 9:
                      this.fbToken = _context259.sent;
                      this.logger.info('🔥 [fireServ|authState] 🟢 isLoggedIn: ' + this.fbLoggedIn + ', liMethodKey: ' + this.loginMethodKey);

                      if (this.loginMethodKey === 'fctokenfet' || this.loginMethodKey === 'fctokendpt') {
                        this.tempUPO = null;
                      }

                      ;
                      this.evServ.publish('fbUserAccount', {
                        isLoggedIn: this.fbLoggedIn,
                        liMethodKey: this.loginMethodKey
                      });
                      this.checkFireUserDoc(); //this.checkProfile();
                      //this.checkRefreshLoop();

                      _context259.next = 21;
                      break;

                    case 17:
                      this.logger.info('(onAuthStateChanged) - Signed Out || No User Data');

                      if (this.fbLoggedIn) {
                        this.fbLoggedIn = false;
                      }

                      ;
                      this.evServ.publish('fbUserAccount', {
                        isLoggedIn: this.fbLoggedIn,
                        liMethodKey: this.loginMethodKey
                      });

                    case 21:
                    case "end":
                      return _context259.stop();
                  }
                }
              }, _callee259, this);
            }));
          });
        } /////////////////////////////////////////////////////
        ///// AUTHENTICATION
        /////////////////////////////////////////////////////


        _createClass(FirebaseService, [{
          key: "registerUser",
          value: function registerUser(upObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee260() {
              var liURes, rUTryAgainRes;
              return regeneratorRuntime.wrap(function _callee260$(_context260) {
                while (1) {
                  switch (_context260.prev = _context260.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|registerUser] ()...');

                      if (this.fbLoggedIn) {
                        _context260.next = 28;
                        break;
                      }

                      _context260.prev = 2;
                      this.loginMethodKey = 'upregister';
                      _context260.next = 6;
                      return this.fireAuth.createUserWithEmailAndPassword(upObj.u, upObj.p);

                    case 6:
                      this.logger.info('🔥 [fireServ|registerUser] (Success) Registered OK!');
                      return _context260.abrupt("return", Promise.resolve(true));

                    case 10:
                      _context260.prev = 10;
                      _context260.t0 = _context260["catch"](2);
                      this.loginMethodKey = 'notsignedin';

                      if (!(_context260.t0.code === 'auth/email-already-in-use')) {
                        _context260.next = 24;
                        break;
                      }

                      _context260.next = 16;
                      return this.loginUserEmail(upObj);

                    case 16:
                      liURes = _context260.sent;

                      if (!liURes) {
                        _context260.next = 21;
                        break;
                      }

                      return _context260.abrupt("return", Promise.resolve(true));

                    case 21:
                      return _context260.abrupt("return", Promise.resolve(false));

                    case 22:
                      _context260.next = 26;
                      break;

                    case 24:
                      this.logger.info('🔥 [fireServ|registerUser] (Error) Registration Failed: ' + _context260.t0.code);
                      return _context260.abrupt("return", Promise.resolve(false));

                    case 26:
                      _context260.next = 42;
                      break;

                    case 28:
                      if (this.fireAuth.currentUser) {
                        _context260.next = 40;
                        break;
                      }

                      _context260.next = 31;
                      return this.registerUser(upObj);

                    case 31:
                      rUTryAgainRes = _context260.sent;

                      if (!rUTryAgainRes) {
                        _context260.next = 36;
                        break;
                      }

                      return _context260.abrupt("return", Promise.resolve(true));

                    case 36:
                      return _context260.abrupt("return", Promise.resolve(false));

                    case 37:
                      ;
                      _context260.next = 42;
                      break;

                    case 40:
                      this.logger.info('🔥 [fireServ|registerUser] (Warning) fireUser (' + this.fbUser.email + ') already logged-in');
                      return _context260.abrupt("return", Promise.resolve(true));

                    case 42:
                    case "end":
                      return _context260.stop();
                  }
                }
              }, _callee260, this, [[2, 10]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "loginUserEmail",
          value: function loginUserEmail(upObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee261() {
              var rURes, luTryAgainRes;
              return regeneratorRuntime.wrap(function _callee261$(_context261) {
                while (1) {
                  switch (_context261.prev = _context261.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|loginUserEmail] ()...');

                      if (this.fbLoggedIn) {
                        _context261.next = 28;
                        break;
                      }

                      _context261.prev = 2;
                      this.loginMethodKey = 'uplogin';
                      _context261.next = 6;
                      return this.fireAuth.signInWithEmailAndPassword(upObj.u, upObj.p);

                    case 6:
                      this.logger.info('🔥 [fireServ|loginUserEmail] (Success) LoginUserEmail OK!');
                      return _context261.abrupt("return", Promise.resolve(true));

                    case 10:
                      _context261.prev = 10;
                      _context261.t0 = _context261["catch"](2);
                      this.loginMethodKey = 'notsignedin';

                      if (!(_context261.t0.code === 'auth/user-not-found')) {
                        _context261.next = 24;
                        break;
                      }

                      _context261.next = 16;
                      return this.registerUser(upObj);

                    case 16:
                      rURes = _context261.sent;

                      if (!rURes) {
                        _context261.next = 21;
                        break;
                      }

                      return _context261.abrupt("return", Promise.resolve(true));

                    case 21:
                      return _context261.abrupt("return", Promise.resolve(false));

                    case 22:
                      _context261.next = 26;
                      break;

                    case 24:
                      this.logger.info('🔥 [fireServ|loginUserEmail] (Error) Login Failed: ' + _context261.t0.code);
                      return _context261.abrupt("return", Promise.resolve(false));

                    case 26:
                      _context261.next = 43;
                      break;

                    case 28:
                      if (this.fireAuth.currentUser) {
                        _context261.next = 41;
                        break;
                      }

                      this.fbLoggedIn = false;
                      _context261.next = 32;
                      return this.loginUserEmail(upObj);

                    case 32:
                      luTryAgainRes = _context261.sent;

                      if (!luTryAgainRes) {
                        _context261.next = 37;
                        break;
                      }

                      return _context261.abrupt("return", Promise.resolve(true));

                    case 37:
                      return _context261.abrupt("return", Promise.resolve(false));

                    case 38:
                      ;
                      _context261.next = 43;
                      break;

                    case 41:
                      this.logger.info('🔥 [fireServ|loginUserEmail] (Warning) fireUser (' + this.fbUser.email + ') already logged-in');
                      return _context261.abrupt("return", Promise.resolve(true));

                    case 43:
                    case "end":
                      return _context261.stop();
                  }
                }
              }, _callee261, this, [[2, 10]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "getAuthItem",
          value: function getAuthItem(item) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee264() {
              var _this109 = this;

              var storeO, dbO, storeRes, dbRes, _dbRes;

              return regeneratorRuntime.wrap(function _callee264$(_context264) {
                while (1) {
                  switch (_context264.prev = _context264.next) {
                    case 0:
                      storeO = function storeO() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this109, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee262() {
                          var sO;
                          return regeneratorRuntime.wrap(function _callee262$(_context262) {
                            while (1) {
                              switch (_context262.prev = _context262.next) {
                                case 0:
                                  if (!(this.deputy.uUK !== null)) {
                                    _context262.next = 11;
                                    break;
                                  }

                                  _context262.next = 3;
                                  return this.storeServ.getObject(this.deputy.uUK + 'DPAuth');

                                case 3:
                                  sO = _context262.sent;

                                  if (!sO) {
                                    _context262.next = 8;
                                    break;
                                  }

                                  return _context262.abrupt("return", Promise.resolve({
                                    result: true,
                                    data: sO
                                  }));

                                case 8:
                                  return _context262.abrupt("return", Promise.resolve({
                                    result: false
                                  }));

                                case 9:
                                  _context262.next = 12;
                                  break;

                                case 11:
                                  return _context262.abrupt("return", Promise.resolve({
                                    result: false
                                  }));

                                case 12:
                                case "end":
                                  return _context262.stop();
                              }
                            }
                          }, _callee262, this);
                        }));
                      };

                      dbO = function dbO() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this109, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee263() {
                          var doClose, getUAItemRes;
                          return regeneratorRuntime.wrap(function _callee263$(_context263) {
                            while (1) {
                              switch (_context263.prev = _context263.next) {
                                case 0:
                                  _context263.t0 = this.deputy.uUK !== null;

                                  if (!_context263.t0) {
                                    _context263.next = 5;
                                    break;
                                  }

                                  _context263.next = 4;
                                  return this.dS.getADBSetupDone();

                                case 4:
                                  _context263.t0 = _context263.sent;

                                case 5:
                                  if (!_context263.t0) {
                                    _context263.next = 26;
                                    break;
                                  }

                                  doClose = false;

                                  if (this.dS.getADBIsOpen()) {
                                    _context263.next = 11;
                                    break;
                                  }

                                  _context263.next = 10;
                                  return this.sqlServ.openAuth();

                                case 10:
                                  doClose = true;

                                case 11:
                                  ;
                                  _context263.next = 14;
                                  return this.sqlServ.getADBItem(null);

                                case 14:
                                  getUAItemRes = _context263.sent;

                                  if (!doClose) {
                                    _context263.next = 18;
                                    break;
                                  }

                                  _context263.next = 18;
                                  return this.sqlServ.closeAuth();

                                case 18:
                                  ;

                                  if (!getUAItemRes.result) {
                                    _context263.next = 23;
                                    break;
                                  }

                                  return _context263.abrupt("return", Promise.resolve({
                                    result: true,
                                    data: getUAItemRes.data
                                  }));

                                case 23:
                                  return _context263.abrupt("return", Promise.resolve({
                                    result: false
                                  }));

                                case 24:
                                  _context263.next = 27;
                                  break;

                                case 26:
                                  return _context263.abrupt("return", Promise.resolve({
                                    result: false
                                  }));

                                case 27:
                                case "end":
                                  return _context263.stop();
                              }
                            }
                          }, _callee263, this);
                        }));
                      };

                      if (!(item === 'dptoken')) {
                        _context264.next = 24;
                        break;
                      }

                      if (!(this.deputy.Client.auth.access_token !== null)) {
                        _context264.next = 7;
                        break;
                      }

                      return _context264.abrupt("return", Promise.resolve({
                        result: true,
                        data: this.deputy.Client.auth.access_token
                      }));

                    case 7:
                      _context264.next = 9;
                      return storeO();

                    case 9:
                      storeRes = _context264.sent;

                      if (!storeRes.result) {
                        _context264.next = 14;
                        break;
                      }

                      return _context264.abrupt("return", Promise.resolve({
                        result: true,
                        data: storeRes.data.access_token
                      }));

                    case 14:
                      _context264.next = 16;
                      return dbO();

                    case 16:
                      dbRes = _context264.sent;

                      if (!dbRes.result) {
                        _context264.next = 21;
                        break;
                      }

                      return _context264.abrupt("return", Promise.resolve({
                        result: true,
                        data: dbRes.data.dp_token
                      }));

                    case 21:
                      return _context264.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 22:
                      _context264.next = 37;
                      break;

                    case 24:
                      if (!(item === 'up')) {
                        _context264.next = 37;
                        break;
                      }

                      if (!(this.tempUPO !== null)) {
                        _context264.next = 29;
                        break;
                      }

                      return _context264.abrupt("return", Promise.resolve({
                        result: true,
                        data: this.tempUPO
                      }));

                    case 29:
                      _context264.next = 31;
                      return dbO();

                    case 31:
                      _dbRes = _context264.sent;

                      if (!_dbRes.result) {
                        _context264.next = 36;
                        break;
                      }

                      return _context264.abrupt("return", Promise.resolve({
                        result: true,
                        data: {
                          u: _dbRes.data.dp_username,
                          p: _dbRes.data.dp_password
                        }
                      }));

                    case 36:
                      return _context264.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 37:
                    case "end":
                      return _context264.stop();
                  }
                }
              }, _callee264, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "setFEToken",
          value: function setFEToken(msObj, feT) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee265() {
              return regeneratorRuntime.wrap(function _callee265$(_context265) {
                while (1) {
                  switch (_context265.prev = _context265.next) {
                    case 0:
                      if (msObj.l) {
                        this.deputy.SServer.FCT.fe_token = feT;
                      }

                      ;

                      if (msObj.s) {
                        this.storeServ.setItem('currentFEToken', feT);
                      }

                      ;

                      if (!msObj.d) {
                        _context265.next = 13;
                        break;
                      }

                      _context265.next = 7;
                      return this.dS.getUDBSetupDone();

                    case 7:
                      _context265.t0 = _context265.sent;

                      if (!_context265.t0) {
                        _context265.next = 10;
                        break;
                      }

                      _context265.t0 = this.dS.getUDBIsOpen();

                    case 10:
                      if (!_context265.t0) {
                        _context265.next = 13;
                        break;
                      }

                      _context265.next = 13;
                      return this.sqlServ.setFEToken(feT);

                    case 13:
                      ;
                      return _context265.abrupt("return", Promise.resolve(true));

                    case 15:
                    case "end":
                      return _context265.stop();
                  }
                }
              }, _callee265, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "getFEToken",
          value: function getFEToken() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee266() {
              var feTs, feT, mustSet, localRes, storeRes, dbRes, allS, _loop3, i;

              return regeneratorRuntime.wrap(function _callee266$(_context266) {
                while (1) {
                  switch (_context266.prev = _context266.next) {
                    case 0:
                      feTs = [], mustSet = {
                        l: false,
                        s: false,
                        d: false
                      };
                      localRes = this.deputy.SServer.FCT.fe_token;

                      if (localRes) {
                        feTs.push(localRes);
                      } else {
                        mustSet.l = true;
                      }

                      ;
                      _context266.next = 6;
                      return this.storeServ.getItem('currentFEToken');

                    case 6:
                      storeRes = _context266.sent;

                      if (storeRes) {
                        feTs.push(storeRes);
                      } else {
                        mustSet.s = true;
                      }

                      ;
                      _context266.next = 11;
                      return this.dS.getUDBSetupDone();

                    case 11:
                      _context266.t0 = _context266.sent;

                      if (!_context266.t0) {
                        _context266.next = 14;
                        break;
                      }

                      _context266.t0 = this.dS.getUDBIsOpen();

                    case 14:
                      if (!_context266.t0) {
                        _context266.next = 19;
                        break;
                      }

                      _context266.next = 17;
                      return this.sqlServ.getFEToken();

                    case 17:
                      dbRes = _context266.sent;

                      if (dbRes.result && dbRes.data && dbRes.data.length === 16) {
                        feTs.push(dbRes.data);
                      } else {
                        mustSet.d = true;
                      }

                    case 19:
                      ;

                      if (!(feTs.length > 0)) {
                        _context266.next = 34;
                        break;
                      }

                      allS = true;

                      _loop3 = function _loop3(i) {
                        if (!feTs.every(function (id) {
                          return id === feTs[i];
                        })) {
                          allS = false;
                        }
                      };

                      for (i = 0; i < feTs.length; i++) {
                        _loop3(i);
                      }

                      ;

                      if (!allS) {
                        mustSet.l = true;
                        mustSet.s = true;
                        mustSet.d = true;
                        feT = String(lodash__WEBPACK_IMPORTED_MODULE_9__.head(lodash__WEBPACK_IMPORTED_MODULE_9__(feTs).countBy().entries().maxBy(lodash__WEBPACK_IMPORTED_MODULE_9__.last)));
                      } else {
                        feT = feTs[0];
                      }

                      ;

                      if (!(mustSet.l || mustSet.s || mustSet.d)) {
                        _context266.next = 30;
                        break;
                      }

                      _context266.next = 30;
                      return this.setFEToken(mustSet, feT);

                    case 30:
                      ;
                      return _context266.abrupt("return", Promise.resolve({
                        result: true,
                        data: feT
                      }));

                    case 34:
                      return _context266.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 35:
                    case "end":
                      return _context266.stop();
                  }
                }
              }, _callee266, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "loginCustomToken",
          value: function loginCustomToken() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee267() {
              var FET, FCT, gFETokenRes, getDPTokenRes, getFCTRes, lctTryAgainRes;
              return regeneratorRuntime.wrap(function _callee267$(_context267) {
                while (1) {
                  switch (_context267.prev = _context267.next) {
                    case 0:
                      this.logger.info('[fireServ|loginCustToken] ()...');

                      if (this.fbLoggedIn) {
                        _context267.next = 54;
                        break;
                      }

                      FET = null, FCT = null;
                      _context267.next = 5;
                      return this.getFEToken();

                    case 5:
                      gFETokenRes = _context267.sent;

                      if (!gFETokenRes.result) {
                        _context267.next = 10;
                        break;
                      }

                      FET = gFETokenRes.data;
                      _context267.next = 14;
                      break;

                    case 10:
                      _context267.next = 12;
                      return this.getAuthItem('dptoken');

                    case 12:
                      getDPTokenRes = _context267.sent;

                      if (getDPTokenRes.result) {
                        FET = getDPTokenRes.data;
                        this.loginMethodKey = 'fctokendpt';
                      } else {
                        FET = null;
                      }

                    case 14:
                      ;

                      if (!(FET !== null)) {
                        _context267.next = 49;
                        break;
                      }

                      _context267.next = 18;
                      return this.deputy.getFCT(FET);

                    case 18:
                      getFCTRes = _context267.sent;

                      if (!getFCTRes.result) {
                        _context267.next = 26;
                        break;
                      }

                      FCT = getFCTRes.data.custom_token;

                      if (!(this.loginMethodKey === 'ctokendpt')) {
                        _context267.next = 24;
                        break;
                      }

                      _context267.next = 24;
                      return this.getFEToken();

                    case 24:
                      _context267.next = 27;
                      break;

                    case 26:
                      FCT = null;

                    case 27:
                      ;

                      if (!(FCT !== null)) {
                        _context267.next = 44;
                        break;
                      }

                      _context267.prev = 29;
                      this.loginMethodKey = 'fctokenfet';
                      _context267.next = 33;
                      return this.fireAuth.signInWithCustomToken(FCT);

                    case 33:
                      this.logger.info('[fireServ|loginCustomToken] 🔥🟢🎟️ (LOGIN SUCCESS): Method = Custom Token');
                      return _context267.abrupt("return", Promise.resolve(true));

                    case 37:
                      _context267.prev = 37;
                      _context267.t0 = _context267["catch"](29);
                      this.loginMethodKey = 'notsignedin';
                      this.logger.info('[fireServ|loginCustomToken] 🔥🟠🎟️ (LOGIN WARNING): CUSTOM TOKEN FAILED: ' + JSON.stringify(_context267.t0));
                      return _context267.abrupt("return", Promise.resolve(false));

                    case 42:
                      _context267.next = 47;
                      break;

                    case 44:
                      this.loginMethodKey = 'notsignedin';
                      this.logger.info('[fireServ|loginCustomToken] 🔥🟠🎟️ (LOGIN WARNING): CUSTOM TOKEN FAILED - getFCT(token) returned result:false');
                      return _context267.abrupt("return", Promise.resolve(false));

                    case 47:
                      _context267.next = 52;
                      break;

                    case 49:
                      this.loginMethodKey = 'notsignedin';
                      this.logger.info('[fireServ|loginCustomToken] 🔥🟠🎟️ (LOGIN WARNING): CUSTOM TOKEN FAILED - No Saved FET||DPT');
                      return _context267.abrupt("return", Promise.resolve(false));

                    case 52:
                      _context267.next = 69;
                      break;

                    case 54:
                      if (this.fireAuth.currentUser) {
                        _context267.next = 67;
                        break;
                      }

                      this.fbLoggedIn = false;
                      _context267.next = 58;
                      return this.loginCustomToken();

                    case 58:
                      lctTryAgainRes = _context267.sent;

                      if (!lctTryAgainRes) {
                        _context267.next = 63;
                        break;
                      }

                      return _context267.abrupt("return", Promise.resolve(true));

                    case 63:
                      return _context267.abrupt("return", Promise.resolve(false));

                    case 64:
                      ;
                      _context267.next = 69;
                      break;

                    case 67:
                      this.logger.info('🔥 [fireServ|loginCustomToken] (Warning) fireUser (' + this.fbUser.email + ') already logged-in');
                      return _context267.abrupt("return", Promise.resolve(true));

                    case 69:
                    case "end":
                      return _context267.stop();
                  }
                }
              }, _callee267, this, [[29, 37]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "logoutUser",
          value: function logoutUser() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee268() {
              var oldlMK, loTryAgainRes;
              return regeneratorRuntime.wrap(function _callee268$(_context268) {
                while (1) {
                  switch (_context268.prev = _context268.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|logoutUser] ()...');
                      oldlMK = this.loginMethodKey;

                      if (!this.fbLoggedIn) {
                        _context268.next = 18;
                        break;
                      }

                      _context268.prev = 3;
                      this.loginMethodKey = 'notsignedin';
                      _context268.next = 7;
                      return this.fireAuth.signOut();

                    case 7:
                      this.logger.info('🔥 [fireServ|logoutUser] (Success) Logged out OK!');
                      return _context268.abrupt("return", Promise.resolve(true));

                    case 11:
                      _context268.prev = 11;
                      _context268.t0 = _context268["catch"](3);
                      this.loginMethodKey = oldlMK;
                      this.logger.info('🔥 [fireServ|logoutUser] (Error) Failed to Logout: ' + JSON.stringify(_context268.t0));
                      return _context268.abrupt("return", Promise.resolve(false));

                    case 16:
                      _context268.next = 34;
                      break;

                    case 18:
                      if (!this.fireAuth.currentUser) {
                        _context268.next = 31;
                        break;
                      }

                      this.fbLoggedIn = true;
                      _context268.next = 22;
                      return this.logoutUser();

                    case 22:
                      loTryAgainRes = _context268.sent;

                      if (!loTryAgainRes) {
                        _context268.next = 27;
                        break;
                      }

                      return _context268.abrupt("return", Promise.resolve(true));

                    case 27:
                      return _context268.abrupt("return", Promise.resolve(false));

                    case 28:
                      ;
                      _context268.next = 34;
                      break;

                    case 31:
                      this.logger.info('🔥 [fireServ|registerUser] (Warning) User is NOT logged-in');
                      this.fbLoggedIn = false;
                      Promise.resolve(true);

                    case 34:
                    case "end":
                      return _context268.stop();
                  }
                }
              }, _callee268, this, [[3, 11]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "getUser",
          value: function getUser() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee269() {
              return regeneratorRuntime.wrap(function _callee269$(_context269) {
                while (1) {
                  switch (_context269.prev = _context269.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|getUser] ()...');
                      _context269.next = 3;
                      return this.fireAuth.currentUser;

                    case 3:
                      this.fbUser = _context269.sent;
                      return _context269.abrupt("return", Promise.resolve(this.fbUser));

                    case 5:
                    case "end":
                      return _context269.stop();
                  }
                }
              }, _callee269, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "refreshToken",
          value: function refreshToken() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee270() {
              return regeneratorRuntime.wrap(function _callee270$(_context270) {
                while (1) {
                  switch (_context270.prev = _context270.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|refreshToken] ()...');
                      _context270.next = 3;
                      return this.fireAuth.currentUser;

                    case 3:
                      _context270.sent.getIdToken(true);

                    case 4:
                    case "end":
                      return _context270.stop();
                  }
                }
              }, _callee270, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "checkRefreshLoop",
          value: function checkRefreshLoop() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee272() {
              var _this110 = this;

              var tokenCheckLoop, doCheck;
              return regeneratorRuntime.wrap(function _callee272$(_context272) {
                while (1) {
                  switch (_context272.prev = _context272.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|checkRefreshLoop] (Started)...');

                      doCheck = function doCheck() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this110, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee271() {
                          var fU, fUTokenRes, expUTS, expDate, nowDate, nowUTS, expInStr;
                          return regeneratorRuntime.wrap(function _callee271$(_context271) {
                            while (1) {
                              switch (_context271.prev = _context271.next) {
                                case 0:
                                  _context271.next = 2;
                                  return this.fireAuth.currentUser;

                                case 2:
                                  fU = _context271.sent;
                                  _context271.next = 5;
                                  return fU.getIdTokenResult(false);

                                case 5:
                                  fUTokenRes = _context271.sent;
                                  expUTS = this.fbUser.multiFactor.user.stsTokenManager.expirationTime / 1000;
                                  expDate = this.dT.Dut(expUTS);
                                  nowDate = new Date();
                                  nowUTS = this.dT.getUT(nowDate);
                                  expInStr = this.dT.DifDurStr(expDate, nowDate);
                                  this.logger.info('🔥 [fireServ|checkTokenFresh] (Expires In): ' + expInStr);

                                  if (expUTS - nowUTS < 600) {
                                    this.logger.info('🔥 [fireServ|checkTokenFresh] !!! REFRESHING FireBase Token...');
                                    this.refreshToken();
                                  } else {
                                    this.logger.info('🔥 [fireServ|checkTokenFresh] Token Fresh - Skipping Refresh.');
                                  }

                                case 13:
                                case "end":
                                  return _context271.stop();
                              }
                            }
                          }, _callee271, this);
                        }));
                      };

                      if (!this.tLoopIsActive) {
                        if (this.fbLoggedIn && this.fireAuth.currentUser !== null) {
                          this.tLoopIsActive = true;
                          tokenCheckLoop = setInterval(function () {
                            doCheck();
                          }, 600000);
                        } else {
                          clearInterval(tokenCheckLoop);
                        }

                        ;
                      }

                      ;

                    case 4:
                    case "end":
                      return _context272.stop();
                  }
                }
              }, _callee272, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "checkProfile",
          value: function checkProfile() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee276() {
              var _this111 = this;

              var doneCount, verifyURLSub, verifyRestoreSub, fb2DBArr, webPic, wPRes, defaultP, fbU, myP, telPref, didChange, newPO, cORes, cN, _i25, _Object$entries7, _Object$entries7$_i, key, value, cK, cPrefNoP, nowPhoneStr, finalPStr, myPO, fbPO, i, myK, myV, fbK, fbV, verifyActiveSub;

              return regeneratorRuntime.wrap(function _callee276$(_context276) {
                while (1) {
                  switch (_context276.prev = _context276.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|checkProfile] ()...');

                      if (this.fbProfileUpdating) {
                        _context276.next = 52;
                        break;
                      }

                      doneCount = 0;
                      this.fbProfileUpdating = true;
                      this.evServ.subscribe('allFBUPDone', function () {
                        doneCount++;

                        if (doneCount === 2) {
                          _this111.logger.info('🔥 [fireServ|checkProfile] Check Finished 2/2 - Unlocking...');

                          _this111.fbProfileUpdating = false;

                          _this111.evServ.destroy('allFBUPDone');
                        } else {
                          _this111.logger.info('🔥 [fireServ|checkProfile] STAGE #' + doneCount + ' - Waiting...');
                        }
                      });
                      verifyURLSub = this.evServ.subscribe('myAppUrlOpen', function (urlOEvent) {
                        var uO = urlOEvent;

                        _this111.logger.info('🔥 [fireServ|checkProfile] UrlOpenRes - [url]: ' + uO.url);
                      });
                      verifyRestoreSub = this.evServ.subscribe('myAppRestoredResult', function (restResEvent) {
                        var rR = restResEvent;

                        for (var _i24 = 0, _Object$entries6 = Object.entries(rR); _i24 < _Object$entries6.length; _i24++) {
                          var _Object$entries6$_i = _slicedToArray(_Object$entries6[_i24], 2),
                              key = _Object$entries6$_i[0],
                              value = _Object$entries6$_i[1];

                          if (value && value !== null) {
                            _this111.logger.info('🔥 [fireServ|checkProfile] RestoredRes - [' + key + ']: ' + value);
                          }
                        }
                      }); //------------------------------

                      fb2DBArr = [{
                        fb: 'displayName',
                        db: 'dname'
                      }, {
                        fb: 'email',
                        db: 'email'
                      }, {
                        fb: 'phoneNumber',
                        db: 'phone'
                      }, {
                        fb: 'photoURL',
                        db: null
                      }];
                      _context276.next = 10;
                      return this.deputy.getMyWebPhoto();

                    case 10:
                      wPRes = _context276.sent;

                      if (wPRes.result) {
                        webPic = wPRes.data;
                      }

                      ;
                      defaultP = {
                        dname: this.dS.meName,
                        email: this.dS.meEmail,
                        phone: this.dS.mePhone,
                        photo: webPic
                      };
                      _context276.next = 16;
                      return this.fireAuth.currentUser;

                    case 16:
                      fbU = _context276.sent;
                      myP = null;
                      telPref = null;
                      didChange = false;
                      newPO = {};
                      _context276.next = 23;
                      return this.sqlServ.hasProfile();

                    case 23:
                      if (!_context276.sent) {
                        _context276.next = 29;
                        break;
                      }

                      _context276.next = 26;
                      return this.sqlServ.getProfile();

                    case 26:
                      myP = _context276.sent.data;
                      _context276.next = 30;
                      break;

                    case 29:
                      myP = defaultP;

                    case 30:
                      ;

                      if (!(myP.hasOwnProperty('phone') && myP.hasOwnProperty('country') && myP.phone.charAt(0) !== '+')) {
                        _context276.next = 36;
                        break;
                      }

                      _context276.next = 34;
                      return this.sqlServ.getSingleCountry(myP['country']);

                    case 34:
                      cORes = _context276.sent;

                      if (cORes.result) {
                        cN = cORes.data['Country'];

                        for (_i25 = 0, _Object$entries7 = Object.entries(_profileData__WEBPACK_IMPORTED_MODULE_8__.c2DCObj); _i25 < _Object$entries7.length; _i25++) {
                          _Object$entries7$_i = _slicedToArray(_Object$entries7[_i25], 2), key = _Object$entries7$_i[0], value = _Object$entries7$_i[1];
                          cK = key.toString();

                          if (cK === cN) {
                            telPref = value.toString();
                          }
                        }
                      }

                    case 36:
                      ;

                      if (telPref !== null) {
                        cPrefNoP = telPref.replace('+', '');
                        nowPhoneStr = myP['phone'].replace(' ', '').replace('(', '').replace(')', '').trim();

                        if (nowPhoneStr.substring(0, 2) === cPrefNoP) {
                          finalPStr = '+' + nowPhoneStr;
                        } else {
                          finalPStr = telPref + nowPhoneStr;
                        }

                        ;
                        myP['phone'] = finalPStr;
                      }

                      ;

                      if (myP !== null && fbU !== null && fbU.providerData.length > 0) {
                        myPO = myP;
                        fbPO = fbU.providerData[0];

                        for (i = 0; i < fb2DBArr.length; i++) {
                          myK = fb2DBArr[i]['db'];
                          myV = myPO[myK];
                          fbK = fb2DBArr[i]['fb'];
                          fbV = fbPO[fbK];

                          if (fbK !== 'photoURL') {
                            if (fbV !== myV) {
                              newPO[fbK] = myV;
                              didChange = true;
                            } else {
                              newPO[fbK] = fbV;
                            }
                          } else {
                            if (fbK !== webPic) {
                              newPO[fbK] = webPic;
                              didChange = true;
                            } else {
                              newPO[fbK] = fbV;
                            }
                          }
                        }

                        ;

                        if (didChange) {
                          fbU.updateProfile(newPO).then(function () {
                            _this111.logger.info('🔥 [fireServ|checkProfile] (Profile Updated) - SUCCESS!');

                            _this111.evServ.publish('allFBUPDone', 'updateP');
                          })["catch"](function () {
                            _this111.logger.info('🔥 [fireServ|checkProfile] (Error) Updating Profile Failed');

                            _this111.evServ.publish('allFBUPDone', 'updateP');
                          });
                        } else {
                          this.logger.info('🔥 [fireServ|checkProfile] (Unchanged) Skipping...');
                        }
                      } else {
                        this.logger.info('🔥 [fireServ|checkProfile] (Error) Failed to Retrieve FB/SQL Profile(s)');
                        this.evServ.publish('allFBUPDone', 'updateP');
                      }

                      ; //------------------------------

                      if (!(!fbU.emailVerified && !this.loginMethodKey.includes('fctoken'))) {
                        _context276.next = 47;
                        break;
                      }

                      verifyActiveSub = this.evServ.subscribe('myAppStateActive', function (tf) {
                        if (tf) {
                          setTimeout(function () {
                            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this111, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee275() {
                              var _this112 = this;

                              var newCUser;
                              return regeneratorRuntime.wrap(function _callee275$(_context275) {
                                while (1) {
                                  switch (_context275.prev = _context275.next) {
                                    case 0:
                                      _context275.next = 2;
                                      return this.fireAuth.currentUser;

                                    case 2:
                                      newCUser = _context275.sent;
                                      newCUser.reload().then(function () {
                                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this112, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee274() {
                                          var _this113 = this;

                                          return regeneratorRuntime.wrap(function _callee274$(_context274) {
                                            while (1) {
                                              switch (_context274.prev = _context274.next) {
                                                case 0:
                                                  this.evServ.showToast('success', 'Email Successfully Verified');
                                                  _context274.next = 3;
                                                  return this.logoutUser();

                                                case 3:
                                                  setTimeout(function () {
                                                    return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this113, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee273() {
                                                      return regeneratorRuntime.wrap(function _callee273$(_context273) {
                                                        while (1) {
                                                          switch (_context273.prev = _context273.next) {
                                                            case 0:
                                                              this.evServ.publish('allFBUPDone', 'emailV');
                                                              _context273.next = 3;
                                                              return this.loginCustomToken();

                                                            case 3:
                                                              verifyActiveSub.unsubscribe();

                                                            case 4:
                                                            case "end":
                                                              return _context273.stop();
                                                          }
                                                        }
                                                      }, _callee273, this);
                                                    }));
                                                  }, 1000);

                                                case 4:
                                                case "end":
                                                  return _context274.stop();
                                              }
                                            }
                                          }, _callee274, this);
                                        }));
                                      });

                                    case 4:
                                    case "end":
                                      return _context275.stop();
                                  }
                                }
                              }, _callee275, this);
                            }));
                          }, 1000);
                        }
                      });
                      _context276.next = 45;
                      return fbU.sendEmailVerification().then(function () {
                        _this111.evServ.showToast('email', 'Verification Sent: ' + _this111.dS.meEmail);
                      })["catch"](function () {
                        _this111.evServ.showToast('error', 'Error Verifying Email');

                        _this111.evServ.publish('allFBUPDone', 'emailV');
                      });

                    case 45:
                      _context276.next = 50;
                      break;

                    case 47:
                      verifyURLSub.unsubscribe();
                      verifyRestoreSub.unsubscribe();
                      this.evServ.publish('allFBUPDone', 'emailV');

                    case 50:
                      _context276.next = 53;
                      break;

                    case 52:
                      this.logger.info('🔥 [fireServ|checkProfile] Already Checking - No Doubles - Ignoring Duplicate Request.');

                    case 53:
                    case "end":
                      return _context276.stop();
                  }
                }
              }, _callee276, this);
            }));
          } /////////////////////////////////////////////////////
          ///// STORAGE
          /////////////////////////////////////////////////////

        }, {
          key: "gMData",
          value: function gMData(filePath) {
            var sRef = firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__["default"].storage().ref();
            var fRef = sRef.child(filePath);
            fRef.getMetadata().then(function (metaD) {
              return metaD;
            })["catch"](function () {
              return null;
            });
          }
        }, {
          key: "cloudErr",
          value: function cloudErr(code) {
            var errMsg = {
              'storage/unknown': 'Unknown Error',
              'storage/object-not-found': 'No Object Exists',
              'storage/bucket-not-found': 'No Bucket Configured',
              'storage/project-not-found': 'No Project Configured',
              'storage/quota-exceeded': 'Quota Exceeded',
              'storage/unauthenticated': 'User Unauthenticated',
              'storage/unauthorized': 'User Unauthorized',
              'storage/retry-limit-exceeded': 'Operation Timeout',
              'storage/invalid-checksum': 'Checksum Mismatch',
              'storage/canceled': 'Canceled Operation',
              'storage/invalid-event-name': 'Invalid Event Name',
              'storage/invalid-url': '	Invalid URL provided',
              'storage/invalid-argument': 'Invalid Upload Argument',
              'storage/no-default-bucket': 'No Bucket Setup',
              'storage/cannot-slice-blob': 'Local File Changed',
              'storage/server-file-wrong-size': 'Client/Server Filesize Mismatch'
            };
            return errMsg[code];
          } /////////////////////////////////////////////////////

        }, {
          key: "getFSFilesList",
          value: function getFSFilesList(cat) {
            var _this114 = this;

            if (!this.gFFLInProg) {
              this.logger.info('🔥 [fireServ|getFirestoreFilesList] (' + cat + ')...');
              this.gFFLInProg = true;
              this.fileLists[cat] = [];
              var storeDirRef = this.fireStorage.storage.ref(this.fbStoreDirs[cat]);
              storeDirRef.listAll().then(function (result) {
                result.items.forEach(function (fFile) {
                  return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this114, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee277() {
                    var fFMD, fFListObj;
                    return regeneratorRuntime.wrap(function _callee277$(_context277) {
                      while (1) {
                        switch (_context277.prev = _context277.next) {
                          case 0:
                            _context277.next = 2;
                            return fFile.getMetadata();

                          case 2:
                            fFMD = _context277.sent;
                            fFListObj = {
                              fileRef: fFile,
                              fileCat: cat,
                              fileName: fFile.name,
                              filePath: fFile.fullPath,
                              fileType: fFMD.contentType,
                              fileSize: fFMD.size,
                              fileDate: fFMD.updated
                            };
                            this.fileLists[cat].push(fFListObj);

                          case 5:
                          case "end":
                            return _context277.stop();
                        }
                      }
                    }, _callee277, this);
                  }));
                });

                _this114.evServ.publish('fireServGetList', {
                  listCat: cat,
                  listResult: true,
                  listData: _this114.fileLists[cat]
                });
              })["catch"](function () {
                _this114.evServ.publish('fireServGetList', {
                  listCat: cat,
                  listResult: false
                });
              });
            } else {
              this.logger.info('🔥 [fireServ|getFSFilesList] (Skipping) Already In Progress.');
            }
          } /////////////////////////////////////////////////////

        }, {
          key: "checkFSDBBU",
          value: function checkFSDBBU() {
            var _this115 = this;

            this.logger.info('🔥 [fireServ|getFSDBBU] ()...');
            var userDBBURef = this.fireStorage.storage.ref().child('dbBackups/' + this.deputy.userEmail + '.db');
            userDBBURef.getMetadata().then(function (meta) {
              var buMeta = meta;
              userDBBURef.getDownloadURL().then(function (dlurl) {
                var buURL = dlurl;

                _this115.evServ.publish('checkFSDBBU', {
                  result: true,
                  data: {
                    meta: buMeta,
                    dlurl: buURL
                  }
                });
              })["catch"](function (error) {
                _this115.evServ.publish('checkFSDBBU', {
                  result: false,
                  data: error.code
                });
              });
            })["catch"](function (error) {
              _this115.evServ.publish('checkFSDBBU', {
                result: false,
                data: error.code
              });
            });
          } /////////////////////////////////////////////////////

        }, {
          key: "storeFilesFirebase",
          value: function storeFilesFirebase(cat, ulFile) {
            var _this116 = this;

            var fileId = this.fireStore.createId();
            var fCollectionPty;

            if (cat === 'db') {
              fCollectionPty = 'dbCollection';
            } else if (cat === 'image') {
              fCollectionPty = 'imageCollection';
            } else {
              fCollectionPty = 'otherCollection';
            }

            ;
            this[fCollectionPty].doc(fileId).set(ulFile).then(function (sffRes) {
              _this116.logger.info('[fireStore|storeFilesFirebase] (Success): ' + sffRes);
            })["catch"](function (sffErr) {
              _this116.logger.info('[fireStore|storeFilesFirebase] (Error): ' + sffErr);
            });
          } /////////////////////////////////////////////////////

        }, {
          key: "uploadFile",
          value: function uploadFile(cat, event) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee279() {
              var _this117 = this;

              var file, sufBL, preL, sufL, tPre, tSuf, getSDir, catN, storePath, genFileName, getFExt, getFName, fileName, filePathNameExt, fileRef;
              return regeneratorRuntime.wrap(function _callee279$(_context279) {
                while (1) {
                  switch (_context279.prev = _context279.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|uploadFile] (' + cat + ',event)...');
                      file = event.item(0); // File Validation /////

                      sufBL = ['java-archive', 'javascript', 'zip', 'gzip', 'vnd-rar', '7z', 'vnd.ms-excel', 'vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'x-tar', 'x-shockwave', 'x-sh'];
                      preL = ['image', 'text', 'audio', 'video'];
                      sufL = ['x-sqlite3', 'vnd-sqlite3', 'json', 'ld+json', 'pdf'];
                      tPre = file.type.split('/')[0];
                      tSuf = file.type.split('/')[1];

                      if (!(!preL.includes(tPre) && !sufL.includes(tSuf) || sufBL.includes(tSuf))) {
                        _context279.next = 10;
                        break;
                      }

                      this.evServ.showToast('error', 'Unsupported File Type');
                      return _context279.abrupt("return");

                    case 10:
                      ;
                      this.isFileULing = true;
                      this.isFileULed = false; // Storage Path /////

                      getSDir = function getSDir(cat) {
                        return _this117.fbStoreDirs[cat];
                      };

                      if (tSuf === sufL[0] || tSuf === sufL[1]) {
                        catN = 'db';
                      } else if (tPre === 'image') {
                        catN = 'image';
                      } else {
                        catN = 'other';
                      }

                      ;
                      storePath = getSDir(catN); // File Name /////

                      genFileName = function genFileName(cat) {
                        var fbUIDStr = _this117.fbUId;

                        var dateTStr = _this117.dT.format(new Date(), 'ddMyyHHmmssSS');

                        var catSuffix;

                        if (cat === 'db') {
                          catSuffix = 'dBBackup';
                        } else if (cat === 'image') {
                          catSuffix = 'Image';
                        } else {
                          catSuffix = 'File';
                        }

                        ;
                        return dateTStr + '-' + catSuffix + '-' + fbUIDStr;
                      };

                      getFExt = file.name.split('.').pop();
                      getFName = genFileName(catN);
                      fileName = getFName + '.' + getFExt; // File Ref /////

                      filePathNameExt = storePath + fileName;
                      fileRef = this.fireStorage.ref(filePathNameExt); // Upload Task /////

                      this.ulTask = this.fireStorage.upload(filePathNameExt, file); // Show Progress /////

                      this.ulPercVal = this.ulTask.percentageChanges();
                      this.evServ.publish('ulPV', this.ulPercVal);
                      this.ulTrackSnapshot = this.ulTask.snapshotChanges().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.finalize)(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this117, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee278() {
                          var _this118 = this;

                          var ulFileMeta;
                          return regeneratorRuntime.wrap(function _callee278$(_context278) {
                            while (1) {
                              switch (_context278.prev = _context278.next) {
                                case 0:
                                  _context278.next = 2;
                                  return fileRef.getMetaData();

                                case 2:
                                  ulFileMeta = _context278.sent;
                                  this.ulFileURL = fileRef.getDownloadURL();
                                  this.ulFileURL.subscribe(function (ufsPath) {
                                    _this118.storeFilesFirebase(cat, {
                                      fileRef: fileRef,
                                      fileCat: cat,
                                      fileName: fileName,
                                      filePath: ufsPath,
                                      fileType: ulFileMeta.contentType,
                                      fileSize: ulFileMeta.size,
                                      fileDate: ulFileMeta.updated
                                    });

                                    _this118.isFileULing = false;
                                    _this118.isFileULed = true;
                                  }, function (ufsErr) {
                                    _this118.logger.info('🔥 [fireServ|uploadFile] (Error): ' + ufsErr);
                                  });

                                case 5:
                                case "end":
                                  return _context278.stop();
                              }
                            }
                          }, _callee278, this);
                        }));
                      }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.tap)(function (snap) {
                        _this117.specFSize = snap.totalBytes;

                        _this117.evServ.publish('snap', snap.totalBytes);
                      }));

                    case 27:
                    case "end":
                      return _context279.stop();
                  }
                }
              }, _callee279, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "uploadFSDBBU",
          value: function uploadFSDBBU(fileData) {
            var _this119 = this;

            this.logger.info('🔥 [fireServ|getFSDBBU] ()...');

            var ulProgEv = function ulProgEv(evState, evData) {
              _this119.evServ.publish('dbbuULProg', {
                event: evState,
                data: evData
              });
            };

            var dbbuFileData = fileData;
            var dbbuMeta = {
              contentType: 'application/x-sqlite3'
            };
            var dbbuStoreRef = this.fireStorage.storage.ref().child('dbBackups/' + this.deputy.userEmail + '.db');
            var dbbuUploadTask = dbbuStoreRef.put(dbbuFileData, dbbuMeta);
            dbbuUploadTask.on(firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__["default"].storage.TaskEvent.STATE_CHANGED, function (snapshot) {
              var t = snapshot.task;
              var md = snapshot.metadata;

              switch (snapshot.state) {
                case firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__["default"].storage.TaskState.RUNNING:
                  var ulP = snapshot.bytesTransferred / snapshot.totalBytes;
                  ulProgEv('running', {
                    task: t,
                    meta: md,
                    perc: ulP
                  });
                  break;

                case firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__["default"].storage.TaskState.PAUSED:
                  ulProgEv('paused', {
                    task: t,
                    meta: md,
                    perc: ulP
                  });
                  break;

                case firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__["default"].storage.TaskState.SUCCESS:
                  ulProgEv('success', null);
                  break;

                case firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__["default"].storage.TaskState.ERROR:
                  ulProgEv('error', null);
                  break;
              }
            }, function (error) {
              var errMsg = _this119.cloudErr(error.code);

              _this119.logger.info('🔥 [fireServ|uploadFSDBBU] (Error): ' + errMsg);

              ulProgEv('errorData', errMsg);
            }, function () {
              (function () {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this119, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee280() {
                  var sDObj;
                  return regeneratorRuntime.wrap(function _callee280$(_context280) {
                    while (1) {
                      switch (_context280.prev = _context280.next) {
                        case 0:
                          sDObj = {
                            meta: null,
                            dlurl: null
                          };
                          _context280.next = 3;
                          return dbbuUploadTask.snapshot.ref.getMetadata();

                        case 3:
                          sDObj.meta = _context280.sent;
                          _context280.next = 6;
                          return dbbuUploadTask.snapshot.ref.getDownloadURL();

                        case 6:
                          sDObj.dlurl = _context280.sent;
                          ulProgEv('successData', sDObj);

                        case 8:
                        case "end":
                          return _context280.stop();
                      }
                    }
                  }, _callee280);
                }));
              })();
            });
          } /////////////////////////////////////////////////////

        }, {
          key: "downloadFSDBBU",
          value: function downloadFSDBBU(dlURL) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee281() {
              var dlDBBURes;
              return regeneratorRuntime.wrap(function _callee281$(_context281) {
                while (1) {
                  switch (_context281.prev = _context281.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|getFSDBBU] ()...');
                      _context281.next = 3;
                      return this.fileServ.dlFireDBBU(dlURL);

                    case 3:
                      dlDBBURes = _context281.sent;
                      this.evServ.publish('dlFSDBBU', dlDBBURes);

                    case 5:
                    case "end":
                      return _context281.stop();
                  }
                }
              }, _callee281, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "deleteFSDBBU",
          value: function deleteFSDBBU() {
            var _this120 = this;

            this.logger.info('🔥 [fireServ|deleteFSDBBU] ()...');
            var dbBUFileRef = this.fireStorage.storage.ref().child('dbBackups/' + this.deputy.userEmail + '.db');
            dbBUFileRef["delete"]().then(function () {
              _this120.evServ.publish('delFSDBBU', true);
            })["catch"](function (error) {
              _this120.logger.info('🔥 [fireServ|deleteFSDBBU] (Error): ' + _this120.cloudErr(error.code));

              _this120.evServ.publish('delFSDBBU', false);
            });
          } /////////////////////////////////////////////////////
          ///// FIRESTORE
          /////////////////////////////////////////////////////

        }, {
          key: "setFireUserDoc",
          value: function setFireUserDoc(userEmail, dpAuthObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee282() {
              var _this121 = this;

              var fireDoc, consM;
              return regeneratorRuntime.wrap(function _callee282$(_context282) {
                while (1) {
                  switch (_context282.prev = _context282.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|setFireAuthDoc] (userEmail,DPAuthObj)...');

                      if (!this.fbLoggedIn) {
                        _context282.next = 18;
                        break;
                      }

                      fireDoc = {
                        dp_token: String(dpAuthObj.access_token),
                        dp_refresh: String(dpAuthObj.refresh_token),
                        dp_expires: String(dpAuthObj.expires_at),
                        dp_domain: String(dpAuthObj.endpoint)
                      };

                      consM = function consM(r, uc, x) {
                        var xT;
                        x !== null ? xT = ' ' + JSON.stringify(x) : xT = '';
                        var m = '🔥 [fireServ|setUpdateFireAuthDoc] (' + r + ') UserDoc ' + uc + ' for ' + userEmail + xT;
                        return _this121.logger.info(m);
                      };

                      _context282.prev = 4;
                      _context282.next = 7;
                      return this.fireStore.collection('users').doc(userEmail).update(fireDoc);

                    case 7:
                      consM('SUCCESS', 'UPDATED', null);
                      return _context282.abrupt("return", Promise.resolve(true));

                    case 11:
                      _context282.prev = 11;
                      _context282.t0 = _context282["catch"](4);
                      consM('ERROR', 'FAILED', _context282.t0);
                      fireDoc['fcm_token'] = String('');
                      this.fireStore.collection('users').doc(String(userEmail)).set(fireDoc).then(function () {
                        consM('SUCCESS', 'CREATED', null);
                        return Promise.resolve(true);
                      })["catch"](function (e) {
                        consM('ERROR', 'FAILED', e);
                        return Promise.resolve(false);
                      });

                    case 16:
                      _context282.next = 19;
                      break;

                    case 18:
                      return _context282.abrupt("return", Promise.resolve(false));

                    case 19:
                    case "end":
                      return _context282.stop();
                  }
                }
              }, _callee282, this, [[4, 11]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "hasFireUserDoc",
          value: function hasFireUserDoc() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee283() {
              var userDocRef, udSnap;
              return regeneratorRuntime.wrap(function _callee283$(_context283) {
                while (1) {
                  switch (_context283.prev = _context283.next) {
                    case 0:
                      if (!this.fbLoggedIn) {
                        _context283.next = 18;
                        break;
                      }

                      userDocRef = this.fireStore.collection('users').doc(this.deputy.userEmail).ref;
                      _context283.prev = 2;
                      _context283.next = 5;
                      return userDocRef.get();

                    case 5:
                      udSnap = _context283.sent;

                      if (!udSnap.exists) {
                        _context283.next = 10;
                        break;
                      }

                      return _context283.abrupt("return", Promise.resolve(true));

                    case 10:
                      return _context283.abrupt("return", Promise.resolve(false));

                    case 11:
                      _context283.next = 16;
                      break;

                    case 13:
                      _context283.prev = 13;
                      _context283.t0 = _context283["catch"](2);
                      return _context283.abrupt("return", Promise.resolve(false));

                    case 16:
                      _context283.next = 19;
                      break;

                    case 18:
                      return _context283.abrupt("return", Promise.resolve(false));

                    case 19:
                    case "end":
                      return _context283.stop();
                  }
                }
              }, _callee283, this, [[2, 13]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "checkFireUserDoc",
          value: function checkFireUserDoc() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee290() {
              var _this122 = this;

              var localAuth, storeAuth, dbAuth, localFCM, storeFCM, dbFCM, dO, aO, lAR, sAR, dAR, fS, lFR, sFR, dFR, uDocExists;
              return regeneratorRuntime.wrap(function _callee290$(_context290) {
                while (1) {
                  switch (_context290.prev = _context290.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|checkFireUserDoc] ()...');

                      if (!this.fbLoggedIn) {
                        _context290.next = 64;
                        break;
                      }

                      localAuth = function localAuth() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this122, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee284() {
                          return regeneratorRuntime.wrap(function _callee284$(_context284) {
                            while (1) {
                              switch (_context284.prev = _context284.next) {
                                case 0:
                                  if (!(this.deputy.Client.auth.access_token !== null)) {
                                    _context284.next = 4;
                                    break;
                                  }

                                  return _context284.abrupt("return", Promise.resolve({
                                    r: true,
                                    d: this.deputy.Client.auth
                                  }));

                                case 4:
                                  return _context284.abrupt("return", Promise.resolve({
                                    r: false
                                  }));

                                case 5:
                                case "end":
                                  return _context284.stop();
                              }
                            }
                          }, _callee284, this);
                        }));
                      };

                      storeAuth = function storeAuth() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this122, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee285() {
                          var sO;
                          return regeneratorRuntime.wrap(function _callee285$(_context285) {
                            while (1) {
                              switch (_context285.prev = _context285.next) {
                                case 0:
                                  if (!(this.deputy.uUK !== null)) {
                                    _context285.next = 11;
                                    break;
                                  }

                                  _context285.next = 3;
                                  return this.storeServ.getObject(this.deputy.uUK + 'DPAuth');

                                case 3:
                                  sO = _context285.sent;

                                  if (!sO) {
                                    _context285.next = 8;
                                    break;
                                  }

                                  return _context285.abrupt("return", Promise.resolve({
                                    r: true,
                                    d: sO
                                  }));

                                case 8:
                                  return _context285.abrupt("return", Promise.resolve({
                                    r: false
                                  }));

                                case 9:
                                  _context285.next = 12;
                                  break;

                                case 11:
                                  return _context285.abrupt("return", Promise.resolve({
                                    r: false
                                  }));

                                case 12:
                                case "end":
                                  return _context285.stop();
                              }
                            }
                          }, _callee285, this);
                        }));
                      };

                      dbAuth = function dbAuth() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this122, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee286() {
                          var doClose, _yield$this$sqlServ$g, result, data;

                          return regeneratorRuntime.wrap(function _callee286$(_context286) {
                            while (1) {
                              switch (_context286.prev = _context286.next) {
                                case 0:
                                  _context286.t0 = this.deputy.uUK !== null;

                                  if (!_context286.t0) {
                                    _context286.next = 5;
                                    break;
                                  }

                                  _context286.next = 4;
                                  return this.dS.getADBSetupDone();

                                case 4:
                                  _context286.t0 = _context286.sent;

                                case 5:
                                  if (!_context286.t0) {
                                    _context286.next = 32;
                                    break;
                                  }

                                  doClose = false;

                                  if (this.dS.getADBIsOpen()) {
                                    _context286.next = 11;
                                    break;
                                  }

                                  _context286.next = 10;
                                  return this.sqlServ.openAuth();

                                case 10:
                                  doClose = true;

                                case 11:
                                  ;
                                  _context286.next = 14;
                                  return this.sqlServ.getADBItem('auth');

                                case 14:
                                  _yield$this$sqlServ$g = _context286.sent;
                                  result = _yield$this$sqlServ$g.result;
                                  data = _yield$this$sqlServ$g.data;

                                  if (!result) {
                                    _context286.next = 25;
                                    break;
                                  }

                                  if (!doClose) {
                                    _context286.next = 21;
                                    break;
                                  }

                                  _context286.next = 21;
                                  return this.sqlServ.closeAuth();

                                case 21:
                                  ;
                                  return _context286.abrupt("return", Promise.resolve({
                                    r: true,
                                    d: data
                                  }));

                                case 25:
                                  if (!doClose) {
                                    _context286.next = 28;
                                    break;
                                  }

                                  _context286.next = 28;
                                  return this.sqlServ.closeAuth();

                                case 28:
                                  ;
                                  return _context286.abrupt("return", Promise.resolve({
                                    r: false
                                  }));

                                case 30:
                                  _context286.next = 33;
                                  break;

                                case 32:
                                  return _context286.abrupt("return", Promise.resolve({
                                    r: false
                                  }));

                                case 33:
                                case "end":
                                  return _context286.stop();
                              }
                            }
                          }, _callee286, this);
                        }));
                      };

                      localFCM = function localFCM() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this122, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee287() {
                          return regeneratorRuntime.wrap(function _callee287$(_context287) {
                            while (1) {
                              switch (_context287.prev = _context287.next) {
                                case 0:
                                  if (!(this.fbMsgToken !== null)) {
                                    _context287.next = 4;
                                    break;
                                  }

                                  return _context287.abrupt("return", Promise.resolve({
                                    r: true,
                                    d: this.fbMsgToken
                                  }));

                                case 4:
                                  return _context287.abrupt("return", Promise.resolve({
                                    r: false
                                  }));

                                case 5:
                                case "end":
                                  return _context287.stop();
                              }
                            }
                          }, _callee287, this);
                        }));
                      };

                      storeFCM = function storeFCM() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this122, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee288() {
                          var sF;
                          return regeneratorRuntime.wrap(function _callee288$(_context288) {
                            while (1) {
                              switch (_context288.prev = _context288.next) {
                                case 0:
                                  _context288.next = 2;
                                  return this.storeServ.getItem('fireMsgToken');

                                case 2:
                                  sF = _context288.sent;

                                  if (!sF) {
                                    _context288.next = 7;
                                    break;
                                  }

                                  return _context288.abrupt("return", Promise.resolve({
                                    r: true,
                                    d: sF
                                  }));

                                case 7:
                                  return _context288.abrupt("return", Promise.resolve({
                                    r: false
                                  }));

                                case 8:
                                case "end":
                                  return _context288.stop();
                              }
                            }
                          }, _callee288, this);
                        }));
                      };

                      dbFCM = function dbFCM() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this122, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee289() {
                          var dbF;
                          return regeneratorRuntime.wrap(function _callee289$(_context289) {
                            while (1) {
                              switch (_context289.prev = _context289.next) {
                                case 0:
                                  _context289.next = 2;
                                  return this.dS.getUDBSetupDone();

                                case 2:
                                  _context289.t0 = _context289.sent;

                                  if (!_context289.t0) {
                                    _context289.next = 5;
                                    break;
                                  }

                                  _context289.t0 = this.dS.getUDBIsOpen();

                                case 5:
                                  if (!_context289.t0) {
                                    _context289.next = 16;
                                    break;
                                  }

                                  _context289.next = 8;
                                  return this.sqlServ.getFCMToken();

                                case 8:
                                  dbF = _context289.sent;

                                  if (!(dbF.result && dbF.data !== null)) {
                                    _context289.next = 13;
                                    break;
                                  }

                                  return _context289.abrupt("return", Promise.resolve({
                                    r: true,
                                    d: dbF.data
                                  }));

                                case 13:
                                  return _context289.abrupt("return", Promise.resolve({
                                    r: false
                                  }));

                                case 14:
                                  _context289.next = 17;
                                  break;

                                case 16:
                                  return _context289.abrupt("return", Promise.resolve({
                                    r: false
                                  }));

                                case 17:
                                case "end":
                                  return _context289.stop();
                              }
                            }
                          }, _callee289, this);
                        }));
                      }; // ----------------------------------------------


                      dO = {
                        dp_token: '',
                        dp_refresh: '',
                        dp_expires: '',
                        dp_domain: '',
                        fcm_token: ''
                      };
                      aO = null;
                      _context290.next = 12;
                      return localAuth();

                    case 12:
                      lAR = _context290.sent;

                      if (!lAR.r) {
                        _context290.next = 17;
                        break;
                      }

                      aO = lAR.d;
                      _context290.next = 28;
                      break;

                    case 17:
                      _context290.next = 19;
                      return storeAuth();

                    case 19:
                      sAR = _context290.sent;

                      if (!sAR.r) {
                        _context290.next = 24;
                        break;
                      }

                      aO = sAR.d;
                      _context290.next = 28;
                      break;

                    case 24:
                      _context290.next = 26;
                      return dbAuth();

                    case 26:
                      dAR = _context290.sent;

                      if (dAR.r) {
                        aO = dAR.d;
                      } else {
                        aO = null;
                      }

                    case 28:
                      ;
                      fS = null;
                      _context290.next = 32;
                      return localFCM();

                    case 32:
                      lFR = _context290.sent;

                      if (!lFR.r) {
                        _context290.next = 37;
                        break;
                      }

                      fS = lFR.d;
                      _context290.next = 48;
                      break;

                    case 37:
                      _context290.next = 39;
                      return storeFCM();

                    case 39:
                      sFR = _context290.sent;

                      if (!sFR.r) {
                        _context290.next = 44;
                        break;
                      }

                      fS = sFR.d;
                      _context290.next = 48;
                      break;

                    case 44:
                      _context290.next = 46;
                      return dbFCM();

                    case 46:
                      dFR = _context290.sent;

                      if (dFR.r) {
                        fS = dFR.d;
                      } else {
                        fS = null;
                      }

                    case 48:
                      ;

                      if (aO !== null) {
                        dO.dp_token = String(aO.access_token);
                        dO.dp_refresh = String(aO.refresh_token);
                        dO.dp_expires = String(aO.expires_at);
                        dO.dp_domain = String(aO.endpoint);
                      }

                      ;

                      if (fS !== null) {
                        dO.fcm_token = fS;
                      }

                      ; // ----------------------------------------------

                      _context290.next = 55;
                      return this.hasFireUserDoc();

                    case 55:
                      uDocExists = _context290.sent;

                      if (!uDocExists) {
                        _context290.next = 61;
                        break;
                      }

                      this.logger.info('[fireServ|checkFireUserDoc] 🟢🔥🟢 FireUserDoc Already Exists - Not Creating Default.');
                      return _context290.abrupt("return", Promise.resolve(true));

                    case 61:
                      this.fireStore.collection('users').doc(this.deputy.userEmail).set(dO).then(function () {
                        _this122.logger.info('[fireServ|checkFireUserDoc] 🔴🔥🟢 No FireUserDoc >>> Default=SUCCESS.');

                        return Promise.resolve(true);
                      })["catch"](function (e) {
                        _this122.logger.info('[fireServ|checkFireUserDoc] 🔴🔥🔴 No FireUserDoc + Default=FAIL: ' + JSON.stringify(e));

                        return Promise.resolve(false);
                      });

                    case 62:
                      _context290.next = 65;
                      break;

                    case 64:
                      return _context290.abrupt("return", Promise.resolve(false));

                    case 65:
                    case "end":
                      return _context290.stop();
                  }
                }
              }, _callee290, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "getFireUserDoc",
          value: function getFireUserDoc() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee291() {
              var _this123 = this;

              var userDocRef;
              return regeneratorRuntime.wrap(function _callee291$(_context291) {
                while (1) {
                  switch (_context291.prev = _context291.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|getFireUserDoc] ()...');

                      if (!this.fbLoggedIn) {
                        _context291.next = 6;
                        break;
                      }

                      userDocRef = this.fireStore.collection('users').doc(this.deputy.userEmail).ref;
                      return _context291.abrupt("return", userDocRef.get().then(function (doc) {
                        if (doc.exists) {
                          return Promise.resolve({
                            result: true,
                            data: doc.data()
                          });
                        } else {
                          _this123.logger.info('🔥 [fireServ|getFireUserDoc] (Warning): Doc !==EXIST');

                          return Promise.resolve({
                            result: false
                          });
                        }
                      })["catch"](function (gSVErr) {
                        _this123.logger.info('🔥 [fireServ|getFireUserDoc] (Error): ' + JSON.stringify(gSVErr));

                        return Promise.resolve({
                          result: false
                        });
                      }));

                    case 6:
                      return _context291.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 7:
                    case "end":
                      return _context291.stop();
                  }
                }
              }, _callee291, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "getFireUserAuth",
          value: function getFireUserAuth() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee292() {
              var fireLoginTokenRes, doClose, upRes, userDocRef, udSnap, fD, fAuthObj;
              return regeneratorRuntime.wrap(function _callee292$(_context292) {
                while (1) {
                  switch (_context292.prev = _context292.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|getFireUserAuth] ()...');

                      if (this.fbLoggedIn) {
                        _context292.next = 32;
                        break;
                      }

                      if (!(this.tempUPO !== null)) {
                        _context292.next = 7;
                        break;
                      }

                      _context292.next = 5;
                      return this.loginUserEmail(this.tempUPO);

                    case 5:
                      _context292.next = 32;
                      break;

                    case 7:
                      _context292.next = 9;
                      return this.loginCustomToken();

                    case 9:
                      fireLoginTokenRes = _context292.sent;

                      if (fireLoginTokenRes) {
                        _context292.next = 31;
                        break;
                      }

                      _context292.next = 13;
                      return this.dS.getADBSetupDone();

                    case 13:
                      if (!_context292.sent) {
                        _context292.next = 31;
                        break;
                      }

                      doClose = null;

                      if (this.dS.getADBIsOpen()) {
                        _context292.next = 19;
                        break;
                      }

                      _context292.next = 18;
                      return this.sqlServ.openAuth();

                    case 18:
                      doClose = true;

                    case 19:
                      ;
                      _context292.next = 22;
                      return this.sqlServ.getADBItem('up');

                    case 22:
                      upRes = _context292.sent;

                      if (!upRes.result) {
                        _context292.next = 26;
                        break;
                      }

                      _context292.next = 26;
                      return this.loginUserEmail(upRes.data);

                    case 26:
                      ;

                      if (!(doClose !== null && doClose === true)) {
                        _context292.next = 30;
                        break;
                      }

                      _context292.next = 30;
                      return this.sqlServ.closeAuth();

                    case 30:
                      ;

                    case 31:
                      ;

                    case 32:
                      ;

                      if (!this.fbLoggedIn) {
                        _context292.next = 55;
                        break;
                      }

                      userDocRef = this.fireStore.collection('users').doc(this.deputy.userEmail).ref;
                      _context292.prev = 35;
                      _context292.next = 38;
                      return userDocRef.get();

                    case 38:
                      udSnap = _context292.sent;

                      if (!udSnap.exists) {
                        _context292.next = 45;
                        break;
                      }

                      fD = udSnap.data();
                      fAuthObj = {
                        access_token: String(fD.dp_token),
                        expires_in: '86400',
                        expires_at: String(fD.dp_expires),
                        scope: 'longlife_refresh_token',
                        endpoint: String(fD.dp_domain),
                        refresh_token: String(fD.dp_refresh)
                      };
                      return _context292.abrupt("return", Promise.resolve({
                        result: true,
                        data: fAuthObj
                      }));

                    case 45:
                      this.logger.info('🔥 [fireServ|getFireUserAuth] (Warning): Doc !==EXIST');
                      return _context292.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 47:
                      _context292.next = 53;
                      break;

                    case 49:
                      _context292.prev = 49;
                      _context292.t0 = _context292["catch"](35);
                      this.logger.info('🔥 [fireServ|getFireUserAuth] (Error): ' + JSON.stringify(_context292.t0));
                      return _context292.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 53:
                      _context292.next = 56;
                      break;

                    case 55:
                      return _context292.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 56:
                    case "end":
                      return _context292.stop();
                  }
                }
              }, _callee292, this, [[35, 49]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "getFCMTokenValue",
          value: function getFCMTokenValue() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee293() {
              var _this124 = this;

              var userDocRef;
              return regeneratorRuntime.wrap(function _callee293$(_context293) {
                while (1) {
                  switch (_context293.prev = _context293.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|getFCMTokenValue] ()...');
                      userDocRef = this.fireStore.collection('users').doc(this.deputy.userEmail).ref;
                      return _context293.abrupt("return", userDocRef.get().then(function (doc) {
                        if (doc.exists) {
                          var fcmTokenVal = doc.get('fcm_token');

                          if (fcmTokenVal === null || fcmTokenVal === undefined || fcmTokenVal === '') {
                            return Promise.resolve({
                              result: true,
                              data: null
                            });
                          } else {
                            return Promise.resolve({
                              result: true,
                              data: fcmTokenVal
                            });
                          }
                        } else {
                          _this124.logger.info('🔥 [fireServ|getFCMTokenValue] (Warning): Doc !==EXIST');

                          return Promise.resolve({
                            result: false
                          });
                        }
                      })["catch"](function (gFTVErr) {
                        _this124.logger.info('🔥 [fireServ|getFCMTokenValue] (Error): ' + JSON.stringify(gFTVErr));

                        return Promise.resolve({
                          result: false
                        });
                      }));

                    case 3:
                    case "end":
                      return _context293.stop();
                  }
                }
              }, _callee293, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "onFCMTokenChange",
          value: function onFCMTokenChange(pushModToken) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee294() {
              var _this125 = this;

              var cM, pm, db, ud, dbR, udR;
              return regeneratorRuntime.wrap(function _callee294$(_context294) {
                while (1) {
                  switch (_context294.prev = _context294.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|onFCMTokenChange] >>> 👂🏼 LISTENING 👂🏼 ...');

                      cM = function cM(n) {
                        var nT;
                        n === 'db' ? nT = '[SQLite]' : nT = '[Fire UserDoc]';
                        var m = '🔥 [fireServ|onFCMTokenChange] 🎫⚠️ ' + nT + ' Token Mismatch - Fixing...';
                        return _this125.logger.info(m);
                      };

                      pm = pushModToken;
                      _context294.next = 5;
                      return this.dS.getUDBSetupDone();

                    case 5:
                      _context294.t0 = _context294.sent;

                      if (!_context294.t0) {
                        _context294.next = 8;
                        break;
                      }

                      _context294.t0 = this.dS.getUDBIsOpen;

                    case 8:
                      if (!_context294.t0) {
                        _context294.next = 15;
                        break;
                      }

                      _context294.next = 11;
                      return this.sqlServ.getFCMToken();

                    case 11:
                      dbR = _context294.sent;
                      dbR.result ? db = dbR.data : db = null;
                      _context294.next = 16;
                      break;

                    case 15:
                      db = null;

                    case 16:
                      ;
                      _context294.next = 19;
                      return this.getFCMTokenValue();

                    case 19:
                      udR = _context294.sent;
                      udR.result ? ud = udR.data : ud = null;

                      if (!(db === pm && ud === pm)) {
                        _context294.next = 25;
                        break;
                      }

                      this.logger.info('🔥 [fireServ|onFCMTokenChange] 🎫✅ ALL FCM Tokens Match');
                      _context294.next = 41;
                      break;

                    case 25:
                      _context294.next = 27;
                      return this.dS.getUDBSetupDone();

                    case 27:
                      _context294.t1 = _context294.sent;

                      if (!_context294.t1) {
                        _context294.next = 30;
                        break;
                      }

                      _context294.t1 = this.dS.getUDBIsOpen;

                    case 30:
                      if (!_context294.t1) {
                        _context294.next = 35;
                        break;
                      }

                      if (!(db !== pm)) {
                        _context294.next = 35;
                        break;
                      }

                      cM('db');
                      _context294.next = 35;
                      return this.sqlServ.setFCMToken(pm);

                    case 35:
                      ;

                      if (!(ud !== pm)) {
                        _context294.next = 40;
                        break;
                      }

                      cM('ud');
                      _context294.next = 40;
                      return this.setFCMTokenValue(pm);

                    case 40:
                      ;

                    case 41:
                      ;

                    case 42:
                    case "end":
                      return _context294.stop();
                  }
                }
              }, _callee294, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "setFCMTokenValue",
          value: function setFCMTokenValue(token) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee295() {
              var _this126 = this;

              var userDocRef;
              return regeneratorRuntime.wrap(function _callee295$(_context295) {
                while (1) {
                  switch (_context295.prev = _context295.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|setFCMTokenValue] (' + token.substring(0, 10) + ')...');
                      this.fbMsgToken = token;
                      userDocRef = this.fireStore.collection('users').doc(this.deputy.userEmail).ref;
                      return _context295.abrupt("return", userDocRef.update({
                        fcm_token: token
                      }).then(function () {
                        _this126.logger.info('🔥 [fireServ|setFCMTokenValue] (SUCCESS) 🎫✔️ [Fire UserDoc] - Token Updated/Fixed.');

                        return Promise.resolve(true);
                      })["catch"](function (sFTVErr) {
                        _this126.logger.info('🔥 [fireServ|setFCMTokenValue] (ERROR) 🎫❌ [Fire UserDoc] - Token NOT Updated/Fixed: ' + JSON.stringify(sFTVErr));

                        return Promise.resolve(false);
                      }));

                    case 4:
                    case "end":
                      return _context295.stop();
                  }
                }
              }, _callee295, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "setFireSettingsDoc",
          value: function setFireSettingsDoc(userEmail, settObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee296() {
              var _this127 = this;

              var uEmail, consM;
              return regeneratorRuntime.wrap(function _callee296$(_context296) {
                while (1) {
                  switch (_context296.prev = _context296.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|setFireSettingsDoc] (userEmail,settObj)...');
                      uEmail = '';

                      if (userEmail === null) {
                        uEmail = this.deputy.userEmail;
                      } else {
                        uEmail = userEmail;
                      }

                      ;

                      consM = function consM(r, uc, x) {
                        var xT;
                        x !== null ? xT = ' ' + JSON.stringify(x) : xT = '';
                        var m = '🔥 [fireServ|setFireSettingsDoc] (' + r + ') SettDoc ' + uc + ' for ' + uEmail + xT;
                        return _this127.logger.info(m);
                      };

                      _context296.prev = 5;
                      _context296.next = 8;
                      return this.fireStore.collection('settings').doc(uEmail).update(settObj);

                    case 8:
                      consM('SUCCESS', 'UPDATED', null);
                      return _context296.abrupt("return", Promise.resolve(true));

                    case 12:
                      _context296.prev = 12;
                      _context296.t0 = _context296["catch"](5);
                      consM('ERROR', 'FAILED', _context296.t0);
                      this.fireStore.collection('settings').doc(String(uEmail)).set(settObj).then(function () {
                        consM('SUCCESS', 'CREATED', null);
                        return Promise.resolve(true);
                      })["catch"](function (e) {
                        consM('ERROR', 'FAILED', e);
                        return Promise.resolve(false);
                      });

                    case 16:
                    case "end":
                      return _context296.stop();
                  }
                }
              }, _callee296, this, [[5, 12]]);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "updateSettingsObj",
          value: function updateSettingsObj(settObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee297() {
              var _this128 = this;

              var userSettRef;
              return regeneratorRuntime.wrap(function _callee297$(_context297) {
                while (1) {
                  switch (_context297.prev = _context297.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|updateSettingsObj] ()...');
                      userSettRef = this.fireStore.collection('settings').doc(String(this.deputy.userEmail)).ref;
                      return _context297.abrupt("return", userSettRef.update(settObj).then(function () {
                        _this128.logger.info('🔥 [fireServ|updateSettingsObj] (SUCCESS) - Updated User Settings Obj');

                        return Promise.resolve(true);
                      })["catch"](function (uSOErr) {
                        _this128.logger.info('🔥 [fireServ|updateSettingsObj] (Error): ' + JSON.stringify(uSOErr));

                        return Promise.resolve(false);
                      }));

                    case 3:
                    case "end":
                      return _context297.stop();
                  }
                }
              }, _callee297, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "getSettingsValue",
          value: function getSettingsValue(fieldPath) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee298() {
              var _this129 = this;

              var userDocRef;
              return regeneratorRuntime.wrap(function _callee298$(_context298) {
                while (1) {
                  switch (_context298.prev = _context298.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|getSettingsValue] ()...');
                      userDocRef = this.fireStore.collection('settings').doc(this.deputy.userEmail).ref;
                      return _context298.abrupt("return", userDocRef.get().then(function (doc) {
                        if (doc.exists) {
                          var fieldVal;

                          if (fieldPath === null) {
                            fieldVal = doc.data();
                          } else {
                            fieldVal = doc.get(fieldPath);
                          }

                          ;

                          if (fieldVal === null || fieldVal === undefined || fieldVal === '') {
                            return Promise.resolve({
                              result: true,
                              data: null
                            });
                          } else {
                            return Promise.resolve({
                              result: true,
                              data: fieldVal
                            });
                          }
                        } else {
                          _this129.logger.info('🔥 [fireServ|getSettingsValue] (Warning): Doc !==EXIST');

                          return Promise.resolve({
                            result: false
                          });
                        }
                      })["catch"](function (gSVErr) {
                        _this129.logger.info('🔥 [fireServ|getSettingsValue] (Error): ' + JSON.stringify(gSVErr));

                        return Promise.resolve({
                          result: false
                        });
                      }));

                    case 3:
                    case "end":
                      return _context298.stop();
                  }
                }
              }, _callee298, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "setSettingsValue",
          value: function setSettingsValue(keyVal) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee299() {
              var _this130 = this;

              var userDocRef;
              return regeneratorRuntime.wrap(function _callee299$(_context299) {
                while (1) {
                  switch (_context299.prev = _context299.next) {
                    case 0:
                      this.logger.info('🔥 [fireServ|setSettingsValue] (' + keyVal + ')...');
                      userDocRef = this.fireStore.collection('settings').doc(this.deputy.userEmail).ref;
                      return _context299.abrupt("return", userDocRef.update(keyVal).then(function () {
                        _this130.logger.info('🔥 [fireServ|setSettingsValue] (SUCCESS) - Updated Settings Field');

                        return Promise.resolve(true);
                      })["catch"](function (sSVErr) {
                        _this130.logger.info('🔥 [fireServ|setSettingsValue] (Error): ' + JSON.stringify(sSVErr));

                        return Promise.resolve(false);
                      }));

                    case 3:
                    case "end":
                      return _context299.stop();
                  }
                }
              }, _callee299, this);
            }));
          }
        }]);

        return FirebaseService;
      }();

      _FirebaseService.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_13__.NGXLogger
        }, {
          type: _angular_fire_compat_firestore__WEBPACK_IMPORTED_MODULE_14__.AngularFirestore
        }, {
          type: _angular_fire_compat_storage__WEBPACK_IMPORTED_MODULE_15__.AngularFireStorage
        }, {
          type: _angular_fire_compat_auth__WEBPACK_IMPORTED_MODULE_16__.AngularFireAuth
        }, {
          type: _datetime_service__WEBPACK_IMPORTED_MODULE_1__.DateTimeService
        }, {
          type: _storage_service__WEBPACK_IMPORTED_MODULE_2__.StorageService
        }, {
          type: _deputy_service__WEBPACK_IMPORTED_MODULE_4__.DeputyService
        }, {
          type: _events_service__WEBPACK_IMPORTED_MODULE_5__.EventsService
        }, {
          type: src_app_services_detail_service__WEBPACK_IMPORTED_MODULE_0__.DetailService
        }, {
          type: _sqlite_service__WEBPACK_IMPORTED_MODULE_6__.SQLiteService
        }, {
          type: _filesystem_service__WEBPACK_IMPORTED_MODULE_7__.FileSystemService
        }];
      };

      _FirebaseService = (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_17__.Injectable)({
        providedIn: 'root'
      })], _FirebaseService);
      /***/
    },

    /***/
    79744:
    /*!***************************************************!*\
      !*** ./src/app/services/notifications.service.ts ***!
      \***************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "NotificationsService": function NotificationsService() {
          return (
            /* binding */
            _NotificationsService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @capacitor/local-notifications */
      12273);
      /* harmony import */


      var _datetime_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./datetime.service */
      12826);
      /* harmony import */


      var _sqlite_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./sqlite.service */
      90636);
      /* harmony import */


      var _events_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./events.service */
      80106);
      /* harmony import */


      var _firebase_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./firebase.service */
      19446);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _fairwork_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./fairwork.service */
      93405);
      /* harmony import */


      var _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @capacitor/action-sheet */
      54025);
      /* harmony import */


      var _appTypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./appTypes */
      38670);
      /* harmony import */


      var _detail_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./detail.service */
      52153); ////////////////////////////////////////////////////////////////


      var _NotificationsService = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////
        function NotificationsService(logger, dT, sqlServ, evServ, loadCtrl, fwServ, dS, fireServ) {
          _classCallCheck(this, NotificationsService);

          this.logger = logger;
          this.dT = dT;
          this.sqlServ = sqlServ;
          this.evServ = evServ;
          this.loadCtrl = loadCtrl;
          this.fwServ = fwServ;
          this.dS = dS;
          this.fireServ = fireServ; ////////////////////////////////////////////////////////////////

          this.userSettings = null;
          this.notesEnabled = false;
          this.eventsEnabled = {
            shift: false,
            task: false
          };
          this.beforeTimes = {
            shift: 0,
            task: 0
          };
          this.showIncome = null;
          this.myObj = null;
          this.workAreas = null;
          this.workName = null;
          this.workCode = null;
          this.workPeople = [];
          this.hasMyChan = false;
          this.tasksInProg = false;
          this.shiftsInProg = false;
          this.isReschedule = false;
          this.schedEvs = {
            shift: [],
            task: []
          };
          this.initDone = false;
        } ////////////////////////////////////////////////////////////////


        _createClass(NotificationsService, [{
          key: "noteGetPerms",
          value: function noteGetPerms() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee300() {
              var nCPRes, nRPRes;
              return regeneratorRuntime.wrap(function _callee300$(_context300) {
                while (1) {
                  switch (_context300.prev = _context300.next) {
                    case 0:
                      this.logger.info("\uD83D\uDD14 [noteServ|noteGetPerms] ()...");
                      _context300.prev = 1;
                      _context300.next = 4;
                      return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.checkPermissions();

                    case 4:
                      nCPRes = _context300.sent;

                      if (!(nCPRes.display !== 'granted')) {
                        _context300.next = 16;
                        break;
                      }

                      _context300.next = 8;
                      return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.requestPermissions();

                    case 8:
                      nRPRes = _context300.sent;

                      if (!(nRPRes.display === 'granted')) {
                        _context300.next = 13;
                        break;
                      }

                      return _context300.abrupt("return", Promise.resolve({
                        result: true,
                        data: nRPRes.display
                      }));

                    case 13:
                      return _context300.abrupt("return", Promise.resolve({
                        result: false,
                        data: nRPRes.display
                      }));

                    case 14:
                      _context300.next = 17;
                      break;

                    case 16:
                      return _context300.abrupt("return", Promise.resolve({
                        result: true,
                        data: nCPRes.display
                      }));

                    case 17:
                      _context300.next = 23;
                      break;

                    case 19:
                      _context300.prev = 19;
                      _context300.t0 = _context300["catch"](1);
                      this.logger.info("\uD83D\uDD14 [noteServ|noteCheckPerms] (Error): " + _context300.t0);
                      return _context300.abrupt("return", Promise.reject(_context300.t0));

                    case 23:
                    case "end":
                      return _context300.stop();
                  }
                }
              }, _callee300, this, [[1, 19]]);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "permOK",
          value: function permOK() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee301() {
              return regeneratorRuntime.wrap(function _callee301$(_context301) {
                while (1) {
                  switch (_context301.prev = _context301.next) {
                    case 0:
                      _context301.next = 2;
                      return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.checkPermissions();

                    case 2:
                      _context301.t0 = _context301.sent.display;

                      if (!(_context301.t0 === 'granted')) {
                        _context301.next = 7;
                        break;
                      }

                      return _context301.abrupt("return", Promise.resolve(true));

                    case 7:
                      return _context301.abrupt("return", Promise.resolve(false));

                    case 8:
                    case "end":
                      return _context301.stop();
                  }
                }
              }, _callee301);
            }));
          }
        }, {
          key: "reqP",
          value: function reqP() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee302() {
              return regeneratorRuntime.wrap(function _callee302$(_context302) {
                while (1) {
                  switch (_context302.prev = _context302.next) {
                    case 0:
                      _context302.next = 2;
                      return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.requestPermissions();

                    case 2:
                      _context302.t0 = _context302.sent.display;

                      if (!(_context302.t0 === 'granted')) {
                        _context302.next = 7;
                        break;
                      }

                      return _context302.abrupt("return", Promise.resolve(true));

                    case 7:
                      return _context302.abrupt("return", Promise.resolve(false));

                    case 8:
                    case "end":
                      return _context302.stop();
                  }
                }
              }, _callee302);
            }));
          }
        }, {
          key: "doNoteInit",
          value: ////////////////////////////////////////////////////////////////
          function doNoteInit() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee304() {
              var _this131 = this;

              return regeneratorRuntime.wrap(function _callee304$(_context304) {
                while (1) {
                  switch (_context304.prev = _context304.next) {
                    case 0:
                      this.evServ.subscribe('noteInit', function (initD) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(_this131, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee303() {
                          return regeneratorRuntime.wrap(function _callee303$(_context303) {
                            while (1) {
                              switch (_context303.prev = _context303.next) {
                                case 0:
                                  this.logger.info("\uD83D\uDD14 [noteServ|doNoteInit] (EVENT) [STAGE] = " + initD.stage + ' ... ');

                                  if (initD.stage === 'notesenabled') {
                                    this.initGVars();
                                  } else if (initD.stage === 'gvars') {
                                    this.initMyChannel();
                                  } else if (initD.stage === 'chan') {
                                    this.initActions();
                                  } else if (initD.stage === 'actions') {
                                    this.evServ.publish('doPushNoteInit', true);
                                    this.initListen();
                                  } else if (initD.stage === 'listen') {
                                    this.initDone = true;
                                    this.doScheduleNotes();
                                  }

                                case 2:
                                case "end":
                                  return _context303.stop();
                              }
                            }
                          }, _callee303, this);
                        }));
                      });
                      this.initRefreshNoteSettings();

                    case 2:
                    case "end":
                      return _context304.stop();
                  }
                }
              }, _callee304, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "doScheduleNotes",
          value: function doScheduleNotes() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee305() {
              var _this132 = this;

              var schedTypeTtl, schedTypeCount, schedSTime, cM, _i27, _Object$values2, v;

              return regeneratorRuntime.wrap(function _callee305$(_context305) {
                while (1) {
                  switch (_context305.prev = _context305.next) {
                    case 0:
                      schedTypeTtl = 0;
                      schedTypeCount = 0;
                      schedSTime = new Date();
                      this.isReschedule ? cM = '♻️[RE]Scheduling' : cM = 'Init Scheduling';
                      this.evServ.subscribe('noteSched', function () {
                        schedTypeCount++;

                        if (schedTypeCount === schedTypeTtl) {
                          var schedTT = (_this132.evServ.getDur(schedSTime) / 1000).toFixed(2) + 's';
                          var tShifts = _this132.schedEvs.shift.length;
                          var tTasks = _this132.schedEvs.task.length;
                          var tEvs = tShifts + tTasks;

                          _this132.logger.info("\uD83D\uDD14 - \uD83C\uDFC1 FINISHED " + cM + ': ' + tEvs + ' Total Phone Notes Added in ' + schedTT + 's:');

                          var sShiftsIds = [];

                          for (var i = 0; i < _this132.schedEvs.shift.length; i++) {
                            sShiftsIds.push(_this132.schedEvs.shift[i].dId + '|' + _this132.schedEvs.shift[i].nId);
                          }

                          ;

                          _this132.logger.info("\uD83D\uDD14 - \uD83D\uDCD1 Shifts: " + sShiftsIds.join(', ') + ' (' + tShifts + ')');

                          var sTasksIds = [];

                          for (var _i26 = 0; _i26 < _this132.schedEvs.task.length; _i26++) {
                            sTasksIds.push(_this132.schedEvs.task[_i26].dId + '|' + _this132.schedEvs.task[_i26].nId);
                          }

                          ;

                          _this132.logger.info("\uD83D\uDD14 - \uD83E\uDD39\uD83C\uDFFC Tasks: " + sTasksIds.join(', ') + ' (' + tTasks + ')');

                          if (_this132.isReschedule) {
                            _this132.evServ.publish('reschedFinish', 'phone');

                            _this132.isReschedule = false;
                          }

                          ;

                          _this132.evServ.destroy('noteSched');
                        }
                      });
                      _context305.next = 7;
                      return this.deleteAllSched();

                    case 7:
                      this.evServ.publish('alertsStatus', true);

                      if (this.notesEnabled) {
                        this.logger.info("\uD83D\uDD14 {alertMethods.phone=TRUE}");

                        for (_i27 = 0, _Object$values2 = Object.values(this.eventsEnabled); _i27 < _Object$values2.length; _i27++) {
                          v = _Object$values2[_i27];

                          if (v) {
                            schedTypeTtl++;
                          }
                        }

                        ;

                        if (schedTypeTtl > 0) {
                          if (this.eventsEnabled.shift) {
                            this.logger.info("\uD83D\uDD14 {alertEvents.shift=TRUE} - " + cM + ' Shifts...');
                            this.checkShifts(null);
                          } else {
                            this.logger.info("\uD83D\uDD14 {alertEvents.shift=FALSE} - !SKIPPING! " + cM + ' Shifts...');
                          }

                          ;

                          if (this.eventsEnabled.task) {
                            this.logger.info("\uD83D\uDD14 {alertEvents.task=TRUE} - " + cM + ' Tasks...');
                            this.checkTasks(null);
                          } else {
                            this.logger.info("\uD83D\uDD14 {alertEvents.task=FALSE} - !SKIPPING! " + cM + ' Tasks.');
                          }
                        } else {
                          if (this.isReschedule) {
                            this.evServ.publish('reschedFinish', 'phone');
                            this.isReschedule = false;
                          }

                          ;
                          this.logger.info("\uD83D\uDD14 {alertEvents.shift=FALSE} && {alertEvents.task=FALSE} - !SKIPPING! Notification " + cM);
                        }
                      } else {
                        if (this.isReschedule) {
                          this.evServ.publish('reschedFinish', 'phone');
                          this.isReschedule = false;
                        }

                        ;
                        this.logger.info("\uD83D\uDD14 {alertMethods.phone=FALSE} - !SKIPPING! Notification " + cM);
                      }

                    case 9:
                    case "end":
                      return _context305.stop();
                  }
                }
              }, _callee305, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "initRefreshNoteSettings",
          value: function initRefreshNoteSettings() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee306() {
              var savedUSettObj, dsRes, dbRes, fireRes;
              return regeneratorRuntime.wrap(function _callee306$(_context306) {
                while (1) {
                  switch (_context306.prev = _context306.next) {
                    case 0:
                      _context306.next = 2;
                      return this.dS.getSettings();

                    case 2:
                      dsRes = _context306.sent;

                      if (!(dsRes !== null)) {
                        _context306.next = 7;
                        break;
                      }

                      savedUSettObj = dsRes;
                      _context306.next = 18;
                      break;

                    case 7:
                      _context306.next = 9;
                      return this.sqlServ.getSettings();

                    case 9:
                      dbRes = _context306.sent;

                      if (!dbRes.result) {
                        _context306.next = 14;
                        break;
                      }

                      savedUSettObj = dbRes.data;
                      _context306.next = 18;
                      break;

                    case 14:
                      _context306.next = 16;
                      return this.fireServ.getSettingsValue(null);

                    case 16:
                      fireRes = _context306.sent;

                      if (fireRes.result) {
                        savedUSettObj = fireRes.data;
                      } else {
                        savedUSettObj = (0, _appTypes__WEBPACK_IMPORTED_MODULE_7__.defaultAUSettings)();
                      }

                    case 18:
                      ;
                      this.userSettings = savedUSettObj;
                      this.uAlertOpts = this.userSettings.alerts.options;
                      this.notesEnabled = Boolean(this.uAlertOpts.alertMethods.value.phone);
                      this.eventsEnabled.shift = Boolean(this.uAlertOpts.alertEvents.value.shift);
                      this.eventsEnabled.task = Boolean(this.uAlertOpts.alertEvents.value.task);
                      this.beforeTimes.shift = Number(this.uAlertOpts.alertBefore.value.shift.mins);
                      this.beforeTimes.task = Number(this.uAlertOpts.alertBefore.value.task.mins);
                      this.showIncome = Boolean(this.userSettings.payrates.options.show.value);

                      if (!this.initDone) {
                        this.evServ.publish('noteInit', {
                          stage: 'notesenabled',
                          data: null
                        });
                      }

                      ;
                      return _context306.abrupt("return", Promise.resolve(true));

                    case 30:
                    case "end":
                      return _context306.stop();
                  }
                }
              }, _callee306, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "updateNoteSetting",
          value: function updateNoteSetting() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee307() {
              return regeneratorRuntime.wrap(function _callee307$(_context307) {
                while (1) {
                  switch (_context307.prev = _context307.next) {
                    case 0:
                      this.logger.info('[noteServ|updateNoteSettings] ()...');
                      this.isReschedule = true;
                      _context307.next = 4;
                      return this.initRefreshNoteSettings();

                    case 4:
                      this.doScheduleNotes();
                      return _context307.abrupt("return", Promise.resolve(true));

                    case 6:
                    case "end":
                      return _context307.stop();
                  }
                }
              }, _callee307, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "initListen",
          value: function initListen() {
            this.noteListenRemoveAll();
            this.noteListenAddGotNote();
            this.noteListenAddGotAction();
            this.evServ.publish('noteInit', {
              stage: 'listen',
              data: null
            });
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "initActions",
          value: function initActions() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee308() {
              var _this133 = this;

              return regeneratorRuntime.wrap(function _callee308$(_context308) {
                while (1) {
                  switch (_context308.prev = _context308.next) {
                    case 0:
                      this.noteRegisterActions();
                      setTimeout(function () {
                        _this133.evServ.publish('noteInit', {
                          stage: 'actions',
                          data: null
                        });
                      }, 250);

                    case 2:
                    case "end":
                      return _context308.stop();
                  }
                }
              }, _callee308, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "initMyChannel",
          value: function initMyChannel() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee309() {
              var existChanList, cList, myChanArr, startChanRes;
              return regeneratorRuntime.wrap(function _callee309$(_context309) {
                while (1) {
                  switch (_context309.prev = _context309.next) {
                    case 0:
                      _context309.next = 2;
                      return this.noteDeleteChannel();

                    case 2:
                      _context309.next = 4;
                      return this.noteListChannels();

                    case 4:
                      existChanList = _context309.sent;
                      cList = existChanList.data;
                      myChanArr = cList.filter(function (c) {
                        return c.Id === 'sheriff-alerts';
                      });

                      if (!(myChanArr.length > 0)) {
                        _context309.next = 12;
                        break;
                      }

                      this.hasMyChan = true;
                      this.evServ.publish('noteInit', {
                        stage: 'chan',
                        data: null
                      });
                      _context309.next = 16;
                      break;

                    case 12:
                      _context309.next = 14;
                      return this.noteCreateChannel();

                    case 14:
                      startChanRes = _context309.sent;

                      if (startChanRes) {
                        this.hasMyChan = true;
                        this.evServ.publish('noteInit', {
                          stage: 'chan',
                          data: null
                        });
                      } else {
                        this.hasMyChan = false;
                        this.evServ.publish('noteInit', {
                          stage: 'chan',
                          data: null
                        });
                      }

                    case 16:
                    case "end":
                      return _context309.stop();
                  }
                }
              }, _callee309, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "initGVars",
          value: function initGVars() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee310() {
              return regeneratorRuntime.wrap(function _callee310$(_context310) {
                while (1) {
                  switch (_context310.prev = _context310.next) {
                    case 0:
                      _context310.next = 2;
                      return this.dS.getMy();

                    case 2:
                      this.myObj = _context310.sent;
                      this.workAreas = this.dS.workAreas;
                      this.workPeople = this.dS.pplArr;
                      this.workName = this.dS.workName;
                      this.workCode = this.dS.workCode;
                      this.evServ.publish('noteInit', {
                        stage: 'gvars',
                        data: null
                      });

                    case 8:
                    case "end":
                      return _context310.stop();
                  }
                }
              }, _callee310, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "capType",
          value: function capType(lowT) {
            return lowT.charAt(0).toUpperCase() + lowT.slice(1);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "triggerTime",
          value: function triggerTime(evD, beforeT) {
            return this.dT.subMs(evD, beforeT);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "changeBeforeTime",
          value: function changeBeforeTime(event, mins) {
            this.beforeTimes[String(event)] = Number(mins);
            return Promise.resolve(true);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "deleteAllSched",
          value: function deleteAllSched() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee311() {
              var canAllOpts, _yield$_capacitor_loc, notifications, i;

              return regeneratorRuntime.wrap(function _callee311$(_context311) {
                while (1) {
                  switch (_context311.prev = _context311.next) {
                    case 0:
                      this.logger.info("\uD83D\uDD14 [noteServ|deleteAllSched] ()...");
                      canAllOpts = {
                        notifications: []
                      };
                      _context311.next = 4;
                      return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.getPending();

                    case 4:
                      _yield$_capacitor_loc = _context311.sent;
                      notifications = _yield$_capacitor_loc.notifications;

                      if (!(notifications.length > 0)) {
                        _context311.next = 15;
                        break;
                      }

                      for (i = 0; i < notifications.length; i++) {
                        canAllOpts.notifications.push({
                          id: notifications[i].id
                        });
                      }

                      ;

                      _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.cancel(canAllOpts);

                      this.schedEvs.task = [];
                      this.schedEvs.shift = [];
                      return _context311.abrupt("return", Promise.resolve(true));

                    case 15:
                      this.schedEvs.task = [];
                      this.schedEvs.shift = [];
                      return _context311.abrupt("return", Promise.resolve(true));

                    case 18:
                    case "end":
                      return _context311.stop();
                  }
                }
              }, _callee311, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "getBeforeTime",
          value: function getBeforeTime(event) {
            return this.beforeTimes[event];
          }
        }, {
          key: "getFName",
          value: ////////////////////////////////////////////////////////////////
          function getFName(empId) {
            var isE = function isE(name) {
              if (name === '' || name === ' ' || name === null || name === undefined) {
                return true;
              } else {
                return false;
              }
            };

            var fN;
            var pObArr = this.workPeople.filter(function (p) {
              return p.EmpId === empId;
            });

            if (pObArr.length > 0) {
              var rawFN = pObArr[0].FirstName;
              var rawLN = pObArr[0].LastName;
              var rawDN = pObArr[0].DisplayName;

              if (!isE(rawFN) && !isE(rawLN)) {
                fN = this.capType(rawFN) + ' ' + this.capType(rawLN.charAt(0)) + '.';
              } else if (!isE(rawFN)) {
                fN = this.capType(rawFN);
              } else if (!isE(rawDN)) {
                var rDNArr = rawDN.split(' ');

                if (rDNArr.length > 1) {
                  fN = this.capType(rDNArr[0]);
                } else {
                  fN = this.capType(rawDN);
                }
              }
            } else {
              fN = 'NK';
            }

            ;
            return fN;
          }
        }, {
          key: "getPay",
          value: /////////////////////////////////////////////////////////////////
          function getPay(rosterObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee312() {
              var payRes;
              return regeneratorRuntime.wrap(function _callee312$(_context312) {
                while (1) {
                  switch (_context312.prev = _context312.next) {
                    case 0:
                      _context312.next = 2;
                      return this.fwServ.getShiftPay(rosterObj);

                    case 2:
                      payRes = _context312.sent;
                      return _context312.abrupt("return", Promise.resolve(payRes));

                    case 4:
                    case "end":
                      return _context312.stop();
                  }
                }
              }, _callee312, this);
            }));
          } /////////////////////////////////////////////////////////////////

        }, {
          key: "formatShift",
          value: function formatShift(rawNS) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee313() {
              var _this134 = this;

              var wNames, niceNS, nN, nStartEndObj, calcPay, tT, ttArr, lnConfirmBy;
              return regeneratorRuntime.wrap(function _callee313$(_context313) {
                while (1) {
                  switch (_context313.prev = _context313.next) {
                    case 0:
                      wNames = function wNames(oUId) {
                        var oUArr = _this134.workAreas.filter(function (oU) {
                          return oU.Id === oUId;
                        });

                        return {
                          cname: oUArr[0]['CompanyCode'],
                          warea: oUArr[0]['OperationalUnitName']
                        };
                      };

                      niceNS = rawNS;
                      nN = wNames(rawNS.OperationalUnit);
                      nN.warea ? niceNS['nOpUnit'] = nN.warea : niceNS['nOpUnit'] = '';
                      nN.cname ? niceNS['nCompanyName'] = nN.cname : niceNS['nCompanyName'] = this.workName;
                      niceNS['nDate'] = this.dT.format(new Date(rawNS.Date), 'EEEE, d MMMM yyyy');
                      nStartEndObj = this.dT.rosterSETimes(rawNS.StartTime, rawNS.EndTime);
                      niceNS['nStart'] = nStartEndObj.s.trim();
                      niceNS['nEnd'] = nStartEndObj.e.trim();
                      _context313.next = 11;
                      return this.getPay(rawNS);

                    case 11:
                      calcPay = _context313.sent;
                      niceNS['nIncomeObj'] = calcPay;
                      niceNS['nIncome'] = calcPay.t.toFixed(0);
                      tT = {
                        hours: 0,
                        minutes: 0
                      };

                      if (rawNS.TotalTime.toString().includes('.')) {
                        ttArr = rawNS.TotalTime.toString().split('.');
                        tT.hours = parseInt(ttArr[0]);
                        tT.minutes = Math.round(Number('0.' + ttArr[1]) * 60);
                      } else {
                        tT.hours = rawNS.TotalTime;
                      }

                      ;
                      niceNS['nTotalTime'] = tT;
                      niceNS['nConfirmStatus'] = rawNS.ConfirmStatus;
                      rawNS.ConfirmBy === 0 ? lnConfirmBy = false : lnConfirmBy = this.dT.Dut(rawNS.ConfirmBy);
                      niceNS['nConfirmBy'] = lnConfirmBy;
                      return _context313.abrupt("return", Promise.resolve(niceNS));

                    case 22:
                    case "end":
                      return _context313.stop();
                  }
                }
              }, _callee313, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "noteSchedule",
          value: function noteSchedule(eventObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee314() {
              var nSOpts, aId, aLCType, aUCType, evDate, alertDate, aTitle, aBody, aConfirmId, aConfirmTitle, aConfirmBody, evConfirmDate, alertConfirmDate, shiftO, niceBTime, b4T, aNTimeStr, aNDur, nDurStr, aNIncome, confId, aNDateStr, confIncomeStr, confNote, shiftIncomeStr, isToday, shiftWhen, shiftNote, taskO, _b4T, _niceBTime, dDateNice, dTimeNice, taskNote, nSRes;

              return regeneratorRuntime.wrap(function _callee314$(_context314) {
                while (1) {
                  switch (_context314.prev = _context314.next) {
                    case 0:
                      nSOpts = {
                        notifications: []
                      };
                      aId = eventObj.Id;
                      //------------------------------
                      aConfirmId = null;
                      aConfirmTitle = null;
                      aConfirmBody = null;
                      evConfirmDate = null;
                      alertConfirmDate = null; //------------------------------
                      // Shifts/Rosters

                      if (eventObj.hasOwnProperty('MatchedByTimesheet')) {
                        shiftO = eventObj;

                        niceBTime = function niceBTime(rawBT) {
                          if (rawBT <= 90) {
                            return rawBT.toString() + ' Minutes';
                          } else if (rawBT > 90 && rawBT <= 720) {
                            var rawHs = rawBT / 60;
                            return rawHs.toString() + ' Hours';
                          } else if (rawBT > 720 && rawBT <= 4320) {
                            var rawDs = rawBT / 24 / 60;
                            return rawDs.toString() + ' Days';
                          } else {
                            return '1 Week';
                          }
                        };

                        b4T = this.getBeforeTime('shift');
                        aLCType = 'shift';
                        aUCType = this.capType(aLCType);
                        aNTimeStr = shiftO.nStart + '-' + shiftO.nEnd;
                        aNDur = shiftO.nTotalTime;

                        if (aNDur.hours > 0 && aNDur.minutes > 0) {
                          nDurStr = aNDur.hours + ':' + aNDur.minutes;
                        } else {
                          if (aNDur.hours > 0) {
                            nDurStr = aNDur.hours + 'h';
                          } else {
                            nDurStr = aNDur.minutes + 'm';
                          }
                        }

                        ;
                        aNIncome = shiftO.nIncome; // Add Confirm Note

                        if (shiftO.ConfirmStatus === 1 && shiftO.nConfirmBy !== false) {
                          confId = function confId(evId) {
                            var cIdStr = evId.toString() + '000';
                            return Number(cIdStr);
                          };

                          aConfirmId = confId(aId);
                          evConfirmDate = shiftO.nConfirmBy;
                          alertConfirmDate = this.triggerTime(evConfirmDate, b4T);
                          aConfirmTitle = 'Confirm Shift Deadline';
                          aNDateStr = this.dT.format(new Date(shiftO.Date), 'EEE, d MMM');
                          this.showIncome ? confIncomeStr = '| $' + aNIncome + ')' : confIncomeStr = ')';
                          aConfirmBody = 'You must confirm Shift #' + aId + ' within ' + niceBTime(b4T) + '\n' + this.workCode + ' Shift on ' + this.dT.format(new Date(shiftO.Date), 'dd/MM/yy') + ' at ' + aNDateStr + ' - ' + aNTimeStr + ' (' + nDurStr + confIncomeStr;
                          confNote = {
                            id: aConfirmId,
                            title: aConfirmTitle,
                            body: aConfirmBody,
                            largeBody: aConfirmBody,
                            schedule: {
                              repeats: false,
                              allowWhileIdle: true,
                              at: alertConfirmDate
                            },
                            smallIcon: 'ic_stat_sheriffnote',
                            iconColor: '#FF9800',
                            sound: 'sheriffnote.wav',
                            ongoing: false,
                            autoCancel: false,
                            actionTypeId: 'shift-atype',
                            extra: {
                              type: aLCType,
                              uctype: aUCType,
                              evdate: evConfirmDate,
                              isTest: false
                            }
                          };

                          if (this.hasMyChan) {
                            confNote['channelId'] = 'sheriff-alerts';
                          }

                          ;
                          nSOpts.notifications.push(confNote);
                        }

                        ; // Standard Shift Note

                        evDate = this.dT.Dut(eventObj.StartTime);
                        alertDate = this.triggerTime(evDate, b4T);
                        aTitle = 'Upcoming Shift Reminder';
                        this.showIncome ? shiftIncomeStr = ' | $' + aNIncome : shiftIncomeStr = '';
                        this.dT.isSD(new Date(), new Date(shiftO.Date)) ? isToday = true : isToday = false;
                        isToday ? shiftWhen = 'Today' : shiftWhen = 'On ' + this.dT.format(new Date(shiftO.Date), 'EEE, d MMM');
                        aBody = 'Your Shift @ ' + this.workCode + ' (' + shiftO.nOpUnit + ') starts in ' + niceBTime(b4T) + '\n' + shiftWhen + ' ' + aNTimeStr + ' (' + nDurStr + ')' + shiftIncomeStr;
                        shiftNote = {
                          id: aId,
                          title: aTitle,
                          body: aBody,
                          largeBody: aBody,
                          schedule: {
                            repeats: false,
                            allowWhileIdle: true,
                            at: alertDate
                          },
                          smallIcon: 'ic_stat_sheriffnote',
                          iconColor: '#FF9800',
                          sound: 'sheriffnote.wav',
                          ongoing: false,
                          autoCancel: false,
                          actionTypeId: 'shift-atype',
                          extra: {
                            type: aLCType,
                            uctype: aUCType,
                            evdate: evDate,
                            isTest: false
                          }
                        };

                        if (this.hasMyChan) {
                          shiftNote['channelId'] = 'sheriff-alerts';
                        }

                        ;
                        nSOpts.notifications.push(shiftNote);
                      } // Tasks
                      else if (eventObj.hasOwnProperty('TaskSetupId')) {
                          taskO = eventObj;
                          _b4T = this.getBeforeTime('task');

                          _niceBTime = function _niceBTime(rawBT) {
                            if (rawBT <= 90) {
                              return rawBT.toString() + ' Minutes';
                            } else if (rawBT > 90 && rawBT <= 720) {
                              var rawHs = rawBT / 60;
                              return rawHs.toString() + ' Hours';
                            } else if (rawBT > 720 && rawBT <= 4320) {
                              var rawDs = rawBT / 24 / 60;
                              return rawDs.toString() + ' Days';
                            } else {
                              return '1 Week';
                            }
                          };

                          dDateNice = this.dT.format(new Date(taskO.DueDate), 'EEE, d MMM');
                          dTimeNice = this.dT.format(new Date(taskO.DueDate), 'h:mmaaa');
                          aLCType = 'task';
                          aUCType = this.capType(aLCType);
                          evDate = new Date(taskO.DueDate);
                          alertDate = this.triggerTime(evDate, _b4T);
                          aTitle = 'Pending Task Reminder';
                          aBody = 'Task #' + taskO.Id + ' from ' + this.getFName(taskO.UserEntry) + ' @ ' + this.workCode + ' is due in ' + _niceBTime(_b4T) + '\nTask: ' + taskO.Question + ' | Due By: ' + dDateNice + ' at ' + dTimeNice;
                          taskNote = {
                            id: aId,
                            title: aTitle,
                            body: aBody,
                            largeBody: aBody,
                            schedule: {
                              repeats: false,
                              allowWhileIdle: true,
                              at: alertDate
                            },
                            smallIcon: 'ic_stat_sheriffnote',
                            iconColor: '#FF9800',
                            sound: 'sheriffnote.wav',
                            ongoing: false,
                            autoCancel: false,
                            actionTypeId: 'task-atype',
                            extra: {
                              type: aLCType,
                              uctype: aUCType,
                              evdate: evDate,
                              isTest: false
                            }
                          };

                          if (this.hasMyChan) {
                            taskNote['channelId'] = 'sheriff-alerts';
                          }

                          ;
                          nSOpts.notifications.push(taskNote);
                        }

                      ;
                      _context314.prev = 9;
                      _context314.next = 12;
                      return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.schedule(nSOpts);

                    case 12:
                      nSRes = _context314.sent;

                      if (!(nSRes.notifications.length > 0)) {
                        _context314.next = 18;
                        break;
                      }

                      this.schedEvs[aLCType].push({
                        dId: aId,
                        nId: nSRes.notifications[0].id
                      });
                      return _context314.abrupt("return", Promise.resolve({
                        result: true,
                        data: nSRes.notifications
                      }));

                    case 18:
                      return _context314.abrupt("return", Promise.resolve({
                        result: false,
                        data: []
                      }));

                    case 19:
                      _context314.next = 25;
                      break;

                    case 21:
                      _context314.prev = 21;
                      _context314.t0 = _context314["catch"](9);
                      this.logger.info("\uD83D\uDD14 [noteServ|noteSchedule] (Error): " + _context314.t0);
                      return _context314.abrupt("return", Promise.reject(_context314.t0));

                    case 25:
                    case "end":
                      return _context314.stop();
                  }
                }
              }, _callee314, this, [[9, 21]]);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "testNote",
          value: function testNote(noteId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee316() {
              var _this135 = this;

              var testSchedRes, nListRes, nListArr, nObjArr, nObj, tObj, tId;
              return regeneratorRuntime.wrap(function _callee316$(_context316) {
                while (1) {
                  switch (_context316.prev = _context316.next) {
                    case 0:
                      this.logger.info("\uD83D\uDD14 [noteServ|testNote] (" + noteId + ')...');
                      _context316.next = 3;
                      return this.notePending();

                    case 3:
                      nListRes = _context316.sent;

                      if (nListRes.result) {
                        nListArr = nListRes.data;
                        nObjArr = nListArr.filter(function (n) {
                          return n.id === noteId;
                        });

                        if (nObjArr.length > 0) {
                          nObj = nObjArr[0];
                          tObj = nObj;
                          tId = noteId.toString() + '000';
                          tObj.schedule.at = this.dT.addS(new Date(), 5);
                          tObj.id = Number(tId);
                          tObj.largeBody = nObj.body;
                          tObj.extra.isTest = true;
                          tObj.actionTypeId = nObj.extra.type + '-atype';
                          this.tNoteId = Number(tId);
                          this.evServ.subscribe('testNoteStage', function (tnsData) {
                            if (tnsData.stage === 'schedtest') {
                              testSchedRes = tnsData.data;

                              _this135.logger.info('Test Note Scheduled [SUCCESS] for Test Id #' + testSchedRes.id);

                              _this135.loadCtrl.dismiss();
                            } else if (tnsData.stage === 'gottest') {
                              _this135.evServ.destroy('testNoteStage');

                              _this135.tNoteId = null;

                              _this135.evServ.publish('testRes', {
                                stage: 'gottest',
                                data: null
                              });
                            } else {
                              _this135.evServ.destroy('testNoteStage');

                              _this135.tNoteId = null;

                              _this135.evServ.publish('testRes', {
                                stage: 'error',
                                data: null
                              });
                            }
                          });
                          this.loadCtrl.create({
                            spinner: 'dots',
                            cssClass: 'sheriff-loader-class',
                            message: 'Testing Alert #' + noteId,
                            backdropDismiss: false,
                            showBackdrop: true
                          }).then(function (loadRes) {
                            loadRes.onDidDismiss().then(function () {
                              _this135.evServ.publish('testRes', {
                                stage: 'sched',
                                data: testSchedRes
                              });
                            });
                            document.addEventListener('ionLoadingDidPresent', function () {
                              return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(_this135, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee315() {
                                var testSchedR, _tId, getS, tNObj;

                                return regeneratorRuntime.wrap(function _callee315$(_context315) {
                                  while (1) {
                                    switch (_context315.prev = _context315.next) {
                                      case 0:
                                        _context315.next = 2;
                                        return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.schedule({
                                          notifications: [tObj]
                                        });

                                      case 2:
                                        testSchedR = _context315.sent;

                                        if (!(testSchedR.notifications.length > 0)) {
                                          _context315.next = 12;
                                          break;
                                        }

                                        _tId = testSchedR.notifications[0].id;
                                        _context315.next = 7;
                                        return this.notePending();

                                      case 7:
                                        getS = _context315.sent;
                                        tNObj = getS.data.filter(function (n) {
                                          return n.id === _tId;
                                        })[0];
                                        this.evServ.publish('testNoteStage', {
                                          stage: 'schedtest',
                                          data: tNObj
                                        });
                                        _context315.next = 13;
                                        break;

                                      case 12:
                                        this.evServ.publish('testNoteStage', {
                                          stage: 'error',
                                          data: null
                                        });

                                      case 13:
                                      case "end":
                                        return _context315.stop();
                                    }
                                  }
                                }, _callee315, this);
                              }));
                            });
                            setTimeout(function () {
                              loadRes.present();
                            }, 250);
                          });
                        } else {
                          this.logger.info("\uD83D\uDD14 [noteServ|testNote] (Error): Note is Not Scheduled?");
                        }
                      } else {
                        this.logger.info("\uD83D\uDD14 [noteServ|testNote] (Error): Note is Not Scheduled?");
                      }

                    case 5:
                    case "end":
                      return _context316.stop();
                  }
                }
              }, _callee316, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "notePending",
          value: function notePending() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee317() {
              var nPendRes;
              return regeneratorRuntime.wrap(function _callee317$(_context317) {
                while (1) {
                  switch (_context317.prev = _context317.next) {
                    case 0:
                      this.logger.info("\uD83D\uDD14 [noteServ|getPending] ()...");
                      _context317.prev = 1;
                      _context317.next = 4;
                      return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.getPending();

                    case 4:
                      nPendRes = _context317.sent.notifications;

                      if (!(nPendRes.length > 0)) {
                        _context317.next = 9;
                        break;
                      }

                      return _context317.abrupt("return", Promise.resolve({
                        result: true,
                        data: nPendRes
                      }));

                    case 9:
                      return _context317.abrupt("return", Promise.resolve({
                        result: true,
                        data: []
                      }));

                    case 10:
                      _context317.next = 16;
                      break;

                    case 12:
                      _context317.prev = 12;
                      _context317.t0 = _context317["catch"](1);
                      this.logger.info("\uD83D\uDD14 [noteServ|notePending] (Error): " + _context317.t0);
                      return _context317.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context317.t0
                      }));

                    case 16:
                    case "end":
                      return _context317.stop();
                  }
                }
              }, _callee317, this, [[1, 12]]);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "cShiftsDelay",
          value: function cShiftsDelay(shiftData) {
            var _this136 = this;

            this.logger.info("\uD83D\uDD14 [noteServ|cShiftsDelay] ()...");
            var cSDelayLoop = setInterval(function () {
              if (!_this136.tasksInProg) {
                _this136.logger.info("\uD83D\uDD14 [noteServ|cShiftsDelay] [TasksInProg=" + _this136.tasksInProg + '] - Running checkShifts()...');

                clearInterval(cSDelayLoop);
                setTimeout(function () {
                  _this136.checkShifts(shiftData);
                }, 250);
              } else {
                _this136.logger.info("\uD83D\uDD14 [noteServ|cShiftsDelay] [TasksInProg=" + _this136.tasksInProg + '] - Waiting...');
              }
            }, 500);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "checkShifts",
          value: function checkShifts(shiftData) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee318() {
              var allFSSs, dbSRes, sSArr, schedGood, schedBad, schedSkip, i, rawTSO, tSO, tSOStart, tSOTrigT, doSchedRes;
              return regeneratorRuntime.wrap(function _callee318$(_context318) {
                while (1) {
                  switch (_context318.prev = _context318.next) {
                    case 0:
                      allFSSs = [];

                      if (!(shiftData !== null)) {
                        _context318.next = 5;
                        break;
                      }

                      allFSSs = shiftData;
                      _context318.next = 9;
                      break;

                    case 5:
                      _context318.next = 7;
                      return this.sqlServ.getFutureStartShifts();

                    case 7:
                      dbSRes = _context318.sent;

                      if (dbSRes.result) {
                        allFSSs = dbSRes.data;
                      } else {
                        allFSSs = [];
                      }

                    case 9:
                      ;
                      allFSSs.push(_appTypes__WEBPACK_IMPORTED_MODULE_7__.testShift);

                      if (!(allFSSs.length > 0)) {
                        _context318.next = 49;
                        break;
                      }

                      this.logger.info("\uD83D\uDD14 [noteServ|checkShifts] Found [" + allFSSs.length + '] Shifts to Schedule...');

                      if (!this.tasksInProg) {
                        _context318.next = 18;
                        break;
                      }

                      this.logger.info("\uD83D\uDD14 [noteServ|checkShifts] (WARNING) tasksInProg=" + this.tasksInProg.toString().toUpperCase() + ' - Running cShiftsDelay()...');
                      this.cShiftsDelay(allFSSs);
                      _context318.next = 47;
                      break;

                    case 18:
                      this.shiftsInProg = true;
                      sSArr = allFSSs;
                      schedGood = 0;
                      schedBad = 0;
                      schedSkip = 0;
                      i = 0;

                    case 24:
                      if (!(i < sSArr.length)) {
                        _context318.next = 43;
                        break;
                      }

                      rawTSO = sSArr[i];
                      _context318.next = 28;
                      return this.formatShift(rawTSO);

                    case 28:
                      tSO = _context318.sent;
                      tSOStart = this.dT.Dut(tSO.StartTime);
                      tSOTrigT = this.triggerTime(tSOStart, this.beforeTimes.shift);

                      if (!this.dT.isA(tSOTrigT, new Date())) {
                        _context318.next = 38;
                        break;
                      }

                      _context318.next = 34;
                      return this.noteSchedule(tSO);

                    case 34:
                      doSchedRes = _context318.sent;
                      doSchedRes.result ? schedGood++ : schedBad++;
                      _context318.next = 39;
                      break;

                    case 38:
                      schedSkip++;

                    case 39:
                      ;

                    case 40:
                      i++;
                      _context318.next = 24;
                      break;

                    case 43:
                      ;
                      this.logger.info("\uD83D\uDD14 [noteServ|checkShifts] (FINISHED) RESULTS: \u2714\uFE0F " + schedGood + ', ❌ ' + schedBad + ', ➖ ' + schedSkip);
                      this.shiftsInProg = false;
                      this.evServ.publish('noteSched', true);

                    case 47:
                      _context318.next = 52;
                      break;

                    case 49:
                      this.shiftsInProg = false;
                      this.evServ.publish('noteSched', true);
                      this.logger.info("\uD83D\uDD14 [noteServ|checkShifts] (NIL) No Future Start Shifts To Schedule.");

                    case 52:
                    case "end":
                      return _context318.stop();
                  }
                }
              }, _callee318, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "cTasksDelay",
          value: function cTasksDelay(taskData) {
            var _this137 = this;

            this.logger.info("\uD83D\uDD14 [noteServ|cTasksDelay] ()...");
            var cTDelayLoop = setInterval(function () {
              if (!_this137.shiftsInProg) {
                _this137.logger.info("\uD83D\uDD14 [noteServ|cTasksDelay] [ShiftsInProg=" + _this137.shiftsInProg + '] - Running checkTasks()...');

                clearInterval(cTDelayLoop);
                setTimeout(function () {
                  _this137.checkTasks(taskData);
                }, 250);
              } else {
                _this137.logger.info("\uD83D\uDD14 [noteServ|cTasksDelay] [ShiftsInProg=" + _this137.shiftsInProg + '] - Waiting...');
              }
            }, 500);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "checkTasks",
          value: function checkTasks(taskData) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee319() {
              var allFDTs, dbTRes, schedGood, schedBad, schedSkip, i, tT, trigT, schedT;
              return regeneratorRuntime.wrap(function _callee319$(_context319) {
                while (1) {
                  switch (_context319.prev = _context319.next) {
                    case 0:
                      if (!(taskData !== null)) {
                        _context319.next = 4;
                        break;
                      }

                      allFDTs = taskData;
                      _context319.next = 8;
                      break;

                    case 4:
                      _context319.next = 6;
                      return this.sqlServ.getFutureDueTasks();

                    case 6:
                      dbTRes = _context319.sent;

                      if (dbTRes.result) {
                        allFDTs = dbTRes.data;
                      } else {
                        allFDTs = [];
                      }

                    case 8:
                      ;

                      if (!(allFDTs.length > 0)) {
                        _context319.next = 42;
                        break;
                      }

                      this.logger.info("\uD83D\uDD14 [noteServ|checkTasks] Found [" + allFDTs.length + '] Tasks to Schedule...');

                      if (!this.shiftsInProg) {
                        _context319.next = 16;
                        break;
                      }

                      this.logger.info("\uD83D\uDD14 [noteServ|checkShifts] (WARNING) shiftsInProg=" + this.shiftsInProg.toString().toUpperCase() + ' - Running cTasksDelay()...');
                      this.cTasksDelay(allFDTs);
                      _context319.next = 40;
                      break;

                    case 16:
                      this.tasksInProg = true;
                      schedGood = 0;
                      schedBad = 0;
                      schedSkip = 0;
                      i = 0;

                    case 21:
                      if (!(i < allFDTs.length)) {
                        _context319.next = 36;
                        break;
                      }

                      tT = allFDTs[i];
                      trigT = this.triggerTime(new Date(tT.DueDate), this.beforeTimes.task);

                      if (!this.dT.isA(trigT, new Date())) {
                        _context319.next = 31;
                        break;
                      }

                      _context319.next = 27;
                      return this.noteSchedule(tT);

                    case 27:
                      schedT = _context319.sent;
                      schedT.result ? schedGood++ : schedBad++;
                      _context319.next = 32;
                      break;

                    case 31:
                      schedSkip++;

                    case 32:
                      ;

                    case 33:
                      i++;
                      _context319.next = 21;
                      break;

                    case 36:
                      ;
                      this.logger.info("\uD83D\uDD14 [noteServ|checkTasks] (FINISHED) RESULTS: \u2714\uFE0F " + schedGood + ', ❌ ' + schedBad + ', ➖ ' + schedSkip);
                      this.tasksInProg = false;
                      this.evServ.publish('noteSched', true);

                    case 40:
                      _context319.next = 45;
                      break;

                    case 42:
                      this.tasksInProg = false;
                      this.evServ.publish('noteSched', true);
                      this.logger.info("\uD83D\uDD14 [noteServ|checkTasks] (NIL) No Future Due Tasks Not Completed.");

                    case 45:
                    case "end":
                      return _context319.stop();
                  }
                }
              }, _callee319, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "noteRegisterActions",
          value: function noteRegisterActions() {
            var regATOpts = {
              types: []
            };
            var shiftAType = {
              id: 'shift-atype',
              actions: [{
                id: 'shift-snooze',
                title: 'Snooze'
              }, {
                id: 'shift-view',
                title: 'View'
              }]
            };
            regATOpts.types.push(shiftAType);
            var taskAType = {
              id: 'task-atype',
              actions: [{
                id: 'task-snooze',
                title: 'Snooze'
              }, {
                id: 'task-view',
                title: 'View'
              }, {
                id: 'task-do',
                title: 'Mark As Done'
              }]
            };
            regATOpts.types.push(taskAType);

            _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.registerActionTypes(regATOpts);
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "noteCancel",
          value: function noteCancel(noteId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee321() {
              var _this138 = this;

              var schedCount, schedIds, cancelCount, finishCount, schedRes, i, cancelOpts, _i28;

              return regeneratorRuntime.wrap(function _callee321$(_context321) {
                while (1) {
                  switch (_context321.prev = _context321.next) {
                    case 0:
                      this.logger.info("\uD83D\uDD14 [noteServ|noteCancel] ()...");
                      schedCount = 0;
                      schedIds = [];
                      cancelCount = 0;
                      finishCount = 0;
                      _context321.next = 7;
                      return this.notePending();

                    case 7:
                      schedRes = _context321.sent;

                      if (schedRes.result && schedRes.data.length > 0) {
                        schedCount = schedRes.data.length;

                        for (i = 0; i < schedRes.data.length; i++) {
                          schedIds.push(schedRes.data[i].id);
                        }
                      }

                      ;
                      cancelOpts = {
                        notifications: []
                      };

                      if (noteId !== null) {
                        if (schedCount > 0 && schedIds.includes(noteId)) {
                          cancelCount = 1;
                          this.logger.info("\uD83D\uDD14 [noteServ|noteCancel] (Single Cancel) Cancelling [1] Note (" + noteId + ')...');
                          cancelOpts.notifications.push({
                            id: noteId
                          });

                          _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.cancel(cancelOpts);
                        } else {
                          this.logger.info("\uD83D\uDD14 [noteServ|noteCancel] (Single Cancel - NIL) Note ID #" + noteId + ' is Not Scheduled');
                        }
                      } else {
                        if (schedCount > 0) {
                          cancelCount = schedCount;
                          this.logger.info("\uD83D\uDD14 [noteServ|noteCancel] (Cancel All) Cancelling [" + schedCount + '] Notes (' + schedIds.join(', ') + ')...');

                          for (_i28 = 0; _i28 < schedIds.length; _i28++) {
                            cancelOpts.notifications.push({
                              id: schedIds[_i28]
                            });
                          }

                          ;

                          _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.cancel(cancelOpts);
                        } else {
                          this.logger.info("\uD83D\uDD14 [noteServ|noteCancel] (Cancel All - NIL) No Notes Are Scheduled.");
                        }
                      }

                      ;

                      if (!(cancelCount > 0)) {
                        _context321.next = 17;
                        break;
                      }

                      setTimeout(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(_this138, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee320() {
                          var nowSched, successNo;
                          return regeneratorRuntime.wrap(function _callee320$(_context320) {
                            while (1) {
                              switch (_context320.prev = _context320.next) {
                                case 0:
                                  _context320.next = 2;
                                  return this.notePending();

                                case 2:
                                  nowSched = _context320.sent;
                                  finishCount = nowSched.data.length;
                                  successNo = schedCount - cancelCount;

                                  if (!(successNo === finishCount)) {
                                    _context320.next = 11;
                                    break;
                                  }

                                  this.logger.info("\uD83D\uDD14 [noteServ|noteCancel] (SUCCESS): Finished Cancelling ALL [" + cancelCount + '] Notes');
                                  this.evServ.publish('delDone', true);
                                  return _context320.abrupt("return", Promise.resolve(true));

                                case 11:
                                  this.logger.info("\uD83D\uDD14 [noteServ|noteCancel] (ERROR): Expected [" + successNo + '] Remaining Notes BUT Found [' + finishCount + ']');
                                  this.evServ.publish('delDone', false);
                                  return _context320.abrupt("return", Promise.resolve(false));

                                case 14:
                                case "end":
                                  return _context320.stop();
                              }
                            }
                          }, _callee320, this);
                        }));
                      }, 1000);
                      _context321.next = 19;
                      break;

                    case 17:
                      this.logger.info("\uD83D\uDD14 [noteServ|noteCancel] (NIL) No Scheduled Notes to Cancel.");
                      return _context321.abrupt("return", Promise.resolve(true));

                    case 19:
                    case "end":
                      return _context321.stop();
                  }
                }
              }, _callee321, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "noteCreateChannel",
          value: function noteCreateChannel() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee323() {
              var _this139 = this;

              var appOpts, depOpts, snoopOpts;
              return regeneratorRuntime.wrap(function _callee323$(_context323) {
                while (1) {
                  switch (_context323.prev = _context323.next) {
                    case 0:
                      appOpts = {
                        id: 'sheriff-alerts',
                        name: 'Sheriff Alerts',
                        description: 'Alerts for Sheriff App',
                        sound: 'sheriffnote.wav',
                        importance: 5,
                        visibility: 1,
                        lights: true,
                        lightColor: '#FF9800',
                        vibration: true
                      };
                      depOpts = {
                        id: 'deputy-alerts',
                        name: 'Deputy Alerts',
                        description: 'Alerts re Deputy API',
                        sound: 'sheriffnother.wav',
                        importance: 5,
                        visibility: 1,
                        lights: true,
                        lightColor: '#F26A60',
                        vibration: true
                      };
                      snoopOpts = {
                        id: 'snoop-alerts',
                        name: 'Snoop Alerts',
                        description: 'Alerts Channel for Snooping',
                        sound: 'sheriffpst.wav',
                        importance: 5,
                        visibility: 1,
                        lights: false,
                        lightColor: '#AAAAAA',
                        vibration: false
                      };

                      _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.createChannel(appOpts);

                      _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.createChannel(snoopOpts);

                      _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.createChannel(depOpts);

                      return _context323.abrupt("return", new Promise(function (resolve) {
                        setTimeout(resolve, 1000);
                      }).then(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(_this139, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee322() {
                          var nowChanRes, nCList, myListArr;
                          return regeneratorRuntime.wrap(function _callee322$(_context322) {
                            while (1) {
                              switch (_context322.prev = _context322.next) {
                                case 0:
                                  _context322.next = 2;
                                  return this.noteListChannels();

                                case 2:
                                  nowChanRes = _context322.sent;

                                  if (!(nowChanRes.result && nowChanRes.data.length > 0)) {
                                    _context322.next = 13;
                                    break;
                                  }

                                  nCList = nowChanRes.data;
                                  myListArr = nCList.filter(function (c) {
                                    return c.id === 'sheriff-alerts';
                                  });

                                  if (!(myListArr.length > 0)) {
                                    _context322.next = 10;
                                    break;
                                  }

                                  return _context322.abrupt("return", Promise.resolve(true));

                                case 10:
                                  return _context322.abrupt("return", Promise.resolve(false));

                                case 11:
                                  _context322.next = 14;
                                  break;

                                case 13:
                                  return _context322.abrupt("return", Promise.resolve(false));

                                case 14:
                                case "end":
                                  return _context322.stop();
                              }
                            }
                          }, _callee322, this);
                        }));
                      })["catch"](function (err) {
                        _this139.logger.info("\uD83D\uDD14 [noteServ|noteCreateChannel] (Error): " + JSON.stringify(err));
                      }));

                    case 7:
                    case "end":
                      return _context323.stop();
                  }
                }
              }, _callee323);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "noteDeleteChannel",
          value: function noteDeleteChannel() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee325() {
              var _this140 = this;

              var chanOpts;
              return regeneratorRuntime.wrap(function _callee325$(_context325) {
                while (1) {
                  switch (_context325.prev = _context325.next) {
                    case 0:
                      chanOpts = {
                        id: 'sheriff-alerts',
                        name: 'Sheriff Alerts',
                        description: 'Alert Channel for Sheriff App',
                        sound: 'sheriffnote.wav',
                        importance: 5,
                        visibility: 1,
                        lights: true,
                        lightColor: '#FF9800',
                        vibration: true
                      };

                      _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.deleteChannel(chanOpts);

                      return _context325.abrupt("return", new Promise(function (resolve) {
                        setTimeout(resolve, 1000);
                      }).then(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(_this140, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee324() {
                          var nowChanRes, nCList, myListArr;
                          return regeneratorRuntime.wrap(function _callee324$(_context324) {
                            while (1) {
                              switch (_context324.prev = _context324.next) {
                                case 0:
                                  _context324.next = 2;
                                  return this.noteListChannels();

                                case 2:
                                  nowChanRes = _context324.sent;

                                  if (!(nowChanRes.result && nowChanRes.data.length > 0)) {
                                    _context324.next = 13;
                                    break;
                                  }

                                  nCList = nowChanRes.data;
                                  myListArr = nCList.filter(function (c) {
                                    return c.id === 'sheriff-alerts';
                                  });

                                  if (!(myListArr.length === 0)) {
                                    _context324.next = 10;
                                    break;
                                  }

                                  return _context324.abrupt("return", Promise.resolve(true));

                                case 10:
                                  return _context324.abrupt("return", Promise.resolve(false));

                                case 11:
                                  _context324.next = 14;
                                  break;

                                case 13:
                                  return _context324.abrupt("return", Promise.resolve(true));

                                case 14:
                                case "end":
                                  return _context324.stop();
                              }
                            }
                          }, _callee324, this);
                        }));
                      }));

                    case 3:
                    case "end":
                      return _context325.stop();
                  }
                }
              }, _callee325);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "noteListChannels",
          value: function noteListChannels() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee326() {
              var listChanRes;
              return regeneratorRuntime.wrap(function _callee326$(_context326) {
                while (1) {
                  switch (_context326.prev = _context326.next) {
                    case 0:
                      _context326.prev = 0;
                      _context326.next = 3;
                      return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.listChannels();

                    case 3:
                      listChanRes = _context326.sent;

                      if (!(listChanRes.channels.length > 0)) {
                        _context326.next = 8;
                        break;
                      }

                      return _context326.abrupt("return", Promise.resolve({
                        result: true,
                        data: listChanRes.channels
                      }));

                    case 8:
                      return _context326.abrupt("return", Promise.resolve({
                        result: true,
                        data: []
                      }));

                    case 9:
                      _context326.next = 14;
                      break;

                    case 11:
                      _context326.prev = 11;
                      _context326.t0 = _context326["catch"](0);
                      this.logger.info("\uD83D\uDD14 [noteServ|noteListChannels] (Error): " + _context326.t0);

                    case 14:
                    case "end":
                      return _context326.stop();
                  }
                }
              }, _callee326, this, [[0, 11]]);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "noteListenAddGotNote",
          value: function noteListenAddGotNote() {
            var _this141 = this;

            _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.addListener('localNotificationReceived', function (nOb) {
              _this141.logger.info("\uD83D\uDD14 [noteServ|noteListen] (ALERT) Received Alert ID #" + nOb.id);

              var nO = nOb;

              if (nO.id === _this141.tNoteId) {
                _this141.logger.info("\uD83D\uDD14 [noteServ|noteListen] (TEST ALERT) Alert is a [TEST]...");

                _this141.evServ.publish('testNoteStage', {
                  stage: 'gottest',
                  data: nO
                });
              } else {
                _this141.logger.info("\uD83D\uDD14 [noteServ|noteListen] (ALERT) Alert is [NOT A TEST]...");
              }
            });
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "noteListenAddGotAction",
          value: function noteListenAddGotAction() {
            var _this142 = this;

            var trigTimeOptArr = [{
              mins: 30,
              label: "\uD83D\uDFE0 in 30 Minutes"
            }, {
              mins: 60,
              label: "\uD83D\uDFE0 in an Hour"
            }, {
              mins: 120,
              label: "\uD83D\uDFE0 in 2 Hours"
            }, {
              mins: 360,
              label: "\uD83D\uDFE0 in 6 Hours"
            }, {
              mins: 720,
              label: "\uD83D\uDFE0 in 12 Hours"
            }, {
              mins: 1440,
              label: "\uD83D\uDFE0 Tomorrow"
            }, {
              mins: 2880,
              label: "\uD83D\uDFE0 in 2 Days"
            }, {
              mins: 4320,
              label: "\uD83D\uDFE0 in 3 Days"
            }, {
              mins: 10080,
              label: "\uD83D\uDFE0 Next Week"
            }];

            var snoozeOpts = function snoozeOpts(noteO) {
              var viableOpts = [];
              var eventD = new Date(noteO.extra.evdate);
              var nowD = new Date();

              var ifB4 = function ifB4(plusM) {
                var snoozeTrig = _this142.dT.addMs(nowD, plusM);

                if (_this142.dT.isB(snoozeTrig, eventD)) {
                  return {
                    result: true,
                    trigger: snoozeTrig
                  };
                } else {
                  return {
                    result: false,
                    trigger: null
                  };
                }
              };

              for (var i = 0; i < trigTimeOptArr.length; i++) {
                var testOptOb = trigTimeOptArr[i];
                var testB4Res = ifB4(testOptOb.mins);

                if (testB4Res.result) {
                  viableOpts.push({
                    label: testOptOb.label,
                    mins: testOptOb.mins,
                    trigger: testB4Res.trigger
                  });
                }
              }

              ;
              return Promise.resolve(viableOpts);
            };

            _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.addListener('localNotificationActionPerformed', function (aOb) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(_this142, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee327() {
                var aO, isTest, vSnoozeOpts, cancelI, mySnoozeOs, i, snoozeRes, snoozeSelLabel, snoozeSelTrig, untilDL, snoozeBody, bodyTxtArr, b4DLTxt, _bodyTxtArr, _b4DLTxt, _bodyTxtArr2, _b4DLTxt2, snoozeNote, testSnoozeAt, snoozeNoteSchedRes;

                return regeneratorRuntime.wrap(function _callee327$(_context327) {
                  while (1) {
                    switch (_context327.prev = _context327.next) {
                      case 0:
                        aO = aOb.notification;
                        isTest = aO.extra.isTest;

                        if (!(aOb.actionId === 'task-snooze' || aOb.actionId === 'shift-snooze')) {
                          _context327.next = 41;
                          break;
                        }

                        this.logger.info("\uD83D\uDD14 [noteServ|noteListen] (ACTION) Received Action ID #" + aOb.actionId);
                        _context327.next = 6;
                        return snoozeOpts(aO);

                      case 6:
                        vSnoozeOpts = _context327.sent;

                        if (!(vSnoozeOpts.length > 0)) {
                          _context327.next = 38;
                          break;
                        }

                        mySnoozeOs = [];

                        for (i = 0; i < vSnoozeOpts.length; i++) {
                          mySnoozeOs.push({
                            title: vSnoozeOpts[i].label
                          });
                        }

                        ;
                        mySnoozeOs.push({
                          title: "\u274C CANCEL"
                        });
                        cancelI = mySnoozeOs.findIndex(function (o) {
                          return o.title === "\u274C CANCEL";
                        });
                        _context327.next = 15;
                        return _capacitor_action_sheet__WEBPACK_IMPORTED_MODULE_6__.ActionSheet.showActions({
                          title: 'Remind Me Again',
                          options: mySnoozeOs
                        });

                      case 15:
                        snoozeRes = _context327.sent;

                        if (!(snoozeRes.index === cancelI)) {
                          _context327.next = 20;
                          break;
                        }

                        this.evServ.showToast('warning', 'Snooze/Alert Cancelled');
                        _context327.next = 36;
                        break;

                      case 20:
                        snoozeSelLabel = mySnoozeOs[snoozeRes.index].title;
                        snoozeSelTrig = vSnoozeOpts.filter(function (st) {
                          return st.label === snoozeSelLabel;
                        })[0];
                        this.logger.info("\uD83D\uDD14 [noteServ|Action|Snooze] (SELECTED): [MINS]: " + snoozeSelTrig.mins + ' | [LABEL]: ' + snoozeSelTrig.label + ' | [TRIGGER]: ' + snoozeSelTrig.trigger);
                        untilDL = this.dT.DifDurStr(new Date(), new Date(aO.extra.evdate));

                        if (aO.body.includes('Upcoming')) {
                          bodyTxtArr = aO.body.split('starts in ');
                          b4DLTxt = bodyTxtArr[0];
                          snoozeBody = b4DLTxt + 'starts in ' + untilDL;
                        } else if (aO.body.includes('Confirm')) {
                          _bodyTxtArr = aO.body.split('within ');
                          _b4DLTxt = _bodyTxtArr[0];
                          snoozeBody = _b4DLTxt + 'in ' + untilDL;
                        } else {
                          _bodyTxtArr2 = aO.body.split('due in ');
                          _b4DLTxt2 = _bodyTxtArr2[0];
                          snoozeBody = _b4DLTxt2 + 'due in ' + untilDL;
                        }

                        ;
                        snoozeNote = {
                          id: aO.id,
                          title: aO.title + ' (𝗦𝗻𝗼𝗼𝘇𝗲𝗱)',
                          body: snoozeBody,
                          largeBody: snoozeBody,
                          schedule: {
                            repeats: false,
                            allowWhileIdle: true,
                            at: snoozeSelTrig.trigger
                          },
                          smallIcon: 'ic_stat_sheriffnote',
                          iconColor: '#FF9800',
                          sound: 'sheriffnote.wav',
                          ongoing: false,
                          autoCancel: false,
                          extra: {
                            type: aO.extra.type,
                            uctype: aO.extra.uctype,
                            evdate: aO.extra.evdate
                          }
                        };
                        testSnoozeAt = this.dT.addS(new Date(), 5);

                        if (isTest) {
                          snoozeNote.schedule.at = testSnoozeAt;
                        }

                        ;

                        if (this.hasMyChan) {
                          snoozeNote['channelId'] = 'sheriff-alerts';
                        }

                        ;
                        _context327.next = 34;
                        return _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.schedule({
                          notifications: [snoozeNote]
                        });

                      case 34:
                        snoozeNoteSchedRes = _context327.sent;

                        if (snoozeNoteSchedRes.notifications.length > 0) {
                          this.logger.info("\uD83D\uDD14 [noteServ|Action|Snooze] (SUCCESS) Snoozed Note #" + snoozeNoteSchedRes.notifications[0].id);
                        } else {
                          this.logger.info("\uD83D\uDD14 [noteServ|Action|Snooze] (ERROR)");
                        }

                      case 36:
                        _context327.next = 39;
                        break;

                      case 38:
                        this.logger.info("\uD83D\uDD14 [noteServ|Action|Snooze] - No Viable Snooze Times Available.");

                      case 39:
                        _context327.next = 42;
                        break;

                      case 41:
                        this.logger.info("\uD83D\uDD14 [noteServ|noteListen] (ACTION) Received Action ID #" + aO.actionId);

                      case 42:
                      case "end":
                        return _context327.stop();
                    }
                  }
                }, _callee327, this);
              }));
            });
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "noteListenRemoveAll",
          value: function noteListenRemoveAll() {
            _capacitor_local_notifications__WEBPACK_IMPORTED_MODULE_0__.LocalNotifications.removeAllListeners();
          }
        }]);

        return NotificationsService;
      }();

      _NotificationsService.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_10__.NGXLogger
        }, {
          type: _datetime_service__WEBPACK_IMPORTED_MODULE_1__.DateTimeService
        }, {
          type: _sqlite_service__WEBPACK_IMPORTED_MODULE_2__.SQLiteService
        }, {
          type: _events_service__WEBPACK_IMPORTED_MODULE_3__.EventsService
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_11__.LoadingController
        }, {
          type: _fairwork_service__WEBPACK_IMPORTED_MODULE_5__.FairworkService
        }, {
          type: _detail_service__WEBPACK_IMPORTED_MODULE_8__.DetailService
        }, {
          type: _firebase_service__WEBPACK_IMPORTED_MODULE_4__.FirebaseService
        }];
      };

      _NotificationsService = (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_12__.Injectable)({
        providedIn: 'root'
      }) ////////////////////////////////////////////////////////////////
      ], _NotificationsService);
      /***/
    },

    /***/
    92472:
    /*!*****************************************!*\
      !*** ./src/app/services/profileData.ts ***!
      \*****************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "pSels": function pSels() {
          return (
            /* binding */
            _pSels
          );
        },

        /* harmony export */
        "iabKeys": function iabKeys() {
          return (
            /* binding */
            _iabKeys
          );
        },

        /* harmony export */
        "pKeys": function pKeys() {
          return (
            /* binding */
            _pKeys
          );
        },

        /* harmony export */
        "dbTypes": function dbTypes() {
          return (
            /* binding */
            _dbTypes
          );
        },

        /* harmony export */
        "pTypes": function pTypes() {
          return (
            /* binding */
            _pTypes
          );
        },

        /* harmony export */
        "savePTypes": function savePTypes() {
          return (
            /* binding */
            _savePTypes
          );
        },

        /* harmony export */
        "profileScrapeCode": function profileScrapeCode() {
          return (
            /* binding */
            _profileScrapeCode
          );
        },

        /* harmony export */
        "c2DCObj": function c2DCObj() {
          return (
            /* binding */
            _c2DCObj
          );
        }
        /* harmony export */

      });

      var _pSels = ['#edit-display-name', '#edit-first-name', '#edit-last-name', '#edit-email', '#edit-phone', '#edit-birthday', '#edit-pin', 'div.profile-gender>div>select', 'div.profile-pronouns>div>select', '#edit-custom-pronouns1', '#edit-main-address-street1', '#edit-main-address-city', '#edit-main-address-country', '#edit-main-address-state', '#edit-main-address-postcode', '#edit-emergency-address-contact-name', '#edit-emergency-address-phone'];
      var _iabKeys = ['dname', 'fname', 'lname', 'email', 'phone', 'dob', 'pin', 'gender', 'pronoun', 'custompn', 'street', 'city', 'country', 'state', 'pcode', 'ename', 'ephone'];
      var _pKeys = ['photo', 'dname', 'fname', 'lname', 'email', 'phone', 'dob', 'pin', 'gender', 'pronoun', 'custompn', 'street', 'city', 'country', 'state', 'pcode', 'ename', 'ephone'];
      var _dbTypes = {
        dp_uuk: 'string',
        photo: 'string',
        dname: 'string',
        fname: 'string',
        lname: 'string',
        email: 'string',
        phone: 'number',
        dob: 'string',
        pin: 'number',
        gender: 'number',
        pronoun: 'number',
        custompn: 'string',
        street: 'string',
        city: 'string',
        country: 'number',
        state: 'number',
        pcode: 'number',
        ename: 'string',
        ephone: 'number',
        last_sync: 'number',
        last_modified: 'number'
      };
      var _pTypes = ['string', 'string', 'string', 'string', 'number', 'string', 'number', 'number', 'number', 'string', 'string', 'string', 'number', 'number', 'number', 'string', 'number'];
      var _savePTypes = ['string', 'string', 'string', 'string', 'number', 'string', 'number', 'number', 'number', 'string', 'string', 'string', 'number', 'number', 'number', 'string', 'number'];
      var _profileScrapeCode = "(()=>{\n  const pLoop=setInterval(()=>{\n    const dnameEle=$(\"#edit-display-name\");\n    const fnameEle=$(\"#edit-first-name\");\n    const lnameEle=$(\"#edit-last-name\");\n    const emailEle=$(\"#edit-email\");\n    const phoneEle=$(\"#edit-phone\");\n    const bdayEle=$(\"#edit-birthday\");\n    const kpinEle=$(\"#edit-pin\");\n    const genderEle=$(\"div.profile-gender>div>select\");\n    const pronounEle=$(\"div.profile-pronouns>div>select\");\n    const custompnEle=$(\"#edit-custom-pronouns1\");\n    const streetEle=$(\"#edit-main-address-street1\");\n    const cityEle=$(\"#edit-main-address-city\");\n    const countryEle=$(\"#edit-main-address-country\");\n    const stateEle=$(\"#edit-main-address-state\");\n    const pcodeEle=$(\"#edit-main-address-postcode\");\n    const enameEle=$(\"#edit-emergency-address-contact-name\");\n    const ephoneEle=$(\"#edit-emergency-address-phone\");\n    if($(dnameEle).length&&$(fnameEle).length&&$(lnameEle).length&&$(emailEle).length&&$(phoneEle).length&&$(bdayEle).length&&$(kpinEle).length&&$(genderEle).length&&$(pronounEle).length&&$(custompnEle).length&&$(streetEle).length&&$(cityEle).length&&$(countryEle).length&&$(stateEle).length&&$(pcodeEle).length&&$(enameEle).length&&$(ephoneEle).length){\n      clearInterval(pLoop);\n      setTimeout(()=>{\n        var dname=$(dnameEle).attr(\"value\");if(dname===null||dname===undefined||dname===\"\"){dname=\"null\"};\n        var fname=$(fnameEle).attr(\"value\");if(fname===null||fname===undefined||fname===\"\"){fname=\"null\"};\n        var lname=$(lnameEle).attr(\"value\");if(lname===null||lname===undefined||lname===\"\"){lname=\"null\"};\n        var email=$(emailEle).attr(\"value\");if(email===null||email===undefined||email===\"\"){email=\"null\"};\n        var phone=$(phoneEle).attr(\"value\");if(phone===null||phone===undefined||phone===\"\"){phone=\"null\"};\n        var bday=$(bdayEle).attr(\"value\");if(bday===null||bday===undefined||bday===\"\"){bday=\"null\"};\n        var kpin=$(kpinEle).attr(\"value\");if(kpin===null||kpin===undefined||kpin===\"\"){kpin=\"null\"};\n        var gender=$(genderEle).attr(\"value\");if(gender===null||gender===undefined||gender===\"\"){gender=\"null\"};\n        var pronoun=$(pronounEle).attr(\"value\");if(pronoun===null||pronoun===undefined||pronoun===\"\"){pronoun=\"null\"};\n        var custompn=$(custompnEle).attr(\"value\");if(custompn===null||custompn===undefined||custompn===\"\"){custompn=\"null\"};\n        var street=$(streetEle).attr(\"value\");if(street===null||street===undefined||street===\"\"){street=\"null\"};\n        var city=$(cityEle).attr(\"value\");if(city===null||city===undefined||city===\"\"){city=\"null\"};\n        var country=$(countryEle).attr(\"value\");if(country===null||country===undefined||country===\"\"){country=\"null\"};\n        var state=$(stateEle).attr(\"value\");if(state===null||state===undefined||state===\"\"){state=\"null\"};\n        var pcode=$(pcodeEle).attr(\"value\");if(pcode===null||pcode===undefined||pcode===\"\"){pcode=\"null\"};\n        var ename=$(enameEle).attr(\"value\");if(ename===null||ename===undefined||ename===\"\"){ename=\"null\"};\n        var ephone=$(ephoneEle).attr(\"value\");if(ephone===null||ephone===undefined||ephone===\"\"){ephone=\"null\"};\n        window.location.href=\"sheriff=\"+dname+\"|\"+fname+\"|\"+lname+\"|\"+email+\"|\"+phone+\"|\"+bday+\"|\"+kpin+\"|\"+gender+\"|\"+pronoun+\"|\"+custompn+\"|\"+street+\"|\"+city+\"|\"+country+\"|\"+state+\"|\"+pcode+\"|\"+ename+\"|\"+ephone\n      },500)\n    }\n  },250)\n})();";
      var _c2DCObj = {
        "Aruba": "+297",
        "Afghanistan": "+93",
        "Angola": "+244",
        "Anguilla": "+1264",
        "Åland Islands": "+35818",
        "Albania": "+355",
        "Andorra": "+376",
        "United Arab Emirates": "+971",
        "Argentina": "+54",
        "Armenia": "+374",
        "American Samoa": "+1684",
        "Antarctica": "",
        "French Southern and Antarctic Lands": "+262",
        "Antigua and Barbuda": "+1268",
        "Australia": "+61",
        "Austria": "+43",
        "Azerbaijan": "+994",
        "Burundi": "+257",
        "Belgium": "+32",
        "Benin": "+229",
        "Burkina Faso": "+226",
        "Bangladesh": "+880",
        "Bulgaria": "+359",
        "Bahrain": "+973",
        "Bahamas": "+1242",
        "Bosnia and Herzegovina": "+387",
        "Saint Barthélemy": "+590",
        "Saint Helena, Ascension and Tristan da Cunha": "+290,47",
        "Belarus": "+375",
        "Belize": "+501",
        "Bermuda": "+1441",
        "Bolivia": "+591",
        "Caribbean Netherlands": "+599",
        "Brazil": "+55",
        "Barbados": "+1246",
        "Brunei": "+673",
        "Bhutan": "+975",
        "Bouvet Island": "+47",
        "Botswana": "+267",
        "Central African Republic": "+236",
        "Canada": "+1",
        "Cocos (Keeling) Islands": "+61",
        "Switzerland": "+41",
        "Chile": "+56",
        "China": "+86",
        "Ivory Coast": "+225",
        "Cameroon": "+237",
        "DR Congo": "+243",
        "Republic of the Congo": "+242",
        "Cook Islands": "+682",
        "Colombia": "+57",
        "Comoros": "+269",
        "Cape Verde": "+238",
        "Costa Rica": "+506",
        "Cuba": "+53",
        "Curaçao": "+599",
        "Christmas Island": "+61",
        "Cayman Islands": "+1345",
        "Cyprus": "+357",
        "Czechia": "+420",
        "Germany": "+49",
        "Djibouti": "+253",
        "Dominica": "+1767",
        "Denmark": "+45",
        "Dominican Republic": "+1809,829,849",
        "Algeria": "+213",
        "Ecuador": "+593",
        "Egypt": "+20",
        "Eritrea": "+291",
        "Western Sahara": "+2125288,125289",
        "Spain": "+34",
        "Estonia": "+372",
        "Ethiopia": "+251",
        "Finland": "+358",
        "Fiji": "+679",
        "Falkland Islands": "+500",
        "France": "+33",
        "Faroe Islands": "+298",
        "Micronesia": "+691",
        "Gabon": "+241",
        "United Kingdom": "+44",
        "Georgia": "+995",
        "Guernsey": "+44",
        "Ghana": "+233",
        "Gibraltar": "+350",
        "Guinea": "+224",
        "Guadeloupe": "+590",
        "Gambia": "+220",
        "Guinea-Bissau": "+245",
        "Equatorial Guinea": "+240",
        "Greece": "+30",
        "Grenada": "+1473",
        "Greenland": "+299",
        "Guatemala": "+502",
        "French Guiana": "+594",
        "Guam": "+1671",
        "Guyana": "+592",
        "Hong Kong": "+852",
        "Heard Island and McDonald Islands": "",
        "Honduras": "+504",
        "Croatia": "+385",
        "Haiti": "+509",
        "Hungary": "+36",
        "Indonesia": "+62",
        "Isle of Man": "+44",
        "India": "+91",
        "British Indian Ocean Territory": "+246",
        "Ireland": "+353",
        "Iran": "+98",
        "Iraq": "+964",
        "Iceland": "+354",
        "Israel": "+972",
        "Italy": "+39",
        "Jamaica": "+1876",
        "Jersey": "+44",
        "Jordan": "+962",
        "Japan": "+81",
        "Kazakhstan": "+76,7",
        "Kenya": "+254",
        "Kyrgyzstan": "+996",
        "Cambodia": "+855",
        "Kiribati": "+686",
        "Saint Kitts and Nevis": "+1869",
        "South Korea": "+82",
        "Kosovo": "+383",
        "Kuwait": "+965",
        "Laos": "+856",
        "Lebanon": "+961",
        "Liberia": "+231",
        "Libya": "+218",
        "Saint Lucia": "+1758",
        "Liechtenstein": "+423",
        "Sri Lanka": "+94",
        "Lesotho": "+266",
        "Lithuania": "+370",
        "Luxembourg": "+352",
        "Latvia": "+371",
        "Macau": "+853",
        "Saint Martin": "+590",
        "Morocco": "+212",
        "Monaco": "+377",
        "Moldova": "+373",
        "Madagascar": "+261",
        "Maldives": "+960",
        "Mexico": "+52",
        "Marshall Islands": "+692",
        "North Macedonia": "+389",
        "Mali": "+223",
        "Malta": "+356",
        "Myanmar": "+95",
        "Montenegro": "+382",
        "Mongolia": "+976",
        "Northern Mariana Islands": "+1670",
        "Mozambique": "+258",
        "Mauritania": "+222",
        "Montserrat": "+1664",
        "Martinique": "+596",
        "Mauritius": "+230",
        "Malawi": "+265",
        "Malaysia": "+60",
        "Mayotte": "+262",
        "Namibia": "+264",
        "New Caledonia": "+687",
        "Niger": "+227",
        "Norfolk Island": "+672",
        "Nigeria": "+234",
        "Nicaragua": "+505",
        "Niue": "+683",
        "Netherlands": "+31",
        "Norway": "+47",
        "Nepal": "+977",
        "Nauru": "+674",
        "New Zealand": "+64",
        "Oman": "+968",
        "Pakistan": "+92",
        "Panama": "+507",
        "Pitcairn Islands": "+64",
        "Peru": "+51",
        "Philippines": "+63",
        "Palau": "+680",
        "Papua New Guinea": "+675",
        "Poland": "+48",
        "Puerto Rico": "+1787,939",
        "North Korea": "+850",
        "Portugal": "+351",
        "Paraguay": "+595",
        "Palestine": "+970",
        "French Polynesia": "+689",
        "Qatar": "+974",
        "Réunion": "+262",
        "Romania": "+40",
        "Russia": "+73,4,5,8,9",
        "Rwanda": "+250",
        "Saudi Arabia": "+966",
        "Sudan": "+249",
        "Senegal": "+221",
        "Singapore": "+65",
        "South Georgia": "+500",
        "Svalbard and Jan Mayen": "+4779",
        "Solomon Islands": "+677",
        "Sierra Leone": "+232",
        "El Salvador": "+503",
        "San Marino": "+378",
        "Somalia": "+252",
        "Saint Pierre and Miquelon": "+508",
        "Serbia": "+381",
        "South Sudan": "+211",
        "São Tomé and Príncipe": "+239",
        "Suriname": "+597",
        "Slovakia": "+421",
        "Slovenia": "+386",
        "Sweden": "+46",
        "Eswatini": "+268",
        "Sint Maarten": "+1721",
        "Seychelles": "+248",
        "Syria": "+963",
        "Turks and Caicos Islands": "+1649",
        "Chad": "+235",
        "Togo": "+228",
        "Thailand": "+66",
        "Tajikistan": "+992",
        "Tokelau": "+690",
        "Turkmenistan": "+993",
        "Timor-Leste": "+670",
        "Tonga": "+676",
        "Trinidad and Tobago": "+1868",
        "Tunisia": "+216",
        "Turkey": "+90",
        "Tuvalu": "+688",
        "Taiwan": "+886",
        "Tanzania": "+255",
        "Uganda": "+256",
        "Ukraine": "+380",
        "United States Minor Outlying Islands": "+268",
        "Uruguay": "+598",
        "United States": "+1201,202,203,205,206,207,208,209,210,212,213,214,215,216,217,218,219,220,224,225,227,228,229,231,234,239,240,248,251,252,253,254,256,260,262,267,269,270,272,274,276,281,283,301,302,303,304,305,307,308,309,310,312,313,314,315,316,317,318,319,320,321,323,325,327,330,331,334,336,337,339,346,347,351,352,360,361,364,380,385,386,401,402,404,405,406,407,408,409,410,412,413,414,415,417,419,423,424,425,430,432,434,435,440,442,443,447,458,463,464,469,470,475,478,479,480,484,501,502,503,504,505,507,508,509,510,512,513,515,516,517,518,520,530,531,534,539,540,541,551,559,561,562,563,564,567,570,571,573,574,575,580,585,586,601,602,603,605,606,607,608,609,610,612,614,615,616,617,618,619,620,623,626,628,629,630,631,636,641,646,650,651,657,660,661,662,667,669,678,681,682,701,702,703,704,706,707,708,712,713,714,715,716,717,718,719,720,724,725,727,730,731,732,734,737,740,743,747,754,757,760,762,763,765,769,770,772,773,774,775,779,781,785,786,801,802,803,804,805,806,808,810,812,813,814,815,816,817,818,828,830,831,832,843,845,847,848,850,854,856,857,858,859,860,862,863,864,865,870,872,878,901,903,904,906,907,908,909,910,912,913,914,915,916,917,918,919,920,925,928,929,930,931,934,936,937,938,940,941,947,949,951,952,954,956,959,970,971,972,973,975,978,979,980,984,985,989",
        "Uzbekistan": "+998",
        "Vatican City": "+3906698,79",
        "Saint Vincent and the Grenadines": "+1784",
        "Venezuela": "+58",
        "British Virgin Islands": "+1284",
        "United States Virgin Islands": "+1340",
        "Vietnam": "+84",
        "Vanuatu": "+678",
        "Wallis and Futuna": "+681",
        "Samoa": "+685",
        "Yemen": "+967",
        "South Africa": "+27",
        "Zambia": "+260",
        "Zimbabwe": "+263"
      };
      /* uglified */

      /* window.env = {
        FUNCTION_LOG_DISABLED: true
      };
      (function($) {
        "use strict";
        var loadImage = function loadImage(file, callback, options) {
            var img = document.createElement("img"), url, oUrl;
            img.onerror = callback;
            img.onload = function() {
                if (oUrl && !(options && options.noRevoke)) {
                    loadImage.revokeObjectURL(oUrl)
                }
                if (callback) {
                    callback(loadImage.scale(img, options))
                }
            }
            ;
            if (loadImage.isInstanceOf("Blob", file) || loadImage.isInstanceOf("File", file)) {
                url = oUrl = loadImage.createObjectURL(file);
                img._type = file.type
            } else if (typeof file === "string") {
                url = file;
                if (options && options.crossOrigin) {
                    img.crossOrigin = options.crossOrigin
                }
            } else {
                return false
            }
            if (url) {
                img.src = url;
                return img
            }
            return loadImage.readFile(file, function(e) {
                var target = e.target;
                if (target && target.result) {
                    img.src = target.result
                } else {
                    if (callback) {
                        callback(e)
                    }
                }
            })
        }
          , urlAPI = window.createObjectURL && window || window.URL && URL.revokeObjectURL && URL || window.webkitURL && webkitURL;
        loadImage.isInstanceOf = function(type, obj) {
            return Object.prototype.toString.call(obj) === "[object " + type + "]"
        }
        ;
        loadImage.transformCoordinates = function() {
            return
        }
        ;
        loadImage.getTransformedOptions = function(img, options) {
            var aspectRatio = options.aspectRatio, newOptions, i, width, height;
            if (!aspectRatio) {
                return options
            }
            newOptions = {};
            for (i in options) {
                if (options.hasOwnProperty(i)) {
                    newOptions[i] = options[i]
                }
            }
            newOptions.crop = true;
            width = img.naturalWidth || img.width;
            height = img.naturalHeight || img.height;
            if (width / height > aspectRatio) {
                newOptions.maxWidth = height * aspectRatio;
                newOptions.maxHeight = height
            } else {
                newOptions.maxWidth = width;
                newOptions.maxHeight = width / aspectRatio
            }
            return newOptions
        }
        ;
        loadImage.renderImageToCanvas = function(canvas, img, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight) {
            canvas.getContext("2d").drawImage(img, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight);
            return canvas
        }
        ;
        loadImage.hasCanvasOption = function(options) {
            return options.canvas || options.crop || options.aspectRatio
        }
        ;
        loadImage.scale = function(img, options) {
            options = options || {};
            var canvas = document.createElement("canvas"), useCanvas = img.getContext || loadImage.hasCanvasOption(options) && canvas.getContext, width = img.naturalWidth || img.width, height = img.naturalHeight || img.height, destWidth = width, destHeight = height, maxWidth, maxHeight, minWidth, minHeight, sourceWidth, sourceHeight, sourceX, sourceY, tmp, scaleUp = function scaleUp() {
                var scale = Math.max((minWidth || destWidth) / destWidth, (minHeight || destHeight) / destHeight);
                if (scale > 1) {
                    destWidth = destWidth * scale;
                    destHeight = destHeight * scale
                }
            }, scaleDown = function scaleDown() {
                var scale = Math.min((maxWidth || destWidth) / destWidth, (maxHeight || destHeight) / destHeight);
                if (scale < 1) {
                    destWidth = destWidth * scale;
                    destHeight = destHeight * scale
                }
            };
            if (useCanvas) {
                options = loadImage.getTransformedOptions(img, options);
                sourceX = options.left || 0;
                sourceY = options.top || 0;
                if (options.sourceWidth) {
                    sourceWidth = options.sourceWidth;
                    if (options.right !== undefined && options.left === undefined) {
                        sourceX = width - sourceWidth - options.right
                    }
                } else {
                    sourceWidth = width - sourceX - (options.right || 0)
                }
                if (options.sourceHeight) {
                    sourceHeight = options.sourceHeight;
                    if (options.bottom !== undefined && options.top === undefined) {
                        sourceY = height - sourceHeight - options.bottom
                    }
                } else {
                    sourceHeight = height - sourceY - (options.bottom || 0)
                }
                destWidth = sourceWidth;
                destHeight = sourceHeight
            }
            maxWidth = options.maxWidth;
            maxHeight = options.maxHeight;
            minWidth = options.minWidth;
            minHeight = options.minHeight;
            if (useCanvas && maxWidth && maxHeight && options.crop) {
                destWidth = maxWidth;
                destHeight = maxHeight;
                tmp = sourceWidth / sourceHeight - maxWidth / maxHeight;
                if (tmp < 0) {
                    sourceHeight = maxHeight * sourceWidth / maxWidth;
                    if (options.top === undefined && options.bottom === undefined) {
                        sourceY = (height - sourceHeight) / 2
                    }
                } else if (tmp > 0) {
                    sourceWidth = maxWidth * sourceHeight / maxHeight;
                    if (options.left === undefined && options.right === undefined) {
                        sourceX = (width - sourceWidth) / 2
                    }
                }
            } else {
                if (options.contain || options.cover) {
                    minWidth = maxWidth = maxWidth || minWidth;
                    minHeight = maxHeight = maxHeight || minHeight
                }
                if (options.cover) {
                    scaleDown();
                    scaleUp()
                } else {
                    scaleUp();
                    scaleDown()
                }
            }
            if (useCanvas) {
                canvas.width = destWidth;
                canvas.height = destHeight;
                loadImage.transformCoordinates(canvas, options);
                return loadImage.renderImageToCanvas(canvas, img, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, destWidth, destHeight)
            }
            img.width = destWidth;
            img.height = destHeight;
            return img
        }
        ;
        loadImage.createObjectURL = function(file) {
            return urlAPI ? urlAPI.createObjectURL(file) : false
        }
        ;
        loadImage.revokeObjectURL = function(url) {
            return urlAPI ? urlAPI.revokeObjectURL(url) : false
        }
        ;
        loadImage.readFile = function(file, callback, method) {
            if (window.FileReader) {
                var fileReader = new FileReader;
                fileReader.onload = fileReader.onerror = callback;
                method = method || "readAsDataURL";
                if (fileReader[method]) {
                    fileReader[method](file);
                    return fileReader
                }
            }
            return false
        }
        ;
        if (typeof define === "function" && define.amd) {
            define(function() {
                return loadImage
            })
        } else {
            $.loadImage = loadImage
        }
      }
      )(this);
      (function(factory) {
        "use strict";
        if (typeof define === "function" && define.amd) {
            define(["load-image"], factory)
        } else {
            factory(window.loadImage)
        }
      }
      )(function(loadImage) {
        "use strict";
        var hasblobSlice = window.Blob && (Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice);
        loadImage.blobSlice = hasblobSlice && function() {
            var slice = this.slice || this.webkitSlice || this.mozSlice;
            return slice.apply(this, arguments)
        }
        ;
        loadImage.metaDataParsers = {
            jpeg: {
                65505: []
            }
        };
        loadImage.parseMetaData = function(file, callback, options) {
            options = options || {};
            var that = this
              , maxMetaDataSize = options.maxMetaDataSize || 262144
              , data = {}
              , noMetaData = !(window.DataView && file && file.size >= 12 && file.type === "image/jpeg" && loadImage.blobSlice);
            if (noMetaData || !loadImage.readFile(loadImage.blobSlice.call(file, 0, maxMetaDataSize), function(e) {
                if (e.target.error) {
                    console.log(e.target.error);
                    callback(data);
                    return
                }
                var buffer = e.target.result, dataView = new DataView(buffer), offset = 2, maxOffset = dataView.byteLength - 4, headLength = offset, markerBytes, markerLength, parsers, i;
                if (dataView.getUint16(0) === 65496) {
                    while (offset < maxOffset) {
                        markerBytes = dataView.getUint16(offset);
                        if (markerBytes >= 65504 && markerBytes <= 65519 || markerBytes === 65534) {
                            markerLength = dataView.getUint16(offset + 2) + 2;
                            if (offset + markerLength > dataView.byteLength) {
                                console.log("Invalid meta data: Invalid segment size.");
                                break
                            }
                            parsers = loadImage.metaDataParsers.jpeg[markerBytes];
                            if (parsers) {
                                for (i = 0; i < parsers.length; i += 1) {
                                    parsers[i].call(that, dataView, offset, markerLength, data, options)
                                }
                            }
                            offset += markerLength;
                            headLength = offset
                        } else {
                            break
                        }
                    }
                    if (!options.disableImageHead && headLength > 6) {
                        if (buffer.slice) {
                            data.imageHead = buffer.slice(0, headLength)
                        } else {
                            data.imageHead = new Uint8Array(buffer).subarray(0, headLength)
                        }
                    }
                } else {
                    console.log("Invalid JPEG file: Missing JPEG marker.")
                }
                callback(data)
            }, "readAsArrayBuffer")) {
                callback(data)
            }
        }
      });
      (function(factory) {
        "use strict";
        if (typeof define === "function" && define.amd) {
            define(["jquery", "jquery.ui.widget"], factory)
        } else {
            factory(window.jQuery)
        }
      }
      )(function($) {
        "use strict";
        $.support.fileInput = !(new RegExp("(Android (1\\.[0156]|2\\.[01]))" + "|(Windows Phone (OS 7|8\\.0))|(XBLWP)|(ZuneWP)|(WPDesktop)" + "|(w(eb)?OSBrowser)|(webOS)" + "|(Kindle/(1\\.0|2\\.[05]|3\\.0))").test(window.navigator.userAgent) || $('<input type="file">').prop("disabled"));
        $.support.xhrFileUpload = !!(window.ProgressEvent && window.FileReader);
        $.support.xhrFormDataFileUpload = !!window.FormData;
        $.support.blobSlice = window.Blob && (Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice);
        $.widget("blueimp.fileupload", {
            options: {
                dropZone: $(document),
                pasteZone: $(document),
                fileInput: undefined,
                replaceFileInput: true,
                paramName: undefined,
                singleFileUploads: true,
                limitMultiFileUploads: undefined,
                limitMultiFileUploadSize: undefined,
                limitMultiFileUploadSizeOverhead: 512,
                sequentialUploads: false,
                limitConcurrentUploads: undefined,
                forceIframeTransport: false,
                redirect: undefined,
                redirectParamName: undefined,
                postMessage: undefined,
                multipart: true,
                maxChunkSize: undefined,
                uploadedBytes: undefined,
                recalculateProgress: true,
                progressInterval: 100,
                bitrateInterval: 500,
                autoUpload: true,
                messages: {
                    uploadedBytes: "Uploaded bytes exceed file size"
                },
                i18n: function i18n(message, context) {
                    message = this.messages[message] || message.toString();
                    if (context) {
                        $.each(context, function(key, value) {
                            message = message.replace("{" + key + "}", value)
                        })
                    }
                    return message
                },
                formData: function formData(form) {
                    return form.serializeArray()
                },
                add: function add(e, data) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    if (data.autoUpload || data.autoUpload !== false && $(this).fileupload("option", "autoUpload")) {
                        data.process().done(function() {
                            data.submit()
                        })
                    }
                },
                processData: false,
                contentType: false,
                cache: false
            },
            _specialOptions: ["fileInput", "dropZone", "pasteZone", "multipart", "forceIframeTransport"],
            _blobSlice: $.support.blobSlice && function() {
                var slice = this.slice || this.webkitSlice || this.mozSlice;
                return slice.apply(this, arguments)
            }
            ,
            _BitrateTimer: function _BitrateTimer() {
                this.timestamp = Date.now ? Date.now() : (new Date).getTime();
                this.loaded = 0;
                this.bitrate = 0;
                this.getBitrate = function(now, loaded, interval) {
                    var timeDiff = now - this.timestamp;
                    if (!this.bitrate || !interval || timeDiff > interval) {
                        this.bitrate = (loaded - this.loaded) * (1e3 / timeDiff) * 8;
                        this.loaded = loaded;
                        this.timestamp = now
                    }
                    return this.bitrate
                }
            },
            _isXHRUpload: function _isXHRUpload(options) {
                return !options.forceIframeTransport && (!options.multipart && $.support.xhrFileUpload || $.support.xhrFormDataFileUpload)
            },
            _getFormData: function _getFormData(options) {
                var formData;
                if ($.type(options.formData) === "function") {
                    return options.formData(options.form)
                }
                if ($.isArray(options.formData)) {
                    return options.formData
                }
                if ($.type(options.formData) === "object") {
                    formData = [];
                    $.each(options.formData, function(name, value) {
                        formData.push({
                            name: name,
                            value: value
                        })
                    });
                    return formData
                }
                return []
            },
            _getTotal: function _getTotal(files) {
                var total = 0;
                $.each(files, function(index, file) {
                    total += file.size || 1
                });
                return total
            },
            _initProgressObject: function _initProgressObject(obj) {
                var progress = {
                    loaded: 0,
                    total: 0,
                    bitrate: 0
                };
                if (obj._progress) {
                    $.extend(obj._progress, progress)
                } else {
                    obj._progress = progress
                }
            },
            _initResponseObject: function _initResponseObject(obj) {
                var prop;
                if (obj._response) {
                    for (prop in obj._response) {
                        if (obj._response.hasOwnProperty(prop)) {
                            delete obj._response[prop]
                        }
                    }
                } else {
                    obj._response = {}
                }
            },
            _onProgress: function _onProgress(e, data) {
                if (e.lengthComputable) {
                    var now = Date.now ? Date.now() : (new Date).getTime(), loaded;
                    if (data._time && data.progressInterval && now - data._time < data.progressInterval && e.loaded !== e.total) {
                        return
                    }
                    data._time = now;
                    loaded = Math.floor(e.loaded / e.total * (data.chunkSize || data._progress.total)) + (data.uploadedBytes || 0);
                    this._progress.loaded += loaded - data._progress.loaded;
                    this._progress.bitrate = this._bitrateTimer.getBitrate(now, this._progress.loaded, data.bitrateInterval);
                    data._progress.loaded = data.loaded = loaded;
                    data._progress.bitrate = data.bitrate = data._bitrateTimer.getBitrate(now, loaded, data.bitrateInterval);
                    this._trigger("progress", $.Event("progress", {
                        delegatedEvent: e
                    }), data);
                    this._trigger("progressall", $.Event("progressall", {
                        delegatedEvent: e
                    }), this._progress)
                }
            },
            _initProgressListener: function _initProgressListener(options) {
                var that = this
                  , xhr = options.xhr ? options.xhr() : $.ajaxSettings.xhr();
                if (xhr.upload) {
                    $(xhr.upload).bind("progress", function(e) {
                        var oe = e.originalEvent;
                        e.lengthComputable = oe.lengthComputable;
                        e.loaded = oe.loaded;
                        e.total = oe.total;
                        that._onProgress(e, options)
                    });
                    options.xhr = function() {
                        return xhr
                    }
                }
            },
            _isInstanceOf: function _isInstanceOf(type, obj) {
                return Object.prototype.toString.call(obj) === "[object " + type + "]"
            },
            _initXHRData: function _initXHRData(options) {
                var that = this, formData, file = options.files[0], multipart = options.multipart || !$.support.xhrFileUpload, paramName = $.type(options.paramName) === "array" ? options.paramName[0] : options.paramName;
                options.headers = $.extend({}, options.headers);
                if (options.contentRange) {
                    options.headers["Content-Range"] = options.contentRange
                }
                if (!multipart || options.blob || !this._isInstanceOf("File", file)) {
                    options.headers["Content-Disposition"] = 'attachment; filename="' + encodeURI(file.name) + '"'
                }
                if (!multipart) {
                    options.contentType = file.type || "application/octet-stream";
                    options.data = options.blob || file
                } else if ($.support.xhrFormDataFileUpload) {
                    if (options.postMessage) {
                        formData = this._getFormData(options);
                        if (options.blob) {
                            formData.push({
                                name: paramName,
                                value: options.blob
                            })
                        } else {
                            $.each(options.files, function(index, file) {
                                formData.push({
                                    name: $.type(options.paramName) === "array" && options.paramName[index] || paramName,
                                    value: file
                                })
                            })
                        }
                    } else {
                        if (that._isInstanceOf("FormData", options.formData)) {
                            formData = options.formData
                        } else {
                            formData = new FormData;
                            $.each(this._getFormData(options), function(index, field) {
                                formData.append(field.name, field.value)
                            })
                        }
                        if (options.blob) {
                            formData.append(paramName, options.blob, file.name)
                        } else {
                            $.each(options.files, function(index, file) {
                                if (that._isInstanceOf("File", file) || that._isInstanceOf("Blob", file)) {
                                    formData.append($.type(options.paramName) === "array" && options.paramName[index] || paramName, file, file.uploadName || file.name)
                                }
                            })
                        }
                    }
                    options.data = formData
                }
                options.blob = null
            },
            _initIframeSettings: function _initIframeSettings(options) {
                var targetHost = $("<a></a>").prop("href", options.url).prop("host");
                options.dataType = "iframe " + (options.dataType || "");
                options.formData = this._getFormData(options);
                if (options.redirect && targetHost && targetHost !== location.host) {
                    options.formData.push({
                        name: options.redirectParamName || "redirect",
                        value: options.redirect
                    })
                }
            },
            _initDataSettings: function _initDataSettings(options) {
                if (this._isXHRUpload(options)) {
                    if (!this._chunkedUpload(options, true)) {
                        if (!options.data) {
                            this._initXHRData(options)
                        }
                        this._initProgressListener(options)
                    }
                    if (options.postMessage) {
                        options.dataType = "postmessage " + (options.dataType || "")
                    }
                } else {
                    this._initIframeSettings(options)
                }
            },
            _getParamName: function _getParamName(options) {
                var fileInput = $(options.fileInput)
                  , paramName = options.paramName;
                if (!paramName) {
                    paramName = [];
                    fileInput.each(function() {
                        var input = $(this)
                          , name = input.prop("name") || "files[]"
                          , i = (input.prop("files") || [1]).length;
                        while (i) {
                            paramName.push(name);
                            i -= 1
                        }
                    });
                    if (!paramName.length) {
                        paramName = [fileInput.prop("name") || "files[]"]
                    }
                } else if (!$.isArray(paramName)) {
                    paramName = [paramName]
                }
                return paramName
            },
            _initFormSettings: function _initFormSettings(options) {
                if (!options.form || !options.form.length) {
                    options.form = $(options.fileInput.prop("form"));
                    if (!options.form.length) {
                        options.form = $(this.options.fileInput.prop("form"))
                    }
                }
                options.paramName = this._getParamName(options);
                if (!options.url) {
                    options.url = options.form.prop("action") || location.href
                }
                options.type = (options.type || $.type(options.form.prop("method")) === "string" && options.form.prop("method") || "").toUpperCase();
                if (options.type !== "POST" && options.type !== "PUT" && options.type !== "PATCH") {
                    options.type = "POST"
                }
                if (!options.formAcceptCharset) {
                    options.formAcceptCharset = options.form.attr("accept-charset")
                }
            },
            _getAJAXSettings: function _getAJAXSettings(data) {
                var options = $.extend({}, this.options, data);
                this._initFormSettings(options);
                this._initDataSettings(options);
                return options
            },
            _getDeferredState: function _getDeferredState(deferred) {
                if (deferred.state) {
                    return deferred.state()
                }
                if (deferred.isResolved()) {
                    return "resolved"
                }
                if (deferred.isRejected()) {
                    return "rejected"
                }
                return "pending"
            },
            _enhancePromise: function _enhancePromise(promise) {
                promise.success = promise.done;
                promise.error = promise.fail;
                promise.complete = promise.always;
                return promise
            },
            _getXHRPromise: function _getXHRPromise(resolveOrReject, context, args) {
                var dfd = $.Deferred()
                  , promise = dfd.promise();
                context = context || this.options.context || promise;
                if (resolveOrReject === true) {
                    dfd.resolveWith(context, args)
                } else if (resolveOrReject === false) {
                    dfd.rejectWith(context, args)
                }
                promise.abort = dfd.promise;
                return this._enhancePromise(promise)
            },
            _addConvenienceMethods: function _addConvenienceMethods(e, data) {
                var that = this
                  , getPromise = function getPromise(args) {
                    return $.Deferred().resolveWith(that, args).promise()
                };
                data.process = function(resolveFunc, rejectFunc) {
                    if (resolveFunc || rejectFunc) {
                        data._processQueue = this._processQueue = (this._processQueue || getPromise([this])).pipe(function() {
                            if (data.errorThrown) {
                                return $.Deferred().rejectWith(that, [data]).promise()
                            }
                            return getPromise(arguments)
                        }).pipe(resolveFunc, rejectFunc)
                    }
                    return this._processQueue || getPromise([this])
                }
                ;
                data.submit = function() {
                    if (this.state() !== "pending") {
                        data.jqXHR = this.jqXHR = that._trigger("submit", $.Event("submit", {
                            delegatedEvent: e
                        }), this) !== false && that._onSend(e, this)
                    }
                    return this.jqXHR || that._getXHRPromise()
                }
                ;
                data.abort = function() {
                    if (this.jqXHR) {
                        return this.jqXHR.abort()
                    }
                    this.errorThrown = "abort";
                    that._trigger("fail", null, this);
                    return that._getXHRPromise(false)
                }
                ;
                data.state = function() {
                    if (this.jqXHR) {
                        return that._getDeferredState(this.jqXHR)
                    }
                    if (this._processQueue) {
                        return that._getDeferredState(this._processQueue)
                    }
                }
                ;
                data.processing = function() {
                    return !this.jqXHR && this._processQueue && that._getDeferredState(this._processQueue) === "pending"
                }
                ;
                data.progress = function() {
                    return this._progress
                }
                ;
                data.response = function() {
                    return this._response
                }
            },
            _getUploadedBytes: function _getUploadedBytes(jqXHR) {
                var range = jqXHR.getResponseHeader("Range")
                  , parts = range && range.split("-")
                  , upperBytesPos = parts && parts.length > 1 && parseInt(parts[1], 10);
                return upperBytesPos && upperBytesPos + 1
            },
            _chunkedUpload: function _chunkedUpload(options, testOnly) {
                options.uploadedBytes = options.uploadedBytes || 0;
                var that = this, file = options.files[0], fs = file.size, ub = options.uploadedBytes, mcs = options.maxChunkSize || fs, slice = this._blobSlice, dfd = $.Deferred(), promise = dfd.promise(), jqXHR, _upload;
                if (!(this._isXHRUpload(options) && slice && (ub || mcs < fs)) || options.data) {
                    return false
                }
                if (testOnly) {
                    return true
                }
                if (ub >= fs) {
                    file.error = options.i18n("uploadedBytes");
                    return this._getXHRPromise(false, options.context, [null, "error", file.error])
                }
                _upload = function upload() {
                    var o = $.extend({}, options)
                      , currentLoaded = o._progress.loaded;
                    o.blob = slice.call(file, ub, ub + mcs, file.type);
                    o.chunkSize = o.blob.size;
                    o.contentRange = "bytes " + ub + "-" + (ub + o.chunkSize - 1) + "/" + fs;
                    that._initXHRData(o);
                    that._initProgressListener(o);
                    jqXHR = (that._trigger("chunksend", null, o) !== false && $.ajax(o) || that._getXHRPromise(false, o.context)).done(function(result, textStatus, jqXHR) {
                        ub = that._getUploadedBytes(jqXHR) || ub + o.chunkSize;
                        if (currentLoaded + o.chunkSize - o._progress.loaded) {
                            that._onProgress($.Event("progress", {
                                lengthComputable: true,
                                loaded: ub - o.uploadedBytes,
                                total: ub - o.uploadedBytes
                            }), o)
                        }
                        options.uploadedBytes = o.uploadedBytes = ub;
                        o.result = result;
                        o.textStatus = textStatus;
                        o.jqXHR = jqXHR;
                        that._trigger("chunkdone", null, o);
                        that._trigger("chunkalways", null, o);
                        if (ub < fs) {
                            _upload()
                        } else {
                            dfd.resolveWith(o.context, [result, textStatus, jqXHR])
                        }
                    }).fail(function(jqXHR, textStatus, errorThrown) {
                        o.jqXHR = jqXHR;
                        o.textStatus = textStatus;
                        o.errorThrown = errorThrown;
                        that._trigger("chunkfail", null, o);
                        that._trigger("chunkalways", null, o);
                        dfd.rejectWith(o.context, [jqXHR, textStatus, errorThrown])
                    })
                }
                ;
                this._enhancePromise(promise);
                promise.abort = function() {
                    return jqXHR.abort()
                }
                ;
                _upload();
                return promise
            },
            _beforeSend: function _beforeSend(e, data) {
                if (this._active === 0) {
                    this._trigger("start");
                    this._bitrateTimer = new this._BitrateTimer;
                    this._progress.loaded = this._progress.total = 0;
                    this._progress.bitrate = 0
                }
                this._initResponseObject(data);
                this._initProgressObject(data);
                data._progress.loaded = data.loaded = data.uploadedBytes || 0;
                data._progress.total = data.total = this._getTotal(data.files) || 1;
                data._progress.bitrate = data.bitrate = 0;
                this._active += 1;
                this._progress.loaded += data.loaded;
                this._progress.total += data.total
            },
            _onDone: function _onDone(result, textStatus, jqXHR, options) {
                var total = options._progress.total
                  , response = options._response;
                if (options._progress.loaded < total) {
                    this._onProgress($.Event("progress", {
                        lengthComputable: true,
                        loaded: total,
                        total: total
                    }), options)
                }
                response.result = options.result = result;
                response.textStatus = options.textStatus = textStatus;
                response.jqXHR = options.jqXHR = jqXHR;
                this._trigger("done", null, options)
            },
            _onFail: function _onFail(jqXHR, textStatus, errorThrown, options) {
                var response = options._response;
                if (options.recalculateProgress) {
                    this._progress.loaded -= options._progress.loaded;
                    this._progress.total -= options._progress.total
                }
                response.jqXHR = options.jqXHR = jqXHR;
                response.textStatus = options.textStatus = textStatus;
                response.errorThrown = options.errorThrown = errorThrown;
                this._trigger("fail", null, options)
            },
            _onAlways: function _onAlways(jqXHRorResult, textStatus, jqXHRorError, options) {
                this._trigger("always", null, options)
            },
            _onSend: function _onSend(e, data) {
                if (!data.submit) {
                    this._addConvenienceMethods(e, data)
                }
                var that = this, jqXHR, aborted, slot, pipe, options = that._getAJAXSettings(data), send = function send() {
                    that._sending += 1;
                    options._bitrateTimer = new that._BitrateTimer;
                    jqXHR = jqXHR || ((aborted || that._trigger("send", $.Event("send", {
                        delegatedEvent: e
                    }), options) === false) && that._getXHRPromise(false, options.context, aborted) || that._chunkedUpload(options) || $.ajax(options)).done(function(result, textStatus, jqXHR) {
                        that._onDone(result, textStatus, jqXHR, options)
                    }).fail(function(jqXHR, textStatus, errorThrown) {
                        that._onFail(jqXHR, textStatus, errorThrown, options)
                    }).always(function(jqXHRorResult, textStatus, jqXHRorError) {
                        that._onAlways(jqXHRorResult, textStatus, jqXHRorError, options);
                        that._sending -= 1;
                        that._active -= 1;
                        if (options.limitConcurrentUploads && options.limitConcurrentUploads > that._sending) {
                            var nextSlot = that._slots.shift();
                            while (nextSlot) {
                                if (that._getDeferredState(nextSlot) === "pending") {
                                    nextSlot.resolve();
                                    break
                                }
                                nextSlot = that._slots.shift()
                            }
                        }
                        if (that._active === 0) {
                            that._trigger("stop")
                        }
                    });
                    return jqXHR
                };
                this._beforeSend(e, options);
                if (this.options.sequentialUploads || this.options.limitConcurrentUploads && this.options.limitConcurrentUploads <= this._sending) {
                    if (this.options.limitConcurrentUploads > 1) {
                        slot = $.Deferred();
                        this._slots.push(slot);
                        pipe = slot.pipe(send)
                    } else {
                        this._sequence = this._sequence.pipe(send, send);
                        pipe = this._sequence
                    }
                    pipe.abort = function() {
                        aborted = [undefined, "abort", "abort"];
                        if (!jqXHR) {
                            if (slot) {
                                slot.rejectWith(options.context, aborted)
                            }
                            return send()
                        }
                        return jqXHR.abort()
                    }
                    ;
                    return this._enhancePromise(pipe)
                }
                return send()
            },
            _onAdd: function _onAdd(e, data) {
                var that = this, result = true, options = $.extend({}, this.options, data), files = data.files, filesLength = files.length, limit = options.limitMultiFileUploads, limitSize = options.limitMultiFileUploadSize, overhead = options.limitMultiFileUploadSizeOverhead, batchSize = 0, paramName = this._getParamName(options), paramNameSet, paramNameSlice, fileSet, i, j = 0;
                if (limitSize && (!filesLength || files[0].size === undefined)) {
                    limitSize = undefined
                }
                if (!(options.singleFileUploads || limit || limitSize) || !this._isXHRUpload(options)) {
                    fileSet = [files];
                    paramNameSet = [paramName]
                } else if (!(options.singleFileUploads || limitSize) && limit) {
                    fileSet = [];
                    paramNameSet = [];
                    for (i = 0; i < filesLength; i += limit) {
                        fileSet.push(files.slice(i, i + limit));
                        paramNameSlice = paramName.slice(i, i + limit);
                        if (!paramNameSlice.length) {
                            paramNameSlice = paramName
                        }
                        paramNameSet.push(paramNameSlice)
                    }
                } else if (!options.singleFileUploads && limitSize) {
                    fileSet = [];
                    paramNameSet = [];
                    for (i = 0; i < filesLength; i = i + 1) {
                        batchSize += files[i].size + overhead;
                        if (i + 1 === filesLength || batchSize + files[i + 1].size + overhead > limitSize || limit && i + 1 - j >= limit) {
                            fileSet.push(files.slice(j, i + 1));
                            paramNameSlice = paramName.slice(j, i + 1);
                            if (!paramNameSlice.length) {
                                paramNameSlice = paramName
                            }
                            paramNameSet.push(paramNameSlice);
                            j = i + 1;
                            batchSize = 0
                        }
                    }
                } else {
                    paramNameSet = paramName
                }
                data.originalFiles = files;
                $.each(fileSet || files, function(index, element) {
                    var newData = $.extend({}, data);
                    newData.files = fileSet ? element : [element];
                    newData.paramName = paramNameSet[index];
                    that._initResponseObject(newData);
                    that._initProgressObject(newData);
                    that._addConvenienceMethods(e, newData);
                    result = that._trigger("add", $.Event("add", {
                        delegatedEvent: e
                    }), newData);
                    return result
                });
                return result
            },
            _replaceFileInput: function _replaceFileInput(input) {
                var inputClone = input.clone(true);
                $("<form></form>").append(inputClone)[0].reset();
                input.after(inputClone).detach();
                $.cleanData(input.unbind("remove"));
                this.options.fileInput = this.options.fileInput.map(function(i, el) {
                    if (el === input[0]) {
                        return inputClone[0]
                    }
                    return el
                });
                if (input[0] === this.element[0]) {
                    this.element = inputClone
                }
            },
            _handleFileTreeEntry: function _handleFileTreeEntry(entry, path) {
                var that = this, dfd = $.Deferred(), errorHandler = function errorHandler(e) {
                    if (e && !e.entry) {
                        e.entry = entry
                    }
                    dfd.resolve([e])
                }, dirReader;
                path = path || "";
                if (entry.isFile) {
                    if (entry._file) {
                        entry._file.relativePath = path;
                        dfd.resolve(entry._file)
                    } else {
                        entry.file(function(file) {
                            file.relativePath = path;
                            dfd.resolve(file)
                        }, errorHandler)
                    }
                } else if (entry.isDirectory) {
                    dirReader = entry.createReader();
                    dirReader.readEntries(function(entries) {
                        that._handleFileTreeEntries(entries, path + entry.name + "/").done(function(files) {
                            dfd.resolve(files)
                        }).fail(errorHandler)
                    }, errorHandler)
                } else {
                    dfd.resolve([])
                }
                return dfd.promise()
            },
            _handleFileTreeEntries: function _handleFileTreeEntries(entries, path) {
                var that = this;
                return $.when.apply($, $.map(entries, function(entry) {
                    return that._handleFileTreeEntry(entry, path)
                })).pipe(function() {
                    return Array.prototype.concat.apply([], arguments)
                })
            },
            _getDroppedFiles: function _getDroppedFiles(dataTransfer) {
                dataTransfer = dataTransfer || {};
                var items = dataTransfer.items;
                if (items && items.length && (items[0].webkitGetAsEntry || items[0].getAsEntry)) {
                    return this._handleFileTreeEntries($.map(items, function(item) {
                        var entry;
                        if (item.webkitGetAsEntry) {
                            entry = item.webkitGetAsEntry();
                            if (entry) {
                                entry._file = item.getAsFile()
                            }
                            return entry
                        }
                        return item.getAsEntry()
                    }))
                }
                return $.Deferred().resolve($.makeArray(dataTransfer.files)).promise()
            },
            _getSingleFileInputFiles: function _getSingleFileInputFiles(fileInput) {
                fileInput = $(fileInput);
                var entries = fileInput.prop("webkitEntries") || fileInput.prop("entries"), files, value;
                if (entries && entries.length) {
                    return this._handleFileTreeEntries(entries)
                }
                files = $.makeArray(fileInput.prop("files"));
                if (!files.length) {
                    value = fileInput.prop("value");
                    if (!value) {
                        return $.Deferred().resolve([]).promise()
                    }
                    files = [{
                        name: value.replace(/^.*\\/, "")
                    }]
                } else if (files[0].name === undefined && files[0].fileName) {
                    $.each(files, function(index, file) {
                        file.name = file.fileName;
                        file.size = file.fileSize
                    })
                }
                return $.Deferred().resolve(files).promise()
            },
            _getFileInputFiles: function _getFileInputFiles(fileInput) {
                if (!(fileInput instanceof $) || fileInput.length === 1) {
                    return this._getSingleFileInputFiles(fileInput)
                }
                return $.when.apply($, $.map(fileInput, this._getSingleFileInputFiles)).pipe(function() {
                    return Array.prototype.concat.apply([], arguments)
                })
            },
            _onChange: function _onChange(e) {
                var that = this
                  , data = {
                    fileInput: $(e.target),
                    form: $(e.target.form)
                };
                this._getFileInputFiles(data.fileInput).always(function(files) {
                    data.files = files;
                    if (that.options.replaceFileInput) {
                        that._replaceFileInput(data.fileInput)
                    }
                    if (that._trigger("change", $.Event("change", {
                        delegatedEvent: e
                    }), data) !== false) {
                        that._onAdd(e, data)
                    }
                })
            },
            _onPaste: function _onPaste(e) {
                var items = e.originalEvent && e.originalEvent.clipboardData && e.originalEvent.clipboardData.items
                  , data = {
                    files: []
                };
                if (items && items.length) {
                    $.each(items, function(index, item) {
                        var file = item.getAsFile && item.getAsFile();
                        if (file) {
                            data.files.push(file)
                        }
                    });
                    if (this._trigger("paste", $.Event("paste", {
                        delegatedEvent: e
                    }), data) !== false) {
                        this._onAdd(e, data)
                    }
                }
            },
            _onDrop: function _onDrop(e) {
                e.dataTransfer = e.originalEvent && e.originalEvent.dataTransfer;
                var that = this
                  , dataTransfer = e.dataTransfer
                  , data = {};
                if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {
                    e.preventDefault();
                    this._getDroppedFiles(dataTransfer).always(function(files) {
                        data.files = files;
                        if (that._trigger("drop", $.Event("drop", {
                            delegatedEvent: e
                        }), data) !== false) {
                            that._onAdd(e, data)
                        }
                    })
                }
            },
            _onDragOver: function _onDragOver(e) {
                e.dataTransfer = e.originalEvent && e.originalEvent.dataTransfer;
                var dataTransfer = e.dataTransfer;
                if (dataTransfer && $.inArray("Files", dataTransfer.types) !== -1 && this._trigger("dragover", $.Event("dragover", {
                    delegatedEvent: e
                })) !== false) {
                    e.preventDefault();
                    dataTransfer.dropEffect = "copy"
                }
            },
            _initEventHandlers: function _initEventHandlers() {
                if (this._isXHRUpload(this.options)) {
                    this._on(this.options.dropZone, {
                        dragover: this._onDragOver,
                        drop: this._onDrop
                    });
                    this._on(this.options.pasteZone, {
                        paste: this._onPaste
                    })
                }
                if ($.support.fileInput) {
                    this._on(this.options.fileInput, {
                        change: this._onChange
                    })
                }
            },
            _destroyEventHandlers: function _destroyEventHandlers() {
                this._off(this.options.dropZone, "dragover drop");
                this._off(this.options.pasteZone, "paste");
                this._off(this.options.fileInput, "change")
            },
            _setOption: function _setOption(key, value) {
                var reinit = $.inArray(key, this._specialOptions) !== -1;
                if (reinit) {
                    this._destroyEventHandlers()
                }
                this._super(key, value);
                if (reinit) {
                    this._initSpecialOptions();
                    this._initEventHandlers()
                }
            },
            _initSpecialOptions: function _initSpecialOptions() {
                var options = this.options;
                if (options.fileInput === undefined) {
                    options.fileInput = this.element.is('input[type="file"]') ? this.element : this.element.find('input[type="file"]')
                } else if (!(options.fileInput instanceof $)) {
                    options.fileInput = $(options.fileInput)
                }
                if (!(options.dropZone instanceof $)) {
                    options.dropZone = $(options.dropZone)
                }
                if (!(options.pasteZone instanceof $)) {
                    options.pasteZone = $(options.pasteZone)
                }
            },
            _getRegExp: function _getRegExp(str) {
                var parts = str.split("/")
                  , modifiers = parts.pop();
                parts.shift();
                return new RegExp(parts.join("/"),modifiers)
            },
            _isRegExpOption: function _isRegExpOption(key, value) {
                return key !== "url" && $.type(value) === "string" && /^\/.*\/[igm]{0,3}$/.test(value)
            },
            _initDataAttributes: function _initDataAttributes() {
                var that = this
                  , options = this.options;
                $.each($(this.element[0].cloneNode(false)).data(), function(key, value) {
                    if (that._isRegExpOption(key, value)) {
                        value = that._getRegExp(value)
                    }
                    options[key] = value
                })
            },
            _create: function _create() {
                this._initDataAttributes();
                this._initSpecialOptions();
                this._slots = [];
                this._sequence = this._getXHRPromise(true);
                this._sending = this._active = 0;
                this._initProgressObject(this);
                this._initEventHandlers()
            },
            active: function active() {
                return this._active
            },
            progress: function progress() {
                return this._progress
            },
            add: function add(data) {
                var that = this;
                if (!data || this.options.disabled) {
                    return
                }
                if (data.fileInput && !data.files) {
                    this._getFileInputFiles(data.fileInput).always(function(files) {
                        data.files = files;
                        that._onAdd(null, data)
                    })
                } else {
                    data.files = $.makeArray(data.files);
                    this._onAdd(null, data)
                }
            },
            send: function send(data) {
                if (data && !this.options.disabled) {
                    if (data.fileInput && !data.files) {
                        var that = this, dfd = $.Deferred(), promise = dfd.promise(), jqXHR, aborted;
                        promise.abort = function() {
                            aborted = true;
                            if (jqXHR) {
                                return jqXHR.abort()
                            }
                            dfd.reject(null, "abort", "abort");
                            return promise
                        }
                        ;
                        this._getFileInputFiles(data.fileInput).always(function(files) {
                            if (aborted) {
                                return
                            }
                            if (!files.length) {
                                dfd.reject();
                                return
                            }
                            data.files = files;
                            jqXHR = that._onSend(null, data).then(function(result, textStatus, jqXHR) {
                                dfd.resolve(result, textStatus, jqXHR)
                            }, function(jqXHR, textStatus, errorThrown) {
                                dfd.reject(jqXHR, textStatus, errorThrown)
                            })
                        });
                        return this._enhancePromise(promise)
                    }
                    data.files = $.makeArray(data.files);
                    if (data.files.length) {
                        return this._onSend(null, data)
                    }
                }
                return this._getXHRPromise(false, data && data.context)
            }
        })
      });
      (function(factory) {
        "use strict";
        if (typeof define === "function" && define.amd) {
            define(["jquery", "./jquery.fileupload"], factory)
        } else {
            factory(window.jQuery)
        }
      }
      )(function($) {
        "use strict";
        var originalAdd = $.blueimp.fileupload.prototype.options.add;
        $.widget("blueimp.fileupload", $.blueimp.fileupload, {
            options: {
                processQueue: [],
                add: function add(e, data) {
                    var $this = $(this);
                    data.process(function() {
                        return $this.fileupload("process", data)
                    });
                    originalAdd.call(this, e, data)
                }
            },
            processActions: {},
            _processFile: function _processFile(data, originalData) {
                var that = this
                  , dfd = $.Deferred().resolveWith(that, [data])
                  , chain = dfd.promise();
                this._trigger("process", null, data);
                $.each(data.processQueue, function(i, settings) {
                    var func = function func(data) {
                        if (originalData.errorThrown) {
                            return $.Deferred().rejectWith(that, [originalData]).promise()
                        }
                        return that.processActions[settings.action].call(that, data, settings)
                    };
                    chain = chain.pipe(func, settings.always && func)
                });
                chain.done(function() {
                    that._trigger("processdone", null, data);
                    that._trigger("processalways", null, data)
                }).fail(function() {
                    that._trigger("processfail", null, data);
                    that._trigger("processalways", null, data)
                });
                return chain
            },
            _transformProcessQueue: function _transformProcessQueue(options) {
                var processQueue = [];
                $.each(options.processQueue, function() {
                    var settings = {}
                      , action = this.action
                      , prefix = this.prefix === true ? action : this.prefix;
                    $.each(this, function(key, value) {
                        if ($.type(value) === "string" && value.charAt(0) === "@") {
                            settings[key] = options[value.slice(1) || (prefix ? prefix + key.charAt(0).toUpperCase() + key.slice(1) : key)]
                        } else {
                            settings[key] = value
                        }
                    });
                    processQueue.push(settings)
                });
                options.processQueue = processQueue
            },
            processing: function processing() {
                return this._processing
            },
            process: function process(data) {
                var that = this
                  , options = $.extend({}, this.options, data);
                if (options.processQueue && options.processQueue.length) {
                    this._transformProcessQueue(options);
                    if (this._processing === 0) {
                        this._trigger("processstart")
                    }
                    $.each(data.files, function(index) {
                        var opts = index ? $.extend({}, options) : options
                          , func = function func() {
                            if (data.errorThrown) {
                                return $.Deferred().rejectWith(that, [data]).promise()
                            }
                            return that._processFile(opts, data)
                        };
                        opts.index = index;
                        that._processing += 1;
                        that._processingQueue = that._processingQueue.pipe(func, func).always(function() {
                            that._processing -= 1;
                            if (that._processing === 0) {
                                that._trigger("processstop")
                            }
                        })
                    })
                }
                return this._processingQueue
            },
            _create: function _create() {
                this._super();
                this._processing = 0;
                this._processingQueue = $.Deferred().resolveWith(this).promise()
            }
        })
      });
      (function(factory) {
        "use strict";
        if (typeof define === "function" && define.amd) {
            define(["jquery", "tmpl", "./jquery.fileupload-image", "./jquery.fileupload-audio", "./jquery.fileupload-video", "./jquery.fileupload-validate"], factory)
        } else {
            factory(window.jQuery, window.tmpl)
        }
      }
      )(function($, tmpl) {
        "use strict";
        $.blueimp.fileupload.prototype._specialOptions.push("filesContainer", "uploadTemplateId", "downloadTemplateId");
        $.widget("blueimp.fileupload", $.blueimp.fileupload, {
            options: {
                autoUpload: false,
                uploadTemplateId: "template-upload",
                downloadTemplateId: "template-download",
                filesContainer: undefined,
                prependFiles: false,
                dataType: "json",
                getNumberOfFiles: function getNumberOfFiles() {
                    return this.filesContainer.children().not(".processing").length
                },
                getFilesFromResponse: function getFilesFromResponse(data) {
                    if (data.result && $.isArray(data.result.files)) {
                        return data.result.files
                    }
                    return []
                },
                add: function add(e, data) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    var $this = $(this)
                      , that = $this.data("blueimp-fileupload") || $this.data("fileupload")
                      , options = that.options;
                    data.context = that._renderUpload(data.files).data("data", data).addClass("processing");
                    options.filesContainer[options.prependFiles ? "prepend" : "append"](data.context);
                    that._forceReflow(data.context);
                    $.when(that._transition(data.context), data.process(function() {
                        return $this.fileupload("process", data)
                    })).always(function() {
                        data.context.each(function(index) {
                            $(this).find(".size").text(that._formatFileSize(data.files[index].size))
                        }).removeClass("processing");
                        that._renderPreviews(data)
                    }).done(function() {
                        data.context.find(".start").prop("disabled", false);
                        if (that._trigger("added", e, data) !== false && (options.autoUpload || data.autoUpload) && data.autoUpload !== false) {
                            data.submit()
                        }
                    }).fail(function() {
                        if (data.files.error) {
                            data.context.each(function(index) {
                                var error = data.files[index].error;
                                if (error) {
                                    $(this).find(".error").text(error)
                                }
                            })
                        }
                    })
                },
                send: function send(e, data) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    var that = $(this).data("blueimp-fileupload") || $(this).data("fileupload");
                    if (data.context && data.dataType && data.dataType.substr(0, 6) === "iframe") {
                        data.context.find(".progress").addClass(!$.support.transition && "progress-animated").attr("aria-valuenow", 100).children().first().css("width", "100%")
                    }
                    return that._trigger("sent", e, data)
                },
                done: function done(e, data) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    var that = $(this).data("blueimp-fileupload") || $(this).data("fileupload"), getFilesFromResponse = data.getFilesFromResponse || that.options.getFilesFromResponse, files = getFilesFromResponse(data), template, deferred;
                    if (data.context) {
                        data.context.each(function(index) {
                            var file = files[index] || {
                                error: "Empty file upload result"
                            };
                            deferred = that._addFinishedDeferreds();
                            that._transition($(this)).done(function() {
                                var node = $(this);
                                template = that._renderDownload([file]).replaceAll(node);
                                that._forceReflow(template);
                                that._transition(template).done(function() {
                                    data.context = $(this);
                                    that._trigger("completed", e, data);
                                    that._trigger("finished", e, data);
                                    deferred.resolve()
                                })
                            })
                        })
                    } else {
                        template = that._renderDownload(files)[that.options.prependFiles ? "prependTo" : "appendTo"](that.options.filesContainer);
                        that._forceReflow(template);
                        deferred = that._addFinishedDeferreds();
                        that._transition(template).done(function() {
                            data.context = $(this);
                            that._trigger("completed", e, data);
                            that._trigger("finished", e, data);
                            deferred.resolve()
                        })
                    }
                },
                fail: function fail(e, data) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    var that = $(this).data("blueimp-fileupload") || $(this).data("fileupload"), template, deferred;
                    if (data.context) {
                        data.context.each(function(index) {
                            if (data.errorThrown !== "abort") {
                                var file = data.files[index];
                                file.error = file.error || data.errorThrown || true;
                                deferred = that._addFinishedDeferreds();
                                that._transition($(this)).done(function() {
                                    var node = $(this);
                                    template = that._renderDownload([file]).replaceAll(node);
                                    that._forceReflow(template);
                                    that._transition(template).done(function() {
                                        data.context = $(this);
                                        that._trigger("failed", e, data);
                                        that._trigger("finished", e, data);
                                        deferred.resolve()
                                    })
                                })
                            } else {
                                deferred = that._addFinishedDeferreds();
                                that._transition($(this)).done(function() {
                                    $(this).remove();
                                    that._trigger("failed", e, data);
                                    that._trigger("finished", e, data);
                                    deferred.resolve()
                                })
                            }
                        })
                    } else if (data.errorThrown !== "abort") {
                        data.context = that._renderUpload(data.files)[that.options.prependFiles ? "prependTo" : "appendTo"](that.options.filesContainer).data("data", data);
                        that._forceReflow(data.context);
                        deferred = that._addFinishedDeferreds();
                        that._transition(data.context).done(function() {
                            data.context = $(this);
                            that._trigger("failed", e, data);
                            that._trigger("finished", e, data);
                            deferred.resolve()
                        })
                    } else {
                        that._trigger("failed", e, data);
                        that._trigger("finished", e, data);
                        that._addFinishedDeferreds().resolve()
                    }
                },
                progress: function progress(e, data) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    var progress = Math.floor(data.loaded / data.total * 100);
                    if (data.context) {
                        data.context.each(function() {
                            $(this).find(".progress").attr("aria-valuenow", progress).children().first().css("width", progress + "%")
                        })
                    }
                },
                progressall: function progressall(e, data) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    var $this = $(this)
                      , progress = Math.floor(data.loaded / data.total * 100)
                      , globalProgressNode = $this.find(".fileupload-progress")
                      , extendedProgressNode = globalProgressNode.find(".progress-extended");
                    if (extendedProgressNode.length) {
                        extendedProgressNode.html(($this.data("blueimp-fileupload") || $this.data("fileupload"))._renderExtendedProgress(data))
                    }
                    globalProgressNode.find(".progress").attr("aria-valuenow", progress).children().first().css("width", progress + "%")
                },
                start: function start(e) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    var that = $(this).data("blueimp-fileupload") || $(this).data("fileupload");
                    that._resetFinishedDeferreds();
                    that._transition($(this).find(".fileupload-progress")).done(function() {
                        that._trigger("started", e)
                    })
                },
                stop: function stop(e) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    var that = $(this).data("blueimp-fileupload") || $(this).data("fileupload")
                      , deferred = that._addFinishedDeferreds();
                    $.when.apply($, that._getFinishedDeferreds()).done(function() {
                        that._trigger("stopped", e)
                    });
                    that._transition($(this).find(".fileupload-progress")).done(function() {
                        $(this).find(".progress").attr("aria-valuenow", "0").children().first().css("width", "0%");
                        $(this).find(".progress-extended").html("&nbsp;");
                        deferred.resolve()
                    })
                },
                processstart: function processstart(e) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    $(this).addClass("fileupload-processing")
                },
                processstop: function processstop(e) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    $(this).removeClass("fileupload-processing")
                },
                destroy: function destroy(e, data) {
                    if (e.isDefaultPrevented()) {
                        return false
                    }
                    var that = $(this).data("blueimp-fileupload") || $(this).data("fileupload")
                      , removeNode = function removeNode() {
                        that._transition(data.context).done(function() {
                            $(this).remove();
                            that._trigger("destroyed", e, data)
                        })
                    };
                    if (data.url) {
                        data.dataType = data.dataType || that.options.dataType;
                        $.ajax(data).done(removeNode)
                    } else {
                        removeNode()
                    }
                }
            },
            _resetFinishedDeferreds: function _resetFinishedDeferreds() {
                this._finishedUploads = []
            },
            _addFinishedDeferreds: function _addFinishedDeferreds(deferred) {
                if (!deferred) {
                    deferred = $.Deferred()
                }
                this._finishedUploads.push(deferred);
                return deferred
            },
            _getFinishedDeferreds: function _getFinishedDeferreds() {
                return this._finishedUploads
            },
            _enableDragToDesktop: function _enableDragToDesktop() {
                var link = $(this)
                  , url = link.prop("href")
                  , name = link.prop("download")
                  , type = "application/octet-stream";
                link.bind("dragstart", function(e) {
                    try {
                        e.originalEvent.dataTransfer.setData("DownloadURL", [type, name, url].join(":"))
                    } catch (ignore) {}
                })
            },
            _formatFileSize: function _formatFileSize(bytes) {
                if (typeof bytes !== "number") {
                    return ""
                }
                if (bytes >= 1e9) {
                    return (bytes / 1e9).toFixed(2) + " GB"
                }
                if (bytes >= 1e6) {
                    return (bytes / 1e6).toFixed(2) + " MB"
                }
                return (bytes / 1e3).toFixed(2) + " KB"
            },
            _formatBitrate: function _formatBitrate(bits) {
                if (typeof bits !== "number") {
                    return ""
                }
                if (bits >= 1e9) {
                    return (bits / 1e9).toFixed(2) + " Gbit/s"
                }
                if (bits >= 1e6) {
                    return (bits / 1e6).toFixed(2) + " Mbit/s"
                }
                if (bits >= 1e3) {
                    return (bits / 1e3).toFixed(2) + " kbit/s"
                }
                return bits.toFixed(2) + " bit/s"
            },
            _formatTime: function _formatTime(seconds) {
                var date = new Date(seconds * 1e3)
                  , days = Math.floor(seconds / 86400);
                days = days ? days + "d " : "";
                return days + ("0" + date.getUTCHours()).slice(-2) + ":" + ("0" + date.getUTCMinutes()).slice(-2) + ":" + ("0" + date.getUTCSeconds()).slice(-2)
            },
            _formatPercentage: function _formatPercentage(floatValue) {
                return (floatValue * 100).toFixed(2) + " %"
            },
            _renderExtendedProgress: function _renderExtendedProgress(data) {
                return this._formatBitrate(data.bitrate) + " | " + this._formatTime((data.total - data.loaded) * 8 / data.bitrate) + " | " + this._formatPercentage(data.loaded / data.total) + " | " + this._formatFileSize(data.loaded) + " / " + this._formatFileSize(data.total)
            },
            _renderTemplate: function _renderTemplate(func, files) {
                if (!func) {
                    return $()
                }
                var result = func({
                    files: files,
                    formatFileSize: this._formatFileSize,
                    options: this.options
                });
                if (result instanceof $) {
                    return result
                }
                return $(this.options.templatesContainer).html(result).children()
            },
            _renderPreviews: function _renderPreviews(data) {
                data.context.find(".preview").each(function(index, elm) {
                    $(elm).append(data.files[index].preview)
                })
            },
            _renderUpload: function _renderUpload(files) {
                return this._renderTemplate(this.options.uploadTemplate, files)
            },
            _renderDownload: function _renderDownload(files) {
                return this._renderTemplate(this.options.downloadTemplate, files).find("a[download]").each(this._enableDragToDesktop).end()
            },
            _startHandler: function _startHandler(e) {
                e.preventDefault();
                var button = $(e.currentTarget)
                  , template = button.closest(".template-upload")
                  , data = template.data("data");
                button.prop("disabled", true);
                if (data && data.submit) {
                    data.submit()
                }
            },
            _cancelHandler: function _cancelHandler(e) {
                e.preventDefault();
                var template = $(e.currentTarget).closest(".template-upload,.template-download")
                  , data = template.data("data") || {};
                data.context = data.context || template;
                if (data.abort) {
                    data.abort()
                } else {
                    data.errorThrown = "abort";
                    this._trigger("fail", e, data)
                }
            },
            _deleteHandler: function _deleteHandler(e) {
                e.preventDefault();
                var button = $(e.currentTarget);
                this._trigger("destroy", e, $.extend({
                    context: button.closest(".template-download"),
                    type: "DELETE"
                }, button.data()))
            },
            _forceReflow: function _forceReflow(node) {
                return $.support.transition && node.length && node[0].offsetWidth
            },
            _transition: function _transition(node) {
                var dfd = $.Deferred();
                if ($.support.transition && node.hasClass("fade") && node.is(":visible")) {
                    node.bind($.support.transition.end, function(e) {
                        if (e.target === node[0]) {
                            node.unbind($.support.transition.end);
                            dfd.resolveWith(node)
                        }
                    }).toggleClass("in")
                } else {
                    node.toggleClass("in");
                    dfd.resolveWith(node)
                }
                return dfd
            },
            _initButtonBarEventHandlers: function _initButtonBarEventHandlers() {
                var fileUploadButtonBar = this.element.find(".fileupload-buttonbar")
                  , filesList = this.options.filesContainer;
                this._on(fileUploadButtonBar.find(".start"), {
                    click: function click(e) {
                        e.preventDefault();
                        filesList.find(".start").click()
                    }
                });
                this._on(fileUploadButtonBar.find(".cancel"), {
                    click: function click(e) {
                        e.preventDefault();
                        filesList.find(".cancel").click()
                    }
                });
                this._on(fileUploadButtonBar.find(".delete"), {
                    click: function click(e) {
                        e.preventDefault();
                        filesList.find(".toggle:checked").closest(".template-download").find(".delete").click();
                        fileUploadButtonBar.find(".toggle").prop("checked", false)
                    }
                });
                this._on(fileUploadButtonBar.find(".toggle"), {
                    change: function change(e) {
                        filesList.find(".toggle").prop("checked", $(e.currentTarget).is(":checked"))
                    }
                })
            },
            _destroyButtonBarEventHandlers: function _destroyButtonBarEventHandlers() {
                this._off(this.element.find(".fileupload-buttonbar").find(".start, .cancel, .delete"), "click");
                this._off(this.element.find(".fileupload-buttonbar .toggle"), "change.")
            },
            _initEventHandlers: function _initEventHandlers() {
                this._super();
                this._on(this.options.filesContainer, {
                    "click .start": this._startHandler,
                    "click .cancel": this._cancelHandler,
                    "click .delete": this._deleteHandler
                });
                this._initButtonBarEventHandlers()
            },
            _destroyEventHandlers: function _destroyEventHandlers() {
                this._destroyButtonBarEventHandlers();
                this._off(this.options.filesContainer, "click");
                this._super()
            },
            _enableFileInputButton: function _enableFileInputButton() {
                this.element.find(".fileinput-button input").prop("disabled", false).parent().removeClass("disabled")
            },
            _disableFileInputButton: function _disableFileInputButton() {
                this.element.find(".fileinput-button input").prop("disabled", true).parent().addClass("disabled")
            },
            _initTemplates: function _initTemplates() {
                var options = this.options;
                options.templatesContainer = this.document[0].createElement(options.filesContainer.prop("nodeName"));
                if (tmpl) {
                    if (options.uploadTemplateId) {
                        options.uploadTemplate = tmpl(options.uploadTemplateId)
                    }
                    if (options.downloadTemplateId) {
                        options.downloadTemplate = tmpl(options.downloadTemplateId)
                    }
                }
            },
            _initFilesContainer: function _initFilesContainer() {
                var options = this.options;
                if (options.filesContainer === undefined) {
                    options.filesContainer = this.element.find(".files")
                } else if (!(options.filesContainer instanceof $)) {
                    options.filesContainer = $(options.filesContainer)
                }
            },
            _initSpecialOptions: function _initSpecialOptions() {
                this._super();
                this._initFilesContainer();
                this._initTemplates()
            },
            _create: function _create() {
                this._super();
                this._resetFinishedDeferreds();
                if (!$.support.fileInput) {
                    this._disableFileInputButton()
                }
            },
            enable: function enable() {
                var wasDisabled = false;
                if (this.options.disabled) {
                    wasDisabled = true
                }
                this._super();
                if (wasDisabled) {
                    this.element.find("input, button").prop("disabled", false);
                    this._enableFileInputButton()
                }
            },
            disable: function disable() {
                if (!this.options.disabled) {
                    this.element.find("input, button").prop("disabled", true);
                    this._disableFileInputButton()
                }
                this._super()
            }
        })
      });
      DP.imageUploader = Backbone.View.extend({
        uploadUI: null,
        regFile: /(\.|\/)(jpe?g|png)$/i,
        messages: {
            errors: {
                maxFileSize: "File is too big",
                minFileSize: "File is too small",
                acceptFileTypes: "You can't upload files of this type",
                maxNumberOfFiles: "Max number of files exceeded",
                uploadedBytes: "Uploaded bytes exceed file size",
                emptyResult: "Empty file upload result"
            },
            error: "Error",
            start: "Start",
            cancel: "Cancel",
            destroy: "Delete"
        },
        initialize: function initialize(options) {
            var _this = this;
            var blnIsIE = $.browser.msie;
            var version = parseInt($.browser.version, 10);
            var blnIsLegacy = blnIsIE && version < 10;
            if (_.has(options, "regFile"))
                _this.regFile = options.regFile;
            if (blnIsLegacy)
                this.uploadUI = $(this.el).fileupload({
                    contentType: "text/html"
                });
            this.uploadUI = $(this.el).fileupload({
                url: options.url,
                acceptFileTypes: _this.regFile,
                maxFileSize: options.maxFileSize,
                minFileSize: options.minFileSize,
                dataType: "iframejson",
                converters: {
                    "html iframejson": function htmlIframejson(htmlEncodedJson) {
                        return $.parseJSON($("<div/>").html(htmlEncodedJson).text())
                    },
                    "iframe iframejson": function iframeIframejson(iframe) {
                        return $.parseJSON(iframe.find("body").text())
                    }
                },
                add: function add(e, data) {
                    var file = data.files[0];
                    options.fnBeforeLoad && options.fnBeforeLoad();
                    _this.removePhoto();
                    var strName = file.name;
                    if (!_this.regFile.test(strName)) {
                        options.fnLoadFail && options.fnLoadFail(_this.messages["errors"]["acceptFileTypes"]);
                        return false
                    }
                    if (file.error) {
                        var errorKey = file.error;
                        _log(_this.messages.errors);
                        options.fnLoadFail && options.fnLoadFail(_this.messages["errors"][errorKey]);
                        return false
                    }
                    if (blnIsLegacy) {
                        _this.$(options.previewImgEl || ".file_upload_preview").html(strName);
                        options.fnLoadSuccess && options.fnLoadSuccess(file)
                    } else {
                        loadImage(file, function(img) {
                            options.defaultImgEl && _this.$(options.defaultImgEl).hide();
                            _this.$(options.previewImgEl || ".file_upload_preview").html(img);
                            options.fnLoadSuccess && options.fnLoadSuccess(file)
                        }, {
                            maxWidth: options.maxWidth || 140,
                            maxHeight: options.maxHeight || 140,
                            canvas: true
                        })
                    }
                    _this.uploadUI.data("data", data)
                }
            })
        },
        uploadPhoto: function uploadPhoto(params, fnSuccess, fnError, fnComplete) {
            if (this.uploadUI.data("data")) {
                _log(this.uploadUI.data("data"));
                this.uploadUI.data("data").submit().success(fnSuccess).error(fnError).complete(fnComplete)
            }
        },
        removePhoto: function removePhoto() {
            this.uploadUI.data("data", null)
        },
        hasPhoto: function hasPhoto() {
            return this.uploadUI.data("data") != null
        }
      });
      (function(factory) {
        "use strict";
        if (typeof define === "function" && define.amd) {
            define(["jquery"], factory)
        } else {
            factory(window.jQuery)
        }
      }
      )(function($) {
        "use strict";
        var counter = 0;
        $.ajaxTransport("iframe", function(options) {
            if (options.async) {
                var initialIframeSrc = options.initialIframeSrc || "javascript:false;", form, iframe, addParamChar;
                return {
                    send: function send(_, completeCallback) {
                        form = $('<form style="display:none;"></form>');
                        form.attr("accept-charset", options.formAcceptCharset);
                        addParamChar = /\?/.test(options.url) ? "&" : "?";
                        if (options.type === "DELETE") {
                            options.url = options.url + addParamChar + "_method=DELETE";
                            options.type = "POST"
                        } else if (options.type === "PUT") {
                            options.url = options.url + addParamChar + "_method=PUT";
                            options.type = "POST"
                        } else if (options.type === "PATCH") {
                            options.url = options.url + addParamChar + "_method=PATCH";
                            options.type = "POST"
                        }
                        counter += 1;
                        iframe = $('<iframe src="' + initialIframeSrc + '" name="iframe-transport-' + counter + '"></iframe>').bind("load", function() {
                            var fileInputClones, paramNames = $.isArray(options.paramName) ? options.paramName : [options.paramName];
                            iframe.unbind("load").bind("load", function() {
                                var response;
                                try {
                                    response = iframe.contents();
                                    if (!response.length || !response[0].firstChild) {
                                        throw new Error
                                    }
                                } catch (e) {
                                    response = undefined
                                }
                                completeCallback(200, "success", {
                                    iframe: response
                                });
                                $('<iframe src="' + initialIframeSrc + '"></iframe>').appendTo(form);
                                window.setTimeout(function() {
                                    form.remove()
                                }, 0)
                            });
                            form.prop("target", iframe.prop("name")).prop("action", options.url).prop("method", options.type);
                            if (options.formData) {
                                $.each(options.formData, function(index, field) {
                                    $('<input type="hidden"/>').prop("name", field.name).val(field.value).appendTo(form)
                                })
                            }
                            if (options.fileInput && options.fileInput.length && options.type === "POST") {
                                fileInputClones = options.fileInput.clone();
                                options.fileInput.after(function(index) {
                                    return fileInputClones[index]
                                });
                                if (options.paramName) {
                                    options.fileInput.each(function(index) {
                                        $(this).prop("name", paramNames[index] || options.paramName)
                                    })
                                }
                                form.append(options.fileInput).prop("enctype", "multipart/form-data").prop("encoding", "multipart/form-data");
                                options.fileInput.removeAttr("form")
                            }
                            form.submit();
                            if (fileInputClones && fileInputClones.length) {
                                options.fileInput.each(function(index, input) {
                                    var clone = $(fileInputClones[index]);
                                    $(input).prop("name", clone.prop("name")).attr("form", clone.attr("form"));
                                    clone.replaceWith(input)
                                })
                            }
                        });
                        form.append(iframe).appendTo(document.body)
                    },
                    abort: function abort() {
                        if (iframe) {
                            iframe.unbind("load").prop("src", initialIframeSrc)
                        }
                        if (form) {
                            form.remove()
                        }
                    }
                }
            }
        });
        $.ajaxSetup({
            converters: {
                "iframe text": function iframeText(iframe) {
                    return iframe && $(iframe[0].body).text()
                },
                "iframe json": function iframeJson(iframe) {
                    return iframe && $.parseJSON($(iframe[0].body).text())
                },
                "iframe html": function iframeHtml(iframe) {
                    return iframe && $(iframe[0].body).html()
                },
                "iframe xml": function iframeXml(iframe) {
                    var xmlDoc = iframe && iframe[0];
                    return xmlDoc && $.isXMLDoc(xmlDoc) ? xmlDoc : $.parseXML(xmlDoc.XMLDocument && xmlDoc.XMLDocument.xml || $(xmlDoc.body).html())
                },
                "iframe script": function iframeScript(iframe) {
                    return iframe && $.globalEval($(iframe[0].body).text())
                }
            }
        })
      });
       */

      /***/
    },

    /***/
    52314:
    /*!******************************************!*\
      !*** ./src/app/services/push.service.ts ***!
      \******************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "PushService": function PushService() {
          return (
            /* binding */
            _PushService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _events_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./events.service */
      80106);
      /* harmony import */


      var _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @capacitor/push-notifications */
      98748);
      /* harmony import */


      var _storage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./storage.service */
      71188);
      /* harmony import */


      var _app_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./app.service */
      66475);
      /* harmony import */


      var _firebase_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./firebase.service */
      19446);
      /* harmony import */


      var _detail_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./detail.service */
      52153);
      /* harmony import */


      var _deputy_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./deputy.service */
      22092); /////////////////////////////////////////////////////


      var _PushService = /*#__PURE__*/function () {
        /////////////////////////////////////////////////////
        function PushService(logger, evServ, appServ, platform, storeServ, fireServ, dS, modalCtrl, deputy) {
          _classCallCheck(this, PushService);

          this.logger = logger;
          this.evServ = evServ;
          this.appServ = appServ;
          this.platform = platform;
          this.storeServ = storeServ;
          this.fireServ = fireServ;
          this.dS = dS;
          this.modalCtrl = modalCtrl;
          this.deputy = deputy; /////////////////////////////////////////////////////

          this.pSIcos = "\uD83D\uDCAC";
          this.FCMToken = null;
          this.pNReady = false;
          this.pNLastMessage = {
            title: null,
            subtitle: null,
            body: null,
            id: null,
            badge: null,
            notification: null,
            data: null,
            click_action: null,
            link: null,
            group: null,
            groupSummary: null
          };
          this.pNLastAction = {
            actionId: null,
            inputValue: null,
            notification: null
          };
          this.userSettings = null;
          this.pushTopics = {
            tsheet: {
              enabled: null,
              time: 0
            },
            snoop: {
              enabled: null
            }
          };
          this.iamIsOpen = false;
        } /////////////////////////////////////////////////////


        _createClass(PushService, [{
          key: "doPushNoteInit",
          value: function doPushNoteInit() {
            var _this143 = this;

            this.platform.ready().then(function () {
              _this143.evServ.subscribe('pushNoteInit', function (stageRes) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(_this143, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee328() {
                  return regeneratorRuntime.wrap(function _callee328$(_context328) {
                    while (1) {
                      switch (_context328.prev = _context328.next) {
                        case 0:
                          if (stageRes.stage === 'permissions') {
                            this.logger.info('[pushServ|doPushNoteInit] ' + this.pSIcos + ' (Stage): Permissions | Result: ' + stageRes.result);

                            if (stageRes.result) {
                              this.initPushNoteListeners();
                            } else {
                              this.evServ.destroy('pushNoteInit');
                            }
                          } else if (stageRes.stage === 'listeners') {
                            if (stageRes.result) {
                              this.storeServ.setItem('fireMsgToken', String(stageRes.token));
                              this.FCMToken = stageRes.token;
                              this.fireServ.onFCMTokenChange(stageRes.token);
                              this.initPNChannels();
                              this.logger.info('[pushServ|doPushServInit] ' + this.pSIcos + ' (Stage): Listeners/Registration | SUCCESS | Token: ' + stageRes.token.substring(0, 10));
                            } else {
                              this.evServ.destroy('pushNoteInit');
                              this.FCMToken = null;
                              this.storeServ.removeItem('fireMsgToken');
                              this.evServ.publish('setFCMToken', {
                                result: false,
                                data: null
                              });
                              this.logger.info('[pushServ|doPushServInit] ' + this.pSIcos + ' (Stage): Listeners/Registration | FAIL | Error: ' + stageRes.error);
                            }
                          } else if (stageRes.stage === 'channels') {
                            this.logger.info('[pushServ|doPushNoteInit] ' + this.pSIcos + ' (Stage): Channels | Result: ' + stageRes.result);

                            if (stageRes.result) {
                              this.pNReady = true;
                              this.logger.info('[pushServ|doPushNoteInit] ' + this.pSIcos + ' (INITIALIZATION COMPLETE): SUCCESS! pNReady=TRUE');
                            } else {
                              this.pNReady = false;
                              this.logger.info('[pushServ|doPushNoteInit] ' + this.pSIcos + ' (INITIALIZATION FAILED): pNReady=FALSE');
                            }

                            ;
                            this.evServ.destroy('pushNoteInit');
                          } else if (stageRes.stage === 'topics') {
                            this.logger.info('[pushServ|doPushNoteInit] ' + this.pSIcos + ' (Stage): Topics | Result: ' + stageRes.result);
                          }

                        case 1:
                        case "end":
                          return _context328.stop();
                      }
                    }
                  }, _callee328, this);
                }));
              });

              _this143.initPushNotePerms();
            });
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "changeTopicSettings",
          value: function changeTopicSettings(topic, key, value) {
            this.pushTopics[topic][key] = value;
            this.logger.info("\uD83D\uDCAC [pushServ|changeTopicSettings] (CHANGED) - pushTopics." + topic + '.' + key + ' >>> TO = ' + JSON.stringify(value));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "initPushTopics",
          value: function initPushTopics() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee329() {
              return regeneratorRuntime.wrap(function _callee329$(_context329) {
                while (1) {
                  switch (_context329.prev = _context329.next) {
                    case 0:
                      this.logger.info("\uD83D\uDCAC [pushServ|initSettings] ()...");
                      _context329.next = 3;
                      return this.dS.getSettings();

                    case 3:
                      this.userSettings = _context329.sent;
                      this.pushTopics.tsheet.enabled = this.userSettings.alerts.options.alertEvents.value.tsheet;
                      this.pushTopics.tsheet.time = this.userSettings.alerts.options.alertBefore.value.tsheet;
                      this.pushTopics.snoop.enabled = this.userSettings.snoop.options.activated;
                      this.evServ.publish('pushNoteInit', {
                        stage: 'topics',
                        result: true
                      });

                    case 8:
                    case "end":
                      return _context329.stop();
                  }
                }
              }, _callee329, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "initPushNotePerms",
          value: function initPushNotePerms() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee330() {
              var checkPRes, getPRes;
              return regeneratorRuntime.wrap(function _callee330$(_context330) {
                while (1) {
                  switch (_context330.prev = _context330.next) {
                    case 0:
                      this.logger.info('[pushServ|doPushNotePerms] ' + this.pSIcos + ' ()...');
                      _context330.next = 3;
                      return _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.checkPermissions();

                    case 3:
                      checkPRes = _context330.sent;

                      if (!(checkPRes && checkPRes.receive === 'granted')) {
                        _context330.next = 8;
                        break;
                      }

                      this.evServ.publish('pushNoteInit', {
                        stage: 'permissions',
                        result: true
                      });
                      _context330.next = 12;
                      break;

                    case 8:
                      _context330.next = 10;
                      return _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.requestPermissions();

                    case 10:
                      getPRes = _context330.sent;

                      if (getPRes && getPRes.receive === 'granted') {
                        this.evServ.publish('pushNoteInit', {
                          stage: 'permissions',
                          result: true
                        });
                      } else {
                        this.evServ.publish('pushNoteInit', {
                          stage: 'permissions',
                          result: false
                        });
                      }

                    case 12:
                    case "end":
                      return _context330.stop();
                  }
                }
              }, _callee330, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "initPushNoteListeners",
          value: function initPushNoteListeners() {
            var _this144 = this;

            this.logger.info('[pushServ|doPushNoteListeners] ' + this.pSIcos + ' ()...');

            var addPushListeners = function addPushListeners() {
              _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.addListener('registration', function (token) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(_this144, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee331() {
                  return regeneratorRuntime.wrap(function _callee331$(_context331) {
                    while (1) {
                      switch (_context331.prev = _context331.next) {
                        case 0:
                          this.evServ.publish('pushNoteInit', {
                            stage: 'listeners',
                            result: true,
                            token: token.value
                          });
                          _context331.next = 3;
                          return this.deputy.setSServerFCM(token.value);

                        case 3:
                        case "end":
                          return _context331.stop();
                      }
                    }
                  }, _callee331, this);
                }));
              });

              _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.addListener('registrationError', function (error) {
                _this144.evServ.publish('pushNoteInit', {
                  stage: 'listeners',
                  result: false,
                  error: error
                });
              });

              _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.addListener('pushNotificationReceived', function (pNote) {
                _this144.pNLastMessage = pNote;
                var showInApp = _this144.appServ.aIsActive;

                if (showInApp) {
                  _this144.showInAppPushNote(pNote);
                }

                ;

                _this144.logger.info('[pushServ|Event] ' + _this144.pSIcos + ' (EVENT): "pushNotificationReceived" - ShowInApp?: ' + showInApp.toString().toUpperCase());
              });

              _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.addListener('pushNotificationActionPerformed', function (pNoteAction) {
                var showInApp = _this144.appServ.aIsActive;

                if (showInApp) {
                  _this144.showInAppAction(pNoteAction);
                }

                ;

                _this144.logger.info('[pushServ|Event] ' + _this144.pSIcos + ' (EVENT): "pushNotificationActionPerformed" - ShowInApp?: ' + showInApp.toString().toUpperCase());
              });

              setTimeout(function () {
                _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.register();
              }, 1000);
            };

            _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.removeAllListeners();

            setTimeout(function () {
              addPushListeners();
            }, 1000);
          } ///////////////////////////////////////////////////// 

        }, {
          key: "initPNChannels",
          value: function initPNChannels() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee332() {
              var listChanRes, hasMyChan, i, chanO;
              return regeneratorRuntime.wrap(function _callee332$(_context332) {
                while (1) {
                  switch (_context332.prev = _context332.next) {
                    case 0:
                      this.logger.info('[pushServ|initPNChannels] ' + this.pSIcos + ' ()...');
                      _context332.next = 3;
                      return _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.listChannels();

                    case 3:
                      listChanRes = _context332.sent;

                      if (listChanRes.channels.length > 0) {
                        hasMyChan = false;

                        for (i = 0; i < listChanRes.channels.length; i++) {
                          chanO = listChanRes.channels[i];

                          if (chanO.id.toString() === 'sheriff-alerts') {
                            hasMyChan = true;
                          }
                        }

                        ;

                        if (!hasMyChan) {
                          this.createPNChannel();
                        } else {
                          this.evServ.publish('pushNoteInit', {
                            stage: 'channels',
                            result: true
                          });
                        }
                      } else {
                        this.createPNChannel();
                      }

                    case 5:
                    case "end":
                      return _context332.stop();
                  }
                }
              }, _callee332, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "createPNChannel",
          value: function createPNChannel() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee334() {
              var _this145 = this;

              var appOpts, depOpts, snoopOpts;
              return regeneratorRuntime.wrap(function _callee334$(_context334) {
                while (1) {
                  switch (_context334.prev = _context334.next) {
                    case 0:
                      this.logger.info('[pushServ|createPNChannel] ' + this.pSIcos + ' ()...');
                      appOpts = {
                        id: 'sheriff-alerts',
                        name: 'Sheriff Alerts',
                        description: 'Alert Channel for Sheriff App',
                        sound: 'sheriffnote.wav',
                        importance: 5,
                        visibility: 1,
                        lights: true,
                        lightColor: '#FF9800',
                        vibration: true
                      };
                      depOpts = {
                        id: 'deputy-alerts',
                        name: 'Deputy Alerts',
                        description: 'Alerts re Deputy API',
                        sound: 'sheriffother.wav',
                        importance: 5,
                        visibility: 1,
                        lights: true,
                        lightColor: '#F26A60',
                        vibration: true
                      };
                      snoopOpts = {
                        id: 'snoop-alerts',
                        name: 'Snoop Alerts',
                        description: 'Alerts Channel for Snooping',
                        sound: 'sheriffpst.wav',
                        importance: 5,
                        visibility: 1,
                        lights: false,
                        lightColor: '#AAAAAA',
                        vibration: false
                      };
                      _context334.next = 6;
                      return _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.createChannel(depOpts);

                    case 6:
                      _context334.next = 8;
                      return _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.createChannel(snoopOpts);

                    case 8:
                      _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.createChannel(appOpts).then(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(_this145, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee333() {
                          var nowChanRes, nowHasMyChan, i, nowChanO;
                          return regeneratorRuntime.wrap(function _callee333$(_context333) {
                            while (1) {
                              switch (_context333.prev = _context333.next) {
                                case 0:
                                  _context333.next = 2;
                                  return _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.listChannels();

                                case 2:
                                  nowChanRes = _context333.sent;

                                  if (nowChanRes.channels.length > 0) {
                                    nowHasMyChan = false;

                                    for (i = 0; i < nowChanRes.channels.length; i++) {
                                      nowChanO = nowChanRes.channels[i];

                                      if (nowChanO.id.toString() === 'sheriff-alerts') {
                                        nowHasMyChan = true;
                                      }
                                    }

                                    ;

                                    if (!nowHasMyChan) {
                                      this.evServ.publish('pushNoteInit', {
                                        stage: 'channels',
                                        result: false
                                      });
                                    } else {
                                      this.evServ.publish('pushNoteInit', {
                                        stage: 'channels',
                                        result: true
                                      });
                                    }
                                  } else {
                                    this.evServ.publish('pushNoteInit', {
                                      stage: 'channels',
                                      result: false
                                    });
                                  }

                                case 4:
                                case "end":
                                  return _context333.stop();
                              }
                            }
                          }, _callee333, this);
                        }));
                      });

                    case 9:
                    case "end":
                      return _context334.stop();
                  }
                }
              }, _callee334, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "showInAppPushNote",
          value: function showInAppPushNote(pNote) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee335() {
              var localTitle, localBody, hasData, localPNData, displayMethod, fnType, notifTitleKs, notifIcos, iapNBObj, matchI, titleArr, bodyArr, i, bL;
              return regeneratorRuntime.wrap(function _callee335$(_context335) {
                while (1) {
                  switch (_context335.prev = _context335.next) {
                    case 0:
                      this.logger.info('[pushServ|showInAppPushNote] ' + this.pSIcos + ' ()');
                      pNote.hasOwnProperty('title') ? localTitle = pNote.title : localTitle = '';
                      pNote.hasOwnProperty('body') ? localBody = pNote.body : localBody = '';
                      pNote.hasOwnProperty('data') ? hasData = true : hasData = false;
                      localPNData = pNote.data;

                      if (hasData && pNote.data.hasOwnProperty('inAppDisplay')) {
                        displayMethod = pNote.data.inAppDisplay;
                        delete localPNData.inAppDisplay;
                      } else {
                        displayMethod = 'toast';
                      }

                      ;

                      if (hasData && pNote.data.hasOwnProperty('fnType')) {
                        fnType = pNote.data.fnType;
                        delete localPNData.fnType;
                      } else {
                        fnType = null;
                      }

                      ; // In-App DPAuth Refreshed -----------------------------

                      if (hasData && fnType === 'newauth' && localPNData.hasOwnProperty('access_token')) {
                        this.deputy.setAuthGVars(localPNData);
                      } else {
                        // In-App Notif Bubbles --------------------------------
                        notifTitleKs = ['Work Event', 'Sheriff Server', 'Deputy Access', 'Shift Reminder', 'Timesheet Warning', 'Task Reminder'];
                        notifIcos = ['notifications', 'server', 'key', 'balloon', 'balloon', 'balloon'];
                        iapNBObj = {
                          ico: '',
                          mTitle: '',
                          sTitle: '',
                          bodyLines: []
                        };
                        matchI = notifTitleKs.findIndex(function (t) {
                          return pNote.title.includes(t);
                        });

                        if (matchI !== -1) {
                          iapNBObj.ico = notifIcos[matchI];
                        } else {
                          iapNBObj.ico = notifIcos[0];
                        }

                        ;
                        titleArr = pNote.title.split('|');
                        iapNBObj.mTitle = titleArr[0];
                        iapNBObj.sTitle = titleArr[1];
                        bodyArr = pNote.body.split('\n');

                        for (i = 0; i < bodyArr.length; i++) {
                          bL = bodyArr[i];
                          iapNBObj.bodyLines.push(bL);
                        }

                        ;
                        console.log(iapNBObj);
                        this.evServ.publish('iapBubble', iapNBObj);
                      }
                      /* switch(displayMethod){
                          case 'toast':this.evServ.showPushToast(null,localTitle,localBody,null,null);break;
                          case 'alert':await Dialog.alert({title:localTitle,message:localBody});break;
                          case 'modal':let iaModalOpts:any={component:InAppPushNoteModal,componentProps:{pNote:pNote},showBackdrop:true,backdropDismiss:true,cssClass:'inapp-pushnote-modal-class',animated:true,mode:'md',keyboardClose:true,id:'inapp-pushnote-modal'};
                          const aSchedModal:any=await this.modalCtrl.create(iaModalOpts);
                          document.addEventListener('ionModalDidPresent',()=>{this.logger.info('[EVENT]: IonModalDidPresent...');this.iamIsOpen=true});
                          await aSchedModal.present();
                          aSchedModal.onDidDismiss().then(()=>{this.iamIsOpen=false});
                          break;
                          case 'none':this.logger.info('[pushServ|showInAppPushNote] pNote.data.inAppDisplay==="none": Title/Body to Console & Processing Data Only...');this.logger.info('[pushServ|showInAppPushNote] 👀 [HIDDEN PUSH NOTE] >>> Title: '+localTitle+', Body: '+localBody+', Data: ');this.logger.info(pNote.data);
                        }; */


                    case 10:
                    case "end":
                      return _context335.stop();
                  }
                }
              }, _callee335, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "showInAppAction",
          value: function showInAppAction(pNoteAction) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee336() {
              return regeneratorRuntime.wrap(function _callee336$(_context336) {
                while (1) {
                  switch (_context336.prev = _context336.next) {
                    case 0:
                      this.logger.info('[pushServ|showInAppAction] ' + this.pSIcos + ' ()');
                      this.evServ.showToast('msg', 'Action Id: ' + pNoteAction.actionId);

                    case 2:
                    case "end":
                      return _context336.stop();
                  }
                }
              }, _callee336, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "getDeliveredPNList",
          value: function getDeliveredPNList() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee337() {
              var gDLRes;
              return regeneratorRuntime.wrap(function _callee337$(_context337) {
                while (1) {
                  switch (_context337.prev = _context337.next) {
                    case 0:
                      this.logger.info('[pushServ|getDeliveredList] ' + this.pSIcos + ' ()...');
                      _context337.next = 3;
                      return _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.getDeliveredNotifications();

                    case 3:
                      gDLRes = _context337.sent;

                      if (!(gDLRes && gDLRes.notifications.length > 0)) {
                        _context337.next = 8;
                        break;
                      }

                      return _context337.abrupt("return", Promise.resolve(gDLRes.notifications));

                    case 8:
                      return _context337.abrupt("return", Promise.resolve([]));

                    case 9:
                    case "end":
                      return _context337.stop();
                  }
                }
              }, _callee337, this);
            }));
          } /////////////////////////////////////////////////////

        }, {
          key: "removeDeliveredPN",
          value: function removeDeliveredPN(mode, list) {
            this.logger.info('[pushServ|removeDeliveredPN] (mode:' + mode + ',list)...');

            if (mode === 'all') {
              _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.removeAllDeliveredNotifications();
            } else {
              _capacitor_push_notifications__WEBPACK_IMPORTED_MODULE_1__.PushNotifications.removeDeliveredNotifications(list);
            }

            ;
          } /////////////////////////////////////////////////////

        }, {
          key: "getPNTemplate",
          value: function getPNTemplate() {
            return {
              title: null,
              subtitle: null,
              body: null,
              id: null,
              badge: null,
              notification: null,
              data: null,
              click_action: null,
              link: null,
              group: null,
              groupSummary: null
            };
          }
        }]);

        return PushService;
      }();

      _PushService.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_8__.NGXLogger
        }, {
          type: _events_service__WEBPACK_IMPORTED_MODULE_0__.EventsService
        }, {
          type: _app_service__WEBPACK_IMPORTED_MODULE_3__.AppService
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_9__.Platform
        }, {
          type: _storage_service__WEBPACK_IMPORTED_MODULE_2__.StorageService
        }, {
          type: _firebase_service__WEBPACK_IMPORTED_MODULE_4__.FirebaseService
        }, {
          type: _detail_service__WEBPACK_IMPORTED_MODULE_5__.DetailService
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_9__.ModalController
        }, {
          type: _deputy_service__WEBPACK_IMPORTED_MODULE_6__.DeputyService
        }];
      };

      _PushService = (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_10__.Injectable)({
        providedIn: 'root'
      }) /////////////////////////////////////////////////////
      ], _PushService);
      /***/
    },

    /***/
    90636:
    /*!********************************************!*\
      !*** ./src/app/services/sqlite.service.ts ***!
      \********************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "SQLiteService": function SQLiteService() {
          return (
            /* binding */
            _SQLiteService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _datetime_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./datetime.service */
      12826);
      /* harmony import */


      var _detail_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./detail.service */
      52153);
      /* harmony import */


      var _baseDB__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./baseDB */
      96414);
      /* harmony import */


      var _profileData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./profileData */
      92472);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _capacitor_community_sqlite__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @capacitor-community/sqlite */
      88814);
      /* harmony import */


      var _events_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./events.service */
      80106);
      /* harmony import */


      var _deputy_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./deputy.service */
      22092);
      /* harmony import */


      var _filesystem_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./filesystem.service */
      22904);
      /* harmony import */


      var _storage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./storage.service */
      71188);
      /* harmony import */


      var _capacitor_app__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! @capacitor/app */
      42138);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ngx-logger */
      62740); //////////////////////////////////////////////////////////////////////////////////////


      var _SQLiteService = /*#__PURE__*/function () {
        //////////////////////////////////////////////////////////////////////////////////////
        function SQLiteService(deputy, storeServ, logger, dS, evServ, fsServ, dT) {
          _classCallCheck(this, SQLiteService);

          this.deputy = deputy;
          this.storeServ = storeServ;
          this.logger = logger;
          this.dS = dS;
          this.evServ = evServ;
          this.fsServ = fsServ;
          this.dT = dT;
        } ///////////////////////////////////////////////////////////////////////////////////////


        _createClass(SQLiteService, [{
          key: "doInitSQLServ",
          value: function doInitSQLServ() {
            this.logger.info('[sqlServ|doInitServ] ()...');
            var sqlitePlugin = _capacitor_community_sqlite__WEBPACK_IMPORTED_MODULE_4__.CapacitorSQLite;
            this.mySQL = new _capacitor_community_sqlite__WEBPACK_IMPORTED_MODULE_4__.SQLiteConnection(sqlitePlugin);

            if (!this.dS.getMySQLReady()) {
              this.dS.setMySQLReady(true);
            }

            ;
            this.logger.info('[sqlServ|doInitSQLServ] ✈️ (SUCCESS): "mySQL" SQLiteConnection Created.');
            return Promise.resolve(true);
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "lrQC",
          value: function lrQC() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee338() {
              var isUserConnO, isAuthConnO, isUserDBO, isAuthDBO;
              return regeneratorRuntime.wrap(function _callee338$(_context338) {
                while (1) {
                  switch (_context338.prev = _context338.next) {
                    case 0:
                      this.logger.info('[sqlServ|lrQC] ⚡ ()...');
                      _context338.next = 3;
                      return this.mySQL.isConnection(this.deputy.uUK + 'db');

                    case 3:
                      isUserConnO = _context338.sent.result;
                      _context338.next = 6;
                      return this.mySQL.isConnection(this.deputy.uUK + 'auth');

                    case 6:
                      isAuthConnO = _context338.sent.result;

                      if (!isUserConnO) {
                        _context338.next = 15;
                        break;
                      }

                      _context338.next = 10;
                      return this.userDB.isDBOpen();

                    case 10:
                      isUserDBO = _context338.sent.result;

                      if (isUserDBO) {
                        this.userDB.close();
                      }

                      ;
                      _context338.next = 15;
                      return this.mySQL.closeConnection(this.deputy.uUK + 'db');

                    case 15:
                      ;

                      if (!isAuthConnO) {
                        _context338.next = 24;
                        break;
                      }

                      _context338.next = 19;
                      return this.authDB.isDBOpen();

                    case 19:
                      isAuthDBO = _context338.sent.result;

                      if (isAuthDBO) {
                        this.authDB.close();
                      }

                      ;
                      _context338.next = 24;
                      return this.mySQL.closeConnection(this.deputy.uUK + 'auth');

                    case 24:
                      ;
                      this.mySQL.closeAllConnections();
                      _context338.next = 28;
                      return this.dS.setIsUserConnOpen(false);

                    case 28:
                      _context338.next = 30;
                      return this.dS.setIsAuthConnOpen(false);

                    case 30:
                      _context338.next = 32;
                      return this.dS.setADBIsOpen(false);

                    case 32:
                      _context338.next = 34;
                      return this.dS.setUDBIsOpen(false);

                    case 34:
                      return _context338.abrupt("return", Promise.resolve(true));

                    case 35:
                    case "end":
                      return _context338.stop();
                  }
                }
              }, _callee338, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "createUserDBConn",
          value: function createUserDBConn(userDBName, setupDone) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee339() {
              var createUDB, cSyncT, insValsUDB, udbTbls;
              return regeneratorRuntime.wrap(function _callee339$(_context339) {
                while (1) {
                  switch (_context339.prev = _context339.next) {
                    case 0:
                      this.logger.info('[sqlServ|createUserDBConn] ✨🧑 (' + userDBName + ',' + setupDone + ')...');

                      if (!(this.mySQL == null || !this.dS.getMySQLReady())) {
                        _context339.next = 3;
                        break;
                      }

                      return _context339.abrupt("return", Promise.reject(new Error('☠️ (ERROR): "mySQL" NOT INITIALIZED.')));

                    case 3:
                      ;
                      _context339.prev = 4;
                      _context339.next = 7;
                      return this.mySQL.isConnection(userDBName);

                    case 7:
                      if (_context339.sent.result) {
                        _context339.next = 12;
                        break;
                      }

                      _context339.next = 10;
                      return this.mySQL.createConnection(userDBName, false, 'no-encryption', 1);

                    case 10:
                      this.userDB = _context339.sent;
                      this.userDBName = userDBName;

                    case 12:
                      ;

                      if (this.dS.getIsUserConnOpen()) {
                        _context339.next = 16;
                        break;
                      }

                      _context339.next = 16;
                      return this.dS.setIsUserConnOpen(true);

                    case 16:
                      ;
                      _context339.next = 19;
                      return this.userDB.isDBOpen();

                    case 19:
                      if (_context339.sent.result) {
                        _context339.next = 21;
                        break;
                      }

                      this.userDB.open();

                    case 21:
                      ;

                      if (!this.dS.getUDBIsOpen()) {
                        this.dS.setUDBIsOpen(true);
                      }

                      ;

                      if (setupDone) {
                        _context339.next = 54;
                        break;
                      }

                      _context339.next = 27;
                      return this.cInitTbls('user');

                    case 27:
                      createUDB = _context339.sent;

                      if (!createUDB) {
                        _context339.next = 32;
                        break;
                      }

                      this.logger.info('[sqlServ|createUserDBConn] ✨🧑 (✔️SUCCESS): Table Schema & Index Created.');
                      _context339.next = 34;
                      break;

                    case 32:
                      this.evServ.publish('uDBReady', false);
                      return _context339.abrupt("return", Promise.reject(new Error('[sqlServ|createUserDBConn] ✨🧑 (☠️ERROR): Create Schema/Index Failed')));

                    case 34:
                      ;
                      _context339.next = 37;
                      return this.userDB.createSyncTable();

                    case 37:
                      cSyncT = _context339.sent.changes.changes;

                      if (cSyncT !== -1) {
                        this.userDB.setSyncDate(this.dT.syncStr(new Date()));
                        this.logger.info('[sqlServ|createUserDBConn] ✨🧑 (✔️SUCCESS): ⌚SyncTable Created & Set.');
                      } else {
                        this.logger.info('[sqlServ|createUserDBConn] ✨🧑 (❌ERROR): ⌚SyncTable NOT Created/Set.');
                      }

                      ;
                      _context339.next = 42;
                      return this.cInitTblVals();

                    case 42:
                      insValsUDB = _context339.sent;

                      if (insValsUDB) {
                        this.logger.info('[sqlServ|createUserDBConn] ✨🧑 (✔️SUCCESS): Initial Table Values Inserted.');
                      } else {
                        this.logger.info('[sqlServ|createUserDBConn] ✨🧑 (❌ERROR): Initial Table Values NOT Inserted.');
                      }

                      ;
                      _context339.next = 47;
                      return this.dS.getUDBSetupDone();

                    case 47:
                      if (_context339.sent) {
                        _context339.next = 50;
                        break;
                      }

                      _context339.next = 50;
                      return this.dS.setUDBSetupDone(true);

                    case 50:
                      ;
                      this.logger.info('[sqlServ|createUserDBConn] ✨🧑 (✅SUCCESS): [NEW] USER DB CONNECTION CREATED >>> (' + userDBName + ')');
                      _context339.next = 61;
                      break;

                    case 54:
                      this.logger.info('[sqlServ|createUserDBConn] ✨🧑 (✅SUCCESS): [EXISTING] USER DB CONNECTION CREATED >>> (' + userDBName + ')');
                      _context339.next = 57;
                      return this.dS.getUDBSetupDone();

                    case 57:
                      if (_context339.sent) {
                        _context339.next = 60;
                        break;
                      }

                      _context339.next = 60;
                      return this.dS.setUDBSetupDone(true);

                    case 60:
                      ;

                    case 61:
                      ;
                      _context339.next = 64;
                      return this.listUDBTables();

                    case 64:
                      udbTbls = _context339.sent;
                      this.dS.setUDBTables(udbTbls);
                      this.evServ.publish('uDBReady', true);
                      _context339.next = 73;
                      break;

                    case 69:
                      _context339.prev = 69;
                      _context339.t0 = _context339["catch"](4);
                      this.logger.info('[sqlServ|createUserDBConn] ✨🧑 (☠️ERROR): ' + JSON.stringify(_context339.t0));
                      this.evServ.publish('uDBReady', false);

                    case 73:
                    case "end":
                      return _context339.stop();
                  }
                }
              }, _callee339, this, [[4, 69]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "createAuthDBConn",
          value: function createAuthDBConn(authDBName, setupDone, valsObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee340() {
              var hasSecret, createADB, cSyncT, insADBIRes, adbTbls, _adbTbls;

              return regeneratorRuntime.wrap(function _callee340$(_context340) {
                while (1) {
                  switch (_context340.prev = _context340.next) {
                    case 0:
                      this.logger.info('[sqlServ|createAuthDBConn] ✨🔑 (' + authDBName + ',' + setupDone + ')...');

                      if (!(this.mySQL == null || !this.dS.getMySQLReady())) {
                        _context340.next = 3;
                        break;
                      }

                      return _context340.abrupt("return", Promise.reject(new Error('☠️ (ERROR): "mySQL" NOT INITIALIZED.')));

                    case 3:
                      ;
                      _context340.prev = 4;

                      if (setupDone) {
                        _context340.next = 64;
                        break;
                      }

                      _context340.next = 8;
                      return this.mySQL.createConnection(authDBName, false, 'no-encryption', 1);

                    case 8:
                      _context340.next = 10;
                      return this.mySQL.isSecretStored();

                    case 10:
                      hasSecret = _context340.sent.result;

                      if (hasSecret) {
                        this.mySQL.changeEncryptionSecret('sheriff is boss', 'sheriff is boss');
                        this.logger.info('[sqlServ|createAuthDBConn] 🔐 Secret [CHANGED] - OK.');
                      } else {
                        this.mySQL.setEncryptionSecret('sheriff is boss');
                        this.logger.info('[sqlServ|createAuthDBConn] 🔐 Secret [UPDATED] - OK.');
                      }

                      ;
                      _context340.next = 15;
                      return this.mySQL.createConnection(authDBName, true, 'secret', 1);

                    case 15:
                      this.authDB = _context340.sent;
                      this.authDBName = authDBName;

                      if (this.dS.getIsAuthConnOpen()) {
                        _context340.next = 20;
                        break;
                      }

                      _context340.next = 20;
                      return this.dS.setIsAuthConnOpen(true);

                    case 20:
                      ;
                      _context340.next = 23;
                      return this.authDB.isDBOpen();

                    case 23:
                      if (_context340.sent.result) {
                        _context340.next = 25;
                        break;
                      }

                      this.authDB.open();

                    case 25:
                      ;

                      if (this.dS.getADBIsOpen()) {
                        _context340.next = 29;
                        break;
                      }

                      _context340.next = 29;
                      return this.dS.setADBIsOpen(true);

                    case 29:
                      ;
                      _context340.next = 32;
                      return this.cInitTbls('auth');

                    case 32:
                      createADB = _context340.sent;

                      if (!createADB) {
                        _context340.next = 37;
                        break;
                      }

                      this.logger.info('[sqlServ|createAuthDBConn] ✨🔑 (✔️SUCCESS): Table Schema & Index Created.');
                      _context340.next = 39;
                      break;

                    case 37:
                      this.evServ.publish('aDBReady', false);
                      return _context340.abrupt("return", Promise.reject(new Error('[sqlServ|createAuthDBConn] ✨🔑 (☠️ERROR): Create Schema/Index Failed')));

                    case 39:
                      ;
                      _context340.next = 42;
                      return this.authDB.createSyncTable();

                    case 42:
                      cSyncT = _context340.sent.changes.changes;

                      if (cSyncT !== -1) {
                        this.authDB.setSyncDate(this.dT.syncStr(new Date()));
                        this.logger.info('[sqlServ|createAuthDBConn] ✨🔑 (✔️SUCCESS): ⌚SyncTable Created & Set.');
                      } else {
                        this.logger.info('[sqlServ|createAuthDBConn] ✨🔑 (❌ERROR): ⌚SyncTable NOT Created/Set.');
                      }

                      ;
                      _context340.next = 47;
                      return this.setADBItem(valsObj.up, valsObj.dp);

                    case 47:
                      insADBIRes = _context340.sent;

                      if (insADBIRes) {
                        this.logger.info('[sqlServ|createAuthDBConn] ✨🔑 (✔️SUCCESS): Initial Auth Creds Inserted.');
                      } else {
                        this.logger.info('[sqlServ|createAuthDBConn] ✨🔑 (❌ERROR): Initial Auth Creds NOT Inserted.');
                      }

                      ;
                      _context340.next = 52;
                      return this.dS.getADBSetupDone();

                    case 52:
                      if (_context340.sent) {
                        _context340.next = 55;
                        break;
                      }

                      _context340.next = 55;
                      return this.dS.setADBSetupDone(true);

                    case 55:
                      ;
                      _context340.next = 58;
                      return this.listADBTables();

                    case 58:
                      adbTbls = _context340.sent;
                      this.dS.setADBTables(adbTbls);
                      this.logger.info('[sqlServ|createAuthDBConn] ✨🔑 (✅SUCCESS): [NEW] AUTH DB CONNECTION CREATED >>> (' + authDBName + ')');
                      this.evServ.publish('aDBReady', true);
                      _context340.next = 95;
                      break;

                    case 64:
                      _context340.next = 66;
                      return this.dS.getADBSetupDone();

                    case 66:
                      if (_context340.sent) {
                        _context340.next = 69;
                        break;
                      }

                      _context340.next = 69;
                      return this.dS.setADBSetupDone(true);

                    case 69:
                      ;
                      _context340.next = 72;
                      return this.mySQL.isConnection(authDBName);

                    case 72:
                      if (_context340.sent.result) {
                        _context340.next = 77;
                        break;
                      }

                      _context340.next = 75;
                      return this.mySQL.createConnection(authDBName, true, 'secret', 1);

                    case 75:
                      this.authDB = _context340.sent;
                      this.authDBName = authDBName;

                    case 77:
                      ;

                      if (this.dS.getIsAuthConnOpen()) {
                        _context340.next = 81;
                        break;
                      }

                      _context340.next = 81;
                      return this.dS.setIsAuthConnOpen(true);

                    case 81:
                      ;
                      _context340.next = 84;
                      return this.authDB.isDBOpen();

                    case 84:
                      if (_context340.sent.result) {
                        _context340.next = 86;
                        break;
                      }

                      this.authDB.open();

                    case 86:
                      ;

                      if (!this.dS.getADBIsOpen()) {
                        this.dS.setADBIsOpen(true);
                      }

                      ;
                      _context340.next = 91;
                      return this.listADBTables();

                    case 91:
                      _adbTbls = _context340.sent;
                      this.dS.setADBTables(_adbTbls);
                      this.logger.info('[sqlServ|createAuthDBConn] ✨🔑 (✅SUCCESS): [EXISTING] AUTH DB CONNECTION CREATED >>> (' + authDBName + ')');
                      this.evServ.publish('aDBReady', true);

                    case 95:
                      _context340.next = 101;
                      break;

                    case 97:
                      _context340.prev = 97;
                      _context340.t0 = _context340["catch"](4);
                      this.logger.info('[sqlServ|createUserDBConn] ✨🔑 (☠️ERROR): ' + JSON.stringify(_context340.t0));
                      this.evServ.publish('aDBReady', false);

                    case 101:
                    case "end":
                      return _context340.stop();
                  }
                }
              }, _callee340, this, [[4, 97]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "cInitTblVals",
          value: function cInitTblVals() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee341() {
              var _this146 = this;

              var countrySet, stateSet, cValsArr, sValsArr, cInsSQL, i, cInsSet, sInsSQL, _i29, sInsSet, consM, cSetRes, sSetRes;

              return regeneratorRuntime.wrap(function _callee341$(_context341) {
                while (1) {
                  switch (_context341.prev = _context341.next) {
                    case 0:
                      this.logger.info('[sqlServ|cInitTblVals] 🛠️ ()...');
                      countrySet = [];
                      stateSet = [];
                      cValsArr = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables.filter(function (t) {
                        return t.name === 'countries';
                      })[0].values;
                      sValsArr = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables.filter(function (t) {
                        return t.name === 'states';
                      })[0].values;
                      cInsSQL = 'INSERT OR IGNORE INTO countries (Id,Code,CodeA3,Region,Active,SortOrder,Country,ZipValidatePreg,PhoneDisplayPreg,Creator,Created,Modified,last_modified) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)';

                      for (i = 0; i < cValsArr.length; i++) {
                        cInsSet = {
                          statement: cInsSQL,
                          values: cValsArr[i]
                        };
                        countrySet.push(cInsSet);
                      }

                      ;
                      sInsSQL = 'INSERT OR IGNORE INTO states (Id,Country,Code,Active,SortOrder,State,Creator,Created,Modified,last_modified) VALUES (?,?,?,?,?,?,?,?,?,?)';

                      for (_i29 = 0; _i29 < sValsArr.length; _i29++) {
                        sInsSet = {
                          statement: sInsSQL,
                          values: sValsArr[_i29]
                        };
                        stateSet.push(sInsSet);
                      }

                      ;
                      _context341.prev = 11;

                      consM = function consM(r, c, t) {
                        var rT, tT;
                        r === 's' ? rT = '✔️SUCCESS' : rT = '❌ERROR';
                        t === 'c' ? tT = 'COUNTRIES' : tT = 'STATES';
                        return _this146.logger.info('[sqlServ|cInitTbles] 🛠️ (' + rT + ') ' + tT + ': changes=' + c.c + '/lastId=' + c.l);
                      };

                      _context341.next = 15;
                      return this.userDB.executeSet(countrySet);

                    case 15:
                      cSetRes = _context341.sent.changes;

                      if (cSetRes.changes < 0 || cSetRes.lastId < 0) {
                        consM('e', {
                          c: cSetRes.changes,
                          l: cSetRes.lastId
                        }, 'c');
                      } else {
                        consM('s', {
                          c: cSetRes.changes,
                          l: cSetRes.lastId
                        }, 'c');
                      }

                      ;
                      _context341.next = 20;
                      return this.userDB.executeSet(stateSet);

                    case 20:
                      sSetRes = _context341.sent.changes;

                      if (sSetRes.changes < 0 || sSetRes.lastId < 0) {
                        consM('e', {
                          c: sSetRes.changes,
                          l: sSetRes.lastId
                        }, 's');
                      } else {
                        consM('s', {
                          c: sSetRes.changes,
                          l: sSetRes.lastId
                        }, 's');
                      }

                      ;
                      return _context341.abrupt("return", Promise.resolve(true));

                    case 26:
                      _context341.prev = 26;
                      _context341.t0 = _context341["catch"](11);
                      this.logger.info('[sqlServ|cInitTblVals] 🛠️ (☠️ERROR): ' + _context341.t0.message);
                      return _context341.abrupt("return", Promise.resolve(true));

                    case 30:
                    case "end":
                      return _context341.stop();
                  }
                }
              }, _callee341, this, [[11, 26]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "insDPTypeCheck",
          value: function insDPTypeCheck(valArr, typeArr) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee342() {
              var tVs, i, rawV, reqT;
              return regeneratorRuntime.wrap(function _callee342$(_context342) {
                while (1) {
                  switch (_context342.prev = _context342.next) {
                    case 0:
                      if (!(valArr.length !== typeArr.length)) {
                        _context342.next = 4;
                        break;
                      }

                      return _context342.abrupt("return", Promise.reject(new Error('Value Array Length !== Type Array Length!')));

                    case 4:
                      tVs = [];

                      for (i = 0; i < valArr.length; i++) {
                        rawV = valArr[i];
                        reqT = _baseDB__WEBPACK_IMPORTED_MODULE_2__.InsertTypeMap[typeArr[i].toLowerCase()];

                        if (typeof rawV === 'object') {
                          if (rawV === null || rawV === undefined) {
                            reqT === 'string' ? tVs.push(String('')) : tVs.push(Number(-1));
                          } else {
                            tVs.push(JSON.stringify(rawV));
                          }
                        } else if (typeof rawV === 'boolean') {
                          if (rawV) {
                            reqT === 'string' ? tVs.push(String('true')) : tVs.push(Number(1));
                          } else {
                            reqT === 'string' ? tVs.push(String('false')) : tVs.push(Number(0));
                          }
                        } else {
                          reqT === 'string' ? tVs.push(String(rawV)) : tVs.push(Number(rawV));
                        }
                      }

                      ;
                      return _context342.abrupt("return", Promise.resolve(tVs));

                    case 8:
                    case "end":
                      return _context342.stop();
                  }
                }
              }, _callee342);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "insDPTblSet",
          value: function insDPTblSet(resEPName, rawDPObjArr) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee343() {
              var tblN, setRowSQL, dpTblSet, i, rawObj, rawRowVals, setRowTypes, dpTblSchema, _i30, setRowVals, sInsSet, dpSetRes;

              return regeneratorRuntime.wrap(function _callee343$(_context343) {
                while (1) {
                  switch (_context343.prev = _context343.next) {
                    case 0:
                      this.logger.info('[sqlServ|insDPTblVals] 🍄 (' + resEPName + ')...');
                      tblN = _baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources[resEPName];
                      _context343.next = 4;
                      return this.insertItemsCMD(resEPName);

                    case 4:
                      setRowSQL = _context343.sent;
                      dpTblSet = [];
                      i = 0;

                    case 7:
                      if (!(i < rawDPObjArr.length)) {
                        _context343.next = 22;
                        break;
                      }

                      rawObj = rawDPObjArr[i];
                      rawRowVals = [];
                      setRowTypes = [];
                      dpTblSchema = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables.filter(function (x) {
                        return x.name === tblN;
                      })[0].schema;

                      for (_i30 = 0; _i30 < dpTblSchema.length; _i30++) {
                        rawRowVals.push(rawObj[dpTblSchema[_i30].column]);
                        setRowTypes.push(dpTblSchema[_i30].value);
                      }

                      ;
                      _context343.next = 16;
                      return this.insDPTypeCheck(rawRowVals, setRowTypes);

                    case 16:
                      setRowVals = _context343.sent;
                      sInsSet = {
                        statement: setRowSQL,
                        values: setRowVals
                      };
                      dpTblSet.push(sInsSet);

                    case 19:
                      i++;
                      _context343.next = 7;
                      break;

                    case 22:
                      ;
                      _context343.prev = 23;
                      _context343.next = 26;
                      return this.userDB.executeSet(dpTblSet);

                    case 26:
                      dpSetRes = _context343.sent.changes.changes;

                      if (!(dpSetRes !== -1)) {
                        _context343.next = 34;
                        break;
                      }

                      this.logger.info('[sqlServ|insDPTblSet] 🍄 (✔️SUCCESS): Inserted DPSet (' + tblN + ') - OK!');
                      _context343.next = 31;
                      return this.setSync(tblN);

                    case 31:
                      return _context343.abrupt("return", Promise.resolve(true));

                    case 34:
                      this.logger.info('[sqlServ|insDPTblSet] 🍄 (❌ERROR): Insert DPSet (' + tblN + ') Failed (changes===-1)');
                      return _context343.abrupt("return", Promise.resolve(false));

                    case 36:
                      _context343.next = 42;
                      break;

                    case 38:
                      _context343.prev = 38;
                      _context343.t0 = _context343["catch"](23);
                      this.logger.info('[sqlServ|cInitTblVals] 🍄 (☠️ERROR): ' + JSON.stringify(_context343.t0));
                      return _context343.abrupt("return", Promise.reject(new Error(JSON.stringify(_context343.t0))));

                    case 42:
                    case "end":
                      return _context343.stop();
                  }
                }
              }, _callee343, this, [[23, 38]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "cTblSchemaCMD",
          value: function cTblSchemaCMD(db, n) {
            var dbTblData;
            db === 'user' ? dbTblData = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables : dbTblData = _baseDB__WEBPACK_IMPORTED_MODULE_2__.AuthDB.tables;
            var c = [];
            var tS = dbTblData.filter(function (t) {
              return t.name === n;
            })[0].schema;

            for (var i = 0; i < tS.length; i++) {
              c.push(tS[i].column + ' ' + tS[i].value);
            }

            ;
            return 'CREATE TABLE IF NOT EXISTS ' + n + ' (' + c.join(',') + ')';
          }
        }, {
          key: "cTblIndexCMD",
          value: //////////////////////////////////////////////////////////////////////////////////////
          function cTblIndexCMD(db, n) {
            var dbTblData;
            db === 'user' ? dbTblData = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables : dbTblData = _baseDB__WEBPACK_IMPORTED_MODULE_2__.AuthDB.tables;
            var tS = dbTblData.filter(function (t) {
              return t.name === n;
            })[0].schema;
            var pKColN = tS.filter(function (tCO) {
              return tCO.value.includes('PRIMARY KEY');
            })[0].column;
            return 'CREATE INDEX IF NOT EXISTS dpuid_index_' + pKColN + ' ON ' + n + ' (' + pKColN + ')';
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "cInitTbls",
          value: function cInitTbls(db) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee344() {
              var cTSchemaCMDs, cTIndexCMDs, dbTblData, dbInst, i, tN, cInitTblsCMD, _changes2;

              return regeneratorRuntime.wrap(function _callee344$(_context344) {
                while (1) {
                  switch (_context344.prev = _context344.next) {
                    case 0:
                      this.logger.info('[sqlServ|cInitTbles] 🛠️ ()...');
                      cTSchemaCMDs = [];
                      cTIndexCMDs = [];

                      if (db === 'user') {
                        dbTblData = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables;
                        dbInst = this.userDB;
                      } else {
                        dbTblData = _baseDB__WEBPACK_IMPORTED_MODULE_2__.AuthDB.tables;
                        dbInst = this.authDB;
                      }

                      ;

                      for (i = 0; i < dbTblData.length; i++) {
                        tN = dbTblData[i].name;
                        cTSchemaCMDs.push(this.cTblSchemaCMD(db, tN));
                        cTIndexCMDs.push(this.cTblIndexCMD(db, tN));
                      }

                      ;
                      cInitTblsCMD = cTSchemaCMDs.concat(cTIndexCMDs).join(';\n');
                      _context344.prev = 8;
                      _context344.next = 11;
                      return dbInst.execute(cInitTblsCMD);

                    case 11:
                      _changes2 = _context344.sent.changes.changes;

                      if (!(_changes2 !== -1)) {
                        _context344.next = 16;
                        break;
                      }

                      return _context344.abrupt("return", Promise.resolve(true));

                    case 16:
                      this.logger.info('[sqlServ|cInitTbles] 🛠️ (❌ERROR): Execute cInitTbls Failed (changes===-1)');
                      return _context344.abrupt("return", Promise.resolve(false));

                    case 18:
                      _context344.next = 24;
                      break;

                    case 20:
                      _context344.prev = 20;
                      _context344.t0 = _context344["catch"](8);
                      this.logger.info('[sqlServ|cInitTbles] 🛠️ (☠️ERROR): ' + JSON.stringify(_context344.t0));
                      return _context344.abrupt("return", Promise.reject(new Error(JSON.stringify(_context344.t0))));

                    case 24:
                    case "end":
                      return _context344.stop();
                  }
                }
              }, _callee344, this, [[8, 20]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "openAuth",
          value: function openAuth() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee345() {
              return regeneratorRuntime.wrap(function _callee345$(_context345) {
                while (1) {
                  switch (_context345.prev = _context345.next) {
                    case 0:
                      _context345.next = 2;
                      return this.mySQL.isConnection(this.authDBName);

                    case 2:
                      if (_context345.sent.result) {
                        _context345.next = 6;
                        break;
                      }

                      _context345.next = 5;
                      return this.mySQL.createConnection(this.authDBName, true, 'secret', 1);

                    case 5:
                      this.authDB = _context345.sent;

                    case 6:
                      ;

                      if (this.dS.getIsAuthConnOpen()) {
                        _context345.next = 10;
                        break;
                      }

                      _context345.next = 10;
                      return this.dS.setIsAuthConnOpen(true);

                    case 10:
                      ;
                      _context345.next = 13;
                      return this.authDB.isDBOpen();

                    case 13:
                      if (_context345.sent.result) {
                        _context345.next = 15;
                        break;
                      }

                      this.authDB.open();

                    case 15:
                      ;

                      if (this.dS.getADBIsOpen()) {
                        _context345.next = 19;
                        break;
                      }

                      _context345.next = 19;
                      return this.dS.setADBIsOpen(true);

                    case 19:
                      ;
                      this.logger.info('[sqlServ|openAuth] (☂️ OPEN): ' + this.authDBName);
                      return _context345.abrupt("return", Promise.resolve(true));

                    case 22:
                    case "end":
                      return _context345.stop();
                  }
                }
              }, _callee345, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeAuth",
          value: function closeAuth() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee346() {
              return regeneratorRuntime.wrap(function _callee346$(_context346) {
                while (1) {
                  switch (_context346.prev = _context346.next) {
                    case 0:
                      _context346.next = 2;
                      return this.authDB.isDBOpen();

                    case 2:
                      if (!_context346.sent.result) {
                        _context346.next = 4;
                        break;
                      }

                      this.authDB.close();

                    case 4:
                      ;

                      if (!this.dS.getADBIsOpen()) {
                        _context346.next = 8;
                        break;
                      }

                      _context346.next = 8;
                      return this.dS.setADBIsOpen(false);

                    case 8:
                      ;
                      _context346.next = 11;
                      return this.mySQL.isConnection(this.authDBName);

                    case 11:
                      if (!_context346.sent.result) {
                        _context346.next = 13;
                        break;
                      }

                      this.mySQL.closeConnection(this.authDBName);

                    case 13:
                      ;

                      if (!this.dS.getIsAuthConnOpen()) {
                        _context346.next = 17;
                        break;
                      }

                      _context346.next = 17;
                      return this.dS.setIsAuthConnOpen(false);

                    case 17:
                      ;
                      this.logger.info('[sqlServ|closeAuth] (🌂 CLOSE): ' + this.authDBName);
                      return _context346.abrupt("return", Promise.resolve(true));

                    case 20:
                    case "end":
                      return _context346.stop();
                  }
                }
              }, _callee346, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "setADBItem",
          value: function setADBItem(upObj, dpObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee347() {
              var _this147 = this;

              var userDPUUK, isIns, sql, vals, setADBRes, consM;
              return regeneratorRuntime.wrap(function _callee347$(_context347) {
                while (1) {
                  switch (_context347.prev = _context347.next) {
                    case 0:
                      this.logger.info('[sqlServ|setADBItem] ()...');
                      userDPUUK = this.deputy.uUK + 'auth';
                      upObj !== null ? isIns = true : isIns = false;
                      vals = [];

                      consM = function consM(r, x) {
                        var rT, sT, xT;
                        r === 's' ? rT = '(✔️SUCCESS) ' : rT = '(❌ERROR) NOT ';
                        isIns ? sT = 'INSERT' : sT = 'UPDAT';
                        x !== null ? xT = ': ' + x : xT = '';
                        return _this147.logger.info('[sqlServ|setADBItem] 🔑 ' + rT + ' ' + sT + 'ED' + xT);
                      };

                      if (isIns) {
                        sql = 'INSERT INTO deputy_auth (dp_uuk,dp_username,dp_password,dp_access_token,dp_endpoint,dp_expires_in,dp_expires_at,dp_refresh_token,last_modified) VALUES (?,?,?,?,?,?,?,?,?)';
                        vals = [String(userDPUUK), String(upObj.user), String(upObj.pass), String(dpObj.access_token), String(dpObj.endpoint), String(dpObj.expires_in), String(dpObj.expires_at), String(dpObj.refresh_token), null];
                      } else {
                        sql = 'UPDATE deputy_auth SET dp_access_token="' + String(dpObj.access_token) + '",dp_endpoint="' + String(dpObj.endpoint) + '",dp_expires_in="' + dpObj.expires_in + '",dp_expires_at="' + String(dpObj.expires_at) + '",dp_refresh_token="' + String(dpObj.refresh_token) + '" WHERE dp_uuk="' + this.authDBName + '"';
                      }

                      ;
                      _context347.prev = 7;

                      if (!isIns) {
                        _context347.next = 14;
                        break;
                      }

                      _context347.next = 11;
                      return this.authDB.run(sql, vals);

                    case 11:
                      setADBRes = _context347.sent.changes.changes;
                      _context347.next = 17;
                      break;

                    case 14:
                      _context347.next = 16;
                      return this.authDB.run(sql);

                    case 16:
                      setADBRes = _context347.sent.changes.changes;

                    case 17:
                      ;

                      if (!(setADBRes !== -1)) {
                        _context347.next = 23;
                        break;
                      }

                      consM('s', null);
                      return _context347.abrupt("return", Promise.resolve(true));

                    case 23:
                      consM('e', 'Changes===-1');
                      return _context347.abrupt("return", Promise.resolve(false));

                    case 25:
                      _context347.next = 31;
                      break;

                    case 27:
                      _context347.prev = 27;
                      _context347.t0 = _context347["catch"](7);
                      consM('e', JSON.stringify(_context347.t0));
                      return _context347.abrupt("return", Promise.resolve(false));

                    case 31:
                    case "end":
                      return _context347.stop();
                  }
                }
              }, _callee347, this, [[7, 27]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getADBItem",
          value: function getADBItem(mode) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee348() {
              var _this148 = this;

              var consM, userDPUUK, sql, getADBRes, finalData, data;
              return regeneratorRuntime.wrap(function _callee348$(_context348) {
                while (1) {
                  switch (_context348.prev = _context348.next) {
                    case 0:
                      this.logger.info('[sqlServ|getADBItem] ()...');

                      consM = function consM(r, x) {
                        var rT, xT;
                        r === 's' ? rT = '(✔️SUCCESS) ' : rT = '(❌ERROR) ';
                        x !== null ? xT = ': ' + x : xT = '';
                        return _this148.logger.info('[sqlServ|getADBItem] 🔑 ' + rT + ' for ' + _this148.authDBName + xT);
                      };

                      userDPUUK = this.deputy.uUK + 'auth';
                      sql = 'SELECT * FROM deputy_auth WHERE dp_uuk="' + userDPUUK + '"';
                      _context348.prev = 4;
                      _context348.next = 7;
                      return this.authDB.query(sql);

                    case 7:
                      getADBRes = _context348.sent.values;

                      if (!(getADBRes.length > 0)) {
                        _context348.next = 16;
                        break;
                      }

                      data = getADBRes[0];

                      if (mode === 'auth') {
                        finalData = {
                          access_token: String(data.dp_access_token),
                          expires_in: String(data.dp_expires_in),
                          expires_at: String(data.dp_expires_at),
                          scope: 'longlife_refresh_token',
                          endpoint: String(data.dp_endpoint),
                          refresh_token: String(data.dp_refresh_token)
                        };
                      } else if (mode === 'up') {
                        finalData = {
                          u: getADBRes[0].dp_username,
                          p: getADBRes[0].dp_password
                        };
                      } else if (mode === null) {
                        finalData = getADBRes[0];
                      }

                      ;
                      consM('s', null);
                      return _context348.abrupt("return", Promise.resolve({
                        result: true,
                        data: finalData
                      }));

                    case 16:
                      consM('e', 'No User (dp_uuk)');
                      return _context348.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 18:
                      _context348.next = 24;
                      break;

                    case 20:
                      _context348.prev = 20;
                      _context348.t0 = _context348["catch"](4);
                      consM('e', JSON.stringify(_context348.t0));
                      return _context348.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 24:
                    case "end":
                      return _context348.stop();
                  }
                }
              }, _callee348, this, [[4, 20]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "setFCMToken",
          value: function setFCMToken(token) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee349() {
              var _this149 = this;

              var consM, sFCMTRes;
              return regeneratorRuntime.wrap(function _callee349$(_context349) {
                while (1) {
                  switch (_context349.prev = _context349.next) {
                    case 0:
                      this.logger.info('[sqlServ|setFCMToken] ()...');

                      consM = function consM(r, x) {
                        var rT, sT, xT;
                        r === 's' ? rT = '(✔️SUCCESS) ' : rT = '(❌ERROR) NOT ';
                        sT = 'UPDATED';
                        x !== null ? xT = ': ' + x : xT = '';
                        return _this149.logger.info('[sqlServ|setFCMToken] 🎫 ' + rT + ' ' + sT + 'ED' + xT);
                      };

                      _context349.prev = 2;
                      _context349.next = 5;
                      return this.userDB.run('INSERT OR REPLACE INTO `firebase_fcm` (app_uuk,fcm_token) VALUES (?,?)', [this.deputy.uUK, token]);

                    case 5:
                      sFCMTRes = _context349.sent;

                      if (!(sFCMTRes.changes.changes !== -1)) {
                        _context349.next = 11;
                        break;
                      }

                      consM('s', null);
                      return _context349.abrupt("return", Promise.resolve(true));

                    case 11:
                      consM('e', 'Changes===-1');
                      return _context349.abrupt("return", Promise.resolve(false));

                    case 13:
                      _context349.next = 19;
                      break;

                    case 15:
                      _context349.prev = 15;
                      _context349.t0 = _context349["catch"](2);
                      consM('e', JSON.stringify(_context349.t0));
                      return _context349.abrupt("return", Promise.resolve(false));

                    case 19:
                    case "end":
                      return _context349.stop();
                  }
                }
              }, _callee349, this, [[2, 15]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getFCMToken",
          value: function getFCMToken() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee350() {
              var _this150 = this;

              var consM, _yield$this$userDB$qu, values;

              return regeneratorRuntime.wrap(function _callee350$(_context350) {
                while (1) {
                  switch (_context350.prev = _context350.next) {
                    case 0:
                      this.logger.info('[sqlServ|getFCMToken] ()...');

                      consM = function consM(r, x) {
                        var rT, xT;
                        r === 's' ? rT = '(✔️SUCCESS) ' : rT = '(❌ERROR) ';
                        x !== null ? xT = ': ' + x : xT = '';
                        return _this150.logger.info('[sqlServ|getFCMToken] 🎫 ' + rT + ' for ' + _this150.deputy.uUK + xT);
                      };

                      _context350.prev = 2;
                      _context350.next = 5;
                      return this.userDB.query('SELECT fcm_token FROM firebase_fcm WHERE app_uuk = "' + this.deputy.uUK + '"');

                    case 5:
                      _yield$this$userDB$qu = _context350.sent;
                      values = _yield$this$userDB$qu.values;

                      if (!(values.length > 0)) {
                        _context350.next = 12;
                        break;
                      }

                      consM('s', null);
                      return _context350.abrupt("return", Promise.resolve({
                        result: true,
                        data: values[0]['fcm_token']
                      }));

                    case 12:
                      consM('e', 'No User (app_uuk)');
                      return _context350.abrupt("return", Promise.resolve({
                        result: true,
                        data: null
                      }));

                    case 14:
                      _context350.next = 20;
                      break;

                    case 16:
                      _context350.prev = 16;
                      _context350.t0 = _context350["catch"](2);
                      consM('e', JSON.stringify(_context350.t0));
                      return _context350.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context350.t0
                      }));

                    case 20:
                    case "end":
                      return _context350.stop();
                  }
                }
              }, _callee350, this, [[2, 16]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "setFEToken",
          value: function setFEToken(feToken) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee351() {
              var _this151 = this;

              var consM, sFETRes;
              return regeneratorRuntime.wrap(function _callee351$(_context351) {
                while (1) {
                  switch (_context351.prev = _context351.next) {
                    case 0:
                      this.logger.info('[sqlServ|setFEToken] ()...');

                      consM = function consM(r, x) {
                        var rT, sT, xT;

                        if (r === 's') {
                          rT = '(✔️SUCCESS) ';
                        } else {
                          rT = '(❌ERROR) NOT ';
                        }

                        ;
                        sT = 'UPDATED';

                        if (x !== null) {
                          xT = ': ' + x;
                        } else {
                          xT = '';
                        }

                        ;
                        return _this151.logger.info('[sqlServ|setFEToken] 🎟️ ' + rT + ' ' + sT + 'ED' + xT);
                      };

                      _context351.prev = 2;
                      _context351.next = 5;
                      return this.userDB.run('INSERT OR REPLACE INTO `firebase_fct` (app_uuk,fe_token) VALUES (?,?)', [this.deputy.uUK, feToken]);

                    case 5:
                      sFETRes = _context351.sent;

                      if (!(sFETRes.changes.changes !== -1)) {
                        _context351.next = 11;
                        break;
                      }

                      consM('s', null);
                      return _context351.abrupt("return", Promise.resolve(true));

                    case 11:
                      consM('e', 'Changes===-1');
                      return _context351.abrupt("return", Promise.resolve(false));

                    case 13:
                      _context351.next = 19;
                      break;

                    case 15:
                      _context351.prev = 15;
                      _context351.t0 = _context351["catch"](2);
                      consM('e', JSON.stringify(_context351.t0));
                      return _context351.abrupt("return", Promise.resolve(false));

                    case 19:
                    case "end":
                      return _context351.stop();
                  }
                }
              }, _callee351, this, [[2, 15]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getFEToken",
          value: function getFEToken() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee352() {
              var _this152 = this;

              var consM, _yield$this$userDB$qu2, values;

              return regeneratorRuntime.wrap(function _callee352$(_context352) {
                while (1) {
                  switch (_context352.prev = _context352.next) {
                    case 0:
                      this.logger.info('[sqlServ|getFEToken] ()...');

                      consM = function consM(r, x) {
                        var rT, xT;

                        if (r === 's') {
                          rT = '(✔️SUCCESS) ';
                        } else {
                          rT = '(❌ERROR) ';
                        }

                        ;

                        if (x !== null) {
                          xT = ': ' + x;
                        } else {
                          xT = '';
                        }

                        ;
                        return _this152.logger.info('[sqlServ|getFEToken] 🎟️ ' + rT + ' for ' + _this152.deputy.uUK + xT);
                      };

                      _context352.prev = 2;
                      _context352.next = 5;
                      return this.userDB.query('SELECT * FROM firebase_fct WHERE app_uuk = "' + this.deputy.uUK + '"');

                    case 5:
                      _yield$this$userDB$qu2 = _context352.sent;
                      values = _yield$this$userDB$qu2.values;

                      if (!(values.length > 0)) {
                        _context352.next = 12;
                        break;
                      }

                      consM('s', null);
                      return _context352.abrupt("return", Promise.resolve({
                        result: true,
                        data: values[0]['fe_token']
                      }));

                    case 12:
                      consM('e', 'No Matching User (app_uuk)');
                      return _context352.abrupt("return", Promise.resolve({
                        result: true,
                        data: null
                      }));

                    case 14:
                      _context352.next = 20;
                      break;

                    case 16:
                      _context352.prev = 16;
                      _context352.t0 = _context352["catch"](2);
                      consM('e', JSON.stringify(_context352.t0));
                      return _context352.abrupt("return", Promise.resolve({
                        result: false,
                        data: null
                      }));

                    case 20:
                    case "end":
                      return _context352.stop();
                  }
                }
              }, _callee352, this, [[2, 16]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "addSingleItem",
          value: function addSingleItem(resEPName, singleObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee353() {
              var tblN, _yield$this$userDB$qu3, values, aSISQL, rawVals, types, dpTblSchema, i, niceVals, aSIRes;

              return regeneratorRuntime.wrap(function _callee353$(_context353) {
                while (1) {
                  switch (_context353.prev = _context353.next) {
                    case 0:
                      this.logger.info('[sqlServ|addSingleItem] 🔂 ()...');

                      if (!(singleObj.hasOwnProperty('Id') && singleObj.Id && singleObj.Id > 0)) {
                        _context353.next = 39;
                        break;
                      }

                      tblN = _baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources[resEPName];
                      _context353.next = 5;
                      return this.userDB.query('SELECT * FROM ' + tblN + ' WHERE Id=' + singleObj.Id);

                    case 5:
                      _yield$this$userDB$qu3 = _context353.sent;
                      values = _yield$this$userDB$qu3.values;

                      if (!(values.length > 0)) {
                        _context353.next = 12;
                        break;
                      }

                      this.logger.info('[sqlServ|addSingleItem] 🔂 Item with Id #' + singleObj.Id + ' ALREADY EXISTS in ' + tblN);
                      return _context353.abrupt("return", Promise.resolve(true));

                    case 12:
                      _context353.next = 14;
                      return this.insertItemsCMD(resEPName);

                    case 14:
                      aSISQL = _context353.sent;
                      rawVals = [];
                      types = [];
                      dpTblSchema = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables.filter(function (x) {
                        return x.name === tblN;
                      })[0].schema;

                      for (i = 0; i < dpTblSchema.length; i++) {
                        rawVals.push(singleObj[dpTblSchema[i].column]);
                        types.push(dpTblSchema[i].value);
                      }

                      ;
                      _context353.next = 22;
                      return this.insDPTypeCheck(rawVals, types);

                    case 22:
                      niceVals = _context353.sent;
                      _context353.prev = 23;
                      _context353.next = 26;
                      return this.userDB.run(aSISQL, niceVals);

                    case 26:
                      aSIRes = _context353.sent.changes.changes;

                      if (!(aSIRes !== -1)) {
                        _context353.next = 31;
                        break;
                      }

                      return _context353.abrupt("return", Promise.resolve(true));

                    case 31:
                      this.logger.info('[sqlServ|addSingleItem] 🔂 (ERROR): Changes===-1');
                      return _context353.abrupt("return", Promise.resolve(false));

                    case 33:
                      _context353.next = 39;
                      break;

                    case 35:
                      _context353.prev = 35;
                      _context353.t0 = _context353["catch"](23);
                      this.logger.info('[sqlServ|addSingleItem] 🔂 (ERROR): ' + JSON.stringify(_context353.t0));
                      return _context353.abrupt("return", Promise.resolve(false));

                    case 39:
                    case "end":
                      return _context353.stop();
                  }
                }
              }, _callee353, this, [[23, 35]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "setLocalImg",
          value: function setLocalImg(iName, iUri, iSize, iMTime) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee354() {
              var _this153 = this;

              var isIns, sql, vals, setImgRes, xUFs, consM, _yield$this$userDB$qu4, values;

              return regeneratorRuntime.wrap(function _callee354$(_context354) {
                while (1) {
                  switch (_context354.prev = _context354.next) {
                    case 0:
                      this.logger.info('[sqlServ|setLocalImg] 🖼️ ()...');
                      vals = [];
                      xUFs = '';

                      if (iSize !== null) {
                        xUFs = xUFs + ',img_size="' + iSize + '"';
                      }

                      ;

                      if (iMTime !== null) {
                        xUFs = xUFs + ',img_mtime="' + iMTime + '"';
                      }

                      ;

                      consM = function consM(r, x) {
                        var rT, sT, xT;
                        r === 's' ? rT = '(✔️SUCCESS) ' : rT = '(❌ERROR) NOT ';
                        isIns ? sT = 'INSERT' : sT = 'UPDAT';
                        x !== null ? xT = ': ' + x : xT = '';
                        return _this153.logger.info('[sqlServ|setLocalImg] 🖼️ ' + rT + ' ' + sT + 'ED' + xT);
                      };

                      _context354.prev = 8;
                      _context354.next = 11;
                      return this.userDB.query('SELECT * FROM local_images WHERE img_name="' + iName + '"');

                    case 11:
                      _yield$this$userDB$qu4 = _context354.sent;
                      values = _yield$this$userDB$qu4.values;

                      if (values.length > 0) {
                        isIns = false;
                        sql = 'UPDATE local_images SET img_uri="' + iUri + '"' + xUFs + ' WHERE img_name="' + iName + '"';
                      } else {
                        isIns = true;
                        sql = 'INSERT INTO local_images (img_name,img_uri,img_size,img_mtime) VALUES (?,?,?,?)';
                        vals = [iName, iUri, iSize, iMTime];
                      }

                      ;

                      if (!isIns) {
                        _context354.next = 21;
                        break;
                      }

                      _context354.next = 18;
                      return this.userDB.run(sql, vals);

                    case 18:
                      setImgRes = _context354.sent.changes.changes;
                      _context354.next = 24;
                      break;

                    case 21:
                      _context354.next = 23;
                      return this.userDB.run(sql);

                    case 23:
                      setImgRes = _context354.sent.changes.changes;

                    case 24:
                      ;

                      if (!(setImgRes !== -1)) {
                        _context354.next = 30;
                        break;
                      }

                      consM('s', null);
                      return _context354.abrupt("return", Promise.resolve(true));

                    case 30:
                      consM('e', 'Changes===-1');
                      return _context354.abrupt("return", Promise.resolve(false));

                    case 32:
                      _context354.next = 38;
                      break;

                    case 34:
                      _context354.prev = 34;
                      _context354.t0 = _context354["catch"](8);
                      consM('e', JSON.stringify(_context354.t0));
                      return _context354.abrupt("return", Promise.resolve(false));

                    case 38:
                    case "end":
                      return _context354.stop();
                  }
                }
              }, _callee354, this, [[8, 34]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "setLocalDeets",
          value: function setLocalDeets() {
            var _this154 = this;

            this.logger.info('[sqlServ|setLocalDeets] ()...');
            var fnSTime = new Date();
            var gotAll = null;
            var setAll = null;
            var hasC = null;
            var hasDBItem = null;
            var dbDelIds = [];
            var DBI = null;
            var allOArr = ['me', 'my', 'ppl', 'avaMe', 'avaWork'];
            var oNKeys = {
              me: {
                tcol: 'me_obj',
                store: this.deputy.uUK + 'MeData',
                fData: null
              },
              my: {
                tcol: 'my_obj',
                store: this.deputy.uUK + 'MySetupData',
                fData: null
              },
              ppl: {
                tcol: 'ppl_obj',
                store: this.deputy.uUK + 'MyColleagues',
                fData: null
              },
              avaMe: {
                tcol: 'me_ava',
                store: this.deputy.uUK + 'meAvatar',
                fData: null
              },
              avaWork: {
                tcol: 'work_ava',
                store: this.deputy.uUK + 'workAvatar',
                fData: null
              }
            }; // --------------------------------------------------------
            // PRE RUN FUNCTIONS
            // --------------------------------------------------------

            var getUDBDeets = function getUDBDeets() {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this154, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee355() {
                var uLDeetsRes, addLDRes;
                return regeneratorRuntime.wrap(function _callee355$(_context355) {
                  while (1) {
                    switch (_context355.prev = _context355.next) {
                      case 0:
                        _context355.prev = 0;
                        _context355.next = 3;
                        return this.userDB.query('SELECT * FROM local_deets WHERE user_email = "' + this.deputy.userEmail + '"');

                      case 3:
                        uLDeetsRes = _context355.sent;

                        if (!(uLDeetsRes.values.length > 0)) {
                          _context355.next = 10;
                          break;
                        }

                        dbDelIds = uLDeetsRes.values.map(function (dbRow) {
                          return dbRow.id;
                        });
                        this.logger.info('[sqlServ|setLocalDeets] (getUDBDeets) Item for ' + this.deputy.userEmail + ' ✔️FOUND in local_deets table.');
                        return _context355.abrupt("return", Promise.resolve({
                          result: true,
                          data: uLDeetsRes.values[0]
                        }));

                      case 10:
                        this.logger.info('[sqlServ|setLocalDeets] (getUDBDeets) Item for ' + this.deputy.userEmail + ' ❌ NOT FOUND in local_deets table >>> CREATING NOW...');
                        _context355.next = 13;
                        return this.userDB.run('INSERT INTO local_deets (user_email,me_obj,my_obj,ppl_obj,me_ava,work_ava) VALUES (?,?,?,?,?,?)', [this.deputy.userEmail, null, null, null, null, null]);

                      case 13:
                        addLDRes = _context355.sent.changes.changes;

                        if (addLDRes !== -1) {
                          this.logger.info('[sqlServ|setLocalDeets] (getUDBDeets) Add New Item for ' + this.deputy.userEmail + ' - ✔️ SUCCESS');
                        } else {
                          this.logger.info('[sqlServ|setLocalDeets] (getUDBDeets) Add New Item for ' + this.deputy.userEmail + ' - ❌ FAILED');
                        }

                        ;
                        return _context355.abrupt("return", Promise.resolve({
                          result: false,
                          data: null
                        }));

                      case 17:
                        _context355.next = 22;
                        break;

                      case 19:
                        _context355.prev = 19;
                        _context355.t0 = _context355["catch"](0);
                        return _context355.abrupt("return", Promise.resolve({
                          result: false,
                          data: JSON.stringify(_context355.t0)
                        }));

                      case 22:
                      case "end":
                        return _context355.stop();
                    }
                  }
                }, _callee355, this, [[0, 19]]);
              }));
            };

            var doPreChecks = function doPreChecks() {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this154, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee356() {
                var checkDBI, checkConn;
                return regeneratorRuntime.wrap(function _callee356$(_context356) {
                  while (1) {
                    switch (_context356.prev = _context356.next) {
                      case 0:
                        this.logger.info('[sqlServ|setLocalDeets] STAGE #0 - PRE - 🟢STARTED...');
                        _context356.next = 3;
                        return getUDBDeets();

                      case 3:
                        checkDBI = _context356.sent;

                        if (checkDBI.result) {
                          hasDBItem = true;
                          DBI = checkDBI.data;
                          this.evServ.publish('localDeetsStage', 'dbCheck');
                        } else {
                          hasDBItem = false;
                          this.evServ.publish('localDeetsStage', 'dbCheck');
                        }

                        ;
                        _context356.next = 8;
                        return this.dS.getHasNetConn();

                      case 8:
                        checkConn = _context356.sent;

                        if (checkConn) {
                          hasC = true;
                          this.evServ.publish('localDeetsStage', 'connCheck');
                        } else {
                          hasC = false;
                          this.evServ.publish('localDeetsStage', 'connCheck');
                        }

                        ;
                        this.logger.info('[sqlServ|setLocalDeets] STAGE #0 - PRE - 🏁FINISHED...');

                      case 12:
                      case "end":
                        return _context356.stop();
                    }
                  }
                }, _callee356, this);
              }));
            }; // --------------------------------------------------------
            // GET DATA FUNCTIONS 
            // --------------------------------------------------------
            // GET API Data 


            var getApiO = function getApiO(oName) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this154, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee357() {
                var _meRes, myRes, pplRes, meARes, workARes;

                return regeneratorRuntime.wrap(function _callee357$(_context357) {
                  while (1) {
                    switch (_context357.prev = _context357.next) {
                      case 0:
                        if (!hasC) {
                          _context357.next = 56;
                          break;
                        }

                        if (!(oName === 'me')) {
                          _context357.next = 12;
                          break;
                        }

                        _context357.next = 4;
                        return this.deputy.getDetailMe();

                      case 4:
                        _meRes = _context357.sent;

                        if (!_meRes.result) {
                          _context357.next = 9;
                          break;
                        }

                        return _context357.abrupt("return", Promise.resolve({
                          result: true,
                          data: _meRes.data
                        }));

                      case 9:
                        return _context357.abrupt("return", Promise.resolve({
                          result: false
                        }));

                      case 10:
                        _context357.next = 54;
                        break;

                      case 12:
                        if (!(oName === 'my')) {
                          _context357.next = 23;
                          break;
                        }

                        _context357.next = 15;
                        return this.deputy.getDetailMy();

                      case 15:
                        myRes = _context357.sent;

                        if (!myRes.result) {
                          _context357.next = 20;
                          break;
                        }

                        return _context357.abrupt("return", Promise.resolve({
                          result: true,
                          data: myRes.data
                        }));

                      case 20:
                        return _context357.abrupt("return", Promise.resolve({
                          result: false
                        }));

                      case 21:
                        _context357.next = 54;
                        break;

                      case 23:
                        if (!(oName === 'ppl')) {
                          _context357.next = 34;
                          break;
                        }

                        _context357.next = 26;
                        return this.deputy.getDetailPpl();

                      case 26:
                        pplRes = _context357.sent;

                        if (!pplRes.result) {
                          _context357.next = 31;
                          break;
                        }

                        return _context357.abrupt("return", Promise.resolve({
                          result: true,
                          data: pplRes.data
                        }));

                      case 31:
                        return _context357.abrupt("return", Promise.resolve({
                          result: false
                        }));

                      case 32:
                        _context357.next = 54;
                        break;

                      case 34:
                        if (!(oName === 'avaMe')) {
                          _context357.next = 45;
                          break;
                        }

                        _context357.next = 37;
                        return this.deputy.quickMeAva();

                      case 37:
                        meARes = _context357.sent;

                        if (!meARes.result) {
                          _context357.next = 42;
                          break;
                        }

                        return _context357.abrupt("return", Promise.resolve({
                          result: true,
                          data: meARes.data
                        }));

                      case 42:
                        return _context357.abrupt("return", Promise.resolve({
                          result: false
                        }));

                      case 43:
                        _context357.next = 54;
                        break;

                      case 45:
                        if (!(oName === 'avaWork')) {
                          _context357.next = 54;
                          break;
                        }

                        _context357.next = 48;
                        return this.deputy.quickWorkAva();

                      case 48:
                        workARes = _context357.sent;

                        if (!workARes.result) {
                          _context357.next = 53;
                          break;
                        }

                        return _context357.abrupt("return", Promise.resolve({
                          result: true,
                          data: workARes.data
                        }));

                      case 53:
                        return _context357.abrupt("return", Promise.resolve({
                          result: false
                        }));

                      case 54:
                        _context357.next = 57;
                        break;

                      case 56:
                        return _context357.abrupt("return", Promise.resolve({
                          result: false
                        }));

                      case 57:
                      case "end":
                        return _context357.stop();
                    }
                  }
                }, _callee357, this);
              }));
            }; // GET Store Data


            var getStoreO = function getStoreO(oName) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this154, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee358() {
                var storeKey, sRes, _storeKey, _sRes, _storeKey2, _sRes2;

                return regeneratorRuntime.wrap(function _callee358$(_context358) {
                  while (1) {
                    switch (_context358.prev = _context358.next) {
                      case 0:
                        if (!(oName === 'avaMe')) {
                          _context358.next = 10;
                          break;
                        }

                        storeKey = oNKeys[oName].store;
                        sRes = this.storeServ.getItem(storeKey);

                        if (!sRes) {
                          _context358.next = 7;
                          break;
                        }

                        return _context358.abrupt("return", Promise.resolve({
                          result: true,
                          data: sRes
                        }));

                      case 7:
                        return _context358.abrupt("return", Promise.resolve({
                          result: false
                        }));

                      case 8:
                        _context358.next = 29;
                        break;

                      case 10:
                        if (!(oName === 'avaWork')) {
                          _context358.next = 20;
                          break;
                        }

                        _storeKey = oNKeys[oName].store;
                        _sRes = this.storeServ.getItem(_storeKey);

                        if (!_sRes) {
                          _context358.next = 17;
                          break;
                        }

                        return _context358.abrupt("return", Promise.resolve({
                          result: true,
                          data: _sRes
                        }));

                      case 17:
                        return _context358.abrupt("return", Promise.resolve({
                          result: false
                        }));

                      case 18:
                        _context358.next = 29;
                        break;

                      case 20:
                        _storeKey2 = oNKeys[oName].store;
                        _context358.next = 23;
                        return this.storeServ.getObject(_storeKey2);

                      case 23:
                        _sRes2 = _context358.sent;

                        if (!_sRes2) {
                          _context358.next = 28;
                          break;
                        }

                        return _context358.abrupt("return", Promise.resolve({
                          result: true,
                          data: _sRes2
                        }));

                      case 28:
                        return _context358.abrupt("return", Promise.resolve({
                          result: false
                        }));

                      case 29:
                      case "end":
                        return _context358.stop();
                    }
                  }
                }, _callee358, this);
              }));
            }; // GET SQL DB Data 


            var getDBIO = function getDBIO(oName) {
              if (hasDBItem) {
                var dbIColStr = oNKeys[oName].tcol;
                var dbIColValue = DBI[dbIColStr];

                if (dbIColValue && dbIColValue.length > 9) {
                  if (oName === 'avaMe' || oName === 'avaWork') {
                    return Promise.resolve({
                      result: true,
                      data: dbIColValue
                    });
                  } else {
                    var isJV = _this154.evServ.isValidJSON(dbIColValue);

                    if (isJV) {
                      var colObj = JSON.parse(dbIColValue);
                      return Promise.resolve({
                        result: true,
                        data: colObj
                      });
                    } else {
                      return Promise.resolve({
                        result: false
                      });
                    }
                  }
                } else {
                  return Promise.resolve({
                    result: false
                  });
                }
              } else {
                _this154.logger.info('[sqlServ|setLocalDeets] (getDIO) - ERROR: hasDBItem=FALSE');

                return Promise.resolve({
                  result: false
                });
              }
            }; // --------------------------------------------------------
            // SET DATA FUNCTIONS 
            // --------------------------------------------------------
            // SET Store Data


            var setStoreO = function setStoreO(oName, oData) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this154, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee359() {
                var sK;
                return regeneratorRuntime.wrap(function _callee359$(_context359) {
                  while (1) {
                    switch (_context359.prev = _context359.next) {
                      case 0:
                        if (!(oName === 'avaMe')) {
                          _context359.next = 6;
                          break;
                        }

                        this.storeServ.setItem(this.deputy.uUK + 'meAvatar', oData);
                        this.logger.info('[sqlServ|setLocalDeets] (🗳️setStoreO) Set LocalDeets Store - ' + this.deputy.uUK + 'meAvatar' + ' - ✔️SUCCESS');
                        return _context359.abrupt("return", Promise.resolve(true));

                      case 6:
                        if (!(oName === 'avaWork')) {
                          _context359.next = 12;
                          break;
                        }

                        this.storeServ.setItem(this.deputy.uUK + 'workAvatar', oData);
                        this.logger.info('[sqlServ|setLocalDeets] (🗳️setStoreO) Set LocalDeets Store - ' + this.deputy.uUK + 'workAvatar' + ' - ✔️SUCCESS');
                        return _context359.abrupt("return", Promise.resolve(true));

                      case 12:
                        sK = oNKeys[oName]['store'];
                        this.storeServ.setObject(sK, oData);
                        this.logger.info('[sqlServ|setLocalDeets] (🗳️setStoreO) Set LocalDeets Store - ' + sK + ' - ✔️SUCCESS');
                        return _context359.abrupt("return", Promise.resolve(true));

                      case 16:
                      case "end":
                        return _context359.stop();
                    }
                  }
                }, _callee359, this);
              }));
            }; // SET SQL DB Data


            var setDBI = function setDBI(oName, oData) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this154, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee360() {
                var dbColName, oDataStr, dbSQLStr, dbSQLVals, sDBIRes;
                return regeneratorRuntime.wrap(function _callee360$(_context360) {
                  while (1) {
                    switch (_context360.prev = _context360.next) {
                      case 0:
                        dbColName = oNKeys[oName].tcol;

                        if (typeof oData !== 'string') {
                          oDataStr = JSON.stringify(oData);
                        } else {
                          oDataStr = oData;
                        }

                        ;
                        dbSQLStr = 'UPDATE local_deets SET ' + dbColName + ' VALUES (?) WHERE user_email = owenlenegan@gmail.com';
                        dbSQLVals = [oDataStr];
                        _context360.prev = 5;
                        _context360.next = 8;
                        return this.userDB.run(dbSQLStr, dbSQLVals);

                      case 8:
                        sDBIRes = _context360.sent;

                        if (!(sDBIRes.changes.changes !== -1)) {
                          _context360.next = 14;
                          break;
                        }

                        this.logger.info('[sqlServ|setLocalDeets] (🗄️setDBI) Set LocalDeets SQLDB - ' + dbColName + ' - ✔️SUCCESS');
                        return _context360.abrupt("return", Promise.resolve(true));

                      case 14:
                        this.logger.info('[sqlServ|setLocalDeets] (🗄️setDBI) Set LocalDeets SQLDB - ' + dbColName + ' - ❌FAILED');
                        return _context360.abrupt("return", Promise.resolve(false));

                      case 16:
                        _context360.next = 22;
                        break;

                      case 18:
                        _context360.prev = 18;
                        _context360.t0 = _context360["catch"](5);
                        this.logger.info('[sqlServ|setLocalDeets] (🗄️setDBI) Set LocalDeets SQLDB - ' + dbColName + ' - ❌FAILED');
                        return _context360.abrupt("return", Promise.resolve(false));

                      case 22:
                      case "end":
                        return _context360.stop();
                    }
                  }
                }, _callee360, this, [[5, 18]]);
              }));
            }; // SET ds.Details Variables


            var setDetailsV = function setDetailsV(oName, oData) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this154, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee361() {
                var _this155 = this;

                var consM, setMeRes, setMyRes, setPplRes;
                return regeneratorRuntime.wrap(function _callee361$(_context361) {
                  while (1) {
                    switch (_context361.prev = _context361.next) {
                      case 0:
                        consM = function consM(r) {
                          var rTxt;
                          r ? rTxt = '✔️SUCCESS' : rTxt = '❌FAILED';

                          _this155.logger.info('[sqlServ|setLocalDeets] (📐setDetailsV) Set LocalDeets Details - ' + oName + ' - ' + rTxt);
                        };

                        if (!(oName === 'me')) {
                          _context361.next = 8;
                          break;
                        }

                        _context361.next = 4;
                        return this.dS.setMe(oData);

                      case 4:
                        setMeRes = _context361.sent;

                        if (setMeRes) {
                          consM(true);
                        } else {
                          consM(false);
                        }

                        _context361.next = 19;
                        break;

                      case 8:
                        if (!(oName === 'my')) {
                          _context361.next = 15;
                          break;
                        }

                        _context361.next = 11;
                        return this.dS.setMy(oData);

                      case 11:
                        setMyRes = _context361.sent;

                        if (setMyRes) {
                          consM(true);
                        } else {
                          consM(false);
                        }

                        _context361.next = 19;
                        break;

                      case 15:
                        _context361.next = 17;
                        return this.dS.setPpl(oData);

                      case 17:
                        setPplRes = _context361.sent;

                        if (setPplRes) {
                          consM(true);
                        } else {
                          consM(false);
                        }

                      case 19:
                        return _context361.abrupt("return", Promise.resolve(true));

                      case 20:
                      case "end":
                        return _context361.stop();
                    }
                  }
                }, _callee361, this);
              }));
            }; // --------------------------------------------------------
            // CORE-GET GET ALL DATA
            // --------------------------------------------------------


            var doLDeetsGet = function doLDeetsGet() {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this154, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee362() {
                var i, dOName, apiDORes, storeDORes, dbDORes, getAResAllOK, getAResArr, resTxtArr, _i31, kN, _resTxtArr, _i32, tOStr, tORes;

                return regeneratorRuntime.wrap(function _callee362$(_context362) {
                  while (1) {
                    switch (_context362.prev = _context362.next) {
                      case 0:
                        this.logger.info('[sqlServ|setLocalDeets] STAGE #1 - GET - 🟢STARTED...');
                        i = 0;

                      case 2:
                        if (!(i < allOArr.length)) {
                          _context362.next = 25;
                          break;
                        }

                        dOName = allOArr[i];
                        _context362.next = 6;
                        return getApiO(dOName);

                      case 6:
                        apiDORes = _context362.sent;

                        if (!apiDORes.result) {
                          _context362.next = 11;
                          break;
                        }

                        oNKeys[dOName].fData = apiDORes.data;
                        _context362.next = 22;
                        break;

                      case 11:
                        _context362.next = 13;
                        return getStoreO(dOName);

                      case 13:
                        storeDORes = _context362.sent;

                        if (!storeDORes) {
                          _context362.next = 18;
                          break;
                        }

                        oNKeys[dOName].fData = storeDORes.data;
                        _context362.next = 22;
                        break;

                      case 18:
                        _context362.next = 20;
                        return getDBIO(dOName);

                      case 20:
                        dbDORes = _context362.sent;

                        if (dbDORes.result) {
                          oNKeys[dOName].fData = dbDORes.data;
                        } else {
                          if (dOName === 'avaMe') {
                            oNKeys[dOName].fData = './../../assets/img/sheriff-tsheet-detail-unknown-sv-ico.png';
                          } else if (dOName === 'avaWork') {
                            oNKeys[dOName].fData = './../../assets/img/sheriff-unknown-company-ico.png';
                          } else {
                            oNKeys[dOName].fData = null;
                          }
                        }

                      case 22:
                        i++;
                        _context362.next = 2;
                        break;

                      case 25:
                        ; // --------------------------------------------------------

                        this.logger.info('[sqlServ|setLocalDeets] STAGE #1 - GET - 🏁FINISHED...');
                        getAResAllOK = true;
                        getAResArr = [];
                        resTxtArr = [];

                        for (_i31 = 0; _i31 < allOArr.length; _i31++) {
                          kN = allOArr[_i31];

                          if (oNKeys[kN].fData !== null) {
                            getAResArr.push(true);
                          } else {
                            getAResArr.push(false);
                            getAResAllOK = false;
                          }
                        }

                        ;

                        if (getAResAllOK) {
                          gotAll = true;
                          this.logger.info('[sqlServ|setLocalDeets] (🕸️GET|RESULT) 💯 GOT ALL DATA (me,my,ppl,avaMe,avaWork)...');
                          this.evServ.publish('localDeetsStage', 'get');
                        } else {
                          gotAll = false;
                          _resTxtArr = [];

                          for (_i32 = 0; _i32 < allOArr.length; _i32++) {
                            tOStr = allOArr[_i32];
                            tORes = String(getAResArr[_i32]);

                            _resTxtArr.push('[' + tOStr.toUpperCase() + ']:' + tORes);
                          }

                          ;
                          this.logger.info('[sqlServ|setLocalDeets] (🕸️GET|RESULT) ❌ Errors: ' + _resTxtArr.join(', '));
                          this.evServ.publish('localDeetsStage', 'get');
                        }

                        ;

                      case 34:
                      case "end":
                        return _context362.stop();
                    }
                  }
                }, _callee362, this);
              }));
            }; // --------------------------------------------------------
            // CORE-SET SET ALL DATA
            // --------------------------------------------------------


            var doLDeetsSet = function doLDeetsSet() {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this154, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee363() {
                var setAllResO, dbVals, i, dOName, dOData, sStoreR, sDTR, _i33, rowId, upDBRes, comboAvaDeetData, storeSetErr, dbSetErr, dtSetErr, _i34, oN, oSTR, oDBR, oDTR;

                return regeneratorRuntime.wrap(function _callee363$(_context363) {
                  while (1) {
                    switch (_context363.prev = _context363.next) {
                      case 0:
                        this.logger.info('[sqlServ|setLocalDeets] STAGE #2 - SET - 🟢STARTED...');
                        setAllResO = {
                          me: {
                            st: null,
                            db: null,
                            dt: null
                          },
                          my: {
                            st: null,
                            db: null,
                            dt: null
                          },
                          ppl: {
                            st: null,
                            db: null,
                            dt: null
                          },
                          avaMe: {
                            st: null,
                            db: null,
                            dt: null
                          },
                          avaWork: {
                            st: null,
                            db: null,
                            dt: null
                          }
                        };
                        dbVals = [];
                        i = 0;

                      case 4:
                        if (!(i < allOArr.length)) {
                          _context363.next = 23;
                          break;
                        }

                        dOName = allOArr[i];
                        dOData = oNKeys[dOName].fData;
                        _context363.next = 9;
                        return setStoreO(dOName, dOData);

                      case 9:
                        sStoreR = _context363.sent;

                        if (sStoreR) {
                          setAllResO[dOName].st = true;
                        } else {
                          setAllResO[dOName].st = false;
                        }

                        ;

                        if (dOData === null) {
                          dbVals.push(null);
                          setAllResO[dOName].db = false;
                        } else {
                          if (typeof dOData !== 'string') {
                            dbVals.push(JSON.stringify(dOData));
                          } else {
                            dbVals.push(dOData);
                          }

                          ;
                          setAllResO[dOName].db = true;
                        }

                        ;

                        if (!(dOName !== 'avaMe' && dOName !== 'avaWork')) {
                          _context363.next = 20;
                          break;
                        }

                        _context363.next = 17;
                        return setDetailsV(dOName, dOData);

                      case 17:
                        sDTR = _context363.sent;

                        if (sDTR) {
                          setAllResO[dOName].dt = true;
                        } else {
                          setAllResO[dOName].dt = false;
                        }

                        ;

                      case 20:
                        i++;
                        _context363.next = 4;
                        break;

                      case 23:
                        ;
                        _i33 = 0;

                      case 25:
                        if (!(_i33 < dbDelIds.length)) {
                          _context363.next = 32;
                          break;
                        }

                        rowId = dbDelIds[_i33];
                        _context363.next = 29;
                        return this.userDB.run('DELETE FROM local_deets WHERE id = ' + rowId + '');

                      case 29:
                        _i33++;
                        _context363.next = 25;
                        break;

                      case 32:
                        ;
                        _context363.next = 35;
                        return this.userDB.run('INSERT OR REPLACE INTO local_deets (user_email,me_obj,my_obj,ppl_obj,me_ava,work_ava) VALUES (?,?,?,?,?,?)', [this.deputy.userEmail, dbVals[0], dbVals[1], dbVals[2], dbVals[3], dbVals[4]]);

                      case 35:
                        upDBRes = _context363.sent.changes.changes;

                        if (oNKeys.avaMe.fData !== null && oNKeys.avaWork.fData !== null) {
                          comboAvaDeetData = {
                            me: oNKeys.avaMe.fData,
                            work: oNKeys.avaWork.fData
                          };
                          this.dS.setAvas(comboAvaDeetData);
                          setAllResO.avaMe.dt = true;
                          setAllResO.avaWork.dt = true;
                        } else {
                          setAllResO.avaMe.dt = false;
                          setAllResO.avaWork.dt = false;
                        }

                        ;
                        this.logger.info('[sqlServ|setLocalDeets] STAGE #2 - SET - 🏁FINISHED...');
                        storeSetErr = [];
                        dbSetErr = [];
                        dtSetErr = [];

                        for (_i34 = 0; _i34 < allOArr.length; _i34++) {
                          oN = allOArr[_i34];
                          oSTR = setAllResO[oN].st;

                          if (!oSTR) {
                            storeSetErr.push(oN);
                          }

                          ;
                          oDBR = setAllResO[oN].db;

                          if (!oDBR) {
                            dbSetErr.push(oN);
                          }

                          ;
                          oDTR = setAllResO[oN].dt;

                          if (!oDTR) {
                            dtSetErr.push(oN);
                          }

                          ;
                        }

                        ;

                        if (storeSetErr.length === 0 && dbSetErr.length === 0 && dtSetErr.length === 0) {
                          this.logger.info('[sqlServ|setLocalDeets] (📐SET|RESULT) 💯 SET ALL DATA (me,my,ppl,avaMe,avaWork) for ALL SOURCES (details,store,db)');
                          setAll = true;
                          this.evServ.publish('localDeetsStage', 'set');
                        } else {
                          if (storeSetErr.length > 0) {
                            this.logger.info('[sqlServ|setLocalDeets] (📐SET|ERROR|Storage): ❌ ' + storeSetErr.join(', '));
                          }

                          ;

                          if (dbSetErr.length > 0) {
                            this.logger.info('[sqlServ|setLocalDeets] (📐SET|ERROR|SQLite/DB): ❌ ' + dbSetErr.join(', '));
                          }

                          ;

                          if (dtSetErr.length > 0) {
                            this.logger.info('[sqlServ|setLocalDeets] (📐SET|ERROR|Details): ❌ ' + dtSetErr.join(', '));
                          }

                          ;
                          setAll = false;
                          this.evServ.publish('localDeetsStage', 'set');
                        }

                      case 45:
                      case "end":
                        return _context363.stop();
                    }
                  }
                }, _callee363, this);
              }));
            }; // ----------------------------------------------------


            var stageCount = 0;
            this.evServ.subscribe('localDeetsStage', function (stageN) {
              stageCount++;

              if (stageCount === 2) {
                doLDeetsGet();
              }

              ;

              if (stageN === 'get') {
                doLDeetsSet();
              }

              ;

              if (stageN === 'set') {
                _this154.evServ.publish('setLocalDeetsDone', true);

                _this154.evServ.destroy('setLocalDeetsDone');

                var fnDurSecs = function fnDurSecs() {
                  var dStr;

                  var ms = _this154.evServ.getDur(fnSTime);

                  ms > 1000 ? dStr = (ms / 1000).toFixed(2) + 's' : dStr = ms + 'ms';
                  return dStr;
                };

                var finalResTxt;

                if (gotAll && setAll) {
                  finalResTxt = '(✅FINAL|RESULT): 💯PERFECT💯 >>> ';
                } else {
                  finalResTxt = '(❎FINAL|RESULT): 😭ERRORS😭 >>> ';
                }

                ;

                _this154.logger.info('[sqlServ|setLocalDeets] ' + finalResTxt + '🏁⏲️🏁 (TOTAL TIME): ' + fnDurSecs());
              }
            });
            doPreChecks();
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "installBU",
          value: function installBU() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee365() {
              var _this156 = this;

              var insFileSize;
              return regeneratorRuntime.wrap(function _callee365$(_context365) {
                while (1) {
                  switch (_context365.prev = _context365.next) {
                    case 0:
                      _context365.next = 2;
                      return this.fsServ.stat(this.fsServ.phoneFS, 'Sheriff/backups/' + this.deputy.uUK + 'dbSQLite.db');

                    case 2:
                      insFileSize = _context365.sent.data.size;
                      this.logger.info('[sqlServ|installBU] Install DB Size = ' + insFileSize);
                      this.fsServ.copyByPath('/sdcard/Android/data/dev.zer0ne.sheriff/files/Sheriff/backups/' + this.deputy.uUK + 'dbSQLite.db', '/data/data/dev.zer0ne.sheriff/databases/' + this.deputy.uUK + 'dbSQLite.db');
                      setTimeout(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this156, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee364() {
                          var checkFileSize;
                          return regeneratorRuntime.wrap(function _callee364$(_context364) {
                            while (1) {
                              switch (_context364.prev = _context364.next) {
                                case 0:
                                  _context364.next = 2;
                                  return this.fsServ.stat(null, '/data/data/dev.zer0ne.sheriff/databases/' + this.deputy.uUK + 'dbSQLite.db');

                                case 2:
                                  checkFileSize = _context364.sent.data.size;

                                  if (checkFileSize === insFileSize) {
                                    this.logger.info('[sqlServ|installBU] (Size Check): ' + insFileSize + ' vs ' + checkFileSize + ' = SUCCESS!');
                                    this.evServ.publish('installBUDBDone', true);
                                  } else {
                                    this.logger.info('[sqlServ|installBU] (Size Check): ' + insFileSize + ' vs ' + checkFileSize + ' = FAIL!');
                                    this.evServ.publish('installBUDBDone', false);
                                  }

                                case 4:
                                case "end":
                                  return _context364.stop();
                              }
                            }
                          }, _callee364, this);
                        }));
                      }, 1000);

                    case 6:
                    case "end":
                      return _context365.stop();
                  }
                }
              }, _callee365, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "installFireBU",
          value: function installFireBU() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee367() {
              var _this157 = this;

              var insFileSize;
              return regeneratorRuntime.wrap(function _callee367$(_context367) {
                while (1) {
                  switch (_context367.prev = _context367.next) {
                    case 0:
                      _context367.next = 2;
                      return this.fsServ.stat(this.fsServ.phoneFS, 'Sheriff/backups/fireBUInstall.db');

                    case 2:
                      insFileSize = _context367.sent.data.size;
                      this.logger.info('[sqlServ|installBU] Install DB Size = ' + insFileSize);
                      this.fsServ.copyByPath('/sdcard/Android/data/dev.zer0ne.sheriff/files/Sheriff/backups/fireBUInstall.db', '/data/data/dev.zer0ne.sheriff/databases/' + this.deputy.uUK + 'dbSQLite.db');
                      setTimeout(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this157, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee366() {
                          var checkFileSize;
                          return regeneratorRuntime.wrap(function _callee366$(_context366) {
                            while (1) {
                              switch (_context366.prev = _context366.next) {
                                case 0:
                                  _context366.next = 2;
                                  return this.fsServ.stat(null, '/data/data/dev.zer0ne.sheriff/databases/' + this.deputy.uUK + 'dbSQLite.db');

                                case 2:
                                  checkFileSize = _context366.sent.data.size;

                                  if (checkFileSize === insFileSize) {
                                    this.logger.info('[sqlServ|installBU] (Size Check): ' + insFileSize + ' vs ' + checkFileSize + ' = SUCCESS!');
                                    this.evServ.publish('installBUDBDone', true);
                                  } else {
                                    this.logger.info('[sqlServ|installBU] (Size Check): ' + insFileSize + ' vs ' + checkFileSize + ' = FAIL!');
                                    this.evServ.publish('installBUDBDone', false);
                                  }

                                case 4:
                                case "end":
                                  return _context366.stop();
                              }
                            }
                          }, _callee366, this);
                        }));
                      }, 1000);

                    case 6:
                    case "end":
                      return _context367.stop();
                  }
                }
              }, _callee367, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "revertDB",
          value: function revertDB() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee369() {
              var _this158 = this;

              var revFileSize;
              return regeneratorRuntime.wrap(function _callee369$(_context369) {
                while (1) {
                  switch (_context369.prev = _context369.next) {
                    case 0:
                      _context369.next = 2;
                      return this.fsServ.stat(this.fsServ.phoneFS, 'Sheriff/db/revert.db');

                    case 2:
                      revFileSize = _context369.sent.data.size;
                      this.logger.info('[sqlServ|revertDB] Revert DB Size = ' + revFileSize);
                      this.fsServ.copyByPath('/sdcard/Android/data/dev.zer0ne.sheriff/files/Sheriff/db/revert.db', '/data/data/dev.zer0ne.sheriff/databases/' + this.deputy.uUK + 'dbSQLite.db');
                      setTimeout(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this158, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee368() {
                          var checkFileSize;
                          return regeneratorRuntime.wrap(function _callee368$(_context368) {
                            while (1) {
                              switch (_context368.prev = _context368.next) {
                                case 0:
                                  _context368.next = 2;
                                  return this.fsServ.stat(null, '/data/data/dev.zer0ne.sheriff/databases/' + this.deputy.uUK + 'dbSQLite.db');

                                case 2:
                                  checkFileSize = _context368.sent.data.size;

                                  if (checkFileSize === revFileSize) {
                                    this.logger.info('[sqlServ|revertDB] (Size Check): ' + revFileSize + ' vs ' + checkFileSize + ' = SUCCESS!');
                                    this.storeServ.removeItem('newDBInstall');
                                    this.evServ.showToast('warning', 'DB Reverted - Restart Sheriff!');
                                    setTimeout(function () {
                                      _capacitor_app__WEBPACK_IMPORTED_MODULE_9__.App.exitApp();
                                    }, 2000);
                                  } else {
                                    this.logger.info('[sqlServ|revertDB] (Size Check): ' + revFileSize + ' vs ' + checkFileSize + ' = FAIL!');
                                    this.storeServ.removeItem('newDBInstall');
                                    this.evServ.showToast('error', 'Error Reverting DB');
                                  }

                                case 4:
                                case "end":
                                  return _context368.stop();
                              }
                            }
                          }, _callee368, this);
                        }));
                      }, 1000);

                    case 6:
                    case "end":
                      return _context369.stop();
                  }
                }
              }, _callee369, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "createRevertDB",
          value: function createRevertDB() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee371() {
              var _this159 = this;

              var revertPath, cpCheck;
              return regeneratorRuntime.wrap(function _callee371$(_context371) {
                while (1) {
                  switch (_context371.prev = _context371.next) {
                    case 0:
                      this.logger.info('[sqlServ|createRevertDB] ()...');
                      _context371.next = 3;
                      return this.fsServ.stat(this.fsServ.phoneFS, 'Sheriff/db');

                    case 3:
                      _context371.t0 = _context371.sent.data.uri;
                      revertPath = _context371.t0 + '/revert.db';
                      cpCheck = setInterval(function () {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this159, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee370() {
                          var rvData;
                          return regeneratorRuntime.wrap(function _callee370$(_context370) {
                            while (1) {
                              switch (_context370.prev = _context370.next) {
                                case 0:
                                  _context370.next = 2;
                                  return this.fsServ.stat(this.fsServ.phoneFS, 'Sheriff/db/revert.db');

                                case 2:
                                  rvData = _context370.sent.data;

                                  if (rvData !== null) {
                                    clearInterval(cpCheck);
                                    this.evServ.publish('cpRevertDBDone', rvData);
                                  }

                                case 4:
                                case "end":
                                  return _context370.stop();
                              }
                            }
                          }, _callee370, this);
                        }));
                      }, 250);
                      this.fsServ.copyByPath('/data/data/dev.zer0ne.sheriff/databases/' + this.deputy.uUK + 'dbSQLite.db', revertPath);

                    case 7:
                    case "end":
                      return _context371.stop();
                  }
                }
              }, _callee371, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "createConnection",
          value: function createConnection(database, encrypted, mode, version) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee372() {
              var userDB;
              return regeneratorRuntime.wrap(function _callee372$(_context372) {
                while (1) {
                  switch (_context372.prev = _context372.next) {
                    case 0:
                      this.logger.info('[sqlServ|createConnection] (' + database + ', ' + encrypted + ', ' + mode + ', ' + ', ' + version + ')...');
                      _context372.prev = 1;
                      _context372.next = 4;
                      return this.mySQL.createConnection(database, encrypted, mode, version);

                    case 4:
                      userDB = _context372.sent;

                      if (!(userDB !== null)) {
                        _context372.next = 9;
                        break;
                      }

                      return _context372.abrupt("return", Promise.resolve(userDB));

                    case 9:
                      return _context372.abrupt("return", Promise.reject(new Error('[sqlServ|createConnection] (Error): No Connection Returned for ' + database)));

                    case 10:
                      _context372.next = 15;
                      break;

                    case 12:
                      _context372.prev = 12;
                      _context372.t0 = _context372["catch"](1);
                      return _context372.abrupt("return", Promise.reject(_context372.t0));

                    case 15:
                    case "end":
                      return _context372.stop();
                  }
                }
              }, _callee372, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "isConnection",
          value: function isConnection(dbName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee373() {
              var isCRes;
              return regeneratorRuntime.wrap(function _callee373$(_context373) {
                while (1) {
                  switch (_context373.prev = _context373.next) {
                    case 0:
                      this.logger.info('[sqlServ|isConnection] (' + dbName + ')...');
                      _context373.prev = 1;
                      _context373.next = 4;
                      return this.mySQL.isConnection(dbName);

                    case 4:
                      isCRes = _context373.sent;
                      return _context373.abrupt("return", Promise.resolve(isCRes.result));

                    case 8:
                      _context373.prev = 8;
                      _context373.t0 = _context373["catch"](1);
                      return _context373.abrupt("return", Promise.reject(_context373.t0));

                    case 11:
                    case "end":
                      return _context373.stop();
                  }
                }
              }, _callee373, this, [[1, 8]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "retrieveConnection",
          value: function retrieveConnection(database) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee374() {
              return regeneratorRuntime.wrap(function _callee374$(_context374) {
                while (1) {
                  switch (_context374.prev = _context374.next) {
                    case 0:
                      this.logger.info('[sqlServ|retrieveConnection] (' + database + ')...');
                      _context374.prev = 1;
                      _context374.t0 = Promise;
                      _context374.next = 5;
                      return this.mySQL.retrieveConnection(database);

                    case 5:
                      _context374.t1 = _context374.sent;
                      return _context374.abrupt("return", _context374.t0.resolve.call(_context374.t0, _context374.t1));

                    case 9:
                      _context374.prev = 9;
                      _context374.t2 = _context374["catch"](1);
                      return _context374.abrupt("return", Promise.reject(_context374.t2));

                    case 12:
                    case "end":
                      return _context374.stop();
                  }
                }
              }, _callee374, this, [[1, 9]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "retrieveAllConnections",
          value: function retrieveAllConnections() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee375() {
              var _this160 = this;

              var myConns, keys, connCount;
              return regeneratorRuntime.wrap(function _callee375$(_context375) {
                while (1) {
                  switch (_context375.prev = _context375.next) {
                    case 0:
                      this.logger.info('[sqlServ|retrieveAllConnections] ()...');
                      _context375.prev = 1;
                      _context375.next = 4;
                      return this.mySQL.retrieveAllConnections();

                    case 4:
                      myConns = _context375.sent;
                      keys = _toConsumableArray(myConns.keys());

                      if (!(keys.length > 0)) {
                        _context375.next = 13;
                        break;
                      }

                      connCount = 0;
                      this.logger.info('[sqlServ|retrieveAllConnections] Found [' + keys.length + '] Connections:');
                      keys.forEach(function (value) {
                        connCount++;

                        _this160.logger.info('---> [#' + connCount + '] ' + value);
                      });
                      return _context375.abrupt("return", Promise.resolve(myConns));

                    case 13:
                      this.logger.info('[sqlServ|retrieveAllConnections] No Connections Found.');
                      return _context375.abrupt("return", Promise.resolve(null));

                    case 15:
                      _context375.next = 20;
                      break;

                    case 17:
                      _context375.prev = 17;
                      _context375.t0 = _context375["catch"](1);
                      return _context375.abrupt("return", Promise.reject(_context375.t0));

                    case 20:
                    case "end":
                      return _context375.stop();
                  }
                }
              }, _callee375, this, [[1, 17]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeConnection",
          value: function closeConnection(database) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee376() {
              return regeneratorRuntime.wrap(function _callee376$(_context376) {
                while (1) {
                  switch (_context376.prev = _context376.next) {
                    case 0:
                      this.logger.info('[sqlServ|closeConnection] (' + database + ')...');
                      _context376.prev = 1;
                      _context376.next = 4;
                      return this.mySQL.closeConnection(database);

                    case 4:
                      return _context376.abrupt("return", Promise.resolve());

                    case 7:
                      _context376.prev = 7;
                      _context376.t0 = _context376["catch"](1);
                      return _context376.abrupt("return", Promise.reject(_context376.t0));

                    case 10:
                    case "end":
                      return _context376.stop();
                  }
                }
              }, _callee376, this, [[1, 7]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "closeAllConnections",
          value: function closeAllConnections() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee377() {
              return regeneratorRuntime.wrap(function _callee377$(_context377) {
                while (1) {
                  switch (_context377.prev = _context377.next) {
                    case 0:
                      this.logger.info('[sqlServ|closeAllConnections] ()...');
                      _context377.prev = 1;
                      _context377.t0 = Promise;
                      _context377.next = 5;
                      return this.mySQL.closeAllConnections();

                    case 5:
                      _context377.t1 = _context377.sent;
                      return _context377.abrupt("return", _context377.t0.resolve.call(_context377.t0, _context377.t1));

                    case 9:
                      _context377.prev = 9;
                      _context377.t2 = _context377["catch"](1);
                      return _context377.abrupt("return", Promise.reject(_context377.t2));

                    case 12:
                    case "end":
                      return _context377.stop();
                  }
                }
              }, _callee377, this, [[1, 9]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "isDBExists",
          value: function isDBExists() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee378() {
              var isDBRes;
              return regeneratorRuntime.wrap(function _callee378$(_context378) {
                while (1) {
                  switch (_context378.prev = _context378.next) {
                    case 0:
                      this.logger.info('[sqlServ|isDBExists] ()...');
                      _context378.prev = 1;
                      _context378.next = 4;
                      return this.userDB.isExists();

                    case 4:
                      isDBRes = _context378.sent;
                      return _context378.abrupt("return", Promise.resolve(isDBRes.result));

                    case 8:
                      _context378.prev = 8;
                      _context378.t0 = _context378["catch"](1);
                      return _context378.abrupt("return", Promise.reject(_context378.t0));

                    case 11:
                    case "end":
                      return _context378.stop();
                  }
                }
              }, _callee378, this, [[1, 8]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "isDatabase",
          value: function isDatabase(dbName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee379() {
              var isDBRes;
              return regeneratorRuntime.wrap(function _callee379$(_context379) {
                while (1) {
                  switch (_context379.prev = _context379.next) {
                    case 0:
                      this.logger.info('[sqlServ|isDatabase] (' + dbName + ')...');
                      _context379.prev = 1;
                      _context379.next = 4;
                      return this.mySQL.isDatabase(dbName);

                    case 4:
                      isDBRes = _context379.sent;
                      return _context379.abrupt("return", Promise.resolve(isDBRes.result));

                    case 8:
                      _context379.prev = 8;
                      _context379.t0 = _context379["catch"](1);
                      return _context379.abrupt("return", Promise.reject(_context379.t0));

                    case 11:
                    case "end":
                      return _context379.stop();
                  }
                }
              }, _callee379, this, [[1, 8]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "isDBOpen",
          value: function isDBOpen(dbName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee380() {
              var gotDBConn, isDBOpenRes;
              return regeneratorRuntime.wrap(function _callee380$(_context380) {
                while (1) {
                  switch (_context380.prev = _context380.next) {
                    case 0:
                      this.logger.info('[sqlServ|isDBOpen] (' + dbName + ')...');
                      _context380.next = 3;
                      return this.isConnection(dbName);

                    case 3:
                      gotDBConn = _context380.sent;

                      if (!gotDBConn) {
                        _context380.next = 17;
                        break;
                      }

                      _context380.prev = 5;
                      _context380.next = 8;
                      return this.userDB.isDBOpen();

                    case 8:
                      isDBOpenRes = _context380.sent;
                      return _context380.abrupt("return", Promise.resolve(isDBOpenRes.result));

                    case 12:
                      _context380.prev = 12;
                      _context380.t0 = _context380["catch"](5);
                      return _context380.abrupt("return", Promise.reject(_context380.t0));

                    case 15:
                      _context380.next = 19;
                      break;

                    case 17:
                      this.logger.info('[sqlServ|isDBOpen] (Abort) No Conn to UDB - Unable to Check - Returning FALSE...');
                      return _context380.abrupt("return", Promise.resolve(false));

                    case 19:
                    case "end":
                      return _context380.stop();
                  }
                }
              }, _callee380, this, [[5, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getDatabaseList",
          value: function getDatabaseList() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee381() {
              return regeneratorRuntime.wrap(function _callee381$(_context381) {
                while (1) {
                  switch (_context381.prev = _context381.next) {
                    case 0:
                      this.logger.info('[sqlServ|getDatabaseList] ()...');
                      _context381.prev = 1;
                      _context381.t0 = Promise;
                      _context381.next = 5;
                      return this.mySQL.getDatabaseList();

                    case 5:
                      _context381.t1 = _context381.sent;
                      return _context381.abrupt("return", _context381.t0.resolve.call(_context381.t0, _context381.t1));

                    case 9:
                      _context381.prev = 9;
                      _context381.t2 = _context381["catch"](1);
                      return _context381.abrupt("return", Promise.reject(_context381.t2));

                    case 12:
                    case "end":
                      return _context381.stop();
                  }
                }
              }, _callee381, this, [[1, 9]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "deleteDatabase",
          value: function deleteDatabase(db) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee382() {
              var ret;
              return regeneratorRuntime.wrap(function _callee382$(_context382) {
                while (1) {
                  switch (_context382.prev = _context382.next) {
                    case 0:
                      _context382.prev = 0;
                      _context382.next = 3;
                      return db.isExists();

                    case 3:
                      ret = _context382.sent;

                      if (!ret.result) {
                        _context382.next = 10;
                        break;
                      }

                      _context382.next = 7;
                      return db["delete"]();

                    case 7:
                      return _context382.abrupt("return", Promise.resolve());

                    case 10:
                      return _context382.abrupt("return", Promise.resolve());

                    case 11:
                      _context382.next = 16;
                      break;

                    case 13:
                      _context382.prev = 13;
                      _context382.t0 = _context382["catch"](0);
                      return _context382.abrupt("return", Promise.reject(_context382.t0));

                    case 16:
                    case "end":
                      return _context382.stop();
                  }
                }
              }, _callee382, null, [[0, 13]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "deleteOldDatabases",
          value: function deleteOldDatabases(folderPath) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee383() {
              return regeneratorRuntime.wrap(function _callee383$(_context383) {
                while (1) {
                  switch (_context383.prev = _context383.next) {
                    case 0:
                      this.logger.info('[sqlServ|deleteOldDatabases] (' + folderPath + ')...');
                      _context383.prev = 1;
                      _context383.t0 = Promise;
                      _context383.next = 5;
                      return this.mySQL.deleteOldDatabases(folderPath);

                    case 5:
                      _context383.t1 = _context383.sent;
                      return _context383.abrupt("return", _context383.t0.resolve.call(_context383.t0, _context383.t1));

                    case 9:
                      _context383.prev = 9;
                      _context383.t2 = _context383["catch"](1);
                      return _context383.abrupt("return", Promise.reject(_context383.t2));

                    case 12:
                    case "end":
                      return _context383.stop();
                  }
                }
              }, _callee383, this, [[1, 9]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "isTableExists",
          value: function isTableExists(tableName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee384() {
              var tblExistRes;
              return regeneratorRuntime.wrap(function _callee384$(_context384) {
                while (1) {
                  switch (_context384.prev = _context384.next) {
                    case 0:
                      this.logger.info('[sqlServ|isTableExists] ()...');
                      _context384.prev = 1;
                      _context384.next = 4;
                      return this.userDB.isTable(tableName);

                    case 4:
                      tblExistRes = _context384.sent;
                      return _context384.abrupt("return", Promise.resolve(tblExistRes.result));

                    case 8:
                      _context384.prev = 8;
                      _context384.t0 = _context384["catch"](1);
                      return _context384.abrupt("return", Promise.reject(_context384.t0));

                    case 11:
                    case "end":
                      return _context384.stop();
                  }
                }
              }, _callee384, this, [[1, 8]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "listUDBTables",
          value: function listUDBTables() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee385() {
              var tbls, _yield$this$userDB$qu5, values, i;

              return regeneratorRuntime.wrap(function _callee385$(_context385) {
                while (1) {
                  switch (_context385.prev = _context385.next) {
                    case 0:
                      this.logger.info('[sqlServ|listUDBTables] ()...');
                      tbls = [];
                      _context385.prev = 2;
                      _context385.next = 5;
                      return this.userDB.query('SELECT name FROM sqlite_master WHERE type="table"');

                    case 5:
                      _yield$this$userDB$qu5 = _context385.sent;
                      values = _yield$this$userDB$qu5.values;

                      if (values.length > 0) {
                        for (i = 0; i < values.length; i++) {
                          tbls.push(values[i].name);
                        }
                      }

                      ;
                      return _context385.abrupt("return", Promise.resolve(tbls));

                    case 12:
                      _context385.prev = 12;
                      _context385.t0 = _context385["catch"](2);
                      return _context385.abrupt("return", Promise.reject(new Error('[sqlServ|listUDBTables] (Error): ' + JSON.stringify(_context385.t0))));

                    case 15:
                    case "end":
                      return _context385.stop();
                  }
                }
              }, _callee385, this, [[2, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "listADBTables",
          value: function listADBTables() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee386() {
              var tbls, _yield$this$authDB$qu, values, i;

              return regeneratorRuntime.wrap(function _callee386$(_context386) {
                while (1) {
                  switch (_context386.prev = _context386.next) {
                    case 0:
                      this.logger.info('[sqlServ|listADBTables] ()...');
                      tbls = [];
                      _context386.prev = 2;
                      _context386.next = 5;
                      return this.authDB.query('SELECT name FROM sqlite_master WHERE type="table"');

                    case 5:
                      _yield$this$authDB$qu = _context386.sent;
                      values = _yield$this$authDB$qu.values;

                      if (values.length > 0) {
                        for (i = 0; i < values.length; i++) {
                          tbls.push(values[i].name);
                        }
                      }

                      ;
                      return _context386.abrupt("return", Promise.resolve(tbls));

                    case 12:
                      _context386.prev = 12;
                      _context386.t0 = _context386["catch"](2);
                      return _context386.abrupt("return", Promise.reject(new Error('[sqlServ|listADBTables] (Error): ' + JSON.stringify(_context386.t0))));

                    case 15:
                    case "end":
                      return _context386.stop();
                  }
                }
              }, _callee386, this, [[2, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getAllCompanies",
          value: function getAllCompanies() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee387() {
              var _yield$this$userDB$qu6, values;

              return regeneratorRuntime.wrap(function _callee387$(_context387) {
                while (1) {
                  switch (_context387.prev = _context387.next) {
                    case 0:
                      this.logger.info('[sqlServ|getAllCompanies] ()...');
                      _context387.prev = 1;
                      _context387.next = 4;
                      return this.userDB.query('SELECT * FROM companies');

                    case 4:
                      _yield$this$userDB$qu6 = _context387.sent;
                      values = _yield$this$userDB$qu6.values;

                      if (!(values.length > 0)) {
                        _context387.next = 10;
                        break;
                      }

                      return _context387.abrupt("return", Promise.resolve(values));

                    case 10:
                      return _context387.abrupt("return", Promise.resolve([]));

                    case 11:
                      _context387.next = 16;
                      break;

                    case 13:
                      _context387.prev = 13;
                      _context387.t0 = _context387["catch"](1);
                      return _context387.abrupt("return", Promise.resolve([]));

                    case 16:
                    case "end":
                      return _context387.stop();
                  }
                }
              }, _callee387, this, [[1, 13]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "cleanCloseUserDB",
          value: function cleanCloseUserDB() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee388() {
              return regeneratorRuntime.wrap(function _callee388$(_context388) {
                while (1) {
                  switch (_context388.prev = _context388.next) {
                    case 0:
                      this.logger.info('[sqlServ|cleanCloseUserDB] ()...');
                      _context388.prev = 1;
                      this.userDB.close();
                      this.dS.setUDBIsOpen(false);

                      if (this.dS.getUDBIsOpen()) {
                        this.userDB.close();
                        this.dS.setUDBIsOpen(false);
                      }

                      if (this.dS.getIsUserConnOpen()) {
                        this.mySQL.closeConnection(this.deputy.uUK + 'db');
                        this.dS.setIsUserConnOpen(false);
                      }

                      this.logger.info("\uD83D\uDC9B".repeat(10));
                      return _context388.abrupt("return", Promise.resolve(true));

                    case 10:
                      _context388.prev = 10;
                      _context388.t0 = _context388["catch"](1);
                      this.logger.info('[sqlServ|cleanCloseUserDB] (ERROR): ' + _context388.t0.message);
                      return _context388.abrupt("return", Promise.resolve(false));

                    case 14:
                    case "end":
                      return _context388.stop();
                  }
                }
              }, _callee388, this, [[1, 10]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "addSQLiteSuffix",
          value: function addSQLiteSuffix(folderPath) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee389() {
              return regeneratorRuntime.wrap(function _callee389$(_context389) {
                while (1) {
                  switch (_context389.prev = _context389.next) {
                    case 0:
                      this.logger.info('[sqlServ|addSQLiteSuffix] (' + folderPath + ')...');
                      _context389.prev = 1;
                      _context389.t0 = Promise;
                      _context389.next = 5;
                      return this.mySQL.addSQLiteSuffix(folderPath);

                    case 5:
                      _context389.t1 = _context389.sent;
                      return _context389.abrupt("return", _context389.t0.resolve.call(_context389.t0, _context389.t1));

                    case 9:
                      _context389.prev = 9;
                      _context389.t2 = _context389["catch"](1);
                      return _context389.abrupt("return", Promise.reject(_context389.t2));

                    case 12:
                    case "end":
                      return _context389.stop();
                  }
                }
              }, _callee389, this, [[1, 9]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "echo",
          value: function echo(value) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee390() {
              return regeneratorRuntime.wrap(function _callee390$(_context390) {
                while (1) {
                  switch (_context390.prev = _context390.next) {
                    case 0:
                      console.log('[sqlServ|dbEcho] (' + this.mySQL + ')');

                      if (!(this.mySQL != null)) {
                        _context390.next = 7;
                        break;
                      }

                      _context390.next = 4;
                      return this.mySQL.echo(value);

                    case 4:
                      return _context390.abrupt("return", _context390.sent);

                    case 7:
                      return _context390.abrupt("return", null);

                    case 8:
                    case "end":
                      return _context390.stop();
                  }
                }
              }, _callee390, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "addUpgradeStatement",
          value: function addUpgradeStatement(database, fromVersion, toVersion, statement, set) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee391() {
              return regeneratorRuntime.wrap(function _callee391$(_context391) {
                while (1) {
                  switch (_context391.prev = _context391.next) {
                    case 0:
                      this.logger.info('[sqlServ|addUpgradeStatement] (' + database + ', ' + fromVersion + ', ' + toVersion + ', ' + statement + ', ' + JSON.stringify(set) + ')...');

                      if (!(this.mySQL !== null)) {
                        _context391.next = 13;
                        break;
                      }

                      _context391.prev = 2;
                      _context391.next = 5;
                      return this.mySQL.addUpgradeStatement(database, fromVersion, toVersion, statement, set ? set : []);

                    case 5:
                      return _context391.abrupt("return", Promise.resolve());

                    case 8:
                      _context391.prev = 8;
                      _context391.t0 = _context391["catch"](2);
                      return _context391.abrupt("return", Promise.reject(_context391.t0));

                    case 11:
                      _context391.next = 14;
                      break;

                    case 13:
                      return _context391.abrupt("return", Promise.reject(new Error('[sqlServ|addUpgradeStatement] (Error): No Connection Open for ' + database)));

                    case 14:
                    case "end":
                      return _context391.stop();
                  }
                }
              }, _callee391, this, [[2, 8]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "isJsonValid",
          value: function isJsonValid(jsonStr) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee392() {
              return regeneratorRuntime.wrap(function _callee392$(_context392) {
                while (1) {
                  switch (_context392.prev = _context392.next) {
                    case 0:
                      this.logger.info('[sqlServ|isJsonValid] (JSON)...');
                      _context392.prev = 1;
                      _context392.t0 = Promise;
                      _context392.next = 5;
                      return _capacitor_community_sqlite__WEBPACK_IMPORTED_MODULE_4__.CapacitorSQLite.isJsonValid({
                        jsonstring: jsonStr
                      });

                    case 5:
                      _context392.t1 = _context392.sent;
                      return _context392.abrupt("return", _context392.t0.resolve.call(_context392.t0, _context392.t1));

                    case 9:
                      _context392.prev = 9;
                      _context392.t2 = _context392["catch"](1);
                      return _context392.abrupt("return", Promise.reject(_context392.t2));

                    case 12:
                    case "end":
                      return _context392.stop();
                  }
                }
              }, _callee392, this, [[1, 9]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "importFromJson",
          value: function importFromJson(jsonStr) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee393() {
              return regeneratorRuntime.wrap(function _callee393$(_context393) {
                while (1) {
                  switch (_context393.prev = _context393.next) {
                    case 0:
                      this.logger.info('[sqlServ|importFromJson] (JSON)...');
                      _context393.prev = 1;
                      _context393.t0 = Promise;
                      _context393.next = 5;
                      return this.mySQL.importFromJson(jsonStr);

                    case 5:
                      _context393.t1 = _context393.sent;
                      return _context393.abrupt("return", _context393.t0.resolve.call(_context393.t0, _context393.t1));

                    case 9:
                      _context393.prev = 9;
                      _context393.t2 = _context393["catch"](1);
                      return _context393.abrupt("return", Promise.reject(_context393.t2));

                    case 12:
                    case "end":
                      return _context393.stop();
                  }
                }
              }, _callee393, this, [[1, 9]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "copyFromAssets",
          value: function copyFromAssets() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee394() {
              return regeneratorRuntime.wrap(function _callee394$(_context394) {
                while (1) {
                  switch (_context394.prev = _context394.next) {
                    case 0:
                      this.logger.info('[sqlServ|copyFromAssets] (JSON)...');

                      if (!(this.mySQL !== null)) {
                        _context394.next = 15;
                        break;
                      }

                      _context394.prev = 2;
                      _context394.t0 = Promise;
                      _context394.next = 6;
                      return this.mySQL.copyFromAssets();

                    case 6:
                      _context394.t1 = _context394.sent;
                      return _context394.abrupt("return", _context394.t0.resolve.call(_context394.t0, _context394.t1));

                    case 10:
                      _context394.prev = 10;
                      _context394.t2 = _context394["catch"](2);
                      return _context394.abrupt("return", Promise.reject(_context394.t2));

                    case 13:
                      _context394.next = 16;
                      break;

                    case 15:
                      return _context394.abrupt("return", Promise.reject(new Error('[sqlServ|copyFromAssets] (Error): No Connection Open.')));

                    case 16:
                    case "end":
                      return _context394.stop();
                  }
                }
              }, _callee394, this, [[2, 10]]);
            }));
          } ///////////////////////////////////////////////////////////////////////////

        }, {
          key: "insertItems",
          value: function insertItems(resEPName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee398() {
              var _this161 = this;

              var rawTableItemArr, rawArrLen, rawItemCount, insertCount, tblValTypes, tblInsertCMD, filtTableItemArr, totalfiltItems, itemRunner, processTasks, _iterator3, _step3, _loop4;

              return regeneratorRuntime.wrap(function _callee398$(_context398) {
                while (1) {
                  switch (_context398.prev = _context398.next) {
                    case 0:
                      this.logger.info('[sqlServ|insertItems] (' + resEPName + ')...');

                      if (!(resEPName === 'SystemUsageTracking')) {
                        _context398.next = 7;
                        break;
                      }

                      _context398.next = 4;
                      return this.storeServ.getObject('fr-' + resEPName);

                    case 4:
                      rawTableItemArr = _context398.sent.slice(0, 5000);
                      _context398.next = 10;
                      break;

                    case 7:
                      _context398.next = 9;
                      return this.storeServ.getObject('fr-' + resEPName);

                    case 9:
                      rawTableItemArr = _context398.sent;

                    case 10:
                      ;
                      rawArrLen = rawTableItemArr.length;
                      rawItemCount = 0;
                      insertCount = 0;
                      _context398.next = 16;
                      return this.valueTypes(resEPName);

                    case 16:
                      tblValTypes = _context398.sent;
                      _context398.next = 19;
                      return this.insertItemsCMD(resEPName);

                    case 19:
                      tblInsertCMD = _context398.sent;
                      filtTableItemArr = [];
                      totalfiltItems = 0; // Process/Insert Fn

                      itemRunner = function itemRunner(filtItem) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this161, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee395() {
                          var totalVals, valCount, thisValsArr, _i35, _Object$keys, thisPropName;

                          return regeneratorRuntime.wrap(function _callee395$(_context395) {
                            while (1) {
                              switch (_context395.prev = _context395.next) {
                                case 0:
                                  totalVals = Object.keys(tblValTypes).length;
                                  valCount = 0;
                                  thisValsArr = [];
                                  _i35 = 0, _Object$keys = Object.keys(tblValTypes);

                                case 4:
                                  if (!(_i35 < _Object$keys.length)) {
                                    _context395.next = 23;
                                    break;
                                  }

                                  thisPropName = _Object$keys[_i35];
                                  valCount++;
                                  thisValsArr.push(filtItem[thisPropName]);

                                  if (!(valCount === totalVals)) {
                                    _context395.next = 20;
                                    break;
                                  }

                                  _context395.prev = 9;
                                  _context395.next = 12;
                                  return this.userDB.run(tblInsertCMD, thisValsArr);

                                case 12:
                                  insertCount++;
                                  processTasks();
                                  _context395.next = 20;
                                  break;

                                case 16:
                                  _context395.prev = 16;
                                  _context395.t0 = _context395["catch"](9);
                                  insertCount++;
                                  processTasks();

                                case 20:
                                  _i35++;
                                  _context395.next = 4;
                                  break;

                                case 23:
                                case "end":
                                  return _context395.stop();
                              }
                            }
                          }, _callee395, this, [[9, 16]]);
                        }));
                      }; // Item Feeder Fn


                      processTasks = function processTasks() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this161, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee396() {
                          var colObj, nextItemObj;
                          return regeneratorRuntime.wrap(function _callee396$(_context396) {
                            while (1) {
                              switch (_context396.prev = _context396.next) {
                                case 0:
                                  if (!(insertCount === totalfiltItems)) {
                                    _context396.next = 20;
                                    break;
                                  }

                                  if (!(resEPName === 'SystemUsageTracking')) {
                                    _context396.next = 5;
                                    break;
                                  }

                                  this.logger.info('[sqlServ|insertItems] - Skipping Delete for SystemUsageTracking...');
                                  _context396.next = 15;
                                  break;

                                case 5:
                                  if (!(resEPName === 'colleague' || resEPName === 'colleagues')) {
                                    _context396.next = 13;
                                    break;
                                  }

                                  _context396.next = 8;
                                  return this.storeServ.getObject('fr-' + resEPName);

                                case 8:
                                  colObj = _context396.sent;
                                  this.storeServ.setObject(this.deputy.uUK + 'MyColleagues', colObj);
                                  this.storeServ.removeItem('fr-' + resEPName);
                                  _context396.next = 15;
                                  break;

                                case 13:
                                  _context396.next = 15;
                                  return this.storeServ.removeItem('fr-' + resEPName);

                                case 15:
                                  ;
                                  this.evServ.publish('frDBIIFinish', {
                                    name: resEPName,
                                    count: insertCount,
                                    total: totalfiltItems
                                  });
                                  this.logger.info("[sqlServ|insertItems] (Finished) \uD83C\uDFC1 Added " + insertCount + '/' + filtTableItemArr.length + ' Items to DB Table: ' + _baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources[resEPName]);
                                  _context396.next = 24;
                                  break;

                                case 20:
                                  this.evServ.publish('frDBIIProg', {
                                    name: resEPName,
                                    count: insertCount,
                                    total: totalfiltItems
                                  });
                                  nextItemObj = filtTableItemArr[insertCount];
                                  _context396.next = 24;
                                  return itemRunner(nextItemObj);

                                case 24:
                                case "end":
                                  return _context396.stop();
                              }
                            }
                          }, _callee396, this);
                        }));
                      }; // Filter Items


                      _iterator3 = _createForOfIteratorHelper(rawTableItemArr);

                      try {
                        _loop4 = function _loop4() {
                          var rawObj = _step3.value;
                          rawItemCount++;
                          var noRawObjKeys = Object.keys(rawObj).length;
                          var rawKeyCount = 0;
                          var wipObj = rawObj;

                          (function () {
                            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this161, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee397() {
                              var _this162 = this;

                              var _loop5, _i36, _Object$entries8;

                              return regeneratorRuntime.wrap(function _callee397$(_context397) {
                                while (1) {
                                  switch (_context397.prev = _context397.next) {
                                    case 0:
                                      _loop5 = function _loop5() {
                                        var _Object$entries8$_i = _slicedToArray(_Object$entries8[_i36], 2),
                                            key = _Object$entries8$_i[0],
                                            value = _Object$entries8$_i[1];

                                        rawKeyCount++; // DPMeta Object Exceptions: Memo/memos

                                        var dpMetaObjExcept = ['Memo'];

                                        if (dpMetaObjExcept.includes(resEPName) && key === '_DPMetaData') {
                                          wipObj[key] = JSON.stringify(value);
                                        } else if (key.includes('_')) {
                                          delete wipObj[key];
                                        } else {
                                          if (typeof value == 'object') {
                                            if (value == null || value == undefined) {
                                              if (tblValTypes[key] === 'string') {
                                                wipObj[key] = String('');
                                              } else {
                                                wipObj[key] = Number(-1);
                                              }
                                            } else {
                                              var isArray = function isArray() {
                                                return Array.isArray(value) ? true : false;
                                              };

                                              var isObject = function isObject() {
                                                return value == Object(value) && !Array.isArray(value) ? true : false;
                                              };

                                              var isPlain = function isPlain() {
                                                var proto = value;

                                                while (Object.getPrototypeOf(proto) !== null) {
                                                  proto = Object.getPrototypeOf(proto);
                                                }

                                                return Object.getPrototypeOf(value) === proto;
                                              };

                                              if (isArray || isObject || isPlain) {
                                                wipObj[key] = JSON.stringify(value);
                                              }

                                              ;
                                            }
                                          }

                                          if (value === 'null' || value === 'undefined') {
                                            if (tblValTypes[key] === 'string') {
                                              wipObj[key] = String('');
                                            } else {
                                              wipObj[key] = Number(-1);
                                            }
                                          }

                                          ;

                                          if (typeof value === 'boolean') {
                                            if (value) {
                                              wipObj[key] = Number(1);
                                            } else {
                                              wipObj[key] = Number(0);
                                            }
                                          }

                                          ;

                                          if (key === 'Date' || key === 'DateTime') {
                                            wipObj[key] = value.toString();
                                          }

                                          ;
                                        }

                                        if (rawKeyCount === noRawObjKeys) {
                                          filtTableItemArr.push(wipObj);
                                        }

                                        ;

                                        if (rawItemCount === rawArrLen && rawKeyCount === noRawObjKeys) {
                                          // Table Items Start
                                          totalfiltItems = filtTableItemArr.length;

                                          _this162.evServ.publish('frDBIIStart', {
                                            name: resEPName,
                                            count: 0,
                                            total: totalfiltItems
                                          });

                                          processTasks();
                                        }
                                      };

                                      for (_i36 = 0, _Object$entries8 = Object.entries(rawObj); _i36 < _Object$entries8.length; _i36++) {
                                        _loop5();
                                      }

                                    case 2:
                                    case "end":
                                      return _context397.stop();
                                  }
                                }
                              }, _callee397);
                            }));
                          })();
                        };

                        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                          _loop4();
                        }
                      } catch (err) {
                        _iterator3.e(err);
                      } finally {
                        _iterator3.f();
                      }

                    case 26:
                    case "end":
                      return _context398.stop();
                  }
                }
              }, _callee398, this);
            }));
          } /////////////////////////////////////////////////////////////////////////////

        }, {
          key: "valueTypes",
          value: function valueTypes(ResEPName) {
            var resTblName = _baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources[ResEPName];

            var resTblSchema = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables.filter(function (x) {
              return x.name === resTblName;
            })[0].schema;

            var resTblTypes = {};

            for (var i = 0; i < resTblSchema.length; i++) {
              var colName = resTblSchema[i].column;
              var colValI = resTblSchema[i].value.split(' ')[0].toLowerCase();
              resTblTypes[colName] = _baseDB__WEBPACK_IMPORTED_MODULE_2__.InsertTypeMap[colValI];
            }

            ;
            return Promise.resolve(resTblTypes);
          } /////////////////////////////////////////////////////////////////////////////

        }, {
          key: "insertItemsCMD",
          value: function insertItemsCMD(ResEPName) {
            var exceptTbl = ['sync', 'deputy_profile'];
            var cTblName;
            var cTblFields = [];

            if (exceptTbl.includes(ResEPName)) {
              cTblName = ResEPName;
            } else {
              cTblName = _baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources[ResEPName];
            }

            ;

            var cTbl = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables.filter(function (x) {
              return x.name === cTblName;
            })[0];

            for (var i = 0; i < cTbl.schema.length; i++) {
              cTblFields.push(cTbl.schema[i].column);
            }

            ;
            return Promise.resolve('INSERT OR REPLACE INTO ' + cTblName + ' (' + cTblFields.join(',').replace(/,\s*$/, '') + ') VALUES (' + '?,'.repeat(cTbl.schema.length).replace(/,\s*$/, '') + ')');
          } /////////////////////////////////////////////////////////////////////////////

        }, {
          key: "addTable",
          value: function addTable(ResEPName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee399() {
              var cTblName, cTbl, cTblFields, hasI, cTblIndexes, i, _i37, cTblCMD, addResTbl;

              return regeneratorRuntime.wrap(function _callee399$(_context399) {
                while (1) {
                  switch (_context399.prev = _context399.next) {
                    case 0:
                      cTblName = _baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources[ResEPName];
                      cTbl = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables.filter(function (x) {
                        return x.name === cTblName;
                      })[0];
                      cTblFields = [];
                      cTblIndexes = [];

                      for (i = 0; i < cTbl.schema.length; i++) {
                        cTblFields.push(cTbl.schema[i].column + ' ' + cTbl.schema[i].value);
                      }

                      ;

                      if (cTbl.indexes) {
                        hasI = true;

                        for (_i37 = 0; _i37 < cTbl.indexes.length; _i37++) {
                          cTblIndexes.push('CREATE INDEX IF NOT EXISTS ' + cTbl.indexes[_i37].name + ' ON ' + cTblName + ' (' + cTbl.indexes[_i37].value + ');');
                        }
                      }

                      ;
                      cTblCMD = 'CREATE TABLE IF NOT EXISTS ' + cTblName + '(' + cTblFields.join(', ').replace(/,\s*$/, '') + ');';
                      hasI ? cTblCMD = cTblCMD + ' ' + cTblIndexes.join(' ') : cTblCMD;
                      _context399.prev = 10;
                      _context399.next = 13;
                      return this.userDB.run(cTblCMD);

                    case 13:
                      addResTbl = _context399.sent;

                      if (!(addResTbl.changes.changes !== -1)) {
                        _context399.next = 16;
                        break;
                      }

                      return _context399.abrupt("return", Promise.resolve(true));

                    case 16:
                      _context399.next = 22;
                      break;

                    case 18:
                      _context399.prev = 18;
                      _context399.t0 = _context399["catch"](10);
                      this.logger.info('[sqlServ|addTable] (Error): ' + _context399.t0);
                      return _context399.abrupt("return", Promise.resolve(false));

                    case 22:
                    case "end":
                      return _context399.stop();
                  }
                }
              }, _callee399, this, [[10, 18]]);
            }));
          } /////////////////////////////////////////////////////////////////////////////

        }, {
          key: "deleteTable",
          value: function deleteTable(ResEPName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee400() {
              var delResTbl;
              return regeneratorRuntime.wrap(function _callee400$(_context400) {
                while (1) {
                  switch (_context400.prev = _context400.next) {
                    case 0:
                      _context400.prev = 0;
                      _context400.next = 3;
                      return this.userDB.run('DROP TABLE IF EXISTS ' + _baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources[ResEPName] + ';');

                    case 3:
                      delResTbl = _context400.sent;

                      if (!(delResTbl.changes.changes !== -1)) {
                        _context400.next = 6;
                        break;
                      }

                      return _context400.abrupt("return", Promise.resolve(true));

                    case 6:
                      _context400.next = 12;
                      break;

                    case 8:
                      _context400.prev = 8;
                      _context400.t0 = _context400["catch"](0);
                      this.logger.info('[sqlServ|delTable] (Error): ' + _context400.t0);
                      return _context400.abrupt("return", Promise.resolve(false));

                    case 12:
                    case "end":
                      return _context400.stop();
                  }
                }
              }, _callee400, this, [[0, 8]]);
            }));
          } ////////////////////////////////////////////////////////////////////////////

        }, {
          key: "deleteItem",
          value: function deleteItem(tableName, uIDCol, idNo) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee401() {
              var deleteCMD, deleteRes;
              return regeneratorRuntime.wrap(function _callee401$(_context401) {
                while (1) {
                  switch (_context401.prev = _context401.next) {
                    case 0:
                      _context401.prev = 0;
                      deleteCMD = 'DELETE FROM ' + tableName + ' WHERE ' + uIDCol + ' = ' + idNo + ';';
                      _context401.next = 4;
                      return this.userDB.run(deleteCMD);

                    case 4:
                      deleteRes = _context401.sent;

                      if (!(deleteRes.changes.changes !== -1)) {
                        _context401.next = 7;
                        break;
                      }

                      return _context401.abrupt("return", Promise.resolve(true));

                    case 7:
                      _context401.next = 12;
                      break;

                    case 9:
                      _context401.prev = 9;
                      _context401.t0 = _context401["catch"](0);
                      return _context401.abrupt("return", Promise.resolve(false));

                    case 12:
                    case "end":
                      return _context401.stop();
                  }
                }
              }, _callee401, this, [[0, 9]]);
            }));
          } ///////////////////////////////////////////////////////////////////////////

        }, {
          key: "deleteAllTasks",
          value: function deleteAllTasks() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee402() {
              var deleteAllCMD, deleteRes;
              return regeneratorRuntime.wrap(function _callee402$(_context402) {
                while (1) {
                  switch (_context402.prev = _context402.next) {
                    case 0:
                      _context402.prev = 0;
                      deleteAllCMD = 'DELETE FROM tasks';
                      _context402.next = 4;
                      return this.userDB.run(deleteAllCMD);

                    case 4:
                      deleteRes = _context402.sent;

                      if (!(deleteRes.changes.changes !== -1)) {
                        _context402.next = 7;
                        break;
                      }

                      return _context402.abrupt("return", Promise.resolve(true));

                    case 7:
                      _context402.next = 12;
                      break;

                    case 9:
                      _context402.prev = 9;
                      _context402.t0 = _context402["catch"](0);
                      return _context402.abrupt("return", Promise.resolve(false));

                    case 12:
                    case "end":
                      return _context402.stop();
                  }
                }
              }, _callee402, this, [[0, 9]]);
            }));
          } ///////////////////////////////////////////////////////////////////////////

        }, {
          key: "updateItem",
          value: function updateItem(resEPName, itemToUpdate, fieldNameForUpdate, newValue, uniqueId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee403() {
              var tableColsObj, uId, tableColNames, tableColsArr, updatedVals, tblInsertCMD, colCount, thisColName, deleteCMD, deleteRes, updateRes;
              return regeneratorRuntime.wrap(function _callee403$(_context403) {
                while (1) {
                  switch (_context403.prev = _context403.next) {
                    case 0:
                      tableColsObj = _baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources[resEPName];
                      uId = resEPName === 'colleague' ? 'EmpId' : 'Id';
                      tableColNames = Object.keys(tableColsObj);
                      tableColsArr = [];
                      updatedVals = [];
                      _context403.next = 7;
                      return this.insertItemsCMD(resEPName);

                    case 7:
                      tblInsertCMD = _context403.sent;

                      for (colCount = 0; colCount < tableColNames.length; colCount++) {
                        thisColName = tableColNames[colCount];
                        tableColsArr.push(thisColName + '=?');

                        if (thisColName === fieldNameForUpdate) {
                          updatedVals.push(newValue);
                        } else {
                          updatedVals.push(itemToUpdate[thisColName]);
                        }
                      }

                      ;
                      deleteCMD = 'DELETE FROM ' + _baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources[resEPName] + ' WHERE ' + uniqueId + ' = ' + uId + ';';
                      _context403.next = 13;
                      return this.userDB.run(deleteCMD);

                    case 13:
                      deleteRes = _context403.sent;

                      if (deleteRes.changes.changes !== -1) {
                        this.logger.info('[sqlServ|updateItem] (Deleted OLD) EmpId: ' + uId + ' - SUCCESS!');
                      } else {
                        this.logger.info('[sqlServ|updateItem] (Error) Deleting: ' + uId);
                      }

                      ;
                      _context403.next = 18;
                      return this.userDB.run(tblInsertCMD, updatedVals);

                    case 18:
                      updateRes = _context403.sent;

                      if (updateRes.changes.changes !== -1) {
                        this.logger.info('[sqlServ|updateItem] (Updated NEW) EmpId: ' + uId + ' - SUCCESS!');
                      } else {
                        this.logger.info('[sqlServ|updateItem] (Error) Updating: ' + uId);
                      }

                      ;

                    case 21:
                    case "end":
                      return _context403.stop();
                  }
                }
              }, _callee403, this);
            }));
          } ///////////////////////////////////////////////////////////////////////////

        }, {
          key: "dlNativeColleagueImgs",
          value: function dlNativeColleagueImgs() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee404() {
              var randomFN, peopleRes, doneImgs, i, p, pId, pWebImg, pFName, nativeUri, newURLRes;
              return regeneratorRuntime.wrap(function _callee404$(_context404) {
                while (1) {
                  switch (_context404.prev = _context404.next) {
                    case 0:
                      this.logger.info('[sqlServ|dlNativeColleagueImgs] >>> STARTED...');

                      randomFN = function randomFN() {
                        return Math.random().toString(20).substr(2, 10);
                      };

                      _context404.next = 4;
                      return this.userDB.query('SELECT * FROM colleague');

                    case 4:
                      peopleRes = _context404.sent.values;
                      this.evServ.publish('dlConvImgs-Start', {
                        name: 'colleague',
                        total: peopleRes.length,
                        count: 0
                      });
                      doneImgs = [];
                      i = 0;

                    case 8:
                      if (!(i < peopleRes.length)) {
                        _context404.next = 31;
                        break;
                      }

                      p = peopleRes[i];
                      pId = p.EmpId;
                      pWebImg = p.Photo;
                      pFName = randomFN();
                      _context404.prev = 13;
                      _context404.next = 16;
                      return this.deputy.saveNativeImage(pWebImg, pFName);

                    case 16:
                      nativeUri = _context404.sent;
                      doneImgs.push(nativeUri);
                      this.evServ.publish('dlConvImgs-Prog', {
                        name: 'colleague',
                        count: i,
                        uImgs: nativeUri
                      });
                      _context404.next = 21;
                      return this.userDB.run('UPDATE colleague SET Photo = ' + nativeUri + ' WHERE EmpId = ' + pId);

                    case 21:
                      newURLRes = _context404.sent;

                      if (newURLRes.changes.changes !== -1) {
                        this.logger.info('[sqlServ|dlNativeColleagueImgs] (SUCCESS) Replaced DB Photo for ' + p.DisplayName + ' - ' + nativeUri);
                      }

                      _context404.next = 28;
                      break;

                    case 25:
                      _context404.prev = 25;
                      _context404.t0 = _context404["catch"](13);
                      this.logger.info('[sqlServ|dlNativeColleagueImgs] (ERROR): ' + _context404.t0.message);

                    case 28:
                      i++;
                      _context404.next = 8;
                      break;

                    case 31:
                      this.logger.info('[sqlServ|SQLServ|dlNativeColleagueImgs] ...FINISHED! <<<');
                      this.evServ.publish('dlConvImgs-Finish', true);
                      return _context404.abrupt("return", Promise.resolve(doneImgs));

                    case 34:
                    case "end":
                      return _context404.stop();
                  }
                }
              }, _callee404, this, [[13, 25]]);
            }));
          } ///////////////////////////////////////////////////////////////////////////

        }, {
          key: "dlConvertDBImages",
          value: function dlConvertDBImages(tableN) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee405() {
              var pTs, revRes, resEPName, iURL, randomFN, convImgs, iTblItems, iTblICount, _i38, _Object$entries9, _Object$entries9$_i, key, value, dlConvUri;

              return regeneratorRuntime.wrap(function _callee405$(_context405) {
                while (1) {
                  switch (_context405.prev = _context405.next) {
                    case 0:
                      this.logger.info('[sqlServ|dlConvertDBImages] (' + tableN + ')...');
                      pTs = ['photo', 'img', 'image', 'picture', 'avatar', 'logo', 'jpg', 'jpeg', 'gif', 'png', 'bmp'];

                      revRes = function revRes(o) {
                        var rO = {};
                        Object.keys(o).forEach(function (x) {
                          rO[o[x]] = x;
                        });
                        return rO;
                      };

                      resEPName = revRes(_baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources)[tableN];

                      iURL = function iURL(tS) {
                        if (!tS.includes('capacitor_file') && tS.substring(0, 4).toLowerCase() === 'http') {
                          var _iterator4 = _createForOfIteratorHelper(pTs),
                              _step4;

                          try {
                            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                              var pT = _step4.value;

                              if (tS.match(new RegExp(pT, 'gi'))) {
                                return true;
                              }
                            }
                          } catch (err) {
                            _iterator4.e(err);
                          } finally {
                            _iterator4.f();
                          }

                          return false;
                        } else {
                          return false;
                        }
                      };

                      randomFN = function randomFN() {
                        var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
                        return Math.random().toString(20).substr(2, length);
                      };

                      convImgs = [];
                      _context405.prev = 7;
                      _context405.next = 10;
                      return this.userDB.query('SELECT * FROM ' + tableN);

                    case 10:
                      iTblItems = _context405.sent;
                      iTblICount = 0;

                    case 12:
                      if (!(iTblICount < iTblItems.values.length)) {
                        _context405.next = 29;
                        break;
                      }

                      _i38 = 0, _Object$entries9 = Object.entries(iTblItems.values[iTblICount]);

                    case 14:
                      if (!(_i38 < _Object$entries9.length)) {
                        _context405.next = 26;
                        break;
                      }

                      _Object$entries9$_i = _slicedToArray(_Object$entries9[_i38], 2), key = _Object$entries9$_i[0], value = _Object$entries9$_i[1];

                      if (!iURL(value.toString())) {
                        _context405.next = 23;
                        break;
                      }

                      _context405.next = 19;
                      return this.deputy.saveNativeImage(value.toString(), randomFN());

                    case 19:
                      dlConvUri = _context405.sent;
                      convImgs.push(dlConvUri);
                      _context405.next = 23;
                      return this.updateItem(resEPName, iTblItems.values[iTblICount], key, dlConvUri, tableN === 'colleague' ? 'EmpId' : 'Id');

                    case 23:
                      _i38++;
                      _context405.next = 14;
                      break;

                    case 26:
                      iTblICount++;
                      _context405.next = 12;
                      break;

                    case 29:
                      this.logger.info('[sqlServ|dlConvertDBImages] (' + tableN + ') - FINISHED.');
                      return _context405.abrupt("return", Promise.resolve(convImgs));

                    case 33:
                      _context405.prev = 33;
                      _context405.t0 = _context405["catch"](7);
                      this.logger.info('[sqlServ|dlConvertDBImages] (ERROR - ' + tableN + '): ' + _context405.t0.message);
                      return _context405.abrupt("return", Promise.resolve(null));

                    case 37:
                    case "end":
                      return _context405.stop();
                  }
                }
              }, _callee405, this, [[7, 33]]);
            }));
          } ///////////////////////////////////////////////////////////////////////////

        }, {
          key: "doDLConvertDBImages",
          value: function doDLConvertDBImages() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee408() {
              var _this163 = this;

              var imgTbls, exclTbls, imgTerms, dbTblNs, hasImgFields, tblCount, tT, iTblNo, doneTbls, doConv, doFeed;
              return regeneratorRuntime.wrap(function _callee408$(_context408) {
                while (1) {
                  switch (_context408.prev = _context408.next) {
                    case 0:
                      this.logger.info('[sqlServ|doDLConvertDBImages] ()...');
                      imgTbls = [];
                      exclTbls = ['sync_table', 'sync', 'joins', 'assocs'];
                      imgTerms = ['photo', 'img', 'image', 'picture', 'avatar', 'logo'];
                      dbTblNs = this.dS.getUDBTables().filter(function (t) {
                        return !exclTbls.includes(t);
                      });

                      hasImgFields = function hasImgFields(dbTblN) {
                        var tFs = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables.filter(function (t) {
                          return t.name === dbTblN;
                        })[0].schema;

                        var tFNs = [];

                        for (var i = 0; i < tFs.length; i++) {
                          tFNs.push(tFs[i].column);
                        }

                        ;

                        for (var _i39 = 0, _tFNs = tFNs; _i39 < _tFNs.length; _i39++) {
                          var tFN = _tFNs[_i39];

                          if (imgTerms.includes(tFN.toLowerCase())) {
                            return true;
                          }
                        }

                        return false;
                      };

                      tblCount = 0;

                    case 7:
                      if (!(tblCount < dbTblNs.length)) {
                        _context408.next = 20;
                        break;
                      }

                      tT = dbTblNs[tblCount];
                      _context408.next = 11;
                      return this.getItemCount(tT);

                    case 11:
                      _context408.t1 = _context408.sent;
                      _context408.t0 = _context408.t1 > 0;

                      if (!_context408.t0) {
                        _context408.next = 15;
                        break;
                      }

                      _context408.t0 = hasImgFields(tT);

                    case 15:
                      if (!_context408.t0) {
                        _context408.next = 17;
                        break;
                      }

                      imgTbls.push(tT);

                    case 17:
                      tblCount++;
                      _context408.next = 7;
                      break;

                    case 20:
                      ;
                      iTblNo = imgTbls.length;
                      doneTbls = 0; ///////////////

                      doConv = function doConv(imgT) {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this163, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee406() {
                          var convRes;
                          return regeneratorRuntime.wrap(function _callee406$(_context406) {
                            while (1) {
                              switch (_context406.prev = _context406.next) {
                                case 0:
                                  _context406.next = 2;
                                  return this.dlConvertDBImages(imgT);

                                case 2:
                                  convRes = _context406.sent;
                                  doneTbls++;
                                  this.evServ.publish('dlConvImgs-Prog', {
                                    name: imgT,
                                    count: doneTbls,
                                    uImgs: convRes
                                  });
                                  doFeed();

                                case 6:
                                case "end":
                                  return _context406.stop();
                              }
                            }
                          }, _callee406, this);
                        }));
                      };

                      doFeed = function doFeed() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(_this163, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee407() {
                          var nextTable;
                          return regeneratorRuntime.wrap(function _callee407$(_context407) {
                            while (1) {
                              switch (_context407.prev = _context407.next) {
                                case 0:
                                  if (!(doneTbls === iTblNo)) {
                                    _context407.next = 5;
                                    break;
                                  }

                                  this.evServ.publish('dlConvImgs-Finish', true);
                                  this.logger.info("[sqlServ|doDLConvertDBImages] (Finished) \uD83C\uDFC1 Done Converting DB Imgs for " + doneTbls + '/' + iTblNo + ' Tables.');
                                  _context407.next = 8;
                                  break;

                                case 5:
                                  nextTable = imgTbls[doneTbls];
                                  _context407.next = 8;
                                  return doConv(nextTable);

                                case 8:
                                case "end":
                                  return _context407.stop();
                              }
                            }
                          }, _callee407, this);
                        }));
                      };

                      doConv(imgTbls[doneTbls]);
                      this.evServ.publish('dlConvImgs-Start', {
                        name: imgTbls[doneTbls],
                        total: iTblNo,
                        count: 0
                      });

                    case 27:
                    case "end":
                      return _context408.stop();
                  }
                }
              }, _callee408, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "myExecuteSet",
          value: function myExecuteSet(exeSetCMD) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee409() {
              var totalSetItems, exeSetResult;
              return regeneratorRuntime.wrap(function _callee409$(_context409) {
                while (1) {
                  switch (_context409.prev = _context409.next) {
                    case 0:
                      totalSetItems = exeSetCMD.length;
                      this.logger.info('[sqlServ|myExecuteSet] (' + totalSetItems + ')...');
                      _context409.prev = 2;
                      _context409.next = 5;
                      return this.userDB.executeSet(exeSetCMD);

                    case 5:
                      exeSetResult = _context409.sent;

                      if (!(exeSetResult.changes.changes > -1)) {
                        _context409.next = 11;
                        break;
                      }

                      this.logger.info('[sqlServ|myExecuteSet] (Results): Added ' + exeSetResult.changes.changes + ' Items to Table.');
                      return _context409.abrupt("return", Promise.resolve(true));

                    case 11:
                      return _context409.abrupt("return", Promise.reject(false));

                    case 12:
                      _context409.next = 17;
                      break;

                    case 14:
                      _context409.prev = 14;
                      _context409.t0 = _context409["catch"](2);
                      return _context409.abrupt("return", Promise.reject(_context409.t0.message));

                    case 17:
                    case "end":
                      return _context409.stop();
                  }
                }
              }, _callee409, this, [[2, 14]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////
          ///// TIMESHEETS
          //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getTimesheets",
          value: function getTimesheets() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee410() {
              var getTSResult;
              return regeneratorRuntime.wrap(function _callee410$(_context410) {
                while (1) {
                  switch (_context410.prev = _context410.next) {
                    case 0:
                      this.logger.info('[sqlServ|getTimesheets] ()...');
                      _context410.prev = 1;
                      _context410.next = 4;
                      return this.userDB.query('SELECT * FROM Timesheet');

                    case 4:
                      getTSResult = _context410.sent;

                      if (!(getTSResult.values.length > 0)) {
                        _context410.next = 10;
                        break;
                      }

                      this.logger.info("[sqlServ|getTimesheets] \uD83D\uDD0E (Results): FOUND [" + getTSResult.values.length + '] Timesheets.');
                      return _context410.abrupt("return", Promise.resolve(getTSResult));

                    case 10:
                      return _context410.abrupt("return", Promise.resolve([]));

                    case 11:
                      _context410.next = 16;
                      break;

                    case 13:
                      _context410.prev = 13;
                      _context410.t0 = _context410["catch"](1);
                      return _context410.abrupt("return", Promise.reject(new Error('[sqlServ|getTimesheets] (ERROR): ' + _context410.t0.message)));

                    case 16:
                    case "end":
                      return _context410.stop();
                  }
                }
              }, _callee410, this, [[1, 13]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getSingleTimesheet",
          value: function getSingleTimesheet(tsId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee411() {
              return regeneratorRuntime.wrap(function _callee411$(_context411) {
                while (1) {
                  switch (_context411.prev = _context411.next) {
                    case 0:
                      _context411.t0 = Promise;
                      _context411.next = 3;
                      return this.userDB.query('SELECT * FROM timesheets WHERE Id = ' + tsId);

                    case 3:
                      _context411.t1 = _context411.sent.values[0];
                      return _context411.abrupt("return", _context411.t0.resolve.call(_context411.t0, _context411.t1));

                    case 5:
                    case "end":
                      return _context411.stop();
                  }
                }
              }, _callee411, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "checkGetSingleTS",
          value: function checkGetSingleTS(tsId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee412() {
              var cGSTSRes;
              return regeneratorRuntime.wrap(function _callee412$(_context412) {
                while (1) {
                  switch (_context412.prev = _context412.next) {
                    case 0:
                      _context412.prev = 0;
                      _context412.next = 3;
                      return this.userDB.query('SELECT * FROM timesheets WHERE Id = ' + tsId);

                    case 3:
                      cGSTSRes = _context412.sent;

                      if (!(cGSTSRes.values.length > 0)) {
                        _context412.next = 8;
                        break;
                      }

                      return _context412.abrupt("return", Promise.resolve({
                        result: true,
                        data: cGSTSRes.values[0]
                      }));

                    case 8:
                      return _context412.abrupt("return", Promise.resolve({
                        result: false,
                        data: null
                      }));

                    case 9:
                      _context412.next = 14;
                      break;

                    case 11:
                      _context412.prev = 11;
                      _context412.t0 = _context412["catch"](0);
                      return _context412.abrupt("return", Promise.resolve({
                        result: false,
                        data: null
                      }));

                    case 14:
                    case "end":
                      return _context412.stop();
                  }
                }
              }, _callee412, this, [[0, 11]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getItemCount",
          value: function getItemCount(tableName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee413() {
              var countRes;
              return regeneratorRuntime.wrap(function _callee413$(_context413) {
                while (1) {
                  switch (_context413.prev = _context413.next) {
                    case 0:
                      _context413.prev = 0;
                      _context413.next = 3;
                      return this.userDB.query('SELECT COUNT(*) FROM ' + tableName);

                    case 3:
                      countRes = _context413.sent;
                      return _context413.abrupt("return", Promise.resolve(countRes.values[0]['COUNT(*)']));

                    case 7:
                      _context413.prev = 7;
                      _context413.t0 = _context413["catch"](0);
                      return _context413.abrupt("return", Promise.reject(_context413.t0));

                    case 10:
                    case "end":
                      return _context413.stop();
                  }
                }
              }, _callee413, this, [[0, 7]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getTSheetRangeCount",
          value: function getTSheetRangeCount(btStartDate, btEndDate) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee414() {
              var countRes;
              return regeneratorRuntime.wrap(function _callee414$(_context414) {
                while (1) {
                  switch (_context414.prev = _context414.next) {
                    case 0:
                      _context414.prev = 0;
                      _context414.next = 3;
                      return this.userDB.query('SELECT COUNT(*) FROM timesheets WHERE StartTime BETWEEN ' + btStartDate + ' AND ' + btEndDate + ';');

                    case 3:
                      countRes = _context414.sent;
                      return _context414.abrupt("return", Promise.resolve(countRes.values[0]['COUNT(*)']));

                    case 7:
                      _context414.prev = 7;
                      _context414.t0 = _context414["catch"](0);
                      return _context414.abrupt("return", Promise.reject(_context414.t0));

                    case 10:
                    case "end":
                      return _context414.stop();
                  }
                }
              }, _callee414, this, [[0, 7]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getAllRosters",
          value: function getAllRosters() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee415() {
              var _yield$this$userDB$qu7, values;

              return regeneratorRuntime.wrap(function _callee415$(_context415) {
                while (1) {
                  switch (_context415.prev = _context415.next) {
                    case 0:
                      _context415.prev = 0;
                      _context415.next = 3;
                      return this.userDB.query('SELECT * FROM `rosters`');

                    case 3:
                      _yield$this$userDB$qu7 = _context415.sent;
                      values = _yield$this$userDB$qu7.values;
                      return _context415.abrupt("return", Promise.resolve(values));

                    case 8:
                      _context415.prev = 8;
                      _context415.t0 = _context415["catch"](0);
                      this.logger.info('[sqlServ|getAllRosters] (Error): ' + JSON.stringify(_context415.t0));
                      return _context415.abrupt("return", Promise.reject());

                    case 12:
                    case "end":
                      return _context415.stop();
                  }
                }
              }, _callee415, this, [[0, 8]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getAllTableItems",
          value: function getAllTableItems(tableName) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee416() {
              var getAllResult;
              return regeneratorRuntime.wrap(function _callee416$(_context416) {
                while (1) {
                  switch (_context416.prev = _context416.next) {
                    case 0:
                      this.logger.info('[sqlServ|getAllTableItems] (' + tableName + ')...');
                      _context416.prev = 1;
                      _context416.next = 4;
                      return this.userDB.query('SELECT * FROM ' + tableName);

                    case 4:
                      getAllResult = _context416.sent;

                      if (!(getAllResult.values.length > 0)) {
                        _context416.next = 10;
                        break;
                      }

                      this.logger.info("[sqlServ|getAllTableItems] \uD83D\uDD0E (Results): FOUND [" + getAllResult.values.length + '] ' + tableName + ' Items.');
                      return _context416.abrupt("return", Promise.resolve(getAllResult));

                    case 10:
                      return _context416.abrupt("return", Promise.resolve([]));

                    case 11:
                      _context416.next = 16;
                      break;

                    case 13:
                      _context416.prev = 13;
                      _context416.t0 = _context416["catch"](1);
                      return _context416.abrupt("return", Promise.reject(new Error('[sqlServ|getAllTableItems] (ERROR - ' + tableName + '): ' + _context416.t0.message)));

                    case 16:
                    case "end":
                      return _context416.stop();
                  }
                }
              }, _callee416, this, [[1, 13]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getAllPeople",
          value: function getAllPeople() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee417() {
              var gAPRes;
              return regeneratorRuntime.wrap(function _callee417$(_context417) {
                while (1) {
                  switch (_context417.prev = _context417.next) {
                    case 0:
                      this.logger.info('[sqlServ|getAllPeople] ()...');
                      _context417.prev = 1;
                      _context417.next = 4;
                      return this.userDB.query('SELECT * FROM colleagues');

                    case 4:
                      gAPRes = _context417.sent.values;

                      if (!(gAPRes.length > 0)) {
                        _context417.next = 9;
                        break;
                      }

                      return _context417.abrupt("return", Promise.resolve(gAPRes));

                    case 9:
                      return _context417.abrupt("return", Promise.resolve([]));

                    case 10:
                      _context417.next = 16;
                      break;

                    case 12:
                      _context417.prev = 12;
                      _context417.t0 = _context417["catch"](1);
                      this.logger.info('[sqlServ|getAllPeople] (Error): ' + _context417.t0.message);
                      Promise.resolve(_context417.t0.message);

                    case 16:
                    case "end":
                      return _context417.stop();
                  }
                }
              }, _callee417, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getAllTSheetsOrderId",
          value: function getAllTSheetsOrderId() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee418() {
              var getAllTSOIdRes;
              return regeneratorRuntime.wrap(function _callee418$(_context418) {
                while (1) {
                  switch (_context418.prev = _context418.next) {
                    case 0:
                      this.logger.info('[sqlServ|getAllTSheetsOrderId] ()...');
                      _context418.prev = 1;
                      _context418.next = 4;
                      return this.userDB.query('SELECT * FROM timesheets ORDER BY Id DESC');

                    case 4:
                      getAllTSOIdRes = _context418.sent;

                      if (!(getAllTSOIdRes.values.length > 0)) {
                        _context418.next = 10;
                        break;
                      }

                      this.logger.info("[sqlServ|getAllTSheetsOrderId] \uD83D\uDD0E (Results): Returning [" + getAllTSOIdRes.values.length + '] Sheets ORDERED BY ID DESC.');
                      return _context418.abrupt("return", Promise.resolve(getAllTSOIdRes.values));

                    case 10:
                      return _context418.abrupt("return", Promise.resolve([]));

                    case 11:
                      _context418.next = 16;
                      break;

                    case 13:
                      _context418.prev = 13;
                      _context418.t0 = _context418["catch"](1);
                      return _context418.abrupt("return", Promise.reject(new Error('[sqlServ|getAllTSheetsOrderId] (ERROR): ' + _context418.t0.message)));

                    case 16:
                    case "end":
                      return _context418.stop();
                  }
                }
              }, _callee418, this, [[1, 13]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getAllPendingTSheetItems",
          value: function getAllPendingTSheetItems() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee419() {
              var getAllPTSRes;
              return regeneratorRuntime.wrap(function _callee419$(_context419) {
                while (1) {
                  switch (_context419.prev = _context419.next) {
                    case 0:
                      this.logger.info('[sqlServ|getAllPendingTSheetItems] ()...');
                      _context419.prev = 1;
                      _context419.next = 4;
                      return this.userDB.query('SELECT * FROM timesheets WHERE TimeApproved !=1');

                    case 4:
                      getAllPTSRes = _context419.sent;

                      if (!(getAllPTSRes.values.length > 0)) {
                        _context419.next = 10;
                        break;
                      }

                      this.logger.info("[sqlServ|getAllPendingTSheetItems] \uD83D\uDD0E (Results): FOUND [" + getAllPTSRes.values.length + '] "PENDING" TSheet Items.');
                      return _context419.abrupt("return", Promise.resolve(getAllPTSRes.values));

                    case 10:
                      return _context419.abrupt("return", Promise.resolve([]));

                    case 11:
                      _context419.next = 16;
                      break;

                    case 13:
                      _context419.prev = 13;
                      _context419.t0 = _context419["catch"](1);
                      return _context419.abrupt("return", Promise.reject(new Error('[sqlServ|getAllPendingTSheetItems] (ERROR): ' + _context419.t0.message)));

                    case 16:
                    case "end":
                      return _context419.stop();
                  }
                }
              }, _callee419, this, [[1, 13]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getXTableItems",
          value: function getXTableItems(tableName, order, limit, offset) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee420() {
              var getXCMD, getXRes;
              return regeneratorRuntime.wrap(function _callee420$(_context420) {
                while (1) {
                  switch (_context420.prev = _context420.next) {
                    case 0:
                      offset === 0 ? getXCMD = 'SELECT * FROM ' + tableName + ' ORDER BY Modified ' + order.toUpperCase() + ' LIMIT ' + limit : getXCMD = 'SELECT * FROM ' + tableName + ' ORDER BY Modified ' + order.toUpperCase() + ' LIMIT ' + limit + ' OFFSET ' + offset;
                      _context420.prev = 1;
                      _context420.next = 4;
                      return this.userDB.query(getXCMD);

                    case 4:
                      getXRes = _context420.sent;
                      return _context420.abrupt("return", Promise.resolve(getXRes.values));

                    case 8:
                      _context420.prev = 8;
                      _context420.t0 = _context420["catch"](1);
                      return _context420.abrupt("return", Promise.reject(new Error('[sqlServ|getXTableItems] (ERROR - ' + tableName + '): ' + _context420.t0.message)));

                    case 11:
                    case "end":
                      return _context420.stop();
                  }
                }
              }, _callee420, this, [[1, 8]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getXTSheetItems",
          value: function getXTSheetItems(btDates, order, itemLimit, itemOffset) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee421() {
              var dR, o, oB, oD, iL, iO, xCMD, CMD, getXTSRes;
              return regeneratorRuntime.wrap(function _callee421$(_context421) {
                while (1) {
                  switch (_context421.prev = _context421.next) {
                    case 0:
                      btDates ? dR = 'WHERE StartTime BETWEEN ' + btDates.start + ' AND ' + btDates.end + ' ' : dR = '';

                      if (order && order.by) {
                        oB = 'ORDER BY ' + order.by + ' ';
                        order.dir ? oD = order.dir.toUpperCase() + ' ' : oD = '';
                        o = oB + oD;
                      } else {
                        o = '';
                      }

                      ;
                      itemLimit > 0 ? iL = 'LIMIT ' + itemLimit + ' ' : iL = '';
                      itemOffset > 0 ? iO = 'OFFSET ' + itemOffset : iO = '';
                      xCMD = 'SELECT * FROM timesheets ' + dR + o + iL + iO;
                      CMD = xCMD.trim() + ';';
                      _context421.prev = 7;
                      _context421.next = 10;
                      return this.userDB.query(CMD);

                    case 10:
                      getXTSRes = _context421.sent;
                      return _context421.abrupt("return", Promise.resolve(getXTSRes.values));

                    case 14:
                      _context421.prev = 14;
                      _context421.t0 = _context421["catch"](7);
                      return _context421.abrupt("return", Promise.reject(new Error('[sqlServ|getXTableItems] (ERROR): ' + _context421.t0.message)));

                    case 17:
                    case "end":
                      return _context421.stop();
                  }
                }
              }, _callee421, this, [[7, 14]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getMinMaxItems",
          value: function getMinMaxItems(tableName, tableCol) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee422() {
              var fRes, lRes;
              return regeneratorRuntime.wrap(function _callee422$(_context422) {
                while (1) {
                  switch (_context422.prev = _context422.next) {
                    case 0:
                      _context422.next = 2;
                      return this.userDB.query('SELECT MIN(' + tableCol + ') FROM ' + tableName);

                    case 2:
                      _context422.t0 = 'MIN(' + tableCol + ')';
                      fRes = _context422.sent.values[0][_context422.t0];
                      _context422.next = 6;
                      return this.userDB.query('SELECT MAX(' + tableCol + ') FROM ' + tableName);

                    case 6:
                      _context422.t1 = 'MAX(' + tableCol + ')';
                      lRes = _context422.sent.values[0][_context422.t1];
                      return _context422.abrupt("return", Promise.resolve({
                        first: fRes,
                        last: lRes
                      }));

                    case 9:
                    case "end":
                      return _context422.stop();
                  }
                }
              }, _callee422, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getTSheetsDateRange",
          value: function getTSheetsDateRange() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee423() {
              var minRes, maxRes;
              return regeneratorRuntime.wrap(function _callee423$(_context423) {
                while (1) {
                  switch (_context423.prev = _context423.next) {
                    case 0:
                      _context423.next = 2;
                      return this.userDB.query('SELECT MIN(StartTime) FROM timesheets');

                    case 2:
                      minRes = _context423.sent.values[0]['MIN(StartTime)'];
                      _context423.next = 5;
                      return this.userDB.query('SELECT MAX(StartTime) FROM timesheets');

                    case 5:
                      maxRes = _context423.sent.values[0]['MAX(StartTime)'];
                      return _context423.abrupt("return", Promise.resolve({
                        min: minRes,
                        max: maxRes
                      }));

                    case 7:
                    case "end":
                      return _context423.stop();
                  }
                }
              }, _callee423, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getTSheetsRangeMinMax",
          value: function getTSheetsRangeMinMax(btDates) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee424() {
              var minRes, maxRes;
              return regeneratorRuntime.wrap(function _callee424$(_context424) {
                while (1) {
                  switch (_context424.prev = _context424.next) {
                    case 0:
                      _context424.next = 2;
                      return this.userDB.query('SELECT MIN(StartTime) FROM timesheets WHERE StartTime BETWEEN ' + btDates.start + ' AND ' + btDates.end);

                    case 2:
                      minRes = _context424.sent.values[0]['MIN(StartTime)'];
                      _context424.next = 5;
                      return this.userDB.query('SELECT MAX(StartTime) FROM timesheets WHERE StartTime BETWEEN ' + btDates.start + ' AND ' + btDates.end);

                    case 5:
                      maxRes = _context424.sent.values[0]['MAX(StartTime)'];
                      return _context424.abrupt("return", Promise.resolve({
                        min: minRes,
                        max: maxRes
                      }));

                    case 7:
                    case "end":
                      return _context424.stop();
                  }
                }
              }, _callee424, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getPerson",
          value: function getPerson(empId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee425() {
              var getPRes;
              return regeneratorRuntime.wrap(function _callee425$(_context425) {
                while (1) {
                  switch (_context425.prev = _context425.next) {
                    case 0:
                      _context425.prev = 0;
                      _context425.next = 3;
                      return this.userDB.query('SELECT * FROM colleague WHERE EmpId=' + empId);

                    case 3:
                      getPRes = _context425.sent;

                      if (!(getPRes.values.length > 0)) {
                        _context425.next = 9;
                        break;
                      }

                      this.logger.info("[sqlServ|getPerson] \uD83D\uDD0E (Results): FOUND [" + getPRes.values.length + '] Employee/Colleague.');
                      return _context425.abrupt("return", Promise.resolve(getPRes));

                    case 9:
                      return _context425.abrupt("return", Promise.resolve([]));

                    case 10:
                      _context425.next = 15;
                      break;

                    case 12:
                      _context425.prev = 12;
                      _context425.t0 = _context425["catch"](0);
                      return _context425.abrupt("return", Promise.reject(_context425.t0));

                    case 15:
                    case "end":
                      return _context425.stop();
                  }
                }
              }, _callee425, this, [[0, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getTSHistory",
          value: function getTSHistory(searchIds) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee426() {
              var combinedRes, tryCols, i, tryId, c, tryCol, getTSHRes, _iterator5, _step5, hI, notDailyArr;

              return regeneratorRuntime.wrap(function _callee426$(_context426) {
                while (1) {
                  switch (_context426.prev = _context426.next) {
                    case 0:
                      combinedRes = [];
                      tryCols = ['UsageRecordId', 'BalanceId', 'Id'];
                      i = 0;

                    case 3:
                      if (!(i < searchIds.length)) {
                        _context426.next = 25;
                        break;
                      }

                      tryId = searchIds[i];
                      c = 0;

                    case 6:
                      if (!(c < tryCols.length)) {
                        _context426.next = 22;
                        break;
                      }

                      tryCol = tryCols[c];
                      _context426.prev = 8;
                      _context426.next = 11;
                      return this.userDB.query('SELECT * FROM system_usage_tracking WHERE ' + tryCol + '=' + tryId);

                    case 11:
                      getTSHRes = _context426.sent;

                      if (getTSHRes.values.length > 0) {
                        _iterator5 = _createForOfIteratorHelper(getTSHRes.values);

                        try {
                          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                            hI = _step5.value;
                            combinedRes.push(hI);
                          }
                        } catch (err) {
                          _iterator5.e(err);
                        } finally {
                          _iterator5.f();
                        }
                      }

                      _context426.next = 19;
                      break;

                    case 15:
                      _context426.prev = 15;
                      _context426.t0 = _context426["catch"](8);
                      this.logger.info('[sqlServ|getTSHistory] (Error): ' + _context426.t0);
                      return _context426.abrupt("return", Promise.reject(_context426.t0));

                    case 19:
                      c++;
                      _context426.next = 6;
                      break;

                    case 22:
                      i++;
                      _context426.next = 3;
                      break;

                    case 25:
                      if (!(combinedRes.length > 0)) {
                        _context426.next = 30;
                        break;
                      }

                      notDailyArr = combinedRes.filter(function (h) {
                        return h.UsageType !== 2;
                      });
                      return _context426.abrupt("return", Promise.resolve(notDailyArr));

                    case 30:
                      return _context426.abrupt("return", Promise.resolve([]));

                    case 31:
                    case "end":
                      return _context426.stop();
                  }
                }
              }, _callee426, this, [[8, 15]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getSelectTSheetItems",
          value: function getSelectTSheetItems(tsIds) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee427() {
              var allTSIs, i, thisTSId, tsIRes;
              return regeneratorRuntime.wrap(function _callee427$(_context427) {
                while (1) {
                  switch (_context427.prev = _context427.next) {
                    case 0:
                      allTSIs = [];
                      i = 0;

                    case 2:
                      if (!(i < tsIds.length)) {
                        _context427.next = 18;
                        break;
                      }

                      thisTSId = tsIds[i];
                      _context427.prev = 4;
                      _context427.next = 7;
                      return this.userDB.query("SELECT * FROM timesheets WHERE Id='" + thisTSId + "'");

                    case 7:
                      tsIRes = _context427.sent['values'][0];
                      allTSIs.push(tsIRes);
                      console.log(tsIRes);
                      _context427.next = 15;
                      break;

                    case 12:
                      _context427.prev = 12;
                      _context427.t0 = _context427["catch"](4);
                      this.logger.info('[sqlServ|getSelectTSheetItems] (ERROR): ' + _context427.t0.message);

                    case 15:
                      i++;
                      _context427.next = 2;
                      break;

                    case 18:
                      if (!(allTSIs.length > 0)) {
                        _context427.next = 22;
                        break;
                      }

                      return _context427.abrupt("return", Promise.resolve(allTSIs));

                    case 22:
                      return _context427.abrupt("return", Promise.resolve([]));

                    case 23:
                    case "end":
                      return _context427.stop();
                  }
                }
              }, _callee427, this, [[4, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////
          ///// SHIFTS/ROSTERS /////////////////////////////////////////////////////////////////
          //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getXRosterItems",
          value: function getXRosterItems(btDates, order, itemLimit, itemOffset) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee428() {
              var dR, o, oB, oD, iL, iO, xCMD, CMD, getXTSRes;
              return regeneratorRuntime.wrap(function _callee428$(_context428) {
                while (1) {
                  switch (_context428.prev = _context428.next) {
                    case 0:
                      btDates ? dR = 'WHERE StartTime BETWEEN ' + btDates.start + ' AND ' + btDates.end + ' ' : dR = '';

                      if (order && order.by) {
                        oB = 'ORDER BY ' + order.by + ' ';
                        order.dir ? oD = order.dir.toUpperCase() + ' ' : oD = '';
                        o = oB + oD;
                      } else {
                        o = '';
                      }

                      ;
                      itemLimit > 0 ? iL = 'LIMIT ' + itemLimit + ' ' : iL = '';
                      itemOffset > 0 ? iO = 'OFFSET ' + itemOffset : iO = '';
                      xCMD = 'SELECT * FROM rosters ' + dR + o + iL + iO;
                      CMD = xCMD.trim() + ';';
                      _context428.prev = 7;
                      _context428.next = 10;
                      return this.userDB.query(CMD);

                    case 10:
                      getXTSRes = _context428.sent;
                      return _context428.abrupt("return", Promise.resolve(getXTSRes.values));

                    case 14:
                      _context428.prev = 14;
                      _context428.t0 = _context428["catch"](7);
                      return _context428.abrupt("return", Promise.reject(new Error('[sqlServ|getXRosterItems] (ERROR): ' + _context428.t0.message)));

                    case 17:
                    case "end":
                      return _context428.stop();
                  }
                }
              }, _callee428, this, [[7, 14]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getRosterWeekItems",
          value: function getRosterWeekItems(startOfWeek, endOfWeek) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee429() {
              var weekEvsQ, weekEvsRes;
              return regeneratorRuntime.wrap(function _callee429$(_context429) {
                while (1) {
                  switch (_context429.prev = _context429.next) {
                    case 0:
                      weekEvsQ = 'SELECT * FROM rosters WHERE StartTime >= ' + startOfWeek + ' AND StartTime <= ' + endOfWeek + ' ORDER BY StartTime ASC';
                      _context429.prev = 1;
                      _context429.next = 4;
                      return this.userDB.query(weekEvsQ);

                    case 4:
                      weekEvsRes = _context429.sent;
                      return _context429.abrupt("return", Promise.resolve(weekEvsRes.values));

                    case 8:
                      _context429.prev = 8;
                      _context429.t0 = _context429["catch"](1);
                      return _context429.abrupt("return", Promise.reject(new Error('[sqlServ|getRosterWeekItems] (ERROR): ' + _context429.t0)));

                    case 11:
                    case "end":
                      return _context429.stop();
                  }
                }
              }, _callee429, this, [[1, 8]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getRosterRangeCount",
          value: function getRosterRangeCount(btStartDate, btEndDate) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee430() {
              var countRes;
              return regeneratorRuntime.wrap(function _callee430$(_context430) {
                while (1) {
                  switch (_context430.prev = _context430.next) {
                    case 0:
                      _context430.prev = 0;
                      _context430.next = 3;
                      return this.userDB.query('SELECT COUNT(*) FROM rosters WHERE StartTime BETWEEN ' + btStartDate + ' AND ' + btEndDate + ';');

                    case 3:
                      countRes = _context430.sent;
                      return _context430.abrupt("return", Promise.resolve(countRes.values[0]['COUNT(*)']));

                    case 7:
                      _context430.prev = 7;
                      _context430.t0 = _context430["catch"](0);
                      return _context430.abrupt("return", Promise.reject(_context430.t0));

                    case 10:
                    case "end":
                      return _context430.stop();
                  }
                }
              }, _callee430, this, [[0, 7]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getFutureDueTasks",
          value: function getFutureDueTasks() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee431() {
              var nowUTS, gFDTRes;
              return regeneratorRuntime.wrap(function _callee431$(_context431) {
                while (1) {
                  switch (_context431.prev = _context431.next) {
                    case 0:
                      nowUTS = this.dT.getUT(new Date());
                      _context431.prev = 1;
                      _context431.next = 4;
                      return this.userDB.query('SELECT * FROM tasks WHERE DueTimestamp > ' + nowUTS + ' AND TsCompleted = -1;');

                    case 4:
                      gFDTRes = _context431.sent;

                      if (!(gFDTRes.values.length > 0)) {
                        _context431.next = 9;
                        break;
                      }

                      return _context431.abrupt("return", Promise.resolve({
                        result: true,
                        data: gFDTRes.values
                      }));

                    case 9:
                      return _context431.abrupt("return", Promise.resolve({
                        result: true,
                        data: []
                      }));

                    case 10:
                      _context431.next = 15;
                      break;

                    case 12:
                      _context431.prev = 12;
                      _context431.t0 = _context431["catch"](1);
                      return _context431.abrupt("return", Promise.reject(_context431.t0));

                    case 15:
                    case "end":
                      return _context431.stop();
                  }
                }
              }, _callee431, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getFutureStartShifts",
          value: function getFutureStartShifts() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee432() {
              var nowUTS, gFSSRes;
              return regeneratorRuntime.wrap(function _callee432$(_context432) {
                while (1) {
                  switch (_context432.prev = _context432.next) {
                    case 0:
                      nowUTS = this.dT.getUT(new Date());
                      _context432.prev = 1;
                      _context432.next = 4;
                      return this.userDB.query('SELECT * FROM rosters WHERE StartTime > ' + nowUTS + ';');

                    case 4:
                      gFSSRes = _context432.sent;

                      if (!(gFSSRes.values.length > 0)) {
                        _context432.next = 9;
                        break;
                      }

                      return _context432.abrupt("return", Promise.resolve({
                        result: true,
                        data: gFSSRes.values
                      }));

                    case 9:
                      return _context432.abrupt("return", Promise.resolve({
                        result: true,
                        data: []
                      }));

                    case 10:
                      _context432.next = 15;
                      break;

                    case 12:
                      _context432.prev = 12;
                      _context432.t0 = _context432["catch"](1);
                      return _context432.abrupt("return", Promise.reject(_context432.t0));

                    case 15:
                    case "end":
                      return _context432.stop();
                  }
                }
              }, _callee432, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getFutureShifts",
          value: function getFutureShifts() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee433() {
              var nowT, fSRes;
              return regeneratorRuntime.wrap(function _callee433$(_context433) {
                while (1) {
                  switch (_context433.prev = _context433.next) {
                    case 0:
                      nowT = this.dT.gUT();
                      _context433.prev = 1;
                      _context433.next = 4;
                      return this.userDB.query('SELECT * FROM rosters WHERE StartTime >=' + nowT + ' ORDER BY StartTime ASC');

                    case 4:
                      fSRes = _context433.sent.values;

                      if (!(fSRes.length > 0)) {
                        _context433.next = 9;
                        break;
                      }

                      return _context433.abrupt("return", Promise.resolve(fSRes));

                    case 9:
                      return _context433.abrupt("return", Promise.resolve([]));

                    case 10:
                      _context433.next = 15;
                      break;

                    case 12:
                      _context433.prev = 12;
                      _context433.t0 = _context433["catch"](1);
                      this.logger.info('[sqlServ|getFutureShifts] (Error): ' + _context433.t0.message);

                    case 15:
                    case "end":
                      return _context433.stop();
                  }
                }
              }, _callee433, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getRostersRangeMinMax",
          value: function getRostersRangeMinMax(btDates) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee434() {
              var minRes, maxRes;
              return regeneratorRuntime.wrap(function _callee434$(_context434) {
                while (1) {
                  switch (_context434.prev = _context434.next) {
                    case 0:
                      _context434.next = 2;
                      return this.userDB.query('SELECT MIN(StartTime) FROM rosters WHERE StartTime BETWEEN ' + btDates.start + ' AND ' + btDates.end);

                    case 2:
                      minRes = _context434.sent.values[0]['MIN(StartTime)'];
                      _context434.next = 5;
                      return this.userDB.query('SELECT MAX(StartTime) FROM rosters WHERE StartTime BETWEEN ' + btDates.start + ' AND ' + btDates.end);

                    case 5:
                      maxRes = _context434.sent.values[0]['MAX(StartTime)'];
                      return _context434.abrupt("return", Promise.resolve({
                        min: minRes,
                        max: maxRes
                      }));

                    case 7:
                    case "end":
                      return _context434.stop();
                  }
                }
              }, _callee434, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getRostersDateRange",
          value: function getRostersDateRange() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee435() {
              var minRes, maxRes;
              return regeneratorRuntime.wrap(function _callee435$(_context435) {
                while (1) {
                  switch (_context435.prev = _context435.next) {
                    case 0:
                      _context435.next = 2;
                      return this.userDB.query('SELECT MIN(StartTime) FROM rosters');

                    case 2:
                      minRes = _context435.sent.values[0]['MIN(StartTime)'];
                      _context435.next = 5;
                      return this.userDB.query('SELECT MAX(StartTime) FROM rosters');

                    case 5:
                      maxRes = _context435.sent.values[0]['MAX(StartTime)'];
                      return _context435.abrupt("return", Promise.resolve({
                        min: minRes,
                        max: maxRes
                      }));

                    case 7:
                    case "end":
                      return _context435.stop();
                  }
                }
              }, _callee435, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getWeekDoneHrs",
          value: function getWeekDoneHrs(wO) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee436() {
              var wHrsRes;
              return regeneratorRuntime.wrap(function _callee436$(_context436) {
                while (1) {
                  switch (_context436.prev = _context436.next) {
                    case 0:
                      _context436.next = 2;
                      return this.userDB.query('SELECT SUM(TotalTime) FROM timesheets WHERE StartTime > ' + wO.s + ' AND StartTime < ' + wO.e);

                    case 2:
                      wHrsRes = _context436.sent.values[0]['SUM(TotalTime)'];
                      return _context436.abrupt("return", Promise.resolve(wHrsRes));

                    case 4:
                    case "end":
                      return _context436.stop();
                  }
                }
              }, _callee436, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "updateRosterTSMatch",
          value: function updateRosterTSMatch(rosItems) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee437() {
              var allURs, i, rId, rTSM, updateRes;
              return regeneratorRuntime.wrap(function _callee437$(_context437) {
                while (1) {
                  switch (_context437.prev = _context437.next) {
                    case 0:
                      allURs = [];
                      i = 0;

                    case 2:
                      if (!(i < rosItems.length)) {
                        _context437.next = 18;
                        break;
                      }

                      rId = rosItems[i].Id;
                      rTSM = rosItems[i].MatchedByTimesheet;
                      _context437.prev = 5;
                      _context437.next = 8;
                      return this.userDB.run('UPDATE rosters set MatchedByTimesheet = ' + rTSM + ' WHERE Id = ' + rId + ';');

                    case 8:
                      updateRes = _context437.sent;

                      if (updateRes.changes.changes !== -1) {
                        allURs.push({
                          rId: rId,
                          tId: rTSM
                        });
                        this.logger.info('[sqlServ|updateRosterTSMatch] (SUCCESS) Added MatchedByTimesheet Pty (' + rTSM + ') for Roster Id #' + rId);
                      }

                      _context437.next = 15;
                      break;

                    case 12:
                      _context437.prev = 12;
                      _context437.t0 = _context437["catch"](5);
                      this.logger.info('[sqlServ|updateRosterTSMatch] (ERROR):' + _context437.t0.message);

                    case 15:
                      i++;
                      _context437.next = 2;
                      break;

                    case 18:
                      if (!(allURs.length > 0)) {
                        _context437.next = 22;
                        break;
                      }

                      return _context437.abrupt("return", Promise.resolve(allURs));

                    case 22:
                      return _context437.abrupt("return", Promise.resolve([]));

                    case 23:
                    case "end":
                      return _context437.stop();
                  }
                }
              }, _callee437, this, [[5, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////
          ////// SYNC/UPDATE ///////////////////////////////////////////////////////////////////
          //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "initSync",
          value: function initSync() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee438() {
              var syncTbls, inCMD, okC, i, tN, tTS, inVals, tsRes;
              return regeneratorRuntime.wrap(function _callee438$(_context438) {
                while (1) {
                  switch (_context438.prev = _context438.next) {
                    case 0:
                      syncTbls = ['rosters', 'timesheets', 'tasks', 'memos'];
                      _context438.next = 3;
                      return this.insertItemsCMD('sync');

                    case 3:
                      inCMD = _context438.sent;
                      okC = 0;
                      i = 0;

                    case 6:
                      if (!(i < syncTbls.length)) {
                        _context438.next = 23;
                        break;
                      }

                      tN = syncTbls[i];
                      tTS = this.dT.getUT(new Date());
                      inVals = [null, tN, tTS, null];
                      _context438.prev = 10;
                      _context438.next = 13;
                      return this.userDB.run(inCMD, inVals);

                    case 13:
                      tsRes = _context438.sent;

                      if (tsRes.changes.changes !== -1) {
                        okC++;
                      }

                      _context438.next = 20;
                      break;

                    case 17:
                      _context438.prev = 17;
                      _context438.t0 = _context438["catch"](10);
                      this.logger.info('[sqlServ|initSync] (ERROR): ' + _context438.t0);

                    case 20:
                      i++;
                      _context438.next = 6;
                      break;

                    case 23:
                      ;

                      if (okC > 0) {
                        this.logger.info('[sqlServ|initSync] (SUCCESS): Created Sync Table (sync) & Set last_sync UTS For [ALL] DB Tables');
                      }

                    case 25:
                    case "end":
                      return _context438.stop();
                  }
                }
              }, _callee438, this, [[10, 17]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getSync",
          value: function getSync(tableN) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee439() {
              var monthAgoUTS, _yield$this$userDB$qu8, values, lS;

              return regeneratorRuntime.wrap(function _callee439$(_context439) {
                while (1) {
                  switch (_context439.prev = _context439.next) {
                    case 0:
                      monthAgoUTS = this.dT.getUT(this.dT.subWs(new Date(), 4));
                      _context439.prev = 1;
                      _context439.next = 4;
                      return this.userDB.query('SELECT last_sync FROM sync WHERE table_name="' + tableN + '"');

                    case 4:
                      _yield$this$userDB$qu8 = _context439.sent;
                      values = _yield$this$userDB$qu8.values;

                      if (!(values && values.length > 0)) {
                        _context439.next = 12;
                        break;
                      }

                      lS = values[0]['last_sync'];
                      this.logger.info('[sqlServ|getSync] (Found) Last Sync for ' + tableN + '=' + lS);
                      return _context439.abrupt("return", Promise.resolve(lS));

                    case 12:
                      this.logger.info('[sqlServ|getSync] (NOT FOUND) - Returning Sync UTS NOW less 4x Weeks');
                      return _context439.abrupt("return", Promise.resolve(monthAgoUTS));

                    case 14:
                      _context439.next = 20;
                      break;

                    case 16:
                      _context439.prev = 16;
                      _context439.t0 = _context439["catch"](1);
                      this.logger.info('[sqlServ|getSync] (Error):' + _context439.t0.message + ' - Returning Sync UTS NOW less 4x Weeks.');
                      return _context439.abrupt("return", Promise.resolve(monthAgoUTS));

                    case 20:
                    case "end":
                      return _context439.stop();
                  }
                }
              }, _callee439, this, [[1, 16]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "setSync",
          value: function setSync(tableN) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee440() {
              var sUTS, sSRes;
              return regeneratorRuntime.wrap(function _callee440$(_context440) {
                while (1) {
                  switch (_context440.prev = _context440.next) {
                    case 0:
                      sUTS = this.dT.getUT(new Date());
                      _context440.prev = 1;
                      _context440.next = 4;
                      return this.userDB.run('UPDATE sync SET last_sync = ' + sUTS + ' WHERE table_name = "' + tableN + '"');

                    case 4:
                      sSRes = _context440.sent.changes.changes;

                      if (!(sSRes !== -1)) {
                        _context440.next = 8;
                        break;
                      }

                      this.logger.info('[sqlServ|setSync] (SUCCESS) Updated last_sync UTS to ' + sUTS + ' for ' + tableN + ' DB Table');
                      return _context440.abrupt("return", Promise.resolve(true));

                    case 8:
                      _context440.next = 13;
                      break;

                    case 10:
                      _context440.prev = 10;
                      _context440.t0 = _context440["catch"](1);
                      this.logger.info('[sqlServ|setSync] (ERROR):' + _context440.t0.message);

                    case 13:
                    case "end":
                      return _context440.stop();
                  }
                }
              }, _callee440, this, [[1, 10]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "syncUpdateItem",
          value: function syncUpdateItem(sql, vals) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee441() {
              var _changes3;

              return regeneratorRuntime.wrap(function _callee441$(_context441) {
                while (1) {
                  switch (_context441.prev = _context441.next) {
                    case 0:
                      _context441.prev = 0;
                      _context441.next = 3;
                      return this.userDB.run(sql, vals);

                    case 3:
                      _changes3 = _context441.sent.changes.changes;

                      if (!(_changes3 !== -1)) {
                        _context441.next = 8;
                        break;
                      }

                      return _context441.abrupt("return", Promise.resolve(true));

                    case 8:
                      return _context441.abrupt("return", Promise.resolve(false));

                    case 9:
                      _context441.next = 14;
                      break;

                    case 11:
                      _context441.prev = 11;
                      _context441.t0 = _context441["catch"](0);
                      this.logger.info('♻️ [sqlServ|syncUpdateItem] (🔴 ERROR): ' + JSON.stringify(_context441.t0));

                    case 14:
                    case "end":
                      return _context441.stop();
                  }
                }
              }, _callee441, this, [[0, 11]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "replaceItem",
          value: function replaceItem(tableN, UID, UIDValue, newItem) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee442() {
              var _this164 = this;

              var consM, dpTblSchema, resEPName, _i40, _Object$entries10, _Object$entries10$_i, k, v, rawVals, updTypes, i, updVals, updSQL, _changes4;

              return regeneratorRuntime.wrap(function _callee442$(_context442) {
                while (1) {
                  switch (_context442.prev = _context442.next) {
                    case 0:
                      consM = function consM(r, x) {
                        var rT, xT;
                        x ? xT = ': ' + x : xT = '';
                        r === 's' ? rT = '✔️SUCCESS' : rT = '❌ERROR';
                        return _this164.logger.info('[sqlServ|replaceItem] 🛠️ (' + rT + ') UPDATE Item (' + UID + ':' + UIDValue + ') in ' + tableN + xT);
                      };

                      dpTblSchema = _baseDB__WEBPACK_IMPORTED_MODULE_2__.DefaultDB.tables.filter(function (x) {
                        return x.name === tableN;
                      })[0].schema;

                      for (_i40 = 0, _Object$entries10 = Object.entries(_baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources); _i40 < _Object$entries10.length; _i40++) {
                        _Object$entries10$_i = _slicedToArray(_Object$entries10[_i40], 2), k = _Object$entries10$_i[0], v = _Object$entries10$_i[1];

                        if (v === tableN) {
                          resEPName = k;
                        }
                      }

                      ;
                      rawVals = [];
                      updTypes = [];

                      for (i = 0; i < dpTblSchema.length; i++) {
                        rawVals.push(newItem[dpTblSchema[i].column]);
                        updTypes.push(dpTblSchema[i].value);
                      }

                      ;
                      _context442.next = 10;
                      return this.insDPTypeCheck(rawVals, updTypes);

                    case 10:
                      updVals = _context442.sent;
                      _context442.next = 13;
                      return this.insertItemsCMD(resEPName);

                    case 13:
                      updSQL = _context442.sent;
                      _context442.prev = 14;
                      _context442.next = 17;
                      return this.userDB.run(updSQL, updVals);

                    case 17:
                      _changes4 = _context442.sent.changes.changes;

                      if (!(_changes4 !== -1)) {
                        _context442.next = 23;
                        break;
                      }

                      consM('s', null);
                      return _context442.abrupt("return", Promise.resolve({
                        result: true,
                        id: UIDValue
                      }));

                    case 23:
                      consM('e', 'changes===-1');
                      return _context442.abrupt("return", Promise.resolve({
                        result: false,
                        id: UIDValue
                      }));

                    case 25:
                      _context442.next = 31;
                      break;

                    case 27:
                      _context442.prev = 27;
                      _context442.t0 = _context442["catch"](14);
                      consM('e', _context442.t0.message);
                      return _context442.abrupt("return", Promise.resolve({
                        result: false,
                        id: UIDValue
                      }));

                    case 31:
                    case "end":
                      return _context442.stop();
                  }
                }
              }, _callee442, this, [[14, 27]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "insertSingleItem",
          value: function insertSingleItem(tableN, rawItem) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee443() {
              var _this165 = this;

              var resName, _i41, _Object$entries11, _Object$entries11$_i, key, value, tblValTypes, tblInsertCMD, noRawObjKeys, rawKeyCount, wipObj, _loop6, _i42, _Object$entries12, _ret;

              return regeneratorRuntime.wrap(function _callee443$(_context444) {
                while (1) {
                  switch (_context444.prev = _context444.next) {
                    case 0:
                      this.logger.info('[sqlServ|insertSingleItem] (' + tableN + ',' + rawItem + ')...');

                      if (tableN === 'rosters') {
                        resName = 'Roster';
                      } else {
                        for (_i41 = 0, _Object$entries11 = Object.entries(_baseDB__WEBPACK_IMPORTED_MODULE_2__.Resources); _i41 < _Object$entries11.length; _i41++) {
                          _Object$entries11$_i = _slicedToArray(_Object$entries11[_i41], 2), key = _Object$entries11$_i[0], value = _Object$entries11$_i[1];

                          if (tableN === value) {
                            resName = key.toString();
                          }
                        }
                      }

                      ;
                      _context444.next = 5;
                      return this.valueTypes(resName);

                    case 5:
                      tblValTypes = _context444.sent;
                      _context444.next = 8;
                      return this.insertItemsCMD(resName);

                    case 8:
                      tblInsertCMD = _context444.sent;
                      noRawObjKeys = Object.keys(rawItem).length;
                      rawKeyCount = 0;
                      wipObj = rawItem;
                      _loop6 = /*#__PURE__*/regeneratorRuntime.mark(function _loop6() {
                        var _Object$entries12$_i, key, value, isArray, isObject, isPlain, totalVals, valCount, thisValsArr, _i43, _Object$keys2, thisPropName;

                        return regeneratorRuntime.wrap(function _loop6$(_context443) {
                          while (1) {
                            switch (_context443.prev = _context443.next) {
                              case 0:
                                _Object$entries12$_i = _slicedToArray(_Object$entries12[_i42], 2), key = _Object$entries12$_i[0], value = _Object$entries12$_i[1];
                                rawKeyCount++;

                                if (key.includes('_')) {
                                  delete wipObj[key];
                                } else {
                                  if (typeof value == 'object') {
                                    if (value == null || value == undefined) {
                                      if (tblValTypes[key] === 'string') {
                                        wipObj[key] = String('');
                                      } else {
                                        wipObj[key] = Number(-1);
                                      }
                                    } else {
                                      isArray = function isArray() {
                                        return Array.isArray(value) ? true : false;
                                      };

                                      isObject = function isObject() {
                                        return value == Object(value) && !Array.isArray(value) ? true : false;
                                      };

                                      isPlain = function isPlain() {
                                        var proto = value;

                                        while (Object.getPrototypeOf(proto) !== null) {
                                          proto = Object.getPrototypeOf(proto);
                                        }

                                        return Object.getPrototypeOf(value) === proto;
                                      };

                                      if (isArray || isObject || isPlain) {
                                        wipObj[key] = JSON.stringify(value);
                                      }

                                      ;
                                    }
                                  }

                                  if (value === 'null' || value === 'undefined') {
                                    if (tblValTypes[key] === 'string') {
                                      wipObj[key] = String('');
                                    } else {
                                      wipObj[key] = Number(-1);
                                    }
                                  }

                                  ;

                                  if (typeof value === 'boolean') {
                                    if (value) {
                                      wipObj[key] = Number(1);
                                    } else {
                                      wipObj[key] = Number(0);
                                    }
                                  }

                                  ;

                                  if (key === 'Date' || key === 'DateTime') {
                                    wipObj[key] = value.toString();
                                  }

                                  ;
                                }

                                if (!(rawKeyCount === noRawObjKeys)) {
                                  _context443.next = 27;
                                  break;
                                }

                                totalVals = Object.keys(tblValTypes).length;
                                valCount = 0;
                                thisValsArr = [];
                                _i43 = 0, _Object$keys2 = Object.keys(tblValTypes);

                              case 8:
                                if (!(_i43 < _Object$keys2.length)) {
                                  _context443.next = 27;
                                  break;
                                }

                                thisPropName = _Object$keys2[_i43];
                                valCount++;
                                thisValsArr.push(wipObj[thisPropName]);

                                if (!(valCount === totalVals)) {
                                  _context443.next = 23;
                                  break;
                                }

                                _context443.prev = 13;
                                _context443.next = 16;
                                return _this165.userDB.run(tblInsertCMD, thisValsArr);

                              case 16:
                                return _context443.abrupt("return", {
                                  v: Promise.resolve(true)
                                });

                              case 19:
                                _context443.prev = 19;
                                _context443.t0 = _context443["catch"](13);

                                _this165.logger.info('[sqlServ|insertSingleItem] (Error): ' + _context443.t0);

                                return _context443.abrupt("return", {
                                  v: Promise.resolve(false)
                                });

                              case 23:
                                ;

                              case 24:
                                _i43++;
                                _context443.next = 8;
                                break;

                              case 27:
                              case "end":
                                return _context443.stop();
                            }
                          }
                        }, _loop6, null, [[13, 19]]);
                      });
                      _i42 = 0, _Object$entries12 = Object.entries(rawItem);

                    case 14:
                      if (!(_i42 < _Object$entries12.length)) {
                        _context444.next = 22;
                        break;
                      }

                      return _context444.delegateYield(_loop6(), "t0", 16);

                    case 16:
                      _ret = _context444.t0;

                      if (!(typeof _ret === "object")) {
                        _context444.next = 19;
                        break;
                      }

                      return _context444.abrupt("return", _ret.v);

                    case 19:
                      _i42++;
                      _context444.next = 14;
                      break;

                    case 22:
                    case "end":
                      return _context444.stop();
                  }
                }
              }, _callee443, this);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////
          ///// PROFILE - COUNTRIES/STATES /////////////////////////////////////////////////////
          //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "createProfile",
          value: function createProfile(profileData) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee444() {
              var insVals, insCMD, uUKStr, nowUTS, i, fName, newV, rawV, cPRes;
              return regeneratorRuntime.wrap(function _callee444$(_context445) {
                while (1) {
                  switch (_context445.prev = _context445.next) {
                    case 0:
                      insVals = [];
                      _context445.next = 3;
                      return this.insertItemsCMD('deputy_profile');

                    case 3:
                      insCMD = _context445.sent;
                      uUKStr = this.deputy.uUK.toString();
                      nowUTS = this.dT.gUT();
                      insVals.push(uUKStr);

                      for (i = 0; i < _profileData__WEBPACK_IMPORTED_MODULE_3__.pKeys.length; i++) {
                        fName = _profileData__WEBPACK_IMPORTED_MODULE_3__.pKeys[i];
                        newV = void 0;
                        rawV = profileData[fName].value;

                        if (rawV === null || rawV === 'null' || rawV === undefined || rawV === 'undefined' || rawV === '') {
                          newV = null;
                        } else if (fName === 'photo') {
                          newV = JSON.stringify(rawV);
                        } else {
                          newV = rawV.toString().trim();
                        }

                        ;
                        insVals.push(newV);
                      }

                      ;
                      insVals.push(nowUTS);
                      insVals.push(nowUTS);
                      _context445.prev = 11;
                      _context445.next = 14;
                      return this.userDB.run(insCMD, insVals);

                    case 14:
                      cPRes = _context445.sent.changes.changes;

                      if (!(cPRes !== -1)) {
                        _context445.next = 19;
                        break;
                      }

                      return _context445.abrupt("return", Promise.resolve(true));

                    case 19:
                      return _context445.abrupt("return", Promise.resolve(false));

                    case 20:
                      _context445.next = 25;
                      break;

                    case 22:
                      _context445.prev = 22;
                      _context445.t0 = _context445["catch"](11);
                      return _context445.abrupt("return", Promise.resolve(false));

                    case 25:
                    case "end":
                      return _context445.stop();
                  }
                }
              }, _callee444, this, [[11, 22]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "hasProfile",
          value: function hasProfile() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee445() {
              var hPRes, i, pO;
              return regeneratorRuntime.wrap(function _callee445$(_context446) {
                while (1) {
                  switch (_context446.prev = _context446.next) {
                    case 0:
                      _context446.prev = 0;
                      _context446.next = 3;
                      return this.userDB.query('SELECT dp_uuk FROM deputy_profile');

                    case 3:
                      hPRes = _context446.sent.values;

                      if (!(hPRes.length > 0)) {
                        _context446.next = 17;
                        break;
                      }

                      i = 0;

                    case 6:
                      if (!(i < hPRes.length)) {
                        _context446.next = 13;
                        break;
                      }

                      pO = hPRes[i];

                      if (!(pO['dp_uuk'].toString() === this.deputy.uUK.toString())) {
                        _context446.next = 10;
                        break;
                      }

                      return _context446.abrupt("return", Promise.resolve(true));

                    case 10:
                      i++;
                      _context446.next = 6;
                      break;

                    case 13:
                      ;
                      return _context446.abrupt("return", Promise.resolve(false));

                    case 17:
                      return _context446.abrupt("return", Promise.resolve(false));

                    case 18:
                      _context446.next = 23;
                      break;

                    case 20:
                      _context446.prev = 20;
                      _context446.t0 = _context446["catch"](0);
                      return _context446.abrupt("return", Promise.resolve(false));

                    case 23:
                    case "end":
                      return _context446.stop();
                  }
                }
              }, _callee445, this, [[0, 20]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getProfile",
          value: function getProfile() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee446() {
              var gPRes;
              return regeneratorRuntime.wrap(function _callee446$(_context447) {
                while (1) {
                  switch (_context447.prev = _context447.next) {
                    case 0:
                      _context447.prev = 0;
                      _context447.next = 3;
                      return this.userDB.query("SELECT * FROM deputy_profile WHERE dp_uuk = '" + this.deputy.uUK + "'");

                    case 3:
                      gPRes = _context447.sent.values;

                      if (!(gPRes.length > 0)) {
                        _context447.next = 8;
                        break;
                      }

                      return _context447.abrupt("return", Promise.resolve({
                        result: true,
                        data: gPRes[0]
                      }));

                    case 8:
                      Promise.resolve({
                        result: false,
                        data: null
                      });

                    case 9:
                      _context447.next = 14;
                      break;

                    case 11:
                      _context447.prev = 11;
                      _context447.t0 = _context447["catch"](0);
                      return _context447.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context447.t0
                      }));

                    case 14:
                    case "end":
                      return _context447.stop();
                  }
                }
              }, _callee446, this, [[0, 11]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "updateProfile",
          value: function updateProfile(profileObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee447() {
              var delRes, insRes;
              return regeneratorRuntime.wrap(function _callee447$(_context448) {
                while (1) {
                  switch (_context448.prev = _context448.next) {
                    case 0:
                      _context448.prev = 0;
                      _context448.next = 3;
                      return this.userDB.run("DELETE FROM deputy_profile WHERE dp_uuk = '" + this.deputy.uUK + "'");

                    case 3:
                      delRes = _context448.sent;

                      if (!(delRes.changes.changes !== -1)) {
                        _context448.next = 17;
                        break;
                      }

                      this.logger.info('[sqlServ|updateProfile] (STEP #1) [SUCCESS] - DELETED OLD Profile - OK.');
                      _context448.next = 8;
                      return this.createProfile(profileObj);

                    case 8:
                      insRes = _context448.sent;

                      if (!insRes) {
                        _context448.next = 14;
                        break;
                      }

                      this.logger.info('[sqlServ|updateProfile] (STEP #2) [SUCCESS] - ADDED NEW Profile - OK.');
                      return _context448.abrupt("return", Promise.resolve(true));

                    case 14:
                      this.logger.info('[sqlServ|updateProfile] (STEP #2) [ERROR] - FAILED TO ADD NEW Profile.');

                    case 15:
                      _context448.next = 19;
                      break;

                    case 17:
                      this.logger.info('[sqlServ|updateProfile] (STEP #1) [ERROR] - FAILED TO DELETE OLD Profile.');
                      return _context448.abrupt("return", Promise.resolve(false));

                    case 19:
                      _context448.next = 24;
                      break;

                    case 21:
                      _context448.prev = 21;
                      _context448.t0 = _context448["catch"](0);
                      this.logger.info('[sqlServ|updateProfile] (Error) - FAILED TO UPDATE Profile.');

                    case 24:
                    case "end":
                      return _context448.stop();
                  }
                }
              }, _callee447, this, [[0, 21]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getStates",
          value: function getStates(countryId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee448() {
              var cId, gSRes;
              return regeneratorRuntime.wrap(function _callee448$(_context449) {
                while (1) {
                  switch (_context449.prev = _context449.next) {
                    case 0:
                      cId = Number(countryId);
                      _context449.prev = 1;
                      _context449.next = 4;
                      return this.userDB.query('SELECT * FROM states WHERE Country = ' + cId + ';');

                    case 4:
                      gSRes = _context449.sent.values;

                      if (!(gSRes.length > 0)) {
                        _context449.next = 9;
                        break;
                      }

                      return _context449.abrupt("return", Promise.resolve({
                        result: true,
                        data: gSRes
                      }));

                    case 9:
                      return _context449.abrupt("return", Promise.resolve({
                        result: true,
                        data: []
                      }));

                    case 10:
                      _context449.next = 15;
                      break;

                    case 12:
                      _context449.prev = 12;
                      _context449.t0 = _context449["catch"](1);
                      return _context449.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context449.t0
                      }));

                    case 15:
                    case "end":
                      return _context449.stop();
                  }
                }
              }, _callee448, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getSingleState",
          value: function getSingleState(stateId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee449() {
              var sId, gSSRes;
              return regeneratorRuntime.wrap(function _callee449$(_context450) {
                while (1) {
                  switch (_context450.prev = _context450.next) {
                    case 0:
                      sId = Number(stateId);
                      _context450.prev = 1;
                      _context450.next = 4;
                      return this.userDB.query('SELECT * FROM states WHERE Id = ' + sId + ';');

                    case 4:
                      gSSRes = _context450.sent.values;

                      if (!(gSSRes.length > 0)) {
                        _context450.next = 9;
                        break;
                      }

                      return _context450.abrupt("return", Promise.resolve({
                        result: true,
                        data: gSSRes[0]
                      }));

                    case 9:
                      return _context450.abrupt("return", Promise.resolve({
                        result: true,
                        data: null
                      }));

                    case 10:
                      _context450.next = 15;
                      break;

                    case 12:
                      _context450.prev = 12;
                      _context450.t0 = _context450["catch"](1);
                      return _context450.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context450.t0
                      }));

                    case 15:
                    case "end":
                      return _context450.stop();
                  }
                }
              }, _callee449, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getSingleCountry",
          value: function getSingleCountry(countryId) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee450() {
              var cId, gSCRes;
              return regeneratorRuntime.wrap(function _callee450$(_context451) {
                while (1) {
                  switch (_context451.prev = _context451.next) {
                    case 0:
                      cId = Number(countryId);
                      _context451.prev = 1;
                      _context451.next = 4;
                      return this.userDB.query('SELECT * FROM countries WHERE Id = ' + cId + ';');

                    case 4:
                      gSCRes = _context451.sent.values;

                      if (!(gSCRes.length > 0)) {
                        _context451.next = 9;
                        break;
                      }

                      return _context451.abrupt("return", Promise.resolve({
                        result: true,
                        data: gSCRes[0]
                      }));

                    case 9:
                      return _context451.abrupt("return", Promise.resolve({
                        result: true,
                        data: null
                      }));

                    case 10:
                      _context451.next = 15;
                      break;

                    case 12:
                      _context451.prev = 12;
                      _context451.t0 = _context451["catch"](1);
                      return _context451.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context451.t0
                      }));

                    case 15:
                    case "end":
                      return _context451.stop();
                  }
                }
              }, _callee450, this, [[1, 12]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "qCountry",
          value: function qCountry(searchTxt) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee451() {
              var qCRes;
              return regeneratorRuntime.wrap(function _callee451$(_context452) {
                while (1) {
                  switch (_context452.prev = _context452.next) {
                    case 0:
                      _context452.prev = 0;
                      _context452.next = 3;
                      return this.userDB.query("SELECT * FROM countries WHERE Country LIKE '%" + searchTxt + "%';");

                    case 3:
                      qCRes = _context452.sent.values;

                      if (!(qCRes.length > 0)) {
                        _context452.next = 8;
                        break;
                      }

                      return _context452.abrupt("return", Promise.resolve(qCRes));

                    case 8:
                      return _context452.abrupt("return", Promise.resolve([]));

                    case 9:
                      _context452.next = 15;
                      break;

                    case 11:
                      _context452.prev = 11;
                      _context452.t0 = _context452["catch"](0);
                      this.logger.info('[sqlServ|qCountry] (Error): ' + _context452.t0);
                      return _context452.abrupt("return", Promise.reject(_context452.t0));

                    case 15:
                    case "end":
                      return _context452.stop();
                  }
                }
              }, _callee451, this, [[0, 11]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getAllCsOrSs",
          value: function getAllCsOrSs(cOs) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee452() {
              var tblN, gARes;
              return regeneratorRuntime.wrap(function _callee452$(_context453) {
                while (1) {
                  switch (_context453.prev = _context453.next) {
                    case 0:
                      this.logger.info('[sqlServ|getAllCsOrSs] (' + cOs + ')...');
                      cOs === 'c' ? tblN = 'countries' : tblN = 'states';
                      _context453.prev = 2;
                      _context453.next = 5;
                      return this.userDB.query('SELECT * FROM ' + tblN);

                    case 5:
                      gARes = _context453.sent.values;

                      if (!(gARes.length > 0)) {
                        _context453.next = 10;
                        break;
                      }

                      return _context453.abrupt("return", Promise.resolve({
                        result: true,
                        data: gARes
                      }));

                    case 10:
                      return _context453.abrupt("return", Promise.resolve({
                        result: false,
                        data: []
                      }));

                    case 11:
                      _context453.next = 16;
                      break;

                    case 13:
                      _context453.prev = 13;
                      _context453.t0 = _context453["catch"](2);
                      return _context453.abrupt("return", Promise.resolve({
                        result: false,
                        data: _context453.t0
                      }));

                    case 16:
                    case "end":
                      return _context453.stop();
                  }
                }
              }, _callee452, this, [[2, 13]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////
          ///// NEWS/MEMOS /////////////////////////////////////////////////////////////////////
          //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getXMemoItems",
          value: function getXMemoItems(itemLimit, itemOffset) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee453() {
              var iL, iO, xCMD, CMD, getXTSRes;
              return regeneratorRuntime.wrap(function _callee453$(_context454) {
                while (1) {
                  switch (_context454.prev = _context454.next) {
                    case 0:
                      itemLimit > 0 ? iL = 'LIMIT ' + itemLimit + ' ' : iL = '';
                      itemOffset > 0 ? iO = 'OFFSET ' + itemOffset : iO = '';
                      xCMD = 'SELECT * FROM memos ORDER BY Id DESC ' + iL + iO;
                      CMD = xCMD.trim() + ';';
                      _context454.prev = 4;
                      _context454.next = 7;
                      return this.userDB.query(CMD);

                    case 7:
                      getXTSRes = _context454.sent;
                      return _context454.abrupt("return", Promise.resolve(getXTSRes.values));

                    case 11:
                      _context454.prev = 11;
                      _context454.t0 = _context454["catch"](4);
                      return _context454.abrupt("return", Promise.reject(new Error('[sqlServ|getXMemoItems] (ERROR): ' + _context454.t0.message)));

                    case 14:
                    case "end":
                      return _context454.stop();
                  }
                }
              }, _callee453, this, [[4, 11]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "updateTaskSortOrder",
          value: function updateTaskSortOrder(taskId, newSortOrder) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee454() {
              var uTSORes;
              return regeneratorRuntime.wrap(function _callee454$(_context455) {
                while (1) {
                  switch (_context455.prev = _context455.next) {
                    case 0:
                      _context455.prev = 0;
                      _context455.next = 3;
                      return this.userDB.run('UPDATE tasks set SortOrder = ' + newSortOrder + ' WHERE Id = ' + taskId + ';');

                    case 3:
                      uTSORes = _context455.sent;

                      if (!(uTSORes.changes.changes !== -1)) {
                        _context455.next = 7;
                        break;
                      }

                      this.logger.info('[sqlServ|updateTaskSortOrder] (SUCCESS) Updated SortOrder (' + newSortOrder + ') for Task Id #' + taskId);
                      return _context455.abrupt("return", Promise.resolve(true));

                    case 7:
                      _context455.next = 13;
                      break;

                    case 9:
                      _context455.prev = 9;
                      _context455.t0 = _context455["catch"](0);
                      this.logger.info('[sqlServ|updateTaskSortOrder] (ERROR): ' + _context455.t0.message);
                      return _context455.abrupt("return", Promise.resolve(false));

                    case 13:
                    case "end":
                      return _context455.stop();
                  }
                }
              }, _callee454, this, [[0, 9]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////
          ///// SHERIFF SETTINGS ///////////////////////////////////////////////////////////////
          //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "hasSettings",
          value: function hasSettings() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee455() {
              var _this166 = this;

              var hSRes, matchArr;
              return regeneratorRuntime.wrap(function _callee455$(_context456) {
                while (1) {
                  switch (_context456.prev = _context456.next) {
                    case 0:
                      this.logger.info('[sqlServ|hasSettings] ()...');
                      _context456.prev = 1;
                      _context456.next = 4;
                      return this.userDB.query('SELECT dp_uuk FROM `sheriff_settings`');

                    case 4:
                      hSRes = _context456.sent.values;

                      if (!(hSRes.length > 0)) {
                        _context456.next = 14;
                        break;
                      }

                      matchArr = hSRes.filter(function (sO) {
                        return String(sO.dp_uuk) === String(_this166.deputy.uUK);
                      });

                      if (!(matchArr && matchArr.length > 0)) {
                        _context456.next = 11;
                        break;
                      }

                      return _context456.abrupt("return", Promise.resolve(true));

                    case 11:
                      return _context456.abrupt("return", Promise.resolve(false));

                    case 12:
                      _context456.next = 15;
                      break;

                    case 14:
                      return _context456.abrupt("return", Promise.resolve(false));

                    case 15:
                      _context456.next = 20;
                      break;

                    case 17:
                      _context456.prev = 17;
                      _context456.t0 = _context456["catch"](1);
                      return _context456.abrupt("return", Promise.resolve(false));

                    case 20:
                    case "end":
                      return _context456.stop();
                  }
                }
              }, _callee455, this, [[1, 17]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "setSettings",
          value: function setSettings(settingsObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee456() {
              var uUKStr, settingsStr, inCMD, inVals;
              return regeneratorRuntime.wrap(function _callee456$(_context457) {
                while (1) {
                  switch (_context457.prev = _context457.next) {
                    case 0:
                      this.logger.info('[sqlServ|setSettings] (setObj)...');
                      uUKStr = this.deputy.uUK.toString();
                      settingsStr = JSON.stringify(settingsObj);
                      inCMD = 'INSERT OR REPLACE INTO `sheriff_settings` (dp_uuk,settings) VALUES (?,?)';
                      inVals = [uUKStr, settingsStr];
                      _context457.prev = 5;
                      _context457.next = 8;
                      return this.userDB.run(inCMD, inVals);

                    case 8:
                      _context457.next = 10;
                      return this.dS.setSettings(settingsObj);

                    case 10:
                      return _context457.abrupt("return", Promise.resolve(true));

                    case 13:
                      _context457.prev = 13;
                      _context457.t0 = _context457["catch"](5);
                      _context457.next = 17;
                      return this.dS.setSettings(settingsObj);

                    case 17:
                      return _context457.abrupt("return", Promise.resolve(false));

                    case 18:
                      ;

                    case 19:
                    case "end":
                      return _context457.stop();
                  }
                }
              }, _callee456, this, [[5, 13]]);
            }));
          } //////////////////////////////////////////////////////////////////////////////////////

        }, {
          key: "getSettings",
          value: function getSettings() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee457() {
              var detailRes, gSRes, settStr, settObj;
              return regeneratorRuntime.wrap(function _callee457$(_context458) {
                while (1) {
                  switch (_context458.prev = _context458.next) {
                    case 0:
                      this.logger.info('[sqlServ|getSettings] ()...');
                      _context458.next = 3;
                      return this.dS.getSettings();

                    case 3:
                      detailRes = _context458.sent;

                      if (!(detailRes !== null)) {
                        _context458.next = 8;
                        break;
                      }

                      return _context458.abrupt("return", Promise.resolve({
                        result: true,
                        data: detailRes
                      }));

                    case 8:
                      _context458.prev = 8;
                      _context458.next = 11;
                      return this.userDB.query('SELECT * FROM `sheriff_settings` WHERE `dp_uuk` = "' + this.deputy.uUK + '"');

                    case 11:
                      gSRes = _context458.sent.values;

                      if (!(gSRes.length > 0)) {
                        _context458.next = 26;
                        break;
                      }

                      if (!(gSRes[0].hasOwnProperty('settings') && gSRes[0].settings)) {
                        _context458.next = 23;
                        break;
                      }

                      settStr = gSRes[0].settings;

                      if (!this.evServ.isValidJSON(settStr)) {
                        _context458.next = 20;
                        break;
                      }

                      settObj = JSON.parse(settStr);
                      return _context458.abrupt("return", Promise.resolve({
                        result: true,
                        data: settObj
                      }));

                    case 20:
                      return _context458.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 21:
                      _context458.next = 24;
                      break;

                    case 23:
                      return _context458.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 24:
                      _context458.next = 27;
                      break;

                    case 26:
                      return _context458.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 27:
                      _context458.next = 32;
                      break;

                    case 29:
                      _context458.prev = 29;
                      _context458.t0 = _context458["catch"](8);
                      return _context458.abrupt("return", Promise.resolve({
                        result: false
                      }));

                    case 32:
                    case "end":
                      return _context458.stop();
                  }
                }
              }, _callee457, this, [[8, 29]]);
            }));
          }
        }]);

        return SQLiteService;
      }();

      _SQLiteService.ctorParameters = function () {
        return [{
          type: _deputy_service__WEBPACK_IMPORTED_MODULE_6__.DeputyService
        }, {
          type: _storage_service__WEBPACK_IMPORTED_MODULE_8__.StorageService
        }, {
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_11__.NGXLogger
        }, {
          type: _detail_service__WEBPACK_IMPORTED_MODULE_1__.DetailService
        }, {
          type: _events_service__WEBPACK_IMPORTED_MODULE_5__.EventsService
        }, {
          type: _filesystem_service__WEBPACK_IMPORTED_MODULE_7__.FileSystemService
        }, {
          type: _datetime_service__WEBPACK_IMPORTED_MODULE_0__.DateTimeService
        }];
      };

      _SQLiteService = (0, tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_12__.Injectable)() //////////////////////////////////////////////////////////////////////////////////////
      ], _SQLiteService);
      /***/
    },

    /***/
    71188:
    /*!*********************************************!*\
      !*** ./src/app/services/storage.service.ts ***!
      \*********************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "StorageService": function StorageService() {
          return (
            /* binding */
            _StorageService
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ngx-logger */
      62740);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _capacitor_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @capacitor/storage */
      96628); ////////////////////////////////////////////////////////////////


      var _StorageService = /*#__PURE__*/function () {
        ////////////////////////////////////////////////////////////////
        function StorageService(logger) {
          _classCallCheck(this, StorageService);

          this.logger = logger;
        } ////////////////////////////////////////////////////////////////


        _createClass(StorageService, [{
          key: "setObject",
          value: function setObject(setKey, setObj) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee458() {
              var _this167 = this;

              return regeneratorRuntime.wrap(function _callee458$(_context459) {
                while (1) {
                  switch (_context459.prev = _context459.next) {
                    case 0:
                      _context459.next = 2;
                      return _capacitor_storage__WEBPACK_IMPORTED_MODULE_0__.Storage.set({
                        key: setKey,
                        value: JSON.stringify(setObj)
                      }).then(function () {
                        _this167.logger.info('[storeServ|setObj] Object (' + setKey + ") Set - \u2714\uFE0FOK");

                        return true;
                      })["catch"](function () {
                        _this167.logger.info('[storeServ|setObj] Object (' + setKey + ") Set - \u2757ERROR");
                      });

                    case 2:
                    case "end":
                      return _context459.stop();
                  }
                }
              }, _callee458);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "getObject",
          value: function getObject(getKey) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee459() {
              var getO;
              return regeneratorRuntime.wrap(function _callee459$(_context460) {
                while (1) {
                  switch (_context460.prev = _context460.next) {
                    case 0:
                      _context460.next = 2;
                      return _capacitor_storage__WEBPACK_IMPORTED_MODULE_0__.Storage.get({
                        key: getKey
                      });

                    case 2:
                      getO = _context460.sent;

                      if (!getO.value) {
                        _context460.next = 8;
                        break;
                      }

                      this.logger.info('[storeServ|getObj] Object (' + getKey + ") Get - \u2714\uFE0FFOUND");
                      return _context460.abrupt("return", JSON.parse(getO.value));

                    case 8:
                      this.logger.info('[storeServ|getObj] Object (' + getKey + ") Get - \u2757NOT FOUND");
                      return _context460.abrupt("return", null);

                    case 10:
                    case "end":
                      return _context460.stop();
                  }
                }
              }, _callee459, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "setItem",
          value: function setItem(setKey, setVal) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee460() {
              var _this168 = this;

              return regeneratorRuntime.wrap(function _callee460$(_context461) {
                while (1) {
                  switch (_context461.prev = _context461.next) {
                    case 0:
                      _context461.next = 2;
                      return _capacitor_storage__WEBPACK_IMPORTED_MODULE_0__.Storage.set({
                        key: setKey,
                        value: setVal
                      }).then(function () {
                        _this168.logger.info('[storeServ|setItem] Item (' + setKey + ") Set - \u2714\uFE0FOK");

                        return true;
                      })["catch"](function () {
                        _this168.logger.info('[storeServ|setItem] Item (' + setKey + ") Set - \u2757ERROR");
                      });

                    case 2:
                    case "end":
                      return _context461.stop();
                  }
                }
              }, _callee460);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "getItem",
          value: function getItem(getKey) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee461() {
              var getI;
              return regeneratorRuntime.wrap(function _callee461$(_context462) {
                while (1) {
                  switch (_context462.prev = _context462.next) {
                    case 0:
                      _context462.next = 2;
                      return _capacitor_storage__WEBPACK_IMPORTED_MODULE_0__.Storage.get({
                        key: getKey
                      });

                    case 2:
                      getI = _context462.sent;

                      if (!getI.value) {
                        _context462.next = 8;
                        break;
                      }

                      this.logger.info('[storeServ|getItem] Item (' + getKey + ") Get - \u2714\uFE0FFOUND");
                      return _context462.abrupt("return", getI.value);

                    case 8:
                      this.logger.info('[storeServ|getItem] Item (' + getKey + ") Get - \u2757NOT FOUND");
                      return _context462.abrupt("return", null);

                    case 10:
                    case "end":
                      return _context462.stop();
                  }
                }
              }, _callee461, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "removeItem",
          value: function removeItem(removeKey) {
            var _this169 = this;

            _capacitor_storage__WEBPACK_IMPORTED_MODULE_0__.Storage.remove({
              key: removeKey
            }).then(function () {
              _this169.logger.info('[storeServ|removeItem] Item (' + removeKey + ") Remove - \u2714\uFE0FOK");
            })["catch"](function () {
              _this169.logger.info('[storeServ|removeItem] Item (' + removeKey + ") Remove - \u2757ERROR");
            });
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "listKeys",
          value: function listKeys() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee462() {
              var listK;
              return regeneratorRuntime.wrap(function _callee462$(_context463) {
                while (1) {
                  switch (_context463.prev = _context463.next) {
                    case 0:
                      _context463.next = 2;
                      return _capacitor_storage__WEBPACK_IMPORTED_MODULE_0__.Storage.keys();

                    case 2:
                      listK = _context463.sent;

                      if (!listK.keys) {
                        _context463.next = 8;
                        break;
                      }

                      this.logger.info("[storeServ|listKeys] List Keys - \u2714\uFE0FFOUND [" + listK.keys.length + '] Keys');
                      return _context463.abrupt("return", listK.keys);

                    case 8:
                      this.logger.info("[storeServ|listKeys] List Keys - \u2757NO KEYS FOUND");
                      return _context463.abrupt("return", null);

                    case 10:
                    case "end":
                      return _context463.stop();
                  }
                }
              }, _callee462, this);
            }));
          } ////////////////////////////////////////////////////////////////

        }, {
          key: "clearStorage",
          value: function clearStorage() {
            var _this170 = this;

            _capacitor_storage__WEBPACK_IMPORTED_MODULE_0__.Storage.clear().then(function () {
              _this170.logger.info("[storeServ|clearStorage] Clear Storage - \u2714\uFE0FDONE!");
            })["catch"](function () {
              _this170.logger.info("[storeServ|clearStorage] Clear Storage - \u2757ERROR");
            });
          }
        }]);

        return StorageService;
      }();

      _StorageService.ctorParameters = function () {
        return [{
          type: ngx_logger__WEBPACK_IMPORTED_MODULE_2__.NGXLogger
        }];
      };

      _StorageService = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
        providedIn: 'root'
      }) ////////////////////////////////////////////////////////////////
      ], _StorageService);
      /***/
    },

    /***/
    92340:
    /*!*****************************************!*\
      !*** ./src/environments/environment.ts ***!
      \*****************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "environment": function environment() {
          return (
            /* binding */
            _environment
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var ngx_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ngx-logger */
      62740); /////////////////////////////////////////////////////////////////////////


      var _environment = {
        production: false,
        logging: {
          level: ngx_logger__WEBPACK_IMPORTED_MODULE_0__.NgxLoggerLevel.DEBUG
        },
        firebase: {
          projectId: 'sherifffb-90311',
          appId: '1:806779609016:web:214578b33e0fd15820f94d',
          storageBucket: 'sherifffb-90311.appspot.com',
          locationId: 'australia-southeast1',
          apiKey: 'AIzaSyAKjQhMIHzgMJWtYhOU51V0BiSIYmVYqqQ',
          authDomain: 'sherifffb-90311.firebaseapp.com',
          messagingSenderId: '806779609016'
        }
      };
      /***/
    },

    /***/
    14431:
    /*!*********************!*\
      !*** ./src/main.ts ***!
      \*********************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/platform-browser-dynamic */
      24608);
      /* harmony import */


      var _app_app_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./app/app.module */
      36747);
      /* harmony import */


      var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./environments/environment */
      92340);
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @capacitor/core */
      68384);

      if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__.environment.production) {
        (0, _angular_core__WEBPACK_IMPORTED_MODULE_3__.enableProdMode)();
      }

      (0, _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_4__.platformBrowserDynamic)().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_0__.AppModule)["catch"](function (err) {
        return console.log(err);
      });
      /***/
    },

    /***/
    50863:
    /*!******************************************************************************************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/ lazy ^\.\/.*\.entry\.js$ include: \.entry\.js$ exclude: \.system\.entry\.js$ namespace object ***!
      \******************************************************************************************************************************************/

    /***/
    function _(module, __unused_webpack_exports, __webpack_require__) {
      var map = {
        "./ion-action-sheet.entry.js": [47321, "common", "node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js"],
        "./ion-alert.entry.js": [36108, "common", "node_modules_ionic_core_dist_esm_ion-alert_entry_js"],
        "./ion-app_8.entry.js": [31489, "common", "node_modules_ionic_core_dist_esm_ion-app_8_entry_js"],
        "./ion-avatar_3.entry.js": [10305, "common", "node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js"],
        "./ion-back-button.entry.js": [15830, "common", "node_modules_ionic_core_dist_esm_ion-back-button_entry_js"],
        "./ion-backdrop.entry.js": [37757, "node_modules_ionic_core_dist_esm_ion-backdrop_entry_js"],
        "./ion-button_2.entry.js": [30392, "common", "node_modules_ionic_core_dist_esm_ion-button_2_entry_js"],
        "./ion-card_5.entry.js": [66911, "common", "node_modules_ionic_core_dist_esm_ion-card_5_entry_js"],
        "./ion-checkbox.entry.js": [30937, "common", "node_modules_ionic_core_dist_esm_ion-checkbox_entry_js"],
        "./ion-chip.entry.js": [78695, "common", "node_modules_ionic_core_dist_esm_ion-chip_entry_js"],
        "./ion-col_3.entry.js": [16034, "node_modules_ionic_core_dist_esm_ion-col_3_entry_js"],
        "./ion-datetime_3.entry.js": [68837, "common", "node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js"],
        "./ion-fab_3.entry.js": [34195, "common", "node_modules_ionic_core_dist_esm_ion-fab_3_entry_js"],
        "./ion-img.entry.js": [41709, "node_modules_ionic_core_dist_esm_ion-img_entry_js"],
        "./ion-infinite-scroll_2.entry.js": [33087, "node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js"],
        "./ion-input.entry.js": [84513, "common", "node_modules_ionic_core_dist_esm_ion-input_entry_js"],
        "./ion-item-option_3.entry.js": [58056, "common", "node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js"],
        "./ion-item_8.entry.js": [10862, "common", "node_modules_ionic_core_dist_esm_ion-item_8_entry_js"],
        "./ion-loading.entry.js": [7509, "common", "node_modules_ionic_core_dist_esm_ion-loading_entry_js"],
        "./ion-menu_3.entry.js": [76272, "common", "node_modules_ionic_core_dist_esm_ion-menu_3_entry_js"],
        "./ion-modal.entry.js": [71855, "common", "node_modules_ionic_core_dist_esm_ion-modal_entry_js"],
        "./ion-nav_2.entry.js": [38708, "common", "node_modules_ionic_core_dist_esm_ion-nav_2_entry_js"],
        "./ion-popover.entry.js": [23527, "common", "node_modules_ionic_core_dist_esm_ion-popover_entry_js"],
        "./ion-progress-bar.entry.js": [24694, "common", "node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js"],
        "./ion-radio_2.entry.js": [19222, "common", "node_modules_ionic_core_dist_esm_ion-radio_2_entry_js"],
        "./ion-range.entry.js": [25277, "common", "node_modules_ionic_core_dist_esm_ion-range_entry_js"],
        "./ion-refresher_2.entry.js": [38812, "common", "node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js"],
        "./ion-reorder_2.entry.js": [83122, "common", "node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js"],
        "./ion-ripple-effect.entry.js": [51602, "node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js"],
        "./ion-route_4.entry.js": [45174, "common", "node_modules_ionic_core_dist_esm_ion-route_4_entry_js"],
        "./ion-searchbar.entry.js": [7895, "common", "node_modules_ionic_core_dist_esm_ion-searchbar_entry_js"],
        "./ion-segment_2.entry.js": [76164, "common", "node_modules_ionic_core_dist_esm_ion-segment_2_entry_js"],
        "./ion-select_3.entry.js": [20592, "common", "node_modules_ionic_core_dist_esm_ion-select_3_entry_js"],
        "./ion-slide_2.entry.js": [27162, "node_modules_ionic_core_dist_esm_ion-slide_2_entry_js"],
        "./ion-spinner.entry.js": [81374, "common", "node_modules_ionic_core_dist_esm_ion-spinner_entry_js"],
        "./ion-split-pane.entry.js": [97896, "node_modules_ionic_core_dist_esm_ion-split-pane_entry_js"],
        "./ion-tab-bar_2.entry.js": [25043, "common", "node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js"],
        "./ion-tab_2.entry.js": [77802, "common", "node_modules_ionic_core_dist_esm_ion-tab_2_entry_js"],
        "./ion-text.entry.js": [29072, "common", "node_modules_ionic_core_dist_esm_ion-text_entry_js"],
        "./ion-textarea.entry.js": [32191, "common", "node_modules_ionic_core_dist_esm_ion-textarea_entry_js"],
        "./ion-toast.entry.js": [40801, "common", "node_modules_ionic_core_dist_esm_ion-toast_entry_js"],
        "./ion-toggle.entry.js": [67110, "common", "node_modules_ionic_core_dist_esm_ion-toggle_entry_js"],
        "./ion-virtual-scroll.entry.js": [10431, "node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js"]
      };

      function webpackAsyncContext(req) {
        if (!__webpack_require__.o(map, req)) {
          return Promise.resolve().then(function () {
            var e = new Error("Cannot find module '" + req + "'");
            e.code = 'MODULE_NOT_FOUND';
            throw e;
          });
        }

        var ids = map[req],
            id = ids[0];
        return Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function () {
          return __webpack_require__(id);
        });
      }

      webpackAsyncContext.keys = function () {
        return Object.keys(map);
      };

      webpackAsyncContext.id = 50863;
      module.exports = webpackAsyncContext;
      /***/
    },

    /***/
    43069:
    /*!************************************!*\
      !*** ./src/app/app.component.scss ***!
      \************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */";
      /***/
    },

    /***/
    60372:
    /*!******************************************************!*\
      !*** ./src/app/modals/daterange/daterange.page.scss ***!
      \******************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXRlcmFuZ2UucGFnZS5zY3NzIn0= */";
      /***/
    },

    /***/
    34259:
    /*!***********************************************************************!*\
      !*** ./src/app/modals/detail/news-detail/news-add/news-add.page.scss ***!
      \***********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZXdzLWFkZC5wYWdlLnNjc3MifQ== */";
      /***/
    },

    /***/
    39921:
    /*!************************************************************************************!*\
      !*** ./src/app/modals/detail/news-detail/news-add/recipients/recipients.page.scss ***!
      \************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGllbnRzLnBhZ2Uuc2NzcyJ9 */";
      /***/
    },

    /***/
    2388:
    /*!*****************************************************************!*\
      !*** ./src/app/modals/detail/news-detail/news-detail.page.scss ***!
      \*****************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZXdzLWRldGFpbC5wYWdlLnNjc3MifQ== */";
      /***/
    },

    /***/
    79497:
    /*!***********************************************************!*\
      !*** ./src/app/modals/detail/task-add/task-add.page.scss ***!
      \***********************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YXNrLWFkZC5wYWdlLnNjc3MifQ== */";
      /***/
    },

    /***/
    27379:
    /*!****************************************************************************!*\
      !*** ./src/app/modals/detail/task-add/taskassignee/taskassignee.page.scss ***!
      \****************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YXNrYXNzaWduZWUucGFnZS5zY3NzIn0= */";
      /***/
    },

    /***/
    62301:
    /*!*****************************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-add/tsheet-add.page.scss ***!
      \*****************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0c2hlZXQtYWRkLnBhZ2Uuc2NzcyJ9 */";
      /***/
    },

    /***/
    23943:
    /*!***********************************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-breaks/tsheet-breaks.page.scss ***!
      \***********************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0c2hlZXQtYnJlYWtzLnBhZ2Uuc2NzcyJ9 */";
      /***/
    },

    /***/
    65850:
    /*!*********************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-detail.page.scss ***!
      \*********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0c2hlZXQtZGV0YWlsLnBhZ2Uuc2NzcyJ9 */";
      /***/
    },

    /***/
    19462:
    /*!*************************************************************************************!*\
      !*** ./src/app/modals/detail/tsheet-detail/tsheet-history/tsheet-history.page.scss ***!
      \*************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0c2hlZXQtaGlzdG9yeS5wYWdlLnNjc3MifQ== */";
      /***/
    },

    /***/
    10716:
    /*!****************************************************!*\
      !*** ./src/app/modals/firstrun/firstrun.page.scss ***!
      \****************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmaXJzdHJ1bi5wYWdlLnNjc3MifQ== */";
      /***/
    },

    /***/
    91106:
    /*!**************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html ***!
      \**************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-app>\n    <ion-menu side=\"start\" content-id=\"main-content\" swipeGesture=\"true\" type=\"reveal\" (ionWillOpen)=\"mainMenu('willopen')\" (ionDidOpen)=\"mainMenu('opened')\" (ionWillClose)=\"mainMenu('willclose')\" (ionDidClose)=\"mainMenu('closed')\">\n        <ion-content id=\"app-page-ion-content\" class=\"sheriff-content\">\n            <div class=\"sheriff-mainmenu-main-wrapper\">\n                <div id=\"sheriff-mainmenu-header-wrapper\">\n                    main menu\n                </div>\n                <ion-grid class=\"sheriff-grid sheriff-mainmenu-topper-grid1 person\">\n                    <ion-row class=\"sheriff-row sheriff-mainmenu-topper-row row1\">\n                        <ion-col size=\"3\" class=\"sherrif-col sheriff-mainmenu-col meavatar-col\">\n                            <div id=\"sheriff-mainmenu-personavatar-wrapper\">\n                                <img id=\"tempmeava\" style=\"display: flex;align-content: center;\" src=\"{{meAva}}\">\n                            </div>\n                        </ion-col>\n                        <ion-col size=\"9\" class=\"sherrif-col sheriff-mainmenu-col medetails-col\">\n                            <div id=\"sheriff-mainmenu-topper-person-outter-wrapper\">\n                                <div class=\"sheriff-mainmenu medetails-line name\">{{meName}}</div>\n                                <div class=\"sheriff-mainmenu medetails-line email\">{{meEmail}}</div>\n                                <div class=\"sheriff-mainmenu medetails-line phone\">{{mePhone}}</div>\n                            </div>\n                        </ion-col>\n                    </ion-row>\n                    <ion-row class=\"sheriff-row sheriff-mainmenu-topper-row row2\">\n                        <ion-chip class=\"sheriff-chip mainmenu wp\">\n                            <ion-avatar class=\"sheriff-avatar mainmenu wp\">\n                                <img id=\"mainmenu-workavatar\" style=\"display: flex;align-content: center;\" src=\"{{workAva}}\">\n                            </ion-avatar>\n                            <ion-label class=\"sheriff-label mainmenu wp\">{{workCode}}</ion-label>\n                        </ion-chip>\n                    </ion-row>\n                </ion-grid>\n                <ion-grid class=\"sheriff-grid sheriff-menu-grid pagelinks-grid\">\n                    <ion-row class=\"sheriff-row sheriff-menu-row tab-pagelinks-row\">\n                        <ion-col class=\"sheriff-col sheriff-menu-col tab-pagelinks-col\">\n                            <ion-menu-toggle>\n                                <div *ngIf=\"!shouldSaveShield\" id=\"mainmenu-tabs\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem datatabs\" routerLink=\"/tabs\" routerDirection=\"forward\">\n                                    <div id=\"sheriff-mainmenu-topitem-label-datatabs\" class=\"sheriff-mainmenu-topitem-label datatabs\">\n                                        <ion-icon class=\"sheriff-mainmenu-linkico datatabs\" name=\"list\"></ion-icon>records\n                                    </div>\n                                    <ion-ripple-effect></ion-ripple-effect>\n                                </div>\n                                <div *ngIf=\"shouldSaveShield\" (click)=\"promptShouldSave('/tabs')\" id=\"mainmenu-tabs\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem datatabs\">\n                                  <div id=\"sheriff-mainmenu-topitem-label-datatabs\" class=\"sheriff-mainmenu-topitem-label datatabs\">\n                                      <ion-icon class=\"sheriff-mainmenu-linkico datatabs\" name=\"list\"></ion-icon>records\n                                  </div>\n                                  <ion-ripple-effect></ion-ripple-effect>\n                                </div>\n                            </ion-menu-toggle>\n                            <ion-menu-toggle>\n                              <div *ngIf=\"!shouldSaveShield\" id=\"mainmenu-pay\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem pay\" routerLink=\"/pay\" routerDirection=\"forward\">\n                                  <div id=\"sheriff-mainmenu-topitem-label-pay\" class=\"sheriff-mainmenu-topitem-label pay\">\n                                      <ion-icon class=\"sheriff-mainmenu-linkico pay\" name=\"logo-usd\"></ion-icon>payments\n                                  </div>\n                                  <ion-ripple-effect></ion-ripple-effect>\n                              </div>\n                              <div *ngIf=\"shouldSaveShield\" (click)=\"promptShouldSave('/pay')\" id=\"mainmenu-pay\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem pay\">\n                                <div id=\"sheriff-mainmenu-topitem-label-pay\" class=\"sheriff-mainmenu-topitem-label pay\">\n                                    <ion-icon class=\"sheriff-mainmenu-linkico pay\" name=\"logo-usd\"></ion-icon>payments\n                                </div>\n                                <ion-ripple-effect></ion-ripple-effect>\n                              </div>\n                            </ion-menu-toggle>\n                            <ion-menu-toggle>\n                              <div *ngIf=\"!shouldSaveShield\" id=\"mainmenu-people\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem people\" routerLink=\"/people\" routerDirection=\"forward\">\n                                  <div id=\"sheriff-mainmenu-topitem-label-people\" class=\"sheriff-mainmenu-topitem-label people\">\n                                      <ion-icon class=\"sheriff-mainmenu-linkico people\" name=\"people\"></ion-icon>people\n                                  </div>\n                                  <ion-ripple-effect></ion-ripple-effect>\n                              </div>\n                              <div *ngIf=\"shouldSaveShield\" (click)=\"promptShouldSave('/people')\" id=\"mainmenu-people\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem people\">\n                                <div id=\"sheriff-mainmenu-topitem-label-people\" class=\"sheriff-mainmenu-topitem-label people\">\n                                    <ion-icon class=\"sheriff-mainmenu-linkico people\" name=\"people\"></ion-icon>people\n                                </div>\n                                <ion-ripple-effect></ion-ripple-effect>\n                              </div>\n                            </ion-menu-toggle>\n                            <ion-menu-toggle>\n                                <div *ngIf=\"!shouldSaveShield\" id=\"mainmenu-profile\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem profile\" routerLink=\"/profile\" routerDirection=\"forward\">\n                                    <div id=\"sheriff-mainmenu-topitem-label-settings\" class=\"sheriff-mainmenu-topitem-label profile\">\n                                        <ion-icon class=\"sheriff-mainmenu-linkico profile\" name=\"person\"></ion-icon>profile\n                                    </div>\n                                    <ion-ripple-effect></ion-ripple-effect>\n                                </div>\n                                <div *ngIf=\"shouldSaveShield\" (click)=\"promptShouldSave('/profile')\" id=\"mainmenu-profile\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem profile\">\n                                  <div id=\"sheriff-mainmenu-topitem-label-settings\" class=\"sheriff-mainmenu-topitem-label profile\">\n                                      <ion-icon class=\"sheriff-mainmenu-linkico profile\" name=\"person\"></ion-icon>profile\n                                  </div>\n                                  <ion-ripple-effect></ion-ripple-effect>\n                              </div>\n                            </ion-menu-toggle>\n                            <ion-menu-toggle>\n                              <div *ngIf=\"!shouldSaveShield\" id=\"mainmenu-serverlog\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem serverlog\" routerLink=\"/serverlog\" routerDirection=\"forward\">\n                                  <div id=\"sheriff-mainmenu-topitem-label-serverlog\" class=\"sheriff-mainmenu-topitem-label serverlog\">\n                                      <ion-icon class=\"sheriff-mainmenu-linkico serverlog\" name=\"list\"></ion-icon>server log\n                                  </div>\n                                  <ion-ripple-effect></ion-ripple-effect>\n                              </div>\n                              <div *ngIf=\"shouldSaveShield\" (click)=\"promptShouldSave('/serverlog')\" id=\"mainmenu-serverlog\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem serverlog\">\n                                <div id=\"sheriff-mainmenu-topitem-label-serverlog\" class=\"sheriff-mainmenu-topitem-label serverlog\">\n                                    <ion-icon class=\"sheriff-mainmenu-linkico serverlog\" name=\"list\"></ion-icon>serverlog\n                                </div>\n                                <ion-ripple-effect></ion-ripple-effect>\n                            </div>\n                            </ion-menu-toggle>\n                            <ion-menu-toggle>\n                              <div *ngIf=\"!shouldSaveShield\" id=\"mainmenu-snoop\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem snoop\" routerLink=\"/snoop\" routerDirection=\"forward\">\n                                  <div id=\"sheriff-mainmenu-topitem-label-snoop\" class=\"sheriff-mainmenu-topitem-label snoop\">\n                                      <ion-icon class=\"sheriff-mainmenu-linkico snoop\" name=\"ear\"></ion-icon>snoop data\n                                  </div>\n                                  <ion-ripple-effect></ion-ripple-effect>\n                              </div>\n                              <div *ngIf=\"shouldSaveShield\" (click)=\"promptShouldSave('/snoop')\" id=\"mainmenu-snoop\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem snoop\">\n                                <div id=\"sheriff-mainmenu-topitem-label-snoop\" class=\"sheriff-mainmenu-topitem-label snoop\">\n                                    <ion-icon class=\"sheriff-mainmenu-linkico snoop\" name=\"list\"></ion-icon>snoop data\n                                </div>\n                                <ion-ripple-effect></ion-ripple-effect>\n                            </div>\n                            </ion-menu-toggle>\n                            <ion-menu-toggle>\n                                <div *ngIf=\"!shouldSaveShield\" id=\"mainmenu-settings\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem settings\" routerLink=\"/settings\" routerDirection=\"forward\">\n                                    <div id=\"sheriff-mainmenu-topitem-label-settings\" class=\"sheriff-mainmenu-topitem-label settings\">\n                                        <ion-icon class=\"sheriff-mainmenu-linkico settings\" name=\"settings\"></ion-icon>settings\n                                    </div>\n                                    <ion-ripple-effect></ion-ripple-effect>\n                                </div>\n                                <div *ngIf=\"shouldSaveShield\" (click)=\"promptShouldSave('/settings')\" id=\"mainmenu-settings\" class=\"ion-activatable ripple-parent sheriff-mainmenu-topitem settings\">\n                                  <div id=\"sheriff-mainmenu-topitem-label-settings\" class=\"sheriff-mainmenu-topitem-label settings\">\n                                      <ion-icon class=\"sheriff-mainmenu-linkico settings\" name=\"settings\"></ion-icon>settings\n                                  </div>\n                                  <ion-ripple-effect></ion-ripple-effect>\n                              </div>\n                            </ion-menu-toggle>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n\n                <ion-grid class=\"sheriff-grid sheriff-mainmenu-grid sheriff-mainmenu-logoutexitbtn-grid\">\n                    <ion-row class=\"sheriff-row sheriff-menu-row auth-logout-quitlinks-row\">\n                        <ion-col class=\"sheriff-col sheriff-menu-col auth-logout-quitlinks-col\">\n                            <div class=\"sheriff-menu-bottom-btns-wrapper\">\n                                <ion-grid class=\"sheriff-grid sheriff-menu-bottom-btns-grid\">\n                                    <ion-row class=\"sheriff-row sheriff-menu-bottom-row\">\n                                        <ion-col class=\"sheriff-col sheriff-menu-bottom-col logout-col\">\n                                            <ion-button (click)=\"onLogout()\" id=\"sheriff-menu-bottom-logoutbtn\" class=\"sheriff-menu-bottom-btn\" fill=\"solid\" size=\"small\">Logout</ion-button>\n                                        </ion-col>\n                                        <ion-col size=\"6\" class=\"sheriff-col sheriff-menu-bottom-col exit-col\">\n                                            <ion-button (click)=\"onExit(null)\" id=\"sheriff-menu-bottom-switchbtn\" class=\"sheriff-menu-bottom-btn\" fill=\"outline\" color=\"medium\" size=\"small\">Exit App</ion-button> \n                                        </ion-col>\n                                    </ion-row>\n                                    <ion-row class=\"sheriff-row sheriff-mainmenu-topper-row row3\">\n                                        <ion-col size=\"10\" class=\"sheriff-col sheriff-mainmenu-col tokens-col\">\n                                            <div class=\"headerimgdiv deputy\"><div class=\"sheriff-menu-token-image-wrapper deputy\"><img class=\"sheriff-menu-token-image deputy\" src=\"../assets/img/sheriff-deputy-logoname-white-small.png\"></div></div>\n                                            <div><span [ngClass]=\"{'menu-token-refresh-btn-stage-inprog-ico':deputyRefresh==='inprog','menu-token-refresh-btn-stage-fail-ico':deputyRefresh==='fail','menu-token-refresh-btn-stage-success-ico':deputyRefresh==='success'}\" style=\"font-weight:500;color:#ff9800\">T: </span>{{access_token}}</div>\n                                            <div><span [ngClass]=\"{'menu-token-refresh-btn-stage-inprog-ico':deputyRefresh==='inprog','menu-token-refresh-btn-stage-fail-ico':deputyRefresh==='fail','menu-token-refresh-btn-stage-success-ico':deputyRefresh==='success'}\" style=\"font-weight:500;color:#ff9800\">R: </span>{{refresh_token}}</div>\n                                            <div><span [ngClass]=\"{'menu-token-refresh-btn-stage-inprog-ico':deputyRefresh==='inprog','menu-token-refresh-btn-stage-fail-ico':deputyRefresh==='fail','menu-token-refresh-btn-stage-success-ico':deputyRefresh==='success'}\" style=\"font-weight:500;color:#ff9800\">E: </span>{{expires_time}}</div>\n                                        </ion-col>\n                                        <ion-col size=\"2\" class=\"sheriff-col sheriff-mainmenu-col tokens-col refreshbtn-col\">\n                                            <ion-button [disabled]=\"deputyRefresh!==null\" [ngClass]=\"{'menu-token-refresh-btn-stage-inprog':deputyRefresh==='inprog','menu-token-refresh-btn-stage-fail':deputyRefresh==='fail','menu-token-refresh-btn-stage-success':deputyRefresh==='success'}\" id=\"localrefreshbtn\" (click)=\"menuDeputyRefresh()\" class=\"sheriff-btn menu-refresh-btn\">\n                                                <ion-icon *ngIf=\"deputyRefresh===null\" class=\"sheriff-btn-ico menu-refresh-btn-ico\" name=\"refresh\"></ion-icon>\n                                                <ion-icon *ngIf=\"deputyRefresh==='inprog'\" class=\"sheriff-btn-ico menu-refresh-btn-ico menu-token-refresh-btn-stage-inprog-ico\" name=\"ellipsis-horizontal\"></ion-icon>\n                                                <ion-icon *ngIf=\"deputyRefresh==='success'\" class=\"sheriff-btn-ico menu-refresh-btn-ico menu-token-refresh-btn-stage-success-ico\" name=\"checkmark\"></ion-icon>\n                                                <ion-icon *ngIf=\"deputyRefresh==='fail'\" class=\"sheriff-btn-ico menu-refresh-btn-ico menu-token-refresh-btn-stage-fail-ico\" name=\"alert\"></ion-icon>\n                                            </ion-button>\n                                        </ion-col>\n                                    </ion-row>\n                                    <ion-row class=\"sheriff-row sheriff-mainmenu-topper-row row4\">\n                                      <ion-col size=\"10\" class=\"sheriff-col sheriff-mainmenu-col tokens-col\">\n                                        <div class=\"headerimgdiv sserver\"><div class=\"sheriff-menu-token-image-wrapper sheriffserver\"><img class=\"sheriff-menu-token-imagesheriff-server\" src=\"../assets/img/slogo-w.png\"><span class=\"sheriff-menu-token-title-server-txt\">server</span></div></div>\n                                        <div><span [ngClass]=\"{'menu-token-refresh-btn-stage-inprog-ico':sserverRefresh==='inprog','menu-token-refresh-btn-stage-fail-ico':sserverRefresh==='fail','menu-token-refresh-btn-stage-success-ico':sserverRefresh==='success'}\" style=\"font-weight:500;color:#ff9800\">M: </span>{{fb_login_method}}</div>\n                                        <div><span [ngClass]=\"{'menu-token-refresh-btn-stage-inprog-ico':sserverRefresh==='inprog','menu-token-refresh-btn-stage-fail-ico':sserverRefresh==='fail','menu-token-refresh-btn-stage-success-ico':sserverRefresh==='success'}\" style=\"font-weight:500;color:#ff9800\">T: </span>{{fct_token}}</div>\n                                        <div><span [ngClass]=\"{'menu-token-refresh-btn-stage-inprog-ico':sserverRefresh==='inprog','menu-token-refresh-btn-stage-fail-ico':sserverRefresh==='fail','menu-token-refresh-btn-stage-success-ico':sserverRefresh==='success'}\" style=\"font-weight:500;color:#ff9800\">L: </span>{{fe_token}}</div>\n                                        <div><span [ngClass]=\"{'menu-token-refresh-btn-stage-inprog-ico':sserverRefresh==='inprog','menu-token-refresh-btn-stage-fail-ico':sserverRefresh==='fail','menu-token-refresh-btn-stage-success-ico':sserverRefresh==='success'}\" style=\"font-weight:500;color:#ff9800\">E: </span>{{fct_expires}}</div>\n                                      </ion-col>\n                                      <ion-col size=\"2\" class=\"sheriff-col sheriff-mainmenu-col tokens-col refreshbtn-col\">\n                                          <ion-button [disabled]=\"sserverRefresh!==null\" [ngClass]=\"{'menu-token-refresh-btn-stage-inprog':sserverRefresh==='inprog','menu-token-refresh-btn-stage-fail':sserverRefresh==='fail','menu-token-refresh-btn-stage-success':sserverRefresh==='success'}\" id=\"localrefreshbtn\" (click)=\"FCTFns('refresh')\" class=\"sheriff-btn menu-refresh-btn\">\n                                            <ion-icon *ngIf=\"sserverRefresh===null\" class=\"sheriff-btn-ico menu-refresh-btn-ico\" name=\"refresh\"></ion-icon>\n                                            <ion-icon *ngIf=\"sserverRefresh==='inprog'\" class=\"sheriff-btn-ico menu-refresh-btn-ico menu-token-refresh-btn-stage-inprog-ico\" name=\"ellipsis-horizontal\"></ion-icon>\n                                            <ion-icon *ngIf=\"sserverRefresh==='success'\" class=\"sheriff-btn-ico menu-refresh-btn-ico menu-token-refresh-btn-stage-success-ico\" name=\"checkmark\"></ion-icon>\n                                            <ion-icon *ngIf=\"sserverRefresh==='fail'\" class=\"sheriff-btn-ico menu-refresh-btn-ico menu-token-refresh-btn-stage-fail-ico\" name=\"alert\"></ion-icon>\n                                          </ion-button>\n                                      </ion-col>\n                                    </ion-row>\n                                </ion-grid>\n                            </div>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n\n                <div id=\"zer0nebanner\"><img id=\"zer0nemenubanner\" src=\"../../../assets/img/zer0netidybinary.png\"></div>\n\n            </div>\n\n        </ion-content>\n\n    </ion-menu>\n\n    <ion-router-outlet id=\"main-content\"></ion-router-outlet>\n\n    <div id=\"sheriff-custom-splash-wrapper\">\n        <div id=\"sheriff-custom-splash-titletexttop-wrapper\" class=\"splashelegroup1\">\n            SHERIFF\n        </div>\n        <div id=\"sheriff-custom-splash-logo-wrapper\">\n            <ion-grid class=\"sheriff-grid custom-splash-grid\">\n                <ion-row class=\"sheriff-row custom-splash-row toptextrow\">\n                    <ion-col class=\"sheriff-col custom-splash-col toptextcol\">\n                        <div class=\"sheriff-cutom-splash-text-wrapper texttop animate__animated animate__slideInLeft animate__faster\">\n                            Introducing <span class=\"sheriff-sansman-bold-italic custom-splash-top\">SHERIFF</span><span class=\"sheriff-splash-dotdotdot\">,</span>\n                        </div>\n                    </ion-col>\n                </ion-row>\n                <ion-row class=\"sheriff-row custom-splash-row middlelogorow\">\n                    <ion-col class=\"sheriff-col custom-splash-col middlelogocol\">\n                        <div class=\"progress-horizontal top\">\n                            <div class=\"bar-horizontal top\"></div>\n                        </div>\n                        <div class=\"progress-horizontal bottom\">\n                            <div class=\"bar-horizontal bottom\"></div>\n                        </div>\n                        <img class=\"animate__animated animate__headShake animate__infinite\" src=\"../assets/img/slogo-w.png\" id=\"sheriff-custom-splash-logo-img\">\n                    </ion-col>\n                </ion-row>\n                <ion-row class=\"sheriff-row custom-splash-row bottomtextrow\">\n                    <ion-col class=\"sheriff-col custom-splash-col bottomtextcol\">\n                        <div class=\"sheriff-cutom-splash-text-wrapper textbottom animate__animated animate__slideInRight animate__faster\">\n                            <span class=\"sheriff-splash-dotdotdot\">...</span><span class=\"sheriff-sansman-bold-italic custom-splash-bottom\">DEPUTY</span>'s <span class=\"splash-text-superior\">superior</span>.\n                        </div>\n                    </ion-col>\n                </ion-row>\n            </ion-grid>\n        </div>\n        <div id=\"sheriff-custom-splash-zer0ne-wrapper\" class=\"splashelegroup1\">\n            <img src=\"../assets/img/zer0netidybinarywhite.png\" id=\"sheriff-custom-splash-zer0ne-img\">\n        </div>\n    </div>\n    <div *ngIf=\"doShowIAPBubble\" class=\"sheriff-iapnotif-bubble-outter-wrapper animte__animated animate__slideInDown\">\n      <div class=\"sheriff-iapnotif-bubble-inner-wrapper\">\n        <ion-grid class=\"sheriff-grid iapnotif-bubble-grid\">\n          <ion-row class=\"sheriff-row iapnotif-bubble-row title-row\">\n            <ion-col class=\"sheriff-col iapnotif-bubble-col title-col\">\n              <div class=\"sheriff-iapnotif-bubble-title-wrapper\">\n                <ion-icon class=\"sheriff-iapnotif-bubble-title-icon workevent\" name={{iapBubbleData.ico}}></ion-icon>\n                <div class=\"sheriff-iapnotif-bubble-title-txt workevent\"><span class=\"iapnotif-mtitle\">{{iapBubbleData.mTitle}}</span><span class=\"iapnotif-title-slash\">|</span><span class=\"iapnotif-stitle\">{{iapBubbleData.sTitle}}</span></div>\n              </div>\n            </ion-col>\n          </ion-row>\n          <ion-row class=\"sheriff-row iapnotif-bubble-row bodylines-row\">\n            <ion-col class=\"sheriff-col iapnotif-bubble-col bodylines-col\">\n              <div *ngFor=\"let line of iapBubbleData.bodyLines;index as i\" class=\"sheriff-iapnotif-bubble-bodyline line{{i}}\">{{line}}</div>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </div>\n    </div>\n</ion-app>";
      /***/
    },

    /***/
    29511:
    /*!****************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/alertschedule/alertschedule.page.html ***!
      \****************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<div class=\"pop-alertschedule-main-wrapper\">\n    <ion-grid class=\"sheriff-grid pop-alert-schedule-grid header-grid\">\n        <ion-row class=\"sheriff-row pop-alert-schedule-header-row\">\n            <ion-col size=\"12\" class=\"sheriff-col pop-alert-schedule-header-col title-col\">\n                <div class=\"pop-alert-schedule-header-title-wrapper\">Scheduled Alerts</div> \n            </ion-col>\n        </ion-row>\n    </ion-grid>\n    <ion-grid class=\"sheriff-grid pop-alert-schedule-grid col-label-grid\">\n      <ion-row class=\"sheriff-row pop-alert-schedule-row col-label-row\">\n        <ion-col class=\"sheriff-col pop-alert-schedule-col col-label-col event-type-id\">\n          Event Id\n        </ion-col>\n        <ion-col class=\"sheriff-col pop-alert-schedule-col col-label-col event-date-time\">\n          Event Due\n        </ion-col>\n        <ion-col class=\"sheriff-col pop-alert-schedule-col col-label-col event-alert-at-time\">\n          Alert Time\n        </ion-col>\n        <ion-col size=\"2\" class=\"sheriff-col pop-alert-schedule-col col-label-col event-alert-methods\">\n          Method\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n    <div *ngIf=\"noAlerts!==null&&noAlerts===true\" class=\"pop-alertschedule-noitems-outter-wrapper\">\n      <div class=\"pop-alertschedule-noitems-inner-wrapper\">\n        <ion-icon class=\"pop-alertschedule-noitems-ico\" name=\"warning\"></ion-icon>\n        <div class=\"pop-alertschedule-noitems-txt\">No Alerts Scheduled</div>\n      </div>\n    </div>\n    <ion-list *ngIf=\"noAlerts!==null&&noAlerts===false\" class=\"sheriff-list pop-alert-schedule-item-list\">\n        <ion-item *ngFor=\"let alert of alertsList;let ai=index\" class=\"sheriff-item pop-alert-schedule-item\" id=\"alert-{{alert.id}}\">\n          <ion-grid class=\"sheriff-grid pop-alert-schedule-grid alert-item-grid\">\n            <ion-row class=\"sheriff-row pop-alert-schedule-row alert-item-row\">\n              <ion-col class=\"sheriff-col pop-alert-schedule-col alert-item-col event-type-id\">\n                <div class=\"alertsched-item-line typeline\">\n                  <div *ngIf=\"tMode&&!alert.isTest\" class=\"delete-alert-wrapper\">\n                    <ion-icon (click)=\"deleteAlert(alert.id)\" class=\"del-alert-ico\" style=\"color:var(--ion-color-danger)\" name=\"trash\"></ion-icon>\n                  </div>\n                  <span *ngIf=\"alert.isTest\" style=\"color:var(--ion-color-danger)\">Test</span>\n                  <span *ngIf=\"!alert.isTest\" [ngStyle]=\"{'color':alert.type==='task'?'#b33d18':'var(--ion-color-yellow)'}\">{{alert.uctype}}</span>\n                </div>\n                <div class=\"alertsched-item-line idline\"> \n                  #{{alert.id}}\n                </div>\n              </ion-col>\n              <ion-col class=\"sheriff-col pop-alert-schedule-col alert-item-col event-due\">\n                <div class=\"alertsched-item-line event-at-date-line\">\n                  {{alert.eventatNiceDate}}\n                </div>\n                <div class=\"alertsched-item-line event-at-time-line\">\n                  {{alert.eventatNiceTime}}\n                </div>\n              </ion-col>\n              <ion-col class=\"sheriff-col pop-alert-schedule-col alert-item-col alert-at\">\n                <div class=\"alertsched-item-line alert-at-date-line\">\n                  {{alert.alertatNiceDate}}\n                </div>\n                <div class=\"alertsched-item-line alert-at-time-line\">\n                  {{alert.alertatNiceTime}}\n                </div>\n              </ion-col>\n              <ion-col size=\"2\" class=\"sheriff-col pop-alert-schedule-col alert-item-col alert-methods\">\n                <div *ngIf=\"(!tMode&&!alert.isTest)||(tMode&&alert.isTest)\" class=\"alertmethodsico-wrapper\">\n                  <ion-icon [ngStyle]=\"{'color':alert.methods.phone?'var(--ion-color-success-68)':'#343434'}\" class=\"alertmethod-ico phone\" name=\"phone-portrait\"></ion-icon>\n                  <ion-icon [ngStyle]=\"{'color':alert.methods.calendar?'var(--ion-color-success-68)':'#343434'}\" class=\"alertmethod-ico calendar\" name=\"calendar-number\"></ion-icon>\n                </div>\n                <div *ngIf=\"tMode&&!alert.isTest\" class=\"alertmethodsico-wrapper tmode\">\n                  <ion-button (click)=\"testNote(alert.id)\" class=\"sheriff-btn alertsched-testmode-btn\">\n                    <ion-icon name=\"play\" class=\"sheriff-btn-ico testmode-play-ico\"></ion-icon>\n                  </ion-button>\n                </div>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </ion-item>\n    </ion-list>\n    <ion-grid class=\"sheriff-grid pop-alert-schedule-grid footer-grid\">\n      <ion-row class=\"sheriff-row pop-alert-schedule-footer-row\">\n          <ion-col size=\"6\" class=\"sheriff-col pop-alert-schedule-footer-col closebtn-col\">\n              <ion-button (click)=\"closeModal()\" class=\"sheriff-btn settings-alertschedule-close-btn\">\n                <ion-icon name=\"close\" class=\"sheriff-btn-ico settings-alertschedule-close-btn-ico\"></ion-icon>\n                <div class=\"sheriff-btn-txt settings-alertschedule-close-btn-txt\">close</div>\n              </ion-button>\n          </ion-col>          \n          <ion-col size=\"6\" class=\"sheriff-col pop-alert-schedule-footer-col closebtn-col\">\n            <ion-button *ngIf=\"!tMode&&hasTestable\" (click)=\"testMode()\" class=\"sheriff-btn settings-alertschedule-testmode-btn activate\">\n              <ion-icon name=\"construct\" class=\"sheriff-btn-ico settings-alertschedule-testmode-btn-ico activate\"></ion-icon>\n              <div class=\"sheriff-btn-txt settings-alertschedule-testmode-btn-txt activate\">test</div>\n            </ion-button>\n            <ion-button *ngIf=\"tMode\" (click)=\"testMode()\" class=\"sheriff-btn settings-alertschedule-testmode-btn deactivate\">\n              <ion-icon name=\"stop\" class=\"sheriff-btn-ico settings-alertschedule-testmode-btn-ico deactivate\"></ion-icon>\n              <div class=\"sheriff-btn-txt settings-alertschedule-testmode-btn-txt deactivate\">stop</div>\n            </ion-button>\n        </ion-col>          \n      </ion-row>\n  </ion-grid>\n</div>";
      /***/
    },

    /***/
    95375:
    /*!********************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/daterange/daterange.page.html ***!
      \********************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<div class=\"ion-page sheriff-component-modal sheriff-daterange-modal outter-wrapper\">\n    <ion-grid class=\"sheriff-grid dr-modal-grid\">\n        <ion-row class=\"sheriff-row dr-modal-row label-row\">\n            <ion-col class=\"sheriff-col\">\n                <div class=\"dr-startend-label-wrapper start\">start date</div>\n                <div *ngIf=\"!sDIsToday\" (click)=\"useTodayDate('sDate')\" class=\"dr-usetoday-btn start ion-activatable ripple-parent\">\n                    today\n                    <img class=\"dr-fillinputtoday-ico\" src=\"../../../assets/img/sheriff-fillinput-ico.png\">\n                    <ion-ripple-effect></ion-ripple-effect>\n                </div>\n                <div *ngIf=\"sDIsToday\" class=\"dr-dateistoday-label start\">today</div>\n            </ion-col>\n            <ion-col class=\"sheriff-col\">\n                <div class=\"dr-startend-label-wrapper end\">end date</div>\n                <div *ngIf=\"!eDIsToday\" (click)=\"useTodayDate('eDate')\" class=\"dr-usetoday-btn end ion-activatable ripple-parent\">\n                    today\n                    <img class=\"dr-fillinputtoday-ico\" src=\"../../../assets/img/sheriff-fillinput-ico.png\">\n                    <ion-ripple-effect></ion-ripple-effect>\n                </div>\n                <div *ngIf=\"eDIsToday\" class=\"dr-dateistoday-label end\">today</div>\n            </ion-col>\n        </ion-row>\n        <ion-row class=\"sheriff-row dr-modal-row input-row\">\n            <ion-col class=\"sheriff-col dr-col start-input-col\">\n                <img src=\"../../../assets/img/sheriff-datefrom-ico.png\" class=\"dr-ico datefrom\">\n                <div (click)=\"openDateRange('start','open','sDateIn','sDate',drStart.value)\" class=\"dr-inputico-wrapper start ion-activatable ripple-parent\">\n                    <ion-datetime ngModel #drStart value={{sDate}} displayFormat=\"D MMM YYYY\" class=\"sheriff-input summary-list-date-input startdate\" mode=\"md\" readonly=\"true\"></ion-datetime>\n                    <ion-ripple-effect></ion-ripple-effect>\n                </div>\n            </ion-col>\n            <ion-col class=\"sheriff-col dr-col end-input-col\">\n                <img src=\"../../../assets/img/sheriff-dateto-ico.png\" class=\"dr-ico dateto\">\n                <div (click)=\"openDateRange('end','open','eDateIn','eDate',drEnd.value)\" class=\"dr-inputico-wrapper end ion-activatable ripple-parent\">\n                    <ion-datetime ngModel #drEnd value={{eDate}} displayFormat=\"D MMM YYYY\" class=\"sheriff-input summary-list-date-input enddate\" mode=\"md\" readonly=\"true\"></ion-datetime>\n                    <ion-ripple-effect></ion-ripple-effect>\n                </div>\n            </ion-col>\n        </ion-row>\n        <ion-row class=\"sheriff-row\">\n            <ion-col size=\"6\" class=\"sheriff-col range-days-col\">\n                <div class=\"dr-rangedays-outter-wrapper\">\n                    <div class=\"dr-rangedays-inner-wrapper\">\n                        <div class=\"dr-rangedays-isvalid-wrapper\">\n                            <span class=\"isvalidrange-label\">Date Range:</span><span *ngIf=\"drIsValid\" class=\"isvalidrangeval valid\">VALID</span><span *ngIf=\"!drIsValid\" class=\"isvalidrangeval invalid\">INVALID</span>\n                        </div>\n                        <div class=\"dr-rangedays-text-wrapper\">\n                            <span *ngIf=\"drIsValid\" class=\"dr-rangedays-text range-dayno\">{{rangeDur}}</span>\n                            <span *ngIf=\"!drIsValid\" class=\"dr-rangedays-text rangeerror\">{{rangeError}}</span>\n                        </div>\n                    </div>\n                </div>\n            </ion-col>\n            <ion-col size=\"2\" class=\"sheriff-col done-btn-col\">\n                <ion-button (click)=\"cancelDateRange()\" class=\"sheriff-btn dr-modal-button cancel\">\n                    <ion-icon class=\"sheriff-ico daterange-btn-ico cancel-ico\" name=\"close\"></ion-icon>\n                </ion-button>\n            </ion-col>\n            <ion-col size=\"4\" class=\"sheriff-col done-btn-col\">\n                <ion-button (click)=\"drModalAction('done')\" class=\"sheriff-btn dr-modal-button done\" [ngStyle]=\"{'border-color':drIsValid?'#2dd36fad':'#e0ac08ad'}\">\n                    <ion-icon *ngIf=\"drIsValid\" name=\"checkmark\"></ion-icon>\n                    <div *ngIf=\"drIsValid\" class=\"dr-update-done-txt\">update</div>\n                    <div *ngIf=\"!drIsValid\" class=\"dr-update-done-txt error\">fix range</div>\n                </ion-button>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</div>";
      /***/
    },

    /***/
    14010:
    /*!*************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/detail/news-detail/news-add/news-add.page.html ***!
      \*************************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header class=\"sheriff-header sheriff-tabpage-header\">\n    <ion-toolbar class=\"sheriff-toolbar\">\n        <div class=\"sheriff-header-background-wrapper\">\n            <div class=\"sheriff-header-droidstatus-padding-wrapper\"></div>\n            <div class=\"sheriff-header-background-inner-wrapper\">\n                <ion-grid class=\"sheriff-grid sheriff-page-header-grid addtsheetmodalheader-grid\">\n                    <ion-row class=\"sheriff-row sheriff-page-header-row addtsheetmodalheader-row\">\n                        <ion-col (click)=\"closeAddNews()\" class=\"sheriff-col addtsheet-header-col close-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-addtsheet-header-btn-wrapper close-btn\">\n                                <ion-icon class=\"sheriff-addtsheet-header-ico close-btn-ico\" name=\"arrow-back\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col addtsheet-header-col title-col\">\n                            <div class=\"sheriff-addtsheet-header title-wrapper\">\n                                <span class=\"tsaddtsheet-title-prefix\">Create Post</span>\n                            </div>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col addtsheet-header-col save-addtsheet-btn-col\">\n                            <ion-button (click)=\"addRecipients()\" #addPplBtn [disabled]=\"false\" class=\"sheriff-trans-btn header-opt-btn add-ppl-btn\">\n                                <ion-icon class=\"sheriff-trans-btn-ico headder-opt-btn-ico add-ppl-btn-ico\" name=\"person-add\"></ion-icon>\n                            </ion-button>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col addtsheet-header-col save-addtsheet-btn-col\">\n                            <ion-button (click)=\"memoBoxEvent('send',newMemoBox.value.toString())\" #postMemoBtn class=\"sheriff-trans-btn header-opt-btn post-memo-btn\">\n                                <ion-icon class=\"sheriff-trans-btn-ico headder-opt-btn-ico post-memo-btn-ico\" name=\"send\"></ion-icon>\n                                <ion-spinner *ngIf=\"mbStatus.type!==null&&mbStatus.type==='spinner'\" [duration]=\"1500\" class=\"memo-comment-chatbox-sending-btn-spinner\"></ion-spinner>\n                            </ion-button>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </div>\n        </div>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content [ngStyle]=\"{'top':isNegH?negH:'0px'}\" class=\"news-addmemo-content\">\n\n    <ion-grid class=\"sheriff-grid news-addmemo-memodata-grid\">\n        <ion-row class=\"sheriff-row news-addmemo-recipient-list-row\">\n            <ion-col size=\"1\" class=\"sheriff-col news-addmemo-recipient-list-col addmemo-label-col\">\n                <div class=\"news-addmemo-memodata-label to\">To:</div>\n            </ion-col>\n            <ion-col size=\"11\" class=\"sheriff-col news-addmemo-recipient-list-col pplchips-col\">\n                <div class=\"news-addmemo-list-outter-wrapper\">\n                    <ion-chip *ngFor=\"let rP of recShowHead;let i=index\" class=\"sheriff-chip news-addmemo-person-chip\">\n                        <ion-avatar class=\"sheriff-avatar news-addmemo-person-chip-avatar\">\n                            <img src=\"{{rP.ava}}\" class=\"news-addmemo-person-chip-avatar-img\">\n                        </ion-avatar>\n                        <div class=\"news-addmemo-person-chip-txt\">{{rP.name}}</div>\n                        <ion-icon (click)=\"removeRP(i)\" class=\"news-addmemo-person-chip-delete-ico namrico\" name=\"close-circle\"></ion-icon>\n                    </ion-chip>\n                    <div class=\"news-addmemo-addbtn-outter-wrapper\">\n                        <div (click)=\"addRecipients()\" class=\"news-addmemo-no-add recipients ion-activatable ripple-parent\">\n                            <ion-icon class=\"sheriff-ico news-addmemo-na-ico\" name=\"add-circle-outline\"></ion-icon>\n                            <div class=\"news-addmemo-nar-text\">Add</div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </div>\n                    </div>\n                </div>\n            </ion-col>\n        </ion-row>\n        <ion-row class=\"sheriff-row news-addmemo-addfile-row\">\n            <ion-col size=\"1\" class=\"sheriff-col news-addmemo-addfile-col addmemo-label-col\">\n                <div [ngStyle]=\"{'color':memoFiles.length>0?'var(--ion-color-primary)':'#646464'}\" class=\"news-addmemo-memodata-label\">File:</div>\n            </ion-col>\n            <ion-col size=\"11\" class=\"sheriff-col news-addmemo-addfile-col files-col\">\n                <div class=\"news-addmemo-list-outter-wrapper\">\n                    <div *ngIf=\"memoFiles.length>0\" class=\"news-addmemo-memodata-fileids-wrapper\">\n                        <div class=\"news-addmemo-file-wrapper\" *ngFor=\"let file of memoFiles;let fi=index\">\n                            <ion-icon class=\"news-addmemo-file-ico\" name=\"document\"></ion-icon>\n                            <div class=\"news-addmemo-file-name\">{{file.name}}</div>\n                            <ion-icon (click)=\"removeMemoFile(fi)\" class=\"news-addmemo-removefile-ico namrico\" name=\"close-circle\"></ion-icon>\n                        </div>\n                    </div>\n                    <div class=\"news-addmemo-addbtn-outter-wrapper\">\n                        <div (click)=\"addFiles()\" class=\"news-addmemo-no-add files ion-activatable ripple-parent\">\n                            <ion-icon class=\"sheriff-ico news-addmemo-na-ico\" name=\"add-circle-outline\"></ion-icon>\n                            <div class=\"news-addmemo-nar-text\">Add</div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </div>\n                    </div>\n                </div>\n            </ion-col>\n        </ion-row>\n        <ion-row class=\"sheriff-row news-addmemo-addurl-row\">\n            <ion-col size=\"1\" class=\"sheriff-col news-addmemo-addurl-col addmemo-label-col\">\n                <div [ngStyle]=\"{'color':memoUrls.length>0?'var(--ion-color-primary)':'#646464'}\" class=\"news-addmemo-memodata-label\">Url:</div>\n            </ion-col>\n            <ion-col size=\"11\" class=\"sheriff-col news-addmemo-addurl-col url-col\">\n                <div class=\"news-addmemo-list-outter-wrapper\">\n                    <div *ngIf=\"memoUrls.length>0\" class=\"news-addmemo-memodata-urls-wrapper\">\n                        <div class=\"news-addmemo-url\" *ngFor=\"let url of memoUrls;let ui=index\">\n                            <ion-icon class=\"news-addmemo-url-ico\" name=\"link\"></ion-icon>\n                            <div class=\"news-addmemo-url-name\">{{url.name}}</div>\n                            <ion-icon (click)=\"removeMemoUrl(ui)\" class=\"news-addmemo-removeurl-ico namrico\" name=\"close-circle\"></ion-icon>\n                        </div>\n                    </div>\n                    <div class=\"news-addmemo-addbtn-outter-wrapper\">\n                        <div (click)=\"addUrls()\" class=\"news-addmemo-no-add urls ion-activatable ripple-parent\">\n                            <ion-icon class=\"sheriff-ico news-addmemo-na-ico\" name=\"add-circle-outline\"></ion-icon>\n                            <div class=\"news-addmemo-nar-text\">Add</div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </div>\n                    </div>\n                </div>\n            </ion-col>\n        </ion-row>\n        <ion-row class=\"sheriff-row news-addmemo-reqconf-row\">\n            <ion-col size=\"1\" class=\"sheriff-col news-addmemo-reqconf-col box-col\">\n                <ion-checkbox (ionChange)=\"reqConfChange()\" [checked]=\"memoReqConf\" [mode]=\"'ios'\" class=\"sheriff-checkbox newmemo-reqconf-checkbox\"></ion-checkbox>\n            </ion-col>\n            <ion-col size=\"11\" class=\"sheriff-col news-addmemo-reqconf-col label-col\">\n                <div *ngIf=\"!memoReqConf\" [ngStyle]=\"{'color':'#646464'}\" class=\"news-addmemo-requireconf-label\">Require Confirmation</div>\n                <div *ngIf=\"memoReqConf\" [ngStyle]=\"{'color':'var(--ion-color-primary)'}\" class=\"news-addmemo-requireconf-label\">Confirmation Required</div>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n\n    <div class=\"news-addmemo-gradient-div-line top\"></div>\n\n    <ion-grid class=\"sheriff-grid news-addmemo-messagebox-grid\">\n        <ion-row class=\"sheriff-row news-addmemo-messagetitle-row\">\n            <ion-col class=\"sheriff-col news-addmemo-messagetitle-col\">\n                <ion-input class=\"sheriff-input news-addmemo-titleinput\" #newMemoTitle [clearInput]=\"true\" [clearOnEdit]=\"false\" [mode]=\"'md'\" [placeholder]=\"'Subject/Title?'\" [value]=\"''\" (ionBlur)=\"updateMemoTitle(newMemoTitle.value.toString())\"></ion-input>\n            </ion-col>\n        </ion-row>\n        <ion-row class=\"sheriff-row news-addmemo-messagebox-row\">\n            <ion-col size=\"12\" class=\"sheriff-col news-addmemo-messagebox-col\">\n                <div [ngModel] #newMemoBoxWrap [ngStyle]=\"{'min-height':fitH}\" class=\"nadtbwrap\">\n                    <ion-textarea #newMemoBox [autoGrow]=\"true\" [autofocus]=\"false\" [autocapitalize]=\"false\" [clearOnEdit]=\"false\" [cols]=\"12\" [debounce]=\"0\" [disabled]=\"false\" [maxlength]=\"2000\" [mode]=\"'md'\" [placeholder]=\"'Your Post Content...'\" [rows]=\"6\" [value]=\"''\"\n                        (ionInput)=\"memoBoxEvent('input',newMemoBox.value.toString())\" (ionFocus)=\"memoBoxEvent('focus',newMemoBox.value.toString())\" (ionBlur)=\"memoBoxEvent('input',newMemoBox.value.toString())\" class=\"sheriff-textarea news-addmemo-messagebox\"></ion-textarea>\n                </div>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n\n    <div class=\"news-addmemo-gradient-div-line bottom\"></div>\n\n    <ion-grid class=\"sheriff-grid news-addmemo-typedata-grid\">\n        <ion-row class=\"sheriff-row news-addmemo-messagebox-info-topper-row\">\n            <ion-col size=\"1\" class=\"sheriff-col news-addmemo-messagebox-info-topper-col status-ico-col\">\n                <ion-icon *ngIf=\"mbStatus.type==='icon'\" class=\"addmemo-messagebox-status-ico {{mbStatus.ico}}\" name=\"{{mbStatus.name}}\"></ion-icon>\n                <ion-spinner *ngIf=\"mbStatus.type==='spinner'\" class=\"addmemo-messagebox-status-ico {{mbStatus.ico}}\" name=\"{{mbStatus.name}}\"></ion-spinner>\n            </ion-col>\n            <ion-col size=\"9\" class=\"sheriff-col news-addmemo-messagebox-info-topper-col status-text-col\">\n                <div class=\"addmemo-messagebox-text-wrapper\">{{mbStatus.text}}</div>\n            </ion-col>\n            <ion-col size=\"2\" class=\"sheriff-col sheriff-col news-addmemo-messagebox-info-topper-col charcount-col\">\n                <div *ngIf=\"mbFocus\" [ngStyle]=\"{'color':mbCount===2000?'var(--ion-color-danger)':'#565656'}\" class=\"addmemo-messagebox-charcount-wrapper\">{{2000-mbCount}}</div>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n\n</ion-content>";
      /***/
    },

    /***/
    82472:
    /*!**************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/detail/news-detail/news-add/recipients/recipients.page.html ***!
      \**************************************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-content class=\"modal-recipients-content\">\n    <div class=\"modal-recipients-main-wrapper\">\n        <ion-grid class=\"sheriff-grid modal-recipients-grid header-grid\">\n            <ion-row class=\"sheriff-row modal-recipients-header-row\">\n                <ion-col size=\"8\" class=\"sheriff-col modal-recipients-header-col titletext-col\">\n                    <div class=\"modal-recipients-header-title-wrapper\">Recipients:</div>\n                </ion-col>\n                <ion-col size=\"2\" class=\"sheriff-col modal-recipients-header-col selall-col\">\n                    <div (click)=\"bulkSelectRec('all')\" class=\"mrec-header-allnone-btn-wrapper sel ion-activatable ripple-parent\">\n                        <ion-icon class=\"allnonebtnico sel\" name=\"person-add-outline\"></ion-icon>\n                        <div class=\"allnonebtntxt sel\">All</div>\n                        <ion-ripple-effect></ion-ripple-effect>\n                    </div>\n                </ion-col>\n                <ion-col size=\"2\" class=\"sheriff-col modal-recipients-header-col dselall-col ion-activatable ripple-parent\">\n                    <div (click)=\"bulkSelectRec('none')\" class=\"mrec-header-allnone-btn-wrapper dsel ion-activatable ripple-parent\">\n                        <ion-icon class=\"allnonebtnico dsel\" name=\"person-remove-outline\"></ion-icon>\n                        <div class=\"allnonebtntxt dsel\">All</div>\n                        <ion-ripple-effect></ion-ripple-effect>\n                    </div>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n        <ion-list class=\"sheriff-list modal-recipients-item-list\">\n            <ion-item *ngFor=\"let mRP of modalRecList;let mRPi=index\" class=\"sheriff-item modal-recipients-item\">\n                <ion-grid class=\"sheriff-grid modal-recipients-grid person-grid\">\n                    <ion-row class=\"sheriff-row modal-recipients-row person-row\">\n                        <ion-col size=\"2\" class=\"sheriff-col modal-recipients-col person-col person-ava-col\">\n                            <div class=\"pop-person-ava-wrapper\">\n                                <img src=\"{{mRP.ava}}\" class=\"pop-person-ava-img\">\n                            </div>\n                        </ion-col>\n                        <ion-col size=\"8\" class=\"sheriff-col modal-recipients-col person-col person-name-col\">\n                            <div class=\"pop-person-name-wrapper\">\n                                {{mRP.name}}\n                            </div>\n                        </ion-col>\n                        <ion-col size=\"2\" class=\"sheriff-col modal-recipients-col person-col person-hasconf-col\">\n                            <ion-checkbox (ionChange)=\"recChange(mRPi)\" [checked]=\"mRP.isChecked\" [mode]=\"'ios'\" class=\"sheriff-checkbox recipients-checkbox\"></ion-checkbox>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </ion-item>\n        </ion-list>\n        <ion-grid class=\"sheriff-grid modal-recipients-grid button-grid\">\n            <ion-row class=\"sheriff-row modal-recipients-button-row\">\n                <ion-col size=\"6\" class=\"sheriff-col modal-recipients-button-col cancel-col\">\n                    <ion-button (click)=\"updateCancelList('cancel')\" class=\"sheriff-btn recipients-btn cancel\">\n                        <ion-icon class=\"sheriff-btn-ico\" name=\"close\"></ion-icon>\n                        <div class=\"sheriff-btn-txt\">Cancel</div>\n                    </ion-button>\n                </ion-col>\n                <ion-col size=\"6\" class=\"sheriff-col modal-recipients-button-col ok-col\">\n                    <ion-button (click)=\"updateCancelList('update')\" class=\"sheriff-btn recipients-btn ok\">\n                        <ion-icon class=\"sheriff-btn-ico\" name=\"checkmark\"></ion-icon>\n                        <div class=\"sheriff-btn-txt\">Update</div>\n                    </ion-button>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n    </div>\n</ion-content>";
      /***/
    },

    /***/
    61150:
    /*!*******************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/detail/news-detail/news-detail.page.html ***!
      \*******************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header class=\"sheriff-header sheriff-tabpage-header\">\n    <ion-toolbar class=\"sheriff-toolbar\">\n        <div class=\"sheriff-header-background-wrapper\">\n            <div class=\"sheriff-header-droidstatus-padding-wrapper\"></div>\n            <div class=\"sheriff-header-background-inner-wrapper\">\n                <ion-grid class=\"sheriff-grid sheriff-page-header-grid detailmodalheader-grid\">\n                    <ion-row class=\"sheriff-row sheriff-page-header-row detailmodalheader-row\">\n                        <ion-col (click)=\"closeDetail('dismiss')\" class=\"sheriff-col detail-header-col close-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-detail-header-btn-wrapper close-btn\">\n                                <ion-icon class=\"sheriff-detail-header-ico close-btn-ico\" name=\"arrow-back\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col detail-header-col title-col\">\n                            <div class=\"sheriff-detail-header title-wrapper\">\n                                <span class=\"memodetail-title-prefix\">Memo</span><span class=\"memodetail-title-hash\">#</span><span class=\"memodetail-title-idno\">{{memo.Id}}</span>\n                                <span *ngIf=\"memo._DPMetaData.RequireConfirmation\" class=\"memodetail-requires-confirmation-main-wrapper\">\n                                  <span class=\"memodetail-confirmstatus-joiner\">-</span>\n                                <span *ngIf=\"!memo._DPMetaData.RequireMyConfirm\" class=\"memodetail-memo-isconfirmed-wrapper\">Confirmed</span>\n                                <span *ngIf=\"memo._DPMetaData.RequireMyConfirm\" class=\"memodetail-memo-isnotconfirmed-wrapper\">Confirm Now</span>\n                                </span>\n                            </div>\n                        </ion-col>\n                        <ion-col *ngIf=\"memo._DPMetaData.RequireMyConfirm\" (click)=\"confirmMemo()\" class=\"sheriff-col detail-header-col confirm-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-detail-header-btn-wrapper confirm-btn\">\n                                <ion-icon class=\"animate__animated animate__infinite animDur-2000 animate__flash sheriff-detail-header-ico delete-btn-ico\" name=\"thumbs-up\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col (click)=\"deleteMemo()\" class=\"sheriff-col detail-header-col share-btn-col ion-activatable ripple-parent\">\n                            <div [ngStyle]=\"{'opacity':memo._DPMetaData.CanDelete?'1':'0.5'}\" class=\"sheriff-detail-header-btn-wrapper delete-btn\">\n                                <ion-icon class=\"sheriff-detail-header-ico delete-btn-ico\" name=\"trash\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col (click)=\"shareMemo()\" class=\"sheriff-col detail-header-col share-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-detail-header-btn-wrapper share-btn\">\n                                <ion-icon class=\"sheriff-detail-header-ico share-btn-ico\" name=\"share\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </div>\n        </div>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"sheriff-content modal-newsdetail-content\">\n\n    <div class=\"sheriff-modal-backer-wrapper\">\n        <ion-grid class=\"sheriff-grid sheriff-newsdetail-modal-grid main-memo-grid\">\n            <ion-row class=\"sheriff-row sheriff-newsdetail-modal-row creator-row\">\n                <ion-col size=\"2\" class=\"sheriff-col sheriff-newsdetail-modal-col creator-ava-col\">\n                    <div class=\"memo-item-ava-img-wrapper detail\">\n                        <div class=\"memo-item-ava-img-value-wrapper detail\">\n                            <img src=\"{{memo._DPMetaData.CreatorInfo.Photo}}\" class=\"memo-item-ava-img detail\">\n                        </div>\n                    </div>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col memo-item-content-col creator-col detail\">\n                    <div class=\"memo-item-creator-name detail\">{{memo._DPMetaData.CreatorInfo.DisplayName}}</div>\n                    <div class=\"memo-item-date-item-wrapper created detail\">\n                        <ion-icon class=\"memo-item-date-item-ico created\" name=\"push\"></ion-icon>\n                        <span class=\"memo-item-label-txt created\">Posted:</span>\n                        <span class=\"memo-item-date-item-value created\">{{memo.nCreated}}</span>\n                    </div>\n                    <div *ngIf=\"memo.nModified!==memo.nCreated\" class=\"memo-item-date-item-wrapper modified detail\">\n                        <ion-icon class=\"memo-item-date-item-ico modified\" name=\"create\"></ion-icon>\n                        <span class=\"memo-item-label-txt modified\">Edited:</span>\n                        <span class=\"memo-item-date-item-value modified\">{{memo.nModified}}</span>\n                    </div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row memodetail-row dividerline-row\">\n                <ion-col class=\"sheriff-col memodetail-col dividerline-col\">\n                    <div class=\"memo-detail-gradient-div-line top\"></div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row memo-item-content-row recipients-row detail\">\n                <ion-col size=\"12\" class=\"sheriff-col memo-item-content-col recipients-col detail\">\n                    <ion-icon class=\"memo-item-sentto-ico sentto\" name=\"send\"></ion-icon>\n                    <div class=\"memo-item-label-txt sentto detail\">Sent to:</div>\n                    <div *ngIf=\"memo._DPMetaData.AssignedUsers.length>1\" class=\"memo-item-sentto-wrapper people detail\">\n                        <div (click)=\"showPeoplePop($event)\" class=\"memo-item-sentto-group-countshow people detail\">\n                            <div class=\"memo-item-senttocount-value\">\n                                {{memo._DPMetaData.AssignedUsers.length}}\n                                <ion-icon class=\"memo-item-sentto-ico people\" name=\"people\"></ion-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"memo._DPMetaData.Companies.length>0\" class=\"memo-item-sentto-wrapper companies detail\">\n                        <div class=\"memo-item-senttocount-value detail\">\n                            {{memo._DPMetaData.Companies.length}}\n                            <ion-icon class=\"memo-item-sentto-ico companies\" name=\"business\"></ion-icon>\n                            <span class=\"memo-senttocompany-wrapper\" *ngFor=\"let c of memo._DPMetaData.Companies;let ci=index\">\n                            <span [ngStyle]=\"{'color':c.Code===this.workName?workColor:'#eee','filter':incBright===true?'brightness(2.5)':'brightness(1)'}\" class=\"memo-senttocompany-name\">{{c.Code}}</span>\n                            </span>\n                        </div>\n                    </div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row memo-item-content-row message-text-row detail\">\n                <ion-col *ngIf=\"memo.Title!==null&&memo.Title!==undefined&&memo.Title!==''\" size=\"12\" class=\"sheriff-col memo-item-content-col message-text-title-col detail\">{{memo.Title}}</ion-col>\n                <ion-col size=\"12\" class=\"sheriff-col memo-item-content-col message-text-content-col detail\">\n                    <div class=\"memo-item-content-message-wrapper detail\">\n                        {{memo.Content}}\n                    </div>\n                </ion-col>\n                <ion-col size=\"12\" *ngIf=\"memo.File!==null&&memo.File!==undefined&&memo.File!==''&&memo.File>0\" class=\"sheriff-col memo-item-content-col message-text-file-col\">\n                    <ion-icon class=\"memo-item-ico file-ico\" name=\"document\"></ion-icon>\n                    <span class=\"memo-item-label-txt file\">Files:</span>\n                    <div *ngFor=\"let file of memo._DPMetaData.Files\" class=\"memo-item-file-objects-wrapper\">\n                        <span class=\"memo-item-value-txt file\">{{file.Id}}</span>\n                    </div>\n                </ion-col>\n                <ion-col size=\"12\" *ngIf=\"memo.Url!==null&&memo.Url!==undefined&&memo.Url!==''\" class=\"sheriff-col memo-item-content-col message-text-url-col\">\n                    <ion-icon class=\"memo-item-ico url-ico\" name=\"link\"></ion-icon>\n                    <span class=\"memo-item-label-txt url\">Links:</span>\n                    <span class=\"memo-item-value-txt url\"><a href=\"{{memo.Url}}\">{{memo.Url}}</a></span>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n\n        <div class=\"sheriff-modal-newsdetail-commentslist-main-wrapper\">\n            <div class=\"memo-detail-gradient-div-line bottom\"></div>\n            <ion-grid class=\"sheriff-grid commentslist-main-grid\">\n                <ion-row class=\"sheriff-grid commentslist-main-row title-row\">\n                    <ion-col size=\"12\" class=\"sheriff-col commentslist-main-col title-col ico-col\">\n                        <div class=\"commentslist-heading-title-txt-wrapper\">\n                            <ion-icon class=\"sheriff-ico commentslist-heading-ico\" name=\"chatbox\"></ion-icon>comments<span class=\"commentslist-heading-count-wrapper\"><span class=\"commentslist-countbrack\">(</span><span class=\"comments-list-count-value\">{{memo._DPMetaData.Comments.length}}</span><span class=\"commentslist-countbrack\">)</span></span>\n                        </div>\n                    </ion-col>\n                </ion-row>\n                <ion-row class=\"sheriff-grid commentslist-main-row commentslist-row\">\n                    <ion-col size=\"12\" class=\"sheriff-col commentslist-main-col commentslist-col\">\n                        <div *ngIf=\"memo._DPMetaData.Comments.length===0\" class=\"sheriff-newsdetail-nocomments-wrapper\">no comments found</div>\n                        <ion-list *ngIf=\"memo._DPMetaData.Comments.length>0\" class=\"sheriff-list modal-newsdetail-comments-list\">\n                            <ion-item *ngFor=\"let comment of memo._DPMetaData.Comments;let i = index\" class=\"sheriff-item news-comment-item memo-comment-{{i}}\">\n                                <ion-grid class=\"sheriff-grid memo-comment-item-grid\">\n                                    <ion-row class=\"sheriff-row memo-comment-item-row whowhen-row\">\n                                        <ion-col size=\"1\" class=\"sheriff-col memo-comment-item-col ava-col\">\n                                            <div class=\"memo-comment-item-ava-img-wrapper\">\n                                                <div class=\"memo-comment-item-ava-img-value-wrapper\">\n                                                    <img src=\"{{comment._DPMetaData.CreatorInfo.Photo}}\" class=\"memo-comment-item-ava-img\">\n                                                </div>\n                                            </div>\n                                        </ion-col>\n                                        <ion-col size=\"11\" class=\"sheriff-col memo-comment-item-col namedate-col\">\n                                            <div class=\"comment-item-date-item-wrapper creator name\">\n                                                {{comment._DPMetaData.CreatorInfo.DisplayName}}\n                                            </div>\n                                            <div class=\"memo-item-date-item-wrapper created detail\">\n                                                <ion-icon class=\"memo-item-date-item-ico created\" name=\"push\"></ion-icon>\n                                                <span class=\"memo-item-label-txt created comment\">Posted:</span>\n                                                <span class=\"memo-item-date-item-value created\">{{comment.Created}}</span>\n                                            </div>\n                                        </ion-col>\n                                    </ion-row>\n                                    <ion-row class=\"sheriff-row memo-comment-item-row what-row\">\n                                        <ion-col size=\"12\" class=\"sheriff-col memo-comment-item-col comment-col\">{{comment.Comment}}</ion-col>\n                                    </ion-row>\n                                </ion-grid>\n                            </ion-item>\n                        </ion-list>\n                    </ion-col>\n                </ion-row>\n            </ion-grid>\n        </div>\n\n        <div [ngStyle]=\"{'bottom':kbO?kbH:'0px'}\" class=\"sheriff-modal-newsdetail-chat-input-wrapper\">\n            <ion-grid class=\"sheriff-grid memo-chat-input-grid\">\n                <ion-row class=\"sheriff-row memo-chat-input-row input-info-topper-row\">\n                    <ion-col size=\"1\" class=\"sheriff-col memo-chat-input-row input-info-topper-col status-ico-col\">\n                        <ion-icon *ngIf=\"cbStatus.type==='icon'\" class=\"memo-chat-input-status-ico {{cbStatus.ico}}\" name=\"{{cbStatus.name}}\"></ion-icon>\n                        <ion-spinner *ngIf=\"cbStatus.type==='spinner'\" class=\"memo-chat-input-status-ico {{cbStatus.ico}}\" name=\"{{cbStatus.name}}\"></ion-spinner>\n                    </ion-col>\n                    <ion-col size=\"9\" class=\"sheriff-col memo-chat-input-col input-info-topper-col status-text-col\">\n                        <div class=\"chatbox-input-status-text-wrapper\">{{cbStatus.text}}</div>\n                    </ion-col>\n                    <ion-col size=\"2\" class=\"sheriff-col memo-chat-input-col input-info-topper-col charcount-col\">\n                        <div *ngIf=\"cbCount>0\" [ngStyle]=\"{'color':cbCount===2000?'var(--ion-color-danger)':'#565656'}\" class=\"chatbox-input-status-charcount-wrapper\">{{2000-cbCount}}</div>\n                    </ion-col>\n                </ion-row>\n                <ion-row class=\"sheriff-row memo-chat-input-row input-component-row\">\n                    <ion-col size=\"10\" class=\"sheriff-col memo-chat-input-col input-component-field-col\">\n                        <ion-input #cbInput [clearInput]=\"true\" [clearOnEdit]=\"false\" [debounce]=\"0\" [disabled]=\"false\" [placeholder]=\"'Post a Comment...'\" [value]=\"''\" (ionBlur)=\"chatBoxInput('blur',cbInput.value.toString())\" (ionFocus)=\"chatBoxInput('focus',cbInput.value.toString())\"\n                            (ionInput)=\"chatBoxInput('input',cbInput.value.toString())\" class=\"sheriff-input memo-chat-input\"></ion-input>\n                    </ion-col>\n                    <ion-col size=\"2\" class=\"sheriff-col memo-chat-input-col input-component-button-col\">\n                        <ion-button *ngIf=\"cbStatus.type!=='spinner'\" (click)=\"chatBoxInput('send',cbInput.value.toString())\" class=\"sheriff-btn news-comment-chatbox-send-btn\">\n                            <ion-icon class=\"sheriff-btn-ico news-comment-chatbox-send-btn-ico\" name=\"send\"></ion-icon>\n                            <div class=\"sheriff-btn-txt news-comment-chatbox-sent-btn-txt\">send</div>\n                        </ion-button>\n                        <ion-spinner *ngIf=\"cbStatus.type!==null&&cbStatus.type==='spinner'\" [duration]=\"1500\" class=\"memo-comment-chatbox-sending-btn-spinner\"></ion-spinner>\n                    </ion-col>\n                </ion-row>\n            </ion-grid>\n        </div>\n\n    </div>\n\n</ion-content>";
      /***/
    },

    /***/
    4425:
    /*!*************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/detail/task-add/task-add.page.html ***!
      \*************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header class=\"sheriff-header sheriff-tabpage-header\">\n    <ion-toolbar class=\"sheriff-toolbar\">\n        <div class=\"sheriff-header-background-wrapper\">\n            <div class=\"sheriff-header-droidstatus-padding-wrapper\"></div>\n            <div class=\"sheriff-header-background-inner-wrapper\">\n                <ion-grid class=\"sheriff-grid sheriff-page-header-grid addtaskmodalheader-grid\">\n                    <ion-row class=\"sheriff-row sheriff-page-header-row addtaskmodalheader-row\">\n                        <ion-col (click)=\"closeAddTask()\" class=\"sheriff-col addtask-header-col close-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-addtask-header-btn-wrapper close-btn\">\n                                <ion-icon class=\"sheriff-addtask-header-ico close-btn-ico\" name=\"arrow-back\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col addtask-header-col title-col\">\n                            <div class=\"sheriff-addtask-header title-wrapper\">\n                                <span class=\"tsaddtask-title-prefix\">Add Task</span>\n                            </div>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col addtask-header-col save-addtask-btn-col ion-activatable ripple-parent\">\n                            <ion-grid class=\"sheriff-grid addtask-header-fnbtn-grid\">\n                                <ion-row class=\"sheriff-row addtask-header-fnbtn-row\">\n                                    <ion-col class=\"sheriff-col addtask-header-fnbtn-col tab-header-action-btn-col cancelbtn-col taskcancel\">\n                                        <ion-button (click)=\"closeAddTask()\" class=\"task-add-btn canceladdtaskbtn sheriff-trans-btn\">\n                                            <ion-icon name=\"close\" class=\"task-canceladd-btn-ico sheriff-trans-btn-ico header-opt-btn-ico\"></ion-icon>\n                                        </ion-button>\n                                    </ion-col>\n                                    <ion-col class=\"sheriff-col addtask-header-fnbtn-col submitbtn-col tab-header-action-btn-col tasksubmit\">\n                                        <ion-button (click)=\"submitAddTask()\" [disabled]=\"!submitReady\" [ngStyle]=\"{'filter':!submitReady?'grayscale(1)':'grayscale(0)'}\" class=\"sheriff-trans-btn task-add-btn addtaskbtn\">\n                                            <ion-icon name=\"checkmark\" class=\"sheriff-btn-ico task-add-btn-ico sheriff-trans-btn-ico header-opt-btn-ico\"></ion-icon>\n                                        </ion-button>\n                                    </ion-col>\n                                </ion-row>\n                            </ion-grid>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </div>\n        </div>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"tasks-addtask-content tasks-addtask-modal\">\n    <div class=\"tasks-addtask-bground-wrapper\"></div>\n    <div class=\"tasks-addtask-main-wrapper\">\n        <ion-grid class=\"sheriff-grid tasks-addtask-item-grid heading-grid\">\n            <ion-row class=\"sheriff-row tasks-addtask-item-row heading-row\">\n                <ion-col size=\"2\" class=\"sheriff-col sheriff-addtask-item-grid heading-ico-col\">\n                    <img class=\"sheriff-addtask-heading-ico tasks-heading-ico\" src=\"../../../../assets/img/sheriff-addtsheet-ico.png\">\n                </ion-col>\n                <ion-col size=\"8\" class=\"sheriff-col sheriff-addtask-item-grid heading-text-col\">\n                    <div class=\"sheriff-addtask-heading-txt tasks-heading-txt\">New Task</div>\n                </ion-col>\n                <ion-col size=\"2\" class=\"sheriff-col sheriff-addtask-item-grid heading-ico-col\">\n                    <div style=\"background-image:url({{workAvatar}})\" class=\"sheriff-addtask-workplaceava-wrapper\"></div>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n\n        <ion-grid class=\"sheriff-grid tasks-add-grid\">\n            <!-- ----- TASK TITLE ----- -->\n            <ion-row class=\"sheriff-row tasks-add-row title-row\">\n                <ion-col size=\"2\" class=\"sheriff-col addtask-col title-ico-col\">\n                    <ion-icon [ngStyle]=\"{'color':addForm.title.focus===true?'var(--ion-color-primary)':'#565656'}\" [ngClass]=\"{'addtaskicovalfade':addForm.title.valid!==null}\" name=\"list\" class=\"addtask-ico title-ico\"></ion-icon>\n                    <div class=\"addtask-ico-validation-wrapper title\">\n                        <ion-icon *ngIf=\"addForm.title.valid!==null&&addForm.title.valid===true\" style=\"color:var(--ion-color-success)\" name=\"checkmark\" class=\"addtask-ico valid-ico title\"></ion-icon>\n                        <ion-icon *ngIf=\"addForm.title.valid!==null&&addForm.title.valid===false\" style=\"color:var(--ion-color-danger)\" name=\"close\" class=\"addtask-ico invalid-ico title\"></ion-icon>\n                    </div>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col addtask-col title-input-col\">\n                    <div [ngStyle]=\"{'color':addForm.title.valid!==null&&addForm.title.valid===false?'var(--ion-color-danger)':'#727272'}\" [ngClass]=\"{'taskfauxlabelhlight':addForm.title.focus!==null&&addForm.title.focus===true}\" class=\"addtask-item-label tasktitle-label\">Task Title:</div>\n                    <ion-item class=\"addtask-item tasktitle-item\">\n                        <ion-input #atiTitle (ionFocus)=\"actionATField('focus','title',atiTitle.value)\" (ionBlur)=\"actionATField('blur','title',atiTitle.value)\" [required]=\"true\" [type]=\"'text'\" [clearInput]=\"true\" [inputmode]=\"'text'\" [mode]=\"'md'\" [placeholder]=\"'Required'\"\n                            class=\"addtask-item-input tasktitle-input\"></ion-input>\n                    </ion-item>\n                </ion-col>\n            </ion-row>\n            <!-- ----- ASSIGN TO ----- -->\n            <ion-row class=\"sheriff-row tasks-add-row assign-row\">\n                <ion-col size=\"2\" class=\"sheriff-col addtask-col assign-ico-col\">\n                    <ion-icon [ngStyle]=\"{'color':assSelIsOpen?'var(--ion-color-primary)':'#565656'}\" [ngClass]=\"{'addtaskicovalfade':addForm.assign.valid!==null&&!assSelIsOpen}\" name=\"person-add\" class=\"addtask-ico assign-ico\"></ion-icon>\n                    <div *ngIf=\"!assSelIsOpen\" class=\"addtask-ico-validation-wrapper assign\">\n                        <ion-icon *ngIf=\"addForm.assign.valid!==null&&addForm.assign.valid===true\" style=\"color:var(--ion-color-success)\" name=\"checkmark\" class=\"addtask-ico valid-ico assign\"></ion-icon>\n                        <ion-icon *ngIf=\"addForm.assign.valid!==null&&addForm.assign.valid===false\" style=\"color:var(--ion-color-danger)\" name=\"close\" class=\"addtask-ico invalid-ico assign\"></ion-icon>\n                    </div>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col tasks-addedit-formfield-col assignto-col\" [ngStyle]=\"{'border-bottom':assSelIsOpen?'solid 2px var(--ion-color-primary)':'solid 1px #343434'}\">\n                    <ion-grid class=\"sheriff-grid addtask-inner-grid assign\">\n                        <ion-row class=\"sheriff-row addtask-inner-row assign label\">\n                            <ion-col size=\"12\" class=\"sheriff-col addtask-inner-col assign label\">\n                                <div [ngStyle]=\"{'color':addForm.assign.valid!==null&&addForm.assign.valid===false?'var(--ion-color-danger)':'#727272'}\" [ngClass]=\"{'taskfauxlabelhlight':assSelIsOpen}\" class=\"addtask-item-label assigntolabel\">Assign To:</div>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row class=\"sheriff-row addtask-inner-row assign content\">\n                            <ion-col size=\"12\" (click)=\"openAssignSelect()\" class=\"sheriff-col addtask-inner-col assign content input ion-activatable ripple-parent\">\n                                <div *ngIf=\"addForm.assign.value!==null\" class=\"addtask-assign-wrapper\">\n                                    <ion-chip class=\"sheriff-chip addtask-assign-chip\">\n                                        <ion-avatar class=\"sheriff-avatar addtask-assign-chip-avatar\">\n                                            <img class=\"addtask-chip-avatar-img assign-avar-img\" src=\"{{addForm.assign.value.Photo}}\">\n                                        </ion-avatar>\n                                        <ion-label class=\"addtask-chip assign-txt-label\">\n                                            <span *ngIf=\"addForm.assign.value.EmpId===myEmpId\" class=\"assign-chip-txt-label you\">You</span>\n                                            <span *ngIf=\"addForm.assign.value.EmpId!==myEmpId\" class=\"assign-chip-txt-label other\">\n                                    <span *ngIf=\"addForm.assign.value.FirstName.length>0\" class=\"assign-chip-txt-label fname\">{{addForm.assign.value.FirstName}}</span>\n                                            <span *ngIf=\"addForm.assign.value.LastName.length>0\" class=\"assign-chip-txt-label lname\"> {{addForm.assign.value.LastName.charAt(0)}}.</span>\n                                            <span *ngIf=\"addForm.assign.value.FirstName.length<1&&addForm.assign.value.LastName.length<1&&addForm.assign.value.DisplayName.length>0\" class=\"assign-chip-txt-label dname\">{{addForm.assign.value.DisplayName}}</span>\n                                            </span>\n                                        </ion-label>\n                                    </ion-chip>\n                                </div>\n                                <ion-ripple-effect></ion-ripple-effect>\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </ion-col>\n            </ion-row>\n            <!-- ----- DUE DATE ----- -->\n            <ion-row class=\"sheriff-row tasks-addedit-row tasks-addedit-duedate-row3\">\n                <ion-col size=\"2\" class=\"sheriff-col addtask-col duedate-ico-col\">\n                    <ion-icon [ngClass]=\"{'addtaskicovalfade':addForm.duedate.valid!==null}\" [ngStyle]=\"{'color':dateSelIsOpen?'var(--ion-color-primary)':'#565656'}\" name=\"calendar\" class=\"addtask-ico duedate-ico\"></ion-icon>\n                    <div class=\"addtask-ico-validation-wrapper duedate\">\n                        <ion-icon *ngIf=\"addForm.duedate.valid!==null&&addForm.duedate.valid===true\" style=\"color:var(--ion-color-success)\" name=\"checkmark\" class=\"addtask-ico valid-ico duedate\"></ion-icon>\n                        <ion-icon *ngIf=\"addForm.duedate.valid!==null&&addForm.duedate.valid===false\" style=\"color:var(--ion-color-danger)\" name=\"close\" class=\"addtask-ico invalid-ico duedate\"></ion-icon>\n                    </div>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col tasks-addedit-formfield-col duedate-co\" [ngStyle]=\"{'border-bottom':dateSelIsOpen?'solid 2px var(--ion-color-primary)':'solid 1px #343434'}\">\n                    <ion-grid class=\"sheriff-grid addtask-inner-grid duedate\">\n                        <ion-row class=\"sheriff-row addtask-inner-row duedate label\">\n                            <ion-col size=\"12\" class=\"sheriff-col addtask-inner-col duedate label\">\n                                <div [ngStyle]=\"{'color':addForm.duedate.valid!==null&&addForm.duedate.valid===false?'var(--ion-color-danger)':'#727272'}\" [ngClass]=\"{'taskfauxlabelhlight':dateSelIsOpen}\" class=\"addtask-item-label duedatelabel\">Due Date:</div>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row class=\"sheriff-row addtask-inner-row duedate content\">\n                            <ion-col size=\"10\" (click)=\"openDP()\" class=\"sheriff-col addtask-inner-col duedate content input ion-activatable ripple-parent\">\n                                <div *ngIf=\"addForm.duedate.value!==null\" class=\"addtask-duedate-wrapper hasvalue\">\n                                    {{addForm.duedate.txt}}\n                                    <div class=\"addtask-duedate-od\" *ngIf=\"dateOD\">\n                                        <ion-icon class=\"addtask-duedate-od-ico\" name=\"warning-outline\"></ion-icon>Due</div>\n                                </div>\n                                <div *ngIf=\"addForm.duedate.value===null\" class=\"addtask-duedate-wrapper default\">\n                                    Optional\n                                </div>\n                                <ion-ripple-effect></ion-ripple-effect>\n                            </ion-col>\n                            <ion-col size=\"2\" class=\"sheriff-col addtask-inner-col duedate content clear\">\n                                <div *ngIf=\"addForm.duedate.value!==null\" (click)=\"clearDueDate()\" class=\"addtask-custclearbtn-wrapper duedate ion-activatable ripple-parent\">\n                                    <ion-icon class=\"addtask-custclearbtn-ico duedate\" name=\"close\"></ion-icon>\n                                    <ion-ripple-effect></ion-ripple-effect>\n                                </div>\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </ion-col>\n            </ion-row>\n            <!-- ----- NOTES ----- -->\n            <ion-row class=\"sheriff-row tasks-addedit-row tasks-addedit-tasknotes-row4\">\n                <ion-col size=\"2\" class=\"sheriff-col addtask-col notes-ico-col\">\n                    <ion-icon [ngStyle]=\"{'color':addForm.notes.focus===true?'var(--ion-color-primary)':'#565656'}\" name=\"pencil\" [ngClass]=\"{'addtaskicovalfade':addForm.notes.valid!==null}\" class=\"addtask-ico notes-ico\"></ion-icon>\n                    <div class=\"addtask-ico-validation-wrapper notes\">\n                        <ion-icon *ngIf=\"addForm.notes.valid!==null&&addForm.notes.valid===true\" style=\"color:var(--ion-color-success)\" name=\"checkmark\" class=\"addtask-ico valid-ico notes\"></ion-icon>\n                        <ion-icon *ngIf=\"addForm.notes.valid!==null&&addForm.notes.valid===false\" style=\"color:var(--ion-color-danger)\" name=\"close\" class=\"addtask-ico invalid-ico notes\"></ion-icon>\n                    </div>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col tasks-addedit-formfield-col notes-col\">\n                    <div class=\"addtask-item-label tasknotes-label\" [ngStyle]=\"{'color':addForm.notes.valid!==null&&addForm.notes.valid===false?'var(--ion-color-danger)':'#727272'}\" [ngClass]=\"{'taskfauxlabelhlight':addForm.notes.focus!==null&&addForm.notes.focus===true}\">Task Notes:</div>\n                    <ion-item class=\"addtask-item tasknotes-item\">\n                        <ion-textarea #atiNotes (ionFocus)=\"actionATField('focus','notes',atiNotes.value)\" (ionBlur)=\"actionATField('blur','notes',atiNotes.value)\" [autoGrow]=\"true\" [required]=\"false\" [mode]=\"'md'\" [placeholder]=\"'Optional'\" class=\"addtask-item-input tasknotes-input\"></ion-textarea>\n                    </ion-item>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n\n    </div>\n\n</ion-content>";
      /***/
    },

    /***/
    15295:
    /*!******************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/detail/task-add/taskassignee/taskassignee.page.html ***!
      \******************************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-content class=\"modal-recipients-content assignee\">\n    <div class=\"modal-recipients-main-wrapper assignee\">\n        <ion-grid class=\"sheriff-grid modal-recipients-grid header-grid assignee\">\n            <ion-row class=\"sheriff-row modal-recipients-header-row assignee\">\n                <ion-col size=\"12\" class=\"sheriff-col modal-recipients-header-col titletext-col assignee\">\n                    <div class=\"modal-recipients-header-title-wrapper assignee\">Assign To:</div>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n        <ion-list class=\"sheriff-list modal-recipients-item-list assignee\">\n            <ion-item (click)=\"assSelChange(assI)\" [button]=\"true\" *ngFor=\"let ass of modalAssList;let assI=index\" class=\"sheriff-item modal-recipients-item assignee\">\n                <ion-grid class=\"sheriff-grid modal-recipients-grid person-grid assignee\">\n                    <ion-row class=\"sheriff-row modal-recipients-row person-row assignee\">\n                        <ion-col size=\"2\" class=\"sheriff-col modal-recipients-col person-col person-ava-col assignee\">\n                            <div class=\"pop-person-ava-wrapper assignee\">\n                                <img src=\"{{ass.Photo}}\" class=\"pop-person-ava-img assignee\">\n                            </div>\n                        </ion-col>\n                        <ion-col size=\"10\" class=\"sheriff-col modal-recipients-col person-col person-name-col assignee\">\n                            <div class=\"pop-person-name-wrapper assignee\">\n                                {{ass.DisplayName}}\n                            </div>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </ion-item>\n        </ion-list>\n        <ion-grid class=\"sheriff-grid modal-recipients-grid button-grid assignee\">\n            <ion-row class=\"sheriff-row modal-recipients-button-row assignee\">\n                <ion-col size=\"12\" class=\"sheriff-col modal-recipients-button-col cancel-col assignee\">\n                    <ion-button (click)=\"assSelCancel()\" class=\"sheriff-btn recipients-btn cancel assignee\">\n                        <ion-icon class=\"sheriff-btn-ico assignee\" name=\"close\"></ion-icon>\n                        <div class=\"sheriff-btn-txt assignee\">Cancel</div>\n                    </ion-button>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n    </div>\n</ion-content>";
      /***/
    },

    /***/
    56439:
    /*!*******************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/detail/tsheet-detail/tsheet-add/tsheet-add.page.html ***!
      \*******************************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header class=\"sheriff-header sheriff-tabpage-header\">\n    <ion-toolbar class=\"sheriff-toolbar\">\n        <div class=\"sheriff-header-background-wrapper\">\n            <div class=\"sheriff-header-droidstatus-padding-wrapper\"></div>\n            <div class=\"sheriff-header-background-inner-wrapper\">\n                <ion-grid class=\"sheriff-grid sheriff-page-header-grid addtsheetmodalheader-grid\">\n                    <ion-row class=\"sheriff-row sheriff-page-header-row addtsheetmodalheader-row\">\n                        <ion-col (click)=\"closeAddTSheet()\" class=\"sheriff-col addtsheet-header-col close-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-addtsheet-header-btn-wrapper close-btn\">\n                                <ion-icon class=\"sheriff-addtsheet-header-ico close-btn-ico\" name=\"arrow-back\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col addtsheet-header-col title-col\">\n                            <div class=\"sheriff-addtsheet-header title-wrapper\">\n                                <span class=\"tsaddtsheet-title-prefix\">Add Timesheet</span>\n                            </div>\n                        </ion-col>\n                        <ion-col (click)=\"saveNewTSheet(false)\" class=\"sheriff-col addtsheet-header-col save-addtsheet-btn-col ion-activatable ripple-parent\">\n                            <div class=\"shouldsave-indic-wrapper\">\n                                <ion-icon *ngIf=\"shouldSave&&!errorSave\" class=\"shouldsave-indic-ico animate__animated animate__fadeIn\" name=\"ellipse\"></ion-icon>\n                                <ion-icon *ngIf=\"errorSave\" class=\"errorsave-indic-ico animate__animated animate__fadeIn\" name=\"ellipse\"></ion-icon>\n                            </div>\n                            <div [class.halfbrightness]=\"errorSave\" class=\"sheriff-addtsheet-header-btn-wrapper save-btn\">\n                                <ion-icon class=\"sheriff-addtsheet-header-ico save-btn-ico\" name=\"save\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </div>\n        </div>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"tsheet-addtsheet-content tsheet-addtsheet-modal\">\n    <div class=\"tsheet-addtsheet-bground-wrapper\"></div>\n    <div class=\"tsheet-addtsheet-main-wrapper\">\n        <div *ngIf=\"wasChanged&&!errorSave\" class=\"tsheet-addtsheet-updated-banner-wrapper\">{{updateSaveBannerTxt}}</div>\n        <ion-grid class=\"tsheet-addtsheet-item-grid heading-grid\">\n            <ion-row class=\"tsheet-addtsheet-item-row heading-row\">\n                <ion-col size=\"2\" class=\"sheriff-addtsheet-item-grid heading-ico-col\">\n                    <img class=\"sheriff-addtsheet-heading-ico tsheet-heading-ico\" src=\"../../../../assets/img/sheriff-addtsheet-ico.png\">\n                </ion-col>\n                <ion-col size=\"8\" class=\"sheriff-addtsheet-item-grid heading-text-col\">\n                    <div class=\"sheriff-addtsheet-heading-txt tsheet-heading-txt\">New Timesheet</div>\n                </ion-col>\n                <ion-col size=\"2\" class=\"sheriff-addtsheet-item-grid heading-ico-col\">\n                    <div style=\"background-image:url({{workAvatar}})\" class=\"sheriff-addtsheet-workplaceava-wrapper\"></div>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n\n        <ion-grid class=\"tsheet-addtsheet-item-grid data-grid\">\n            <ion-row (click)=\"editArea(addTSFormData.areaId)\" class=\"tsheet-addtsheet-item-row area-at-workplace ion-activatable ripple-parent\">\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-addtsheet-item-col area-at-workplace-col ico-col\">\n                    <ion-icon class=\"sheriff-ico tsheet-addtsheet-item-main-ico tsheet-detail-item-main-ico areaatworkplace-ico\" name=\"locate\"></ion-icon>\n                </ion-col>\n                <ion-col size=\"8\" class=\"sheriff-col tsheet-addtsheet-item-col area-at-workplace-col data-col\">\n                    <div class=\"tsheet-addtsheet-item-data-label area-at-workplace\">Area at {{addTSFormData.companyName}}</div>\n                    <div class=\"tsheet-addtsheet-item-data-value area-at-workplace\">{{addTSFormData.areaName}}</div>\n                </ion-col>\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-addtsheet-item-col area-at-workplace-col addtsheet-col\">\n                    <ion-icon [ngClass]=\"{'tsheet-warea-asheet-open-ico':aSheetOpen,'tsheet-warea-asheet-close-ico':!aSheetOpen}\" class=\"sheriff-ico tsheet-addtsheet-item-addtsheet-ico area-at-workplace\" name=\"chevron-forward\"></ion-icon>\n                </ion-col>\n                <ion-ripple-effect></ion-ripple-effect>\n            </ion-row>\n            <ion-row class=\"tsheet-addtsheet-item-row date-time\">\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-addtsheet-item-col date-time-col ico-col\">\n                    <img class=\"sheriff-ico tsheet-addtsheet-item-main-ico date-time-ico\" src=\"../../../../../assets/img/sheriff-tsheet-detail-datetime-ico.png\">\n                    <div class=\"tsheet-addtsheet-datetime-icon-wrapper time\">\n                        <ion-icon class=\"sheriff-ico tsheet-addtsheet-item-main-ico startendtime-ico tsheet-detail-item-main-ico \" name=\"stopwatch\"></ion-icon>\n                    </div>\n                    <div class=\"tsheet-addtsheet-datetime-icon-wrapper breaks\">\n                        <ion-icon class=\"sheriff-ico tsheet-addtsheet-item-main-ico tsheet-detail-item-main-ico breaks-ico\" name=\"pause\"></ion-icon>\n                    </div>\n                    <div class=\"tsheet-addtsheet-datetime-icon-wrapper tt\">\n                        <ion-icon class=\"sheriff-ico tsheet-addtsheet-item-main-ico tsheet-detail-item-main-ico tt-ico\" name=\"calculator\"></ion-icon>\n                    </div>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col tsheet-addtsheet-item-col date-time-col data-col\">\n                    <ion-grid class=\"tsheet-addtsheet-item-grid datetime-grid\">\n                        <ion-row (click)=\"openDP('date')\" class=\"tsheet-addtsheet-item-row date-time-inner-row date-row\">\n                            <ion-col size=\"10\" class=\"tsheet-addtsheet-item-col date-time-inner-col date-col\">\n                                <div class=\"tsheet-addtsheet-item-data-label date\">Date</div>\n                                <div class=\"tsheet-addtsheet-item-data-value date\">{{addTSFormData.date.txt}}</div>\n                            </ion-col>\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-addtsheet-item-col date-select-col addtsheet-col\">\n                                <ion-icon [ngClass]=\"{'tsheet-warea-asheet-open-ico':dpDateOpen,'tsheet-warea-asheet-close-ico':!dpDateOpen}\" class=\"sheriff-ico tsheet-addtsheet-item-addtsheet-ico\" name=\"chevron-forward\"></ion-icon>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row class=\"tsheet-addtsheet-item-row date-time-inner-row time-row\">\n                            <ion-col size=\"6\" class=\"tsheet-addtsheet-item-col date-time-inner-col starttime-col\">\n                                <div class=\"tsheet-addtsheet-item-data-label starttime\">Start</div>\n                                <div (click)=\"openDP('stime')\" class=\"tsheet-addtsheet-time-input-wrapper starttime ion-activatable ripple-parent\">\n                                    <div *ngIf=\"addTSFormData.stime.txt!==null\" class=\"tsheet-addtsheet-item-data-value starttime\">{{addTSFormData.stime.txt}}</div>\n                                    <div *ngIf=\"addTSFormData.stime.txt===null\" class=\"tsheet-addtsheet-item-data-value starttime default\">Select Start Time</div>\n                                    <ion-icon *ngIf=\"newTSInputErr==='start'\" class=\"addtsheet-inputerr-ico start\" name=\"alert-circle-outline\"></ion-icon>\n                                    <ion-ripple-effect></ion-ripple-effect>\n                                </div>\n                            </ion-col>\n                            <ion-col size=\"6\" class=\"tsheet-addtsheet-item-col date-time-inner-col endtime-col\">\n                                <div class=\"tsheet-addtsheet-item-data-label endtime\">End</div>\n                                <div (click)=\"openDP('etime')\" class=\"tsheet-addtsheet-time-input-wrapper endtime ion-activatable ripple-parent\">\n                                    <div *ngIf=\"addTSFormData.etime.txt!==null\" class=\"tsheet-addtsheet-item-data-value endtime\">{{addTSFormData.etime.txt}}</div>\n                                    <div *ngIf=\"addTSFormData.etime.txt===null\" class=\"tsheet-addtsheet-item-data-value endtime default\">Select End Time</div>\n                                    <ion-icon *ngIf=\"newTSInputErr==='end'\" class=\"addtsheet-inputerr-ico end\" name=\"alert-circle-outline\"></ion-icon>\n                                    <ion-ripple-effect></ion-ripple-effect>\n                                </div>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row (click)=\"editNewBreaks()\" class=\"tsheet-addtsheet-item-row date-time-inner-row breaks-row ion-activatable ripple-parent\">\n                            <ion-col size=\"10\" class=\"tsheet-addtsheet-item-col date-time-inner-col breakstaken-col\">\n                                <div class=\"tsheet-addtsheet-item-data-label breakstaken\">Breaks</div>\n                                <div class=\"tsheet-addtsheet-item-data-value breakstakencount\">\n                                    <span class=\"tsheet-addtsheet-breaks-value mbreaktotal\">{{addTSFormData.breaks.values.summary.r}}</span>\n                                    <span class=\"tsheet-addtsheet-breaks-type-lbl rest-lbl\">Rest</span>\n                                    <span class=\"tsheet-addtsheet-breaks-sep\">|</span>\n                                    <span class=\"tsheet-addtsheet-breaks-value mbreaktotal\">{{addTSFormData.breaks.values.summary.m}}</span>\n                                    <span class=\"tsheet-addtsheet-breaks-type-lbl rest-lbl\">Meal</span>\n                                    <span class=\"tsheet-addtsheet-breaks-equals\">=</span>\n                                    <span class=\"tsheet-addtsheet-breaks-total-time-value\">\n                                      <span class=\"tsheet-addtsheet-breaks-tt-value\">\n                                        <span *ngIf=\"addTSFormData.breaks.values.summary.dur.hours>0\" class=\"tsheet-detail-tt-value hrs\">\n                                          {{addTSFormData.breaks.values.summary.dur.hours}}\n                                          <span class=\"tt-suffix hrs\">hrs</span>\n                                    </span>\n                                    <span *ngIf=\"addTSFormData.breaks.values.summary.dur.minutes>0\" class=\"tsheet-detail-tt-value mins\">\n                                          {{addTSFormData.breaks.values.summary.dur.minutes}}\n                                          <span class=\"tt-suffix mins\">mins</span>\n                                    </span>\n                                    </span>\n                                    <span *ngIf=\"showTTLBreakMins&&addTSFormData.breaks.values.summary.dur.minutes===0\" class=\"show-ttl-break-mins-span\"><span class=\"defaultzer0\" style=\"font-size:16px\">0</span>mins</span>\n                                    </span>\n                                </div>\n                            </ion-col>\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-addtsheet-item-col breaks-addtsheet-col\">\n                                <ion-icon class=\"sheriff-ico tsheet-addtsheet-item-addtsheet-ico breaks-addtsheet\" name=\"chevron-forward\"></ion-icon>\n                            </ion-col>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-row>\n                        <ion-row class=\"tsheet-addtsheet-item-row date-time-inner-row total-time-col\">\n                            <ion-col size=\"12\" class=\"tsheet-addtsheet-item-col date-time-inner-col totaltime-col\">\n                                <div class=\"tsheet-addtsheet-item-data-label totaltime\">Total Time</div>\n                                <div class=\"tsheet-addtsheet-item-data-value totaltime\">\n                                    <div *ngIf=\"newTSInputErr!=='start'&&newTSInputErr!=='end'\" class=\"tsheet-addtsheet-tt-main-wrapper\">\n                                        <span *ngIf=\"!(addTSFormData.ttime.hours===0&&addTSFormData.ttime.minutes===0)\" class=\"tsheet-addtsheet-tt-value\">\n                                    <span *ngIf=\"addTSFormData.ttime.hours>0\" class=\"tsheet-addtsheet-tt-value hrs\">{{addTSFormData.ttime.hours}}<span class=\"tt-suffix hrs\">hrs</span></span>\n                                        <span *ngIf=\"addTSFormData.ttime.minutes>0\" class=\"tsheet-addtsheet-tt-value mins\">{{addTSFormData.ttime.minutes}}<span class=\"tt-suffix mins\">mins</span></span>\n                                        </span>\n                                        <div *ngIf=\"addTSFormData.ttime.hours===0&&addTSFormData.ttime.minutes===0\" class=\"tsheet-addtsheet-tt-default\">Calculated Automatically</div>\n                                    </div>\n                                    <div *ngIf=\"newTSInputErr==='start'||newTSInputErr==='end'\" class=\"tsheet-addtsheet-error-msg-wrapper\">\n                                        <ion-icon class=\"addtsheet-error-ico\" name=\"warning\"></ion-icon>\n                                        <div class=\"addtsheet-err-txt\">\n                                            <span *ngIf=\"newTSInputErr==='start'\" class=\"startafterend\">Start Time<ion-icon name=\"chevron-forward-outline\"></ion-icon>End</span>\n                                            <span *ngIf=\"newTSInputErr==='end'\" class=\"endbeforestart\">End Time<ion-icon name=\"chevron-back-outline\"></ion-icon>Start</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"tsheet-addtsheet-item-row comments\">\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-addtsheet-item-col comments ico-col\">\n                    <ion-icon class=\"sheriff-ico tsheet-addtsheet-item-main-ico comments-ico tsheet-detail-item-main-ico\" name=\"chatbox\"></ion-icon>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col tsheet-addtsheet-item-col area-at-workplace-col data-col\">\n                    <div class=\"tsheet-addtsheet-item-data-label comments\">Comments</div>\n                    <div class=\"tsheet-addtsheet-comment-type-wrapper employee\">\n                        <ion-input (ionBlur)=\"updateComments()\" type=\"text\" placeholder={{addTSFormData.comments.pholder}} mode=\"md\" inputmode=\"text\" clearInput=\"true\" clearOnEdit=\"false\" class=\"tsheet-addtsheet-comment-input\" value={{addTSFormData.comments.content}}></ion-input>\n                    </div>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n\n    </div>\n\n</ion-content>";
      /***/
    },

    /***/
    51335:
    /*!*************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/detail/tsheet-detail/tsheet-breaks/tsheet-breaks.page.html ***!
      \*************************************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header class=\"sheriff-header sheriff-tabpage-header\">\n    <ion-toolbar class=\"sheriff-toolbar\">\n        <div class=\"sheriff-header-background-wrapper\">\n            <div class=\"sheriff-header-droidstatus-padding-wrapper\"></div>\n            <div class=\"sheriff-header-background-inner-wrapper\">\n                <ion-grid class=\"sheriff-grid sheriff-page-header-grid detailmodalheader-grid\">\n                    <ion-row class=\"sheriff-row sheriff-page-header-row detailmodalheader-row\">\n                        <ion-col (click)=\"closeBreaks()\" class=\"sheriff-col detail-header-col close-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-detail-header-btn-wrapper close-btn\">\n                                <ion-icon class=\"sheriff-detail-header-ico close-btn-ico\" name=\"arrow-back\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col detail-header-col title-col\">\n                            <div class=\"sheriff-detail-header title-wrapper breaks\">\n                                <span class=\"tsdetail-title-prefix breaks\">Breaks</span>\n                                <span class=\"tsdetail-title-breaks-count title-bc-ani\">({{breaks.length}})</span>\n                                <span class=\"tsdetail-title-breaks-ttime\">\n                                  <span class=\"tsdetail-title-breaks-ttime scolon\">:</span>\n                                <span class=\"tsdetail-title-breaks-ttime value title-bc-ani\">\n                                    <span *ngIf=\"totalTime.hours>0\" class=\"breaks-tt-wrapper hours\">\n                                        <span class=\"breaks-tt-hours-val\">{{totalTime.hours}}</span>\n                                <span class=\"breaks-tt-hours-suffix\">hrs</span>\n                                </span>\n                                <span class=\"breaks-tt-wrapper minutes\">\n                                        <span class=\"breaks-tt-minutes-val\">{{totalTime.minutes}}</span>\n                                <span class=\"breaks-tt-minutes-suffix\">mins</span>\n                                </span>\n                                </span>\n                                </span>\n                            </div>\n                        </ion-col>\n                        <ion-col (click)=\"saveBreaks(false)\" class=\"sheriff-col detail-header-col share-btn-col ion-activatable ripple-parent\">\n                            <div class=\"shouldsave-indic-wrapper\">\n                                <ion-icon *ngIf=\"shouldSave\" class=\"shouldsave-indic-ico animate__animated animate__fadeIn\" name=\"ellipse\"></ion-icon>\n                            </div>\n                            <div class=\"sheriff-detail-header-btn-wrapper share-btn\">\n                                <ion-icon class=\"sheriff-detail-header-ico save-btn-ico\" name=\"save\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </div>\n        </div>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"tsheet-detail-content tsheet-detail-breaksmodal\">\n\n    <div class=\"tsheet-detail-bground-wrapper\"></div>\n    <div *ngIf=\"breaks.length===0&&newBreaks.length===0\" class=\"tsheet-detail-breaks nobreaks-wrapper\">\n        <div *ngIf=\"mode==='details'\" class=\"tsheet-detail-breaks no-breaks-txt\">\n            No Breaks Found\n        </div>\n        <div *ngIf=\"mode==='addtsheet'\" class=\"tsheet-detail-breaks no-breaks-txt\">\n            Add New Breaks\n        </div>\n    </div>\n\n    <div *ngIf=\"breaks.length>0||newBreaks.length>0\" class=\"tsheet-detail-added-breaks-main-wrapper\">\n        <ion-grid *ngFor=\"let break of breaks; let i = index\" [class.halfbrightness]=\"newBreakActive\" class=\"tsheet-detail-breaks-item-grid taken-grid {{mode}} break{{i}}\">\n            <ion-row class=\"sheriff-row tsheet-breaks-row taken-detail-row break-title-row\">\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-title-col\">\n                    <div class=\"break-item-title\">\n                        <span class=\"break-item-title name-value save-data\">{{break.typeName}}</span>\n                        <span *ngIf=\"break.type==='Paid'||break.type==='Unpaid'\" class=\"break-item-title type-value save-data\">({{break.type}})</span>\n                    </div>\n                </ion-col>\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-status-col\">\n                    <div *ngIf=\"break.status==='taken'\" class=\"break-item-status taken save-data\">Taken</div>\n                    <div *ngIf=\"break.status==='nottaken'\" class=\"break-item-status nottaken save-data\">Not Taken</div>\n                    <div *ngIf=\"break.status==='mandatory'\" class=\"break-item-status auto save-data\">Mandatory</div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row tsheet-breaks-row taken-detail-row break-duration-row\">\n                <ion-col size=\"12\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-duration-col\">\n                    <div class=\"tsheet-breaks-subtitle-div breaktime\">\n                        Duration\n                    </div>\n                    <div class=\"tsheet-breaks-val break-duration save-data isnew\">\n                        <span class=\"tsheets-breaks-val save-data duration-value new-break calcdur\">\n                        <span *ngIf=\"break.duration.hours>0\" class=\"newbreak calcdur hours-wrap\">\n                          <span class=\"newbreak calcdur val-span hours-val\">{{break.duration.hours}}</span>\n                        <span class=\"newbreak calcdur suf-span hours-suffix\">hrs</span>\n                        </span>\n                        <span class=\"newbreak calcdur minutes-wrap\">\n                          <span class=\"newbreak calcdur val-span minutes-val\">{{break.duration.minutes}}</span>\n                        <span class=\"newbreak calcdur suf-span minutes-suffix\">mins</span>\n                        </span>\n                        </span>\n                    </div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row tsheet-breaks-row taken-detail-row break-startend-row\">\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-startend-col start-col\">\n                    <div class=\"tsheet-breaks-subtitle-div break-startend-sub start-sub\">\n                        Start Time\n                    </div>\n                    <div class=\"tsheet-breaks-data-div break-startend-data start-data tsheet-breaks-val save-data\">\n                        {{break.startNice}}\n                    </div>\n                </ion-col>\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-startend-col end-col\">\n                    <div class=\"tsheet-breaks-subtitle-div break-startend-sub end-sub\">\n                        End Time\n                    </div>\n                    <div class=\"tsheet-breaks-data-div break-startend-data end-data tsheet-breaks-val save-data\">\n                        {{break.endNice}}\n                    </div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row tsheet-breaks-row taken-detail-row break-type-list-row\">\n                <ion-col size=\"12\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-breaktype-col breaktype-col\">\n                    <div class=\"tsheet-breaks-subtitle-div break-breaktype-sub\">\n                        Type\n                    </div>\n                    <div class=\"tsheet-breaks-data-div breaks-type-list-wrapper\">\n                        <div *ngIf=\"break.breakType==='R'\" class=\"tsheet-detail-breaks break-type-item rest-break\">\n                            <span class=\"tsheet-detail-breaks break-type-item-label rest-break-label\">\n                              <ion-icon class=\"tsheet-detail-breaks break-type-item-ico\" name=\"radio-button-on\"></ion-icon>\n                              <span class=\"tsheet-detail-breaks break-type-item-label-txt rest-break\">Rest Break</span>\n                            <span *ngIf=\"break.type==='Paid'||break.type==='Unpaid'\" class=\"paidtypecode\">({{break.type}})</span>\n                            </span>\n                        </div>\n                        <div *ngIf=\"break.breakType==='M'\" class=\"tsheet-detail-breaks break-type-item meal-break\">\n                            <span class=\"tsheet-detail-breaks break-type-item-label meal-break-label\">\n                              <ion-icon class=\"tsheet-detail-breaks break-type-item-ico\" name=\"radio-button-on\"></ion-icon>\n                              <span class=\"tsheet-detail-breaks break-type-item-label-txt meal-break\">Meal Break</span>\n                            <span *ngIf=\"break.type==='Paid'||break.type==='Unpaid'\" class=\"paidtypecode\">({{break.type}})</span>\n                            </span>\n                        </div>\n                    </div>\n                </ion-col>\n            </ion-row>\n\n        </ion-grid>\n\n        <ion-grid *ngFor=\"let newBreak of newBreaks; let i = index\" class=\"tsheet-detail-breaks-item-grid new-break-grid {{mode}} break{{i}}\">\n            <ion-row class=\"sheriff-row tsheet-breaks-row taken-detail-row break-title-row new-break-row\">\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-title-col new-break-col\">\n                    <div class=\"break-item-title\">\n                        <span class=\"break-item-title name-value save-data new-break\">{{newBreak.typeName}}</span>\n                    </div>\n                </ion-col>\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-status-col new-break\">\n                    <div *ngIf=\"newBreak.status==='taken'\" class=\"break-item-status taken save-data new-break\">Taken</div>\n                    <div *ngIf=\"newBreak.status==='nottaken'\" class=\"break-item-status nottaken save-data new-break\">Not Taken</div>\n                    <div *ngIf=\"newBreak.status==='mandatory'\" class=\"break-item-status auto save-data new-break\">Mandatory</div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row tsheet-breaks-row taken-detail-row break-duration-row new-break\">\n                <ion-col size=\"12\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-duration-col new-break\">\n                    <div class=\"tsheet-breaks-subtitle-div breaktime\">\n                        Duration\n                    </div>\n                    <div class=\"tsheet-breaks-val break-duration save-data\">\n                        <span *ngIf=\"newBreak.duration==='-'\" class=\"tsheets-breaks-val save-data duration-value new-break defaultdur\">{{newBreak.duration}}</span>\n                        <span *ngIf=\"newBreak.duration!=='-'\" class=\"tsheets-breaks-val save-data duration-value new-break calcdur\">\n                          <span *ngIf=\"newBreak.duration.hours>0\" class=\"newbreak calcdur hours-wrap\">\n                            <span class=\"newbreak calcdur val-span hours-val\">{{newBreak.duration.hours}}</span>\n                        <span class=\"newbreak calcdur suf-span hours-suffix\">hrs</span>\n                        </span>\n                        <span class=\"newbreak calcdur minutes-wrap\">\n                            <span class=\"newbreak calcdur val-span minutes-val\">{{newBreak.duration.minutes}}</span>\n                        <span class=\"newbreak calcdur suf-span minutes-suffix\">mins</span>\n                        </span>\n                        </span>\n                    </div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row tsheet-breaks-row taken-detail-row break-startend-row\">\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-startend-col start-col\">\n                    <div class=\"tsheet-breaks-subtitle-div break-startend-sub start-sub\">\n                        Start Time\n                    </div>\n                    <div *ngIf=\"newBreak.startNice==='Select Time'\" (click)=\"openTimeSelect(newBreak.index,'start')\" class=\"tsheet-breaks-data-div break-startend-data start-data tsheet-breaks-val save-data new-break selecttime ion-activatable ripple-parent\">\n                        <img src=\"../../../../../assets/img/sheriff-touch-ico.png\" class=\"tsheet-details-breaks-newbreak-tapico start\"> {{newBreak.startNice}}\n                        <ion-ripple-effect></ion-ripple-effect>\n                    </div>\n                    <div *ngIf=\"newBreak.startNice!=='Select Time'\" (click)=\"openTimeSelect(newBreak.index,'start')\" class=\"tsheet-breaks-data-div break-startend-data start-data tsheet-breaks-val save-data new-break ion-activatable ripple-parent\">\n                        {{newBreak.startNice}}\n                        <ion-icon *ngIf=\"newBInputErr==='start'\" class=\"newbreak-inputerr-ico start\" name=\"alert-circle-outline\"></ion-icon>\n                        <ion-ripple-effect></ion-ripple-effect>\n                    </div>\n                </ion-col>\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-startend-col end-col\">\n                    <div class=\"tsheet-breaks-subtitle-div break-startend-sub end-sub\">\n                        End Time\n                    </div>\n                    <div *ngIf=\"newBreak.endNice==='Select Time'\" (click)=\"openTimeSelect(newBreak.index,'end')\" class=\"tsheet-breaks-data-div break-startend-data end-data tsheet-breaks-val save-data new-break selecttime ion-activatable ripple-parent\">\n                        <img src=\"../../../../../assets/img/sheriff-touch-ico.png\" class=\"tsheet-details-breaks-newbreak-tapico end\"> {{newBreak.endNice}}\n                        <ion-ripple-effect></ion-ripple-effect>\n                    </div>\n                    <div *ngIf=\"newBreak.endNice!=='Select Time'\" (click)=\"openTimeSelect(newBreak.index,'end')\" class=\"tsheet-breaks-data-div break-startend-data end-data tsheet-breaks-val save-data new-break ion-activatable ripple-parent\">\n                        {{newBreak.endNice}}\n                        <ion-icon *ngIf=\"newBInputErr==='end'\" class=\"newbreak-inputerr-ico end\" name=\"alert-circle-outline\"></ion-icon>\n                        <ion-ripple-effect></ion-ripple-effect>\n                    </div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row tsheet-breaks-row taken-detail-row break-startend-row\">\n                <ion-col size=\"12\" class=\"sheriff-col tsheet-breaks-col taken-detail-col break-breaktype-col breaktype-col\">\n                    <div class=\"tsheet-breaks-subtitle-div break-breaktype-sub\">\n                        Type\n                    </div>\n                    <div class=\"tsheet-breaks-data-div breaks-type-list-wrapper\">\n                        <ion-radio-group ngModal #breakTypeRG (ionChange)=\"selectBreakType(newBreak.index,breakTypeRG.value)\" allowEmptySelection=\"false\" name=\"breakNameTypeVal\" value={{newBreak.breakType}} class=\"sheriff-radio-group tsheet-detail-breaks break-type-radio-group-{{newBreak.index}}\">\n                            <ion-item button=\"true\" (click)=\"breakTypeBtn(newBreak.index,'R')\" class=\"tsheet-detail-breaks break-type-radio-item rest-break\">\n                                <ion-label class=\"tsheet-detail-breaks break-type-radio-item-label rest-break-label\">Rest Break</ion-label>\n                                <ion-radio disabled=\"false\" value=\"R\" class=\"tsheet-detail-breaks break-type-radio rest-break-radio\"></ion-radio>\n                            </ion-item>\n                            <ion-item button=\"true\" (click)=\"breakTypeBtn(newBreak.index,'M')\" class=\"tsheet-detail-breaks break-type-radio-item meal-break\">\n                                <ion-label class=\"tsheet-detail-breaks break-type-radio-item-label meal-break-label\">Meal Break</ion-label>\n                                <ion-radio disabled=\"false\" value=\"M\" class=\"tsheet-detail-breaks break-type-radio meal-break-radio\"></ion-radio>\n                            </ion-item>\n                        </ion-radio-group>\n                    </div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row tsheet-breaks-row newbreak-row delete-newbreak-row\">\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col newbreak-col delete-newbreak-col filler-col\">\n                    <div *ngIf=\"newBInputErr==='start'||newBInputErr==='end'\" class=\"tsheet-breaks-error-msg-wrapper\">\n                        <ion-icon class=\"break-error-ico\" name=\"warning\"></ion-icon>\n                        <div class=\"break-err-txt\">\n                            <span *ngIf=\"newBInputErr==='start'\" class=\"startafterend\">Start Time<ion-icon name=\"chevron-forward-outline\"></ion-icon>End</span>\n                            <span *ngIf=\"newBInputErr==='end'\" class=\"endbeforestart\">End Time<ion-icon name=\"chevron-back-outline\"></ion-icon>Start</span>\n                        </div>\n                    </div>\n                </ion-col>\n                <ion-col size=\"6\" class=\"sheriff-col tsheet-breaks-col newbreak-col delete-newbreak-col btns-col\">\n                    <ion-button (click)=\"deleteNewBreak(newBreak.index)\" class=\"newbreak-btn delete-newbreak-btn\">\n                        <div class=\"new-break-btn-txt delete-txt\">Delete</div>\n                    </ion-button>\n                    <ion-button disabled=\"true\" (click)=\"addBreak(newBreak.index)\" class=\"newbreak-btn save-newbreak-btn\">\n                        <div class=\"new-break-btn-txt save-txt\">Add</div>\n                    </ion-button>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n\n    </div>\n\n    <ion-fab (click)=\"newBreak()\" *ngIf=\"ts.nTimeApproved!==true\" class=\"sheriff-fab addbreak-fab\" vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n        <ion-fab-button class=\"sheriff-fab-button addtsheet-fab-btn\">\n            <img class=\"sheriff-fab-btn-img addbreak-fab-btn-img\" src=\"../../../assets/img/sheriff-fab-addtsheetbreak-ico.png\">\n        </ion-fab-button>\n    </ion-fab>\n\n</ion-content>";
      /***/
    },

    /***/
    79649:
    /*!***********************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/detail/tsheet-detail/tsheet-detail.page.html ***!
      \***********************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header class=\"sheriff-header sheriff-tabpage-header\">\n    <ion-toolbar class=\"sheriff-toolbar\">\n        <div class=\"sheriff-header-background-wrapper\">\n            <div class=\"sheriff-header-droidstatus-padding-wrapper\"></div>\n            <div class=\"sheriff-header-background-inner-wrapper\">\n                <ion-grid class=\"sheriff-grid sheriff-page-header-grid detailmodalheader-grid\">\n                    <ion-row class=\"sheriff-row sheriff-page-header-row detailmodalheader-row\">\n                        <ion-col (click)=\"closeDetail()\" class=\"sheriff-col detail-header-col close-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-detail-header-btn-wrapper close-btn\">\n                                <ion-icon class=\"sheriff-detail-header-ico close-btn-ico\" name=\"arrow-back\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col detail-header-col title-col\">\n                            <div class=\"sheriff-detail-header title-wrapper\">\n                                <span class=\"tsdetail-title-prefix\">Timesheet</span><span class=\"tsdetail-title-hash\">#</span><span class=\"tsdetail-title-idno\">{{ts.Id}}</span>\n                            </div>\n                        </ion-col>\n                        <ion-col *ngIf=\"!ts.nIsInProgress&&!ts.nTimeApproved&&!ts.nDisputed&&!ts.nDiscarded\" (click)=\"openPop($event)\" class=\"sheriff-col detail-header-col share-btn-col ion-activatable ripple-parent\">\n                            <div class=\"shouldsave-indic-wrapper\">\n                                <ion-icon *ngIf=\"shouldSave\" class=\"shouldsave-indic-ico animate__animated animate__fadeIn\" name=\"ellipse\"></ion-icon>\n                            </div>\n                            <div *ngIf=\"!popOpen\" class=\"sheriff-detail-header-btn-wrapper edit-btn\">\n                                <ion-icon class=\"sheriff-detail-header-ico share-btn-ico\" name=\"create\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col (click)=\"shareTS()\" class=\"sheriff-col detail-header-col share-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-detail-header-btn-wrapper share-btn\">\n                                <ion-icon class=\"sheriff-detail-header-ico share-btn-ico\" name=\"share\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </div>\n        </div>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"tsheet-detail-content tsheet-detail-modal\">\n    <div class=\"tsheet-detail-bground-wrapper\"></div>\n    <div class=\"tsheet-detail-main-wrapper\">\n        <div *ngIf=\"wasChanged\" class=\"tsheet-detail-updated-banner-wrapper\">{{updateSaveBannerTxt}}</div>\n        <ion-grid class=\"tsheet-detail-item-grid heading-grid\">\n            <ion-row class=\"tsheet-detail-item-row heading-row\">\n                <ion-col size=\"2\" class=\"sheriff-detail-item-grid heading-ico-col\">\n                    <img class=\"sheriff-detail-heading-ico tsheet-heading-ico\" src=\"../../../../assets/img/sheriff-totaltimespan-ico-white.png\">\n                </ion-col>\n                <ion-col size=\"8\" class=\"sheriff-detail-item-grid heading-text-col\">\n                    <div class=\"sheriff-detail-heading-txt tsheet-heading-txt\">timesheet details</div>\n                </ion-col>\n                <ion-col size=\"2\" class=\"sheriff-detail-item-grid heading-ico-col\">\n                    <img class=\"sheriff-detail-heading-avatar tsheet-heading-avatar\" src=\"{{meAvatar}}\">\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n\n        <ion-grid class=\"tsheet-detail-item-grid data-grid\">\n            <ion-row class=\"tsheet-detail-item-row status\">\n                <ion-col size=\"12\" class=\"sheriff-col tsheet-detail-item-col status\">\n                    <span *ngIf=\"!ts.nIsInProgress&&!ts.nTimeApproved&&!ts.nDisputed&&!ts.nDiscarded\" style=\"color:#ff9800db\" class=\"tsheet-status pending\">Pending</span>\n                    <span *ngIf=\"ts.nIsInProgress\" style=\"color:#ff9800db\" class=\"tsheet-status inprog\">Underway</span>\n                    <span *ngIf=\"ts.nTimeApproved\" style=\"color:#2dd36fdb\" class=\"tsheet-status approved\">Approved</span>\n                    <span *ngIf=\"ts.nDisputed\" style=\"color:#f44034db\" class=\"tsheet-status disputed\">Disputed</span>\n                    <span *ngIf=\"ts.nDiscarded\" style=\"color:#f44034db\" class=\"tsheet-status discarded\">Discarded</span>\n                </ion-col>\n            </ion-row>\n            <ion-row (click)=\"editArea(ts.OperationalUnit)\" class=\"tsheet-detail-item-row area-at-workplace ion-activatable ripple-parent\">\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-item-col area-at-workplace-col ico-col\">\n                    <ion-icon class=\"sheriff-ico tsheet-detail-item-main-ico areaatworkplace-ico\" name=\"locate\"></ion-icon>\n                </ion-col>\n                <ion-col size=\"8\" class=\"sheriff-col tsheet-detail-item-col area-at-workplace-col data-col\">\n                    <div class=\"tsheet-detail-item-data-label area-at-workplace\">Area at {{ts.nCompanyName}}</div>\n                    <div class=\"tsheet-detail-item-data-value area-at-workplace\">{{ts.nOperationalUnit}}</div>\n                </ion-col>\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-item-col area-at-workplace-col detail-col\">\n                    <ion-icon *ngIf=\"!ts.nTimeApproved\" [ngClass]=\"{'tsheet-warea-asheet-open-ico':aSheetOpen,'tsheet-warea-asheet-close-ico':!aSheetOpen}\" class=\"sheriff-ico tsheet-detail-item-detail-ico area-at-workplace\" name=\"chevron-forward\"></ion-icon>\n                </ion-col>\n                <ion-ripple-effect></ion-ripple-effect>\n            </ion-row>\n            <ion-row class=\"tsheet-detail-item-row date-time\">\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-item-col date-time-col ico-col\">\n                    <img class=\"sheriff-ico tsheet-detail-item-main-ico date-time-ico\" src=\"../../../../assets/img/sheriff-tsheet-detail-datetime-ico.png\">\n                    <div class=\"tsheet-detail-datetime-icon-wrapper time\">\n                        <ion-icon class=\"sheriff-ico tsheet-detail-item-main-ico startendtime-ico\" name=\"stopwatch\"></ion-icon>\n                    </div>\n                    <div class=\"tsheet-detail-datetime-icon-wrapper breaks\">\n                        <ion-icon class=\"sheriff-ico tsheet-detail-item-main-ico breaks-ico\" name=\"pause\"></ion-icon>\n                    </div>\n                    <div class=\"tsheet-detail-datetime-icon-wrapper tt\">\n                        <ion-icon class=\"sheriff-ico tsheet-detail-item-main-ico tt-ico\" name=\"calculator\"></ion-icon>\n                    </div>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-item-col date-time-col data-col\">\n                    <ion-grid class=\"tsheet-detail-item-grid datetime-grid\">\n                        <ion-row class=\"tsheet-detail-item-row date-time-inner-row date-row\">\n                            <ion-col size=\"12\" class=\"tsheet-detail-item-col date-time-inner-col date-col\">\n                                <div class=\"tsheet-detail-item-data-label date\">Date</div>\n                                <div class=\"tsheet-detail-item-data-value date\">{{ts.nDate}}</div>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row class=\"tsheet-detail-item-row date-time-inner-row time-row\">\n                            <ion-col size=\"6\" class=\"tsheet-detail-item-col date-time-inner-col starttime-col\">\n                                <div class=\"tsheet-detail-item-data-label starttime\">Start</div>\n                                <div class=\"tsheet-detail-item-data-value starttime\">{{ts.nStartTime}}</div>\n                            </ion-col>\n                            <ion-col size=\"6\" class=\"tsheet-detail-item-col date-time-inner-col endtime-col\">\n                                <div class=\"tsheet-detail-item-data-label endtime\">End</div>\n                                <div class=\"tsheet-detail-item-data-value endtime\">{{ts.nEndTime}}</div>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row (click)=\"editBreaks()\" class=\"tsheet-detail-item-row date-time-inner-row breaks-row ion-activatable ripple-parent\">\n                            <ion-col size=\"10\" class=\"tsheet-detail-item-col date-time-inner-col breakstaken-col\">\n                                <div class=\"tsheet-detail-item-data-label breakstaken\">Breaks Taken</div>\n                                <div class=\"tsheet-detail-item-data-value breakstakencount\">\n                                    <span class=\"tsheet-detail-breaks-value mbreaktotal\">{{rBreakCount}}</span>\n                                    <span class=\"tsheet-detail-breaks-type-lbl rest-lbl\">Rest</span>\n                                    <span class=\"tsheet-detail-breaks-sep\">|</span>\n                                    <span class=\"tsheet-detail-breaks-value mbreaktotal\">{{mBreakCount}}</span>\n                                    <span class=\"tsheet-detail-breaks-type-lbl rest-lbl\">Meal</span>\n                                    <span class=\"tsheet-detail-breaks-equals\">=</span>\n                                    <span class=\"tsheet-detail-breaks-total-time-value\">{{breaksTtlDur}}<span *ngIf=\"showTTLBreakMins\" class=\"show-ttl-break-mins-span\">mins</span></span>\n                                </div>\n                            </ion-col>\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-item-col breaks-detail-col\">\n                                <ion-icon class=\"sheriff-ico tsheet-detail-item-detail-ico breaks-detail\" name=\"chevron-forward\"></ion-icon>\n                            </ion-col>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-row>\n                        <ion-row class=\"tsheet-detail-item-row date-time-inner-row total-time-col\">\n                            <ion-col size=\"12\" class=\"tsheet-detail-item-col date-time-inner-col totaltime-col\">\n                                <div class=\"tsheet-detail-item-data-label totaltime\">Total Time</div>\n                                <div class=\"tsheet-detail-item-data-value totaltime\">\n                                    <span class=\"tsheet-detail-tt-value\">\n                                      <span *ngIf=\"shiftDurObj.hours>0\" class=\"tsheet-detail-tt-value hrs\">{{shiftDurObj.hours}}<span class=\"tt-suffix hrs\">hrs</span></span>\n                                    <span *ngIf=\"shiftDurObj.minutes>0\" class=\"tsheet-detail-tt-value mins\">{{shiftDurObj.minutes}}<span class=\"tt-suffix mins\">mins</span></span>\n                                    </span>\n                                    <span class=\"tsheet-detail-tt-sep\">|</span>\n                                    <span *ngIf=\"TTPerformance!==0\" class=\"tsheet-detail-tt-plusminusroster\">\n                                      <div *ngIf=\"TTPerformance===1\" class=\"tt-pm-icons-wrapper plus\">\n                                        <ion-icon class=\"tsheet-detail-plusminusroster-ico plus upcaret\" name=\"caret-up\"></ion-icon>\n                                        <ion-icon class=\"tsheet-detail-plusminusroster-ico plus plussymbol\" name=\"add\"></ion-icon>\n                                      </div>\n                                      <div *ngIf=\"TTPerformance===-1\" class=\"tt-pm-icons-wrapper minus\">\n                                        <ion-icon class=\"tsheet-detail-plusminusroster-ico minus downcaret\" name=\"caret-down\"></ion-icon>\n                                        <ion-icon class=\"tsheet-detail-plusminusroster-ico minus minussymbol\" name=\"remove\"></ion-icon>\n                                      </div>\n                                      <span class=\"tsheet-detail-ttperformance-value-main-wrapper\">\n                                        <span [ngStyle]=\"{'color':TTPerformance===1?'#2dd36fad':'#f44336ad'}\" *ngIf=\"TTPerfValObj.hours!==0\">{{TTPerfValObj.hours}}<span class=\"tt-pm-suffix hrs\" [ngStyle]=\"{'color':TTPerformance===1?'#2dd36fad':'#f44336ad'}\">hrs</span></span>\n                                    <span [ngStyle]=\"{'color':TTPerformance===1?'#2dd36fad':'#f44336ad'}\" *ngIf=\"TTPerfValObj.minutes!==0\">{{TTPerfValObj.minutes}}<span class=\"tt-pm-suffix mins\" [ngStyle]=\"{'color':TTPerformance===1?'#2dd36fad':'#f44336ad'}\">mins</span></span>\n                                    </span>\n                                    </span>\n                                    <span *ngIf=\"TTPerformance===0\" class=\"tsheet-detail-tt-performance equal\">\n                                      <ion-icon class=\"tt-performance-equals-ico\" name=\"reorder-two\"></ion-icon>\n                                    </span>\n                                </div>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row *ngIf=\"showIncome\" class=\"tsheet-detail-item-row date-time-inner-row income-row\">\n                            <ion-col size=\"12\" class=\"tsheet-detail-item-col date-time-inner-col income-row\">\n                                <div class=\"tsheet-detail-item-data-value income-wrapper\">\n                                    <span class=\"tsheet-detail income value-wrapper total\">\n                                      <span class=\"tsheet-detail income symbol-val dollar\">$</span>\n                                    <span class=\"tsheet-detail income income-val total\">{{ts.nIncome.t}}</span>\n                                    </span>\n                                    <span *ngIf=\"ts.nIncome.p>0\" class=\"tsheet-detail income value-wrapper breakdown\">\n                                      <span class=\"tsheet-detail income symbol-val brack\">(</span>\n                                    <span class=\"tsheet-detail income symbol-val v-label base\">B:</span>\n                                    <span class=\"tsheet-detail income income-val base\">{{ts.nIncome.b}}</span>\n                                    <span class=\"tsheet-detail income symbol-val plus\">+</span>\n                                    <span class=\"tsheet-detail income symbol-val v-label penalty\">P:</span>\n                                    <span class=\"tsheet-detail income income-val base\">{{ts.nIncome.p}}</span>\n                                    <span class=\"tsheet-detail income symbol-val brack\">)</span>\n                                    </span>\n                                </div>\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"tsheet-detail-item-row history\">\n                <ion-col size=\"12\" class=\"tsheet-detail-item-col history-col\">\n                    <ion-button (click)=\"viewHistory()\" class=\"sheriff-btn tsheet-detail-history-btn\">\n                        <div class=\"tsheet-detail-history-btn-wrapper\">\n                            <ion-icon class=\"tsheet-detail-history-btn-ico\" name=\"receipt\"></ion-icon>\n                            <div class=\"tsheet-detail-history-btn-txt\">View History</div>\n                        </div>\n                    </ion-button>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"tsheet-detail-item-row comments\">\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-item-col comments ico-col\">\n                    <ion-icon class=\"sheriff-ico tsheet-detail-item-main-ico comments-ico\" name=\"chatbox\"></ion-icon>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-item-col area-at-workplace-col data-col\">\n                    <div class=\"tsheet-detail-item-data-label comments\">Comments</div>\n                    <div *ngIf=\"noComments\" class=\"tsheet-detail-nocomments-wrapper\">\n                        <div class=\"tsheet-detail-nocomments-txt\">No Comments</div>\n                    </div>\n                    <div *ngIf=\"hasEmployeeComment\" class=\"tsheet-detail-comment-type-wrapper employee\">\n                        <div class=\"tsheet-detail-type-and-avatar-wrapper employee\">\n                            <div class=\"tsheet-detail-comment-type-label employee\">Employee</div>\n                            <ion-chip class=\"tsheet-detail-comment-avatar-chip employee\">\n                                <ion-avatar class=\"tsheet-detail-comment-avatar employee\">\n                                    <img class=\"tsheet-detail-comment-avatar-img employee\" src=\"{{meAvatar}}\">\n                                </ion-avatar>\n                                <ion-label class=\"tsheet-detail-comment-avatar-label employee\">You</ion-label>\n                            </ion-chip>\n                        </div>\n                        <div class=\"tsheet-detail-comment-text employee\">{{ts.EmployeeComment}}</div>\n                    </div>\n                    <div *ngIf=\"hasSupervisorComment\" class=\"tsheet-detail-comment-type-wrapper supervisor\">\n                        <div class=\"tsheet-detail-type-and-avatar-wrapper supervisor\">\n                            <div class=\"tsheet-detail-comment-type-label supervisor\">Supervisor</div>\n                            <ion-chip class=\"tsheet-detail-comment-avatar-chip supervisor\">\n                                <ion-avatar class=\"tsheet-detail-comment-avatar supervisor\">\n                                    <img [ngStyle]=\"{'opacity':(sVNK)?'.68':'1'}\" class=\"tsheet-detail-comment-avatar-img supervisor\" src=\"{{supervisorObj.avatar}}\">\n                                </ion-avatar>\n                                <ion-label class=\"tsheet-detail-comment-avatar-label supervisor\">{{supervisorObj.label}}</ion-label>\n                            </ion-chip>\n                        </div>\n                        <div class=\"tsheet-detail-comment-text employee\">{{ts.SupervisorComment}}</div>\n                    </div>\n                    <div *ngIf=\"hasInvoiceComment\" class=\"tsheet-detail-comment-type-wrapper invoice\">\n                        <div class=\"tsheet-detail-type-and-avatar-wrapper invoice\">\n                            <div class=\"tsheet-detail-comment-type-label supervisor\">Invoice</div>\n                            <ion-chip class=\"tsheet-detail-comment-avatar-chip invoice\">\n                                <ion-avatar class=\"tsheet-detail-comment-avatar invoice\">\n                                    <img class=\"tsheet-detail-comment-avatar-img invoice\" src=\"../../../../assets/img/sheriff-tsheet-detail-invoice-avatar-ico.png\">\n                                </ion-avatar>\n                                <ion-label class=\"tsheet-detail-comment-avatar-label supervisor\">Payroll</ion-label>\n                            </ion-chip>\n                        </div>\n                        <div class=\"tsheet-detail-comment-text invoice\">{{ts.InvoiceComment}}</div>\n                    </div>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n\n    </div>\n\n</ion-content>";
      /***/
    },

    /***/
    72249:
    /*!***************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/detail/tsheet-detail/tsheet-history/tsheet-history.page.html ***!
      \***************************************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header class=\"sheriff-header sheriff-tabpage-header\">\n    <ion-toolbar class=\"sheriff-toolbar\">\n        <div class=\"sheriff-header-background-wrapper\">\n            <div class=\"sheriff-header-droidstatus-padding-wrapper\"></div>\n            <div class=\"sheriff-header-background-inner-wrapper\">\n                <ion-grid class=\"sheriff-grid sheriff-page-header-grid detailmodalheader-grid\">\n                    <ion-row class=\"sheriff-row sheriff-page-header-row detailmodalheader-row\">\n                        <ion-col (click)=\"closeHistory()\" class=\"sheriff-col detail-header-col close-btn-col ion-activatable ripple-parent\">\n                            <div class=\"sheriff-detail-header-btn-wrapper close-btn\">\n                                <ion-icon class=\"sheriff-detail-header-ico close-btn-ico\" name=\"arrow-back\"></ion-icon>\n                            </div>\n                            <ion-ripple-effect></ion-ripple-effect>\n                        </ion-col>\n                        <ion-col class=\"sheriff-col detail-header-col title-col\">\n                            <div class=\"sheriff-detail-header title-wrapper history\">\n                                <span class=\"tsdetail-title-prefix history\">History</span>\n                            </div>\n                        </ion-col>\n                    </ion-row>\n                </ion-grid>\n            </div>\n        </div>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"tsheet-detail-content tsheet-detail-historymodal\">\n\n    <div class=\"tsheet-detail-bground-wrapper\"></div>\n\n    <div *ngIf=\"noHistory\" class=\"tsheet-detail-history nohistory-wrapper\">\n        <div class=\"tsheet-detail-history no-history-txt\">No History Found</div>\n    </div>\n\n    <div class=\"tsheet-detail-main-wrapper\">\n        <!-- ROSTER SECTION -->\n        <ion-grid class=\"tsheet-detail-history-item-grid roster-grid\">\n            <ion-row class=\"sheriff-row tsheet-detail-history-row roster-row\">\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col roster-icon-col history-2-icon-col\">\n                    <ion-icon class=\"tsheet-history-main-ico rospub-ico\" name=\"star\"></ion-icon>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-history-col roster-value-col whowhat\">\n                    <div class=\"ts-history-value history-header-value roster publishernk\">Roster Published</div>\n                    <div *ngIf=\"rosPubDate!==null\" class=\"ts-history-value history-header-subvalue roster-date\">{{rosPubDate}}</div>\n                    <div *ngIf=\"rosPubDate===null\" class=\"ts-history-value history-header-subvalue roster-date nk\">-</div>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n        <!-- DATE SECTION -->\n        <ion-grid class=\"tsheet-detail-history-item-grid date-grid\">\n            <ion-row class=\"sheriff-row tsheet-detail-history-row date-row\">\n                <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col date-icon-col history-2-icon-col\">\n                    <ion-icon class=\"tsheet-history-main-ico date-ico\" name=\"calendar\"></ion-icon>\n                </ion-col>\n                <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-history-col date-value-col\">\n                    <div class=\"ts-history-value history-header-value roster shift\">Shift Time Entries</div>\n                    <div class=\"ts-history-value date-value\">{{this.ts.nDate}}</div>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row tsheet-detail-history-row timeentries-row\">\n                <ion-col class=\"sheriff-col tsheet-detail-history-col timeentries-col\">\n                    <!-- SYSTEM SECTION -->\n                    <ion-grid class=\"tsheet-detail-history-item-grid system-grid\">\n                        <!-- Heading -->\n                        <ion-row class=\"sheriff-row tsheet-detail-history-row history-header-row system\">\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-header-col system-icon-col history-2-icon-col\">\n                                <ion-icon class=\"tsheet-history-main-ico system-ico\" name=\"business\"></ion-icon>\n                            </ion-col>\n                            <ion-col size=\"8\" class=\"sheriff-col tsheet-detail-history-col history-header-col system-value-col\">\n                                <div class=\"ts-history-value history-header-value system\">System</div>\n                                <div class=\"ts-history-value history-header-subvalue system\">Timesheet Updated</div>\n                            </ion-col>\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-header-col system-timeval-col\">\n                                <div class=\"ts-history-value history-header-timevalue system\">{{sLastUpdate}}</div>\n                            </ion-col>\n                        </ion-row>\n                        <!-- Shift End Time -->\n                        <ion-row class=\"sheriff-row tsheet-detail-history-row history-event-row\">\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-event-col timeicon-col\">\n                                <ion-icon class=\"tsheet-history-time-ico system\" name=\"time\"></ion-icon>\n                            </ion-col>\n                            <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-history-col history-event-col system-value-col\">\n                                <ion-grid class=\"sheriff-grid ts-history-event-detail-grid\">\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-name-row\">\n                                        <ion-col size=\"12\" class=\"sheriff-col ts-history-event-detail-col event-name-col\">\n                                            End Time\n                                        </ion-col>\n                                    </ion-row>\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-rawtime-row\">\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-rawtime-col\">\n                                            {{sETimeRaw}}\n                                        </ion-col>\n                                        <ion-col size=\"1\" class=\"sheriff-col ts-history-event-detail-col event-arrowico-col\">\n                                            <ion-icon class=\"tsheet-history-arrow-ico\" name=\"arrow-forward\"></ion-icon>\n                                        </ion-col>\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-roundtime-col\">\n                                            {{sETimeRound}}\n                                        </ion-col>\n                                    </ion-row>\n                                </ion-grid>\n                            </ion-col>\n                        </ion-row>\n                        <!-- Shift Start Time -->\n                        <ion-row class=\"sheriff-row tsheet-detail-history-row history-event-row\">\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-event-col timeicon-col\">\n                                <ion-icon class=\"tsheet-history-time-ico system\" name=\"time\"></ion-icon>\n                            </ion-col>\n                            <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-history-col history-event-col system-value-col\">\n                                <ion-grid class=\"sheriff-grid ts-history-event-detail-grid\">\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-name-row\">\n                                        <ion-col size=\"12\" class=\"sheriff-col ts-history-event-detail-col event-name-col\">\n                                            Start Time\n                                        </ion-col>\n                                    </ion-row>\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-rawtime-row\">\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-rawtime-col\">\n                                            {{sSTimeRaw}}\n                                        </ion-col>\n                                        <ion-col size=\"1\" class=\"sheriff-col ts-history-event-detail-col event-arrowico-col\">\n                                            <ion-icon class=\"tsheet-history-arrow-ico\" name=\"arrow-forward\"></ion-icon>\n                                        </ion-col>\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-roundtime-col\">\n                                            {{sSTimeRound}}\n                                        </ion-col>\n                                    </ion-row>\n                                </ion-grid>\n                            </ion-col>\n                        </ion-row>\n                        <!-- Total Time -->\n                        <ion-row class=\"sheriff-row tsheet-detail-history-row history-event-row\">\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-event-col timeicon-col\">\n                                <ion-icon class=\"tsheet-history-equals-ico system\" name=\"reorder-two\"></ion-icon>\n                            </ion-col>\n                            <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-history-col history-event-col system-value-col\">\n                                <ion-grid class=\"sheriff-grid ts-history-event-detail-grid\">\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-name-row\">\n                                        <ion-col size=\"12\" class=\"sheriff-col ts-history-event-detail-col event-name-col\">\n                                            Total Time\n                                        </ion-col>\n                                    </ion-row>\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-rawtime-row\">\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-rawtime-col\">\n                                            <span class=\"tsheet-detail-tt-value sysraw\">\n                                              <span *ngIf=\"sTTRaw.hours>0\" class=\"tsheet-history-tt-value hrs\">{{sTTRaw.hours}}<span class=\"tt-suffix hrs\">hrs</span></span>\n                                            <span *ngIf=\"sTTRaw.minutes>0\" class=\"tsheet-history-tt-value mins\">{{sTTRaw.minutes}}<span class=\"tt-suffix mins\">mins</span></span>\n                                            </span>\n                                        </ion-col>\n                                        <ion-col size=\"1\" class=\"sheriff-col ts-history-event-detail-col event-arrowico-col\">\n                                            <ion-icon class=\"tsheet-history-arrow-ico\" name=\"arrow-forward\"></ion-icon>\n                                        </ion-col>\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-roundtime-col\">\n                                            <span class=\"tsheet-detail-tt-value sysround\">\n                                            <span *ngIf=\"sTTRound.hours>0\" class=\"tsheet-history-tt-value hrs\">{{sTTRound.hours}}<span class=\"tt-suffix hrs\">hrs</span></span>\n                                            <span *ngIf=\"sTTRound.minutes>0\" class=\"tsheet-history-tt-value mins\">{{sTTRound.minutes}}<span class=\"tt-suffix mins\">mins</span></span>\n                                            </span>\n                                        </ion-col>\n                                    </ion-row>\n                                </ion-grid>\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                    <!-- USER SECTION -->\n                    <ion-grid class=\"tsheet-detail-history-item-grid user-grid\">\n                        <!-- Heading -->\n                        <ion-row class=\"sheriff-row tsheet-detail-history-row history-header-row user\">\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-header-col user-icon-col history-2-icon-col\">\n                                <img class=\"sheriff-detail-heading-avatar tsheet-heading-avatar history-ava\" src=\"{{meAvatar}}\">\n                            </ion-col>\n                            <ion-col size=\"8\" class=\"sheriff-col tsheet-detail-history-col history-header-col user-value-col\">\n                                <div class=\"ts-history-value history-header-value user\">{{myDisplayName}}</div>\n                                <div class=\"ts-history-value history-header-subvalue user\">Timesheet Updated</div>\n                            </ion-col>\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-header-col user-timeval-col\">\n                                <div class=\"ts-history-value history-header-timevalue user\">{{uLastUpdate}}</div>\n                            </ion-col>\n                        </ion-row>\n                        <!-- Shift End Time -->\n                        <ion-row class=\"sheriff-row tsheet-detail-history-row history-event-row\">\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-event-col timeicon-col\">\n                                <ion-icon class=\"tsheet-history-time-ico user\" name=\"time\"></ion-icon>\n                            </ion-col>\n                            <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-history-col history-event-col user-value-col\">\n                                <ion-grid class=\"sheriff-grid ts-history-event-detail-grid\">\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-name-row\">\n                                        <ion-col size=\"12\" class=\"sheriff-col ts-history-event-detail-col event-name-col\">\n                                            End Time\n                                        </ion-col>\n                                    </ion-row>\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-rawtime-row\">\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-rawtime-col\">\n                                            {{uETimeRaw}}\n                                        </ion-col>\n                                        <ion-col size=\"1\" class=\"sheriff-col ts-history-event-detail-col event-arrowico-col\">\n                                            <ion-icon class=\"tsheet-history-arrow-ico\" name=\"arrow-forward\"></ion-icon>\n                                        </ion-col>\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-roundtime-col\">\n                                            {{uETimeRound}}\n                                        </ion-col>\n                                    </ion-row>\n                                </ion-grid>\n                            </ion-col>\n                        </ion-row>\n                        <!-- Shift Start Time -->\n                        <ion-row class=\"sheriff-row tsheet-detail-history-row history-event-row\">\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-event-col timeicon-col\">\n                                <ion-icon class=\"tsheet-history-time-ico user\" name=\"time\"></ion-icon>\n                            </ion-col>\n                            <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-history-col history-event-col user-value-col\">\n                                <ion-grid class=\"sheriff-grid ts-history-event-detail-grid\">\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-name-row\">\n                                        <ion-col size=\"12\" class=\"sheriff-col ts-history-event-detail-col event-name-col\">\n                                            Start Time\n                                        </ion-col>\n                                    </ion-row>\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-rawtime-row\">\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-rawtime-col\">\n                                            {{uSTimeRaw}}\n                                        </ion-col>\n                                        <ion-col size=\"1\" class=\"sheriff-col ts-history-event-detail-col event-arrowico-col\">\n                                            <ion-icon class=\"tsheet-history-arrow-ico\" name=\"arrow-forward\"></ion-icon>\n                                        </ion-col>\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-roundtime-col\">\n                                            {{uSTimeRound}}\n                                        </ion-col>\n                                    </ion-row>\n                                </ion-grid>\n                            </ion-col>\n                        </ion-row>\n                        <!-- Total Time -->\n                        <ion-row class=\"sheriff-row tsheet-detail-history-row history-event-row\">\n                            <ion-col size=\"2\" class=\"sheriff-col tsheet-detail-history-col history-event-col timeicon-col\">\n                                <ion-icon class=\"tsheet-history-equals-ico user\" name=\"reorder-two\"></ion-icon>\n                            </ion-col>\n                            <ion-col size=\"10\" class=\"sheriff-col tsheet-detail-history-col history-event-col user-value-col\">\n                                <ion-grid class=\"sheriff-grid ts-history-event-detail-grid\">\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-name-row\">\n                                        <ion-col size=\"12\" class=\"sheriff-col ts-history-event-detail-col event-name-col\">\n                                            Total Time\n                                        </ion-col>\n                                    </ion-row>\n                                    <ion-row class=\"sheriff-row ts-history-event-detail-row event-rawtime-row\">\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-rawtime-col\">\n                                            <span class=\"tsheet-detail-tt-value userraw\">\n                                              <span *ngIf=\"uTTRaw.hours>0\" class=\"tsheet-history-tt-value hrs\">{{uTTRaw.hours}}<span class=\"tt-suffix hrs\">hrs</span></span>\n                                            <span *ngIf=\"uTTRaw.minutes>0\" class=\"tsheet-history-tt-value mins\">{{uTTRaw.minutes}}<span class=\"tt-suffix mins\">mins</span></span>\n                                            </span>\n                                        </ion-col>\n                                        <ion-col size=\"1\" class=\"sheriff-col ts-history-event-detail-col event-arrowico-col\">\n                                            <ion-icon class=\"tsheet-history-arrow-ico\" name=\"arrow-forward\"></ion-icon>\n                                        </ion-col>\n                                        <ion-col class=\"sheriff-col ts-history-event-detail-col event-roundtime-col\">\n                                            <span class=\"tsheet-detail-tt-value userround\">\n                                              <span *ngIf=\"uTTRound.hours>0\" class=\"tsheet-history-tt-value hrs\">{{uTTRound.hours}}<span class=\"tt-suffix hrs\">hrs</span></span>\n                                            <span *ngIf=\"uTTRound.minutes>0\" class=\"tsheet-history-tt-value mins\">{{uTTRound.minutes}}<span class=\"tt-suffix mins\">mins</span></span>\n                                            </span>\n                                        </ion-col>\n                                    </ion-row>\n                                </ion-grid>\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n    </div>\n\n</ion-content>";
      /***/
    },

    /***/
    39625:
    /*!******************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/firstrun/firstrun.page.html ***!
      \******************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-content id=\"sheriff-frmodal-slider-content\">\n\n    <div class=\"sheriff-frmodal-slider-section-wrapper slides\">\n        <ion-grid class=\"sheriff-grid frmodal-slider-main-grid\">\n            <ion-row class=\"sheriff-row frmodal-slider-main-row1 slides\">\n                <ion-col size=\"12\" class=\"sheriff-col sheriff-frmodal-slider-main-col1 slides\">\n                    <ion-slides id=\"frslidesid\" class=\"sheriff-slides fr-slides\" [scrollbar]=\"false\" [mode]=\"'md'\" [pager]=doShowPager [options]=slideOptions #slideWithNav (ionSlideWillChange)=\"ionSlideEvent($event)\" (ionSlideDidChange)=\"slideDidChange(slideWithNav)\" (ionSlidesDidLoad)=\"ionSlideEvent($event)\">\n                        <!-- /////////////////////////////////////////////////////////////////// -->\n                        <!-- SLIDE ONE ///////////////////////////////////////////////////////// -->\n                        <!-- /////////////////////////////////////////////////////////////////// -->\n                        <ion-slide class=\"frs-slide\" id=\"frslide1-yourworkplace\">\n                            <div class=\"fr-slide-flexy-wrap slide1\">\n                                <div class=\"frs-slide-grid-wrapper title-grid workplace\">\n                                    <ion-grid class=\"sheriff-grid modal-grid firstrun-grid heading-grid workplace\">\n                                        <ion-row class=\"sheriff-row modal-row mainheading-row workplace\">\n                                            <ion-col class=\"sheriff-col modal-col mainheading-col workplace\">\n                                                <div class=\"fr-slidetitle-wrapper-div workplace\">\n                                                    <div class=\"fr-your\">your</div>\n                                                    <div class=\"fr-titlebig workplace\">workplace</div>\n                                                </div>\n                                            </ion-col>\n                                        </ion-row>\n                                    </ion-grid>\n                                </div>\n                                <div *ngIf=\"epTestsDone\" class=\"infoandcontent-grid-wrapper-div workplace\">\n                                    <ion-grid class=\"sheriff-grid modal-grid firstrun-grid infocontent-grid workplace\">\n                                        <ion-row class=\"sheriff-row modal-row firstrun-row infocontent-row workplace\">\n                                            <ion-col class=\"sheriff-col modal-col firstrun-col infocontent-col workplace\">\n                                                <!-- No WP --------------------------------------------------- -->\n                                                <div *ngIf=\"wpNoOf===0\" id=\"fr-s1-workplace-none\">\n                                                    <p class=\"notop-para nowps dimable\"><span class=\"sheriff-brand-txt smaller\">Sheriff</span> found <span class=\"sheriff-red\">no workplaces</span> currently linked to your account.</p>\n                                                    <ion-grid class=\"sheriff-grid fr-grid nowps-grid\">\n                                                        <ion-row class=\"sheriff-row fr-row nowps-row notright-row dimable\">\n                                                            <ion-col size=\"12\" class=\"sheriff-col fr-col nowps-col notright-col\">\n                                                                <div class=\"fr-nowps notright-wrapper\">Double check the email address you just used to sign into <span class=\"sheriff-brand-txt smaller\">Sheriff</span> (<span style=\"font-variant: all-small-caps;color:var(--ion-color-success)\">{{userEmail}}</span>) is the <span style=\"font-style: italic;color:#eee\">original email address</span> used to activate your <span class=\"deputy-brand-txt smaller\">deputy</span> account.</div>\n                                                            </ion-col>\n                                                            <ion-col size=\"6\" class=\"sheriff-col fr-col nowps-col checkaccount-col checkaccount-content-col content-col left\">\n                                                                <p class=\"notrightpara para2\" style=\"color:#ff9800\">If not, tap to logout and</p>\n                                                            </ion-col>\n                                                            <ion-col size=\"6\" class=\"sheriff-col fr-col nowps-col checkaccount-col checkaccount-content-col content-col button\">\n                                                                <div (click)=\"logoutAndSwitch()\" class=\"firstrun-btn firstrun-corenavbtn nowps signoutandswitch ion-activatable ripple-parent\" id=\"firstrun-searchformissing-workplace-btn\">\n                                                                    <ion-icon class=\"fr-searchagain-ico\" name=\"swap-horizontal-outline\"></ion-icon>Switch Login\n                                                                    <ion-ripple-effect></ion-ripple-effect>\n                                                                </div>\n                                                            </ion-col>\n                                                        </ion-row>\n                                                        <ion-row class=\"sheriff-row fr-row nowps-row ordividerrow dimable\">\n                                                          <ion-col class=\"sheriff-col fr-col nowps-col orderdivider-col\">\n                                                              <div id=\"fr-or-divider-wrapper\" class=\"nowps dimable\">\n                                                                  <div id=\"fr-or-divider-text\" class=\"nowps dimable nowpor\">OR REFRESH</div>\n                                                              </div>\n                                                          </ion-col>\n                                                        </ion-row>\n                                                        <ion-row *ngIf=\"wpSearchAgain\" class=\"sheriff-row fr-row nowps-row refreshlist-row\">\n                                                            <ion-col size=\"12\" class=\"sheriff-col fr-col nowps-col searchagain-col searchagain-results-col\">\n                                                              <ion-grid class=\"sheriff-grid workplace-searchagain-grid\">\n                                                                <ion-row class=\"sheriff-row workplace-searchagain-row\">\n                                                                  <ion-col class=\"sheriff-col workplace-searchagain-col\">\n                                                                    <div *ngIf=\"wpSearchAgain\" class=\"fr-workplace-searchagain-wrapper\">\n                                                                        <div *ngIf=\"wpSearchAgainStage==='waiting'\">\n                                                                          <div id=\"fr-workplace-searchagain-spinner-wrapper\">\n                                                                            <ion-spinner id=\"fr-workplace-searchagain-spinner\" name=\"dots\"></ion-spinner>\n                                                                            <div class=\"fr-workplace-searchagain-spinner-txt\">Refreshing Workplaces</div>\n                                                                          </div>\n                                                                        </div>\n                                                                        <div *ngIf=\"wpSearchAgainStage==='nonew'\" class=\"wpsearchagainresult-txt nonew\">\n                                                                            <ion-icon class=\"wpsearchagainresult-ico sheriff-red\" name=\"close-circle\"></ion-icon>No New Workplaces Found\n                                                                        </div>\n                                                                        <div *ngIf=\"wpSearchAgainStage==='gotnew'\" class=\"wpsearchagainresult-txt gotnew\">\n                                                                            <ion-icon class=\"wpsearchagainresult-ico sheriff-green\" name=\"checkmark-circle\"></ion-icon>{{newWPNo}} New Workplaces Found\n                                                                        </div>\n                                                                    </div>\n                                                                  </ion-col>\n                                                                </ion-row>\n                                                              </ion-grid>\n                                                            </ion-col>\n                                                        </ion-row>\n                                                        <ion-row class=\"sheriff-row fr-row nowps-row refreshlist-row dimable\">\n                                                            <ion-col size=\"12\" class=\"sheriff-col fr-col nowps-col searchagain-col searchagain-content-col content-col top\">\n                                                                <p class=\"searchagaininfo para1\">If you are expecting an invite from a new employer or experiencing issues with your data connection:</p>\n                                                            </ion-col>\n                                                            <ion-col size=\"6\" class=\"sheriff-col fr-col nowps-col searchagain-col searchagain-content-col content-col left\">\n                                                                <div style=\"color:#ff9800\" class=\"fr-nowps searchagaininfo-wrapper try-refreshingwp dimable\">\n                                                                    Try refreshing your\n                                                                </div>\n                                                            </ion-col>\n                                                            <ion-col size=\"6\" class=\"sheriff-col fr-col nowps-col searchagain-col searchagain-content-col content-col btn dimable\">\n                                                                <div (click)=\"searchForMissingWP()\" class=\"firstrun-btn firstrun-corenavbtn nowps skip ion-activatable ripple-parent\" id=\"firstrun-searchformissing-workplace-btn\">\n                                                                    <ion-icon class=\"fr-searchagain-ico\" name=\"search-outline\"></ion-icon>\n                                                                    workplaces\n                                                                    <ion-ripple-effect></ion-ripple-effect>\n                                                                </div>\n                                                            </ion-col>\n                                                        </ion-row>\n                                                        <ion-row class=\"sheriff-row fr-row nowps-row ordividerrow dimable\">\n                                                            <ion-col class=\"sheriff-col fr-col nowps-col orderdivider-col\">\n                                                                <div id=\"fr-or-divider-wrapper\" class=\"nowps dimable\">\n                                                                    <div id=\"fr-or-divider-text\" class=\"nowps dimable nowpor\">OR IMPORT</div>\n                                                                </div>\n                                                            </ion-col>\n                                                        </ion-row>\n                                                        <ion-row class=\"sheriff-row fr-row nowps-row archiveoffline-row dimable\">\n                                                            <ion-col size=\"12\" class=\"sheriff-col fr-col nowps-col archiveoffline-col openimportbtn-col open\">\n                                                                <div (click)=\"skipWorkplaceImport()\" class=\"ion-activatable ripple-parent nowps-saveddatabtn openlocaldb-btn\">\n                                                                    <ion-icon class=\"fr-searchagain-ico\" name=\"server-outline\"></ion-icon>\n                                                                    Database Cloud Backup\n                                                                    <ion-ripple-effect></ion-ripple-effect>\n                                                                </div>\n                                                            </ion-col>\n                                                        </ion-row>\n                                                    </ion-grid>\n                                                </div>\n                                                <!-- Mult WPs -------------------------------------------------------- -->\n                                                <div *ngIf=\"wpNoOf>1\" id=\"fr-s1-workplace-multiple\">\n                                                    <p class=\"notop-para multiple dimable\"><span class=\"sheriff-brand-txt smaller\">Sheriff</span> found <span class=\"sheriff-gold\">{{wpNoOf}} linked workplaces</span>.</p>\n                                                    <p class=\"dimable multiple-wp-lastpara\" style=\"text-align:left\">To help us streamline access to the data you use most, select your <span style=\"font-weight:500;color:#eee\">primary/most-used workplace</span> below:</p>\n                                                    <ion-grid class=\"sheriff-grid modal-grid firstrun-grid froptions-grid workplace dimable\">\n                                                        <ion-row *ngFor=\"let workplace of wpWorkplaces; let i=index\" class=\"sheriff-row modal-row multiple-workplace multiple-workplace{{i}}\" (click)=\"toggleWPCB(i,workplace.id)\">\n                                                            <ion-col size=\"1\" class=\"sheriff-col modal-col firstrun-col froptions-col workplace{{i}} checkbox-col\">\n                                                                <ion-checkbox mode=\"ios\" checked=\"{{workplace.ischecked}}\" class=\"sheriff-checkbox fr-workplace-cb workplace{{i}}-cb\"></ion-checkbox>\n                                                            </ion-col>\n                                                            <ion-col class=\"sheriff-col fr-multipleworkplace-col block-col\">\n                                                                <div [ngStyle]=\"{background:workplace.color}\" class=\"fr-workplace-portfolio-block\">\n                                                                    <ion-icon [ngStyle]=\"{color:workplace.labelcolor}\" class=\"fr-workplace-ico\" name=\"business-outline\"></ion-icon>\n                                                                </div>\n                                                            </ion-col>\n                                                            <ion-col class=\"sheriff-col fr-multipleworkplace-col deets-col\">\n                                                                <div class=\"fr-multipleworkplace-nameandaddress-wrapper\">\n                                                                    <div class=\"fr-multipleworkplace-name-wrapper\">{{workplace.name}} <span class=\"fr-wp-code-span\" *ngIf=\"workplace.code !== null\">({{workplace.code}})</span></div>\n                                                                    <div *ngIf=\"workplace.address!==null\" class=\"fr-singleworkplace-address-wrapper\">{{workplace.address}}</div>\n                                                                </div>\n                                                            </ion-col>\n                                                        </ion-row>\n                                                    </ion-grid>\n                                                    <div *ngIf=\"wpSearchAgain&&!wpOneIsChecked\" class=\"fr-workplace-searchagain-wrapper multiple\">\n                                                      <ion-grid class=\"sheriff-grid workplace-searchagain-grid\">\n                                                        <ion-row class=\"sheriff-row workplace-searchagain-row\">\n                                                          <ion-col class=\"sheriff-col workplace-searchagain-col\">\n                                                            <div *ngIf=\"wpSearchAgain\" class=\"fr-workplace-searchagain-wrapper\">\n                                                                  <div *ngIf=\"wpSearchAgainStage==='waiting'\">\n                                                                    <div id=\"fr-workplace-searchagain-spinner-wrapper\">\n                                                                      <ion-spinner id=\"fr-workplace-searchagain-spinner\" name=\"dots\"></ion-spinner>\n                                                                      <div class=\"fr-workplace-searchagain-spinner-txt\">Refreshing Workplaces</div>\n                                                                    </div>\n                                                                  </div>\n                                                                  <div *ngIf=\"wpSearchAgainStage==='nonew'\" class=\"wpsearchagainresult-txt nonew\">\n                                                                      <ion-icon class=\"wpsearchagainresult-ico sheriff-red\" name=\"close-circle\"></ion-icon>No New Workplaces Found\n                                                                  </div>\n                                                                  <div *ngIf=\"wpSearchAgainStage==='gotnew'\" class=\"wpsearchagainresult-txt gotnew\">\n                                                                      <ion-icon class=\"wpsearchagainresult-ico sheriff-green\" name=\"checkmark-circle\"></ion-icon>{{newWPNo}} New Workplaces Found\n                                                                  </div>\n                                                            </div>\n                                                          </ion-col>\n                                                        </ion-row>\n                                                      </ion-grid>\n                                                    </div>\n                                                    <div *ngIf=\"!wpOneIsChecked\" (click)=\"searchForMissingWP()\" class=\"firstrun-btn firstrun-corenavbtn multiple skip ion-activatable ripple-parent\" id=\"firstrun-searchformissing-workplace-btn\">\n                                                        <ion-icon class=\"fr-searchagain-ico\" name=\"search-outline\"></ion-icon>workplaces\n                                                        <ion-ripple-effect></ion-ripple-effect>\n                                                    </div>\n                                                    <div *ngIf=\"wpOneIsChecked\" class=\"fr-swipe2continue-wrapper dimable multiple animate__animated animate__fadeIn\">\n                                                       <div *ngIf=\"wpNoOf>0||(hasBUDB&&mustRestoreStatus==='success')\" class=\"sheriff-slider-bodynav-nextarrow-div-wrapper\">\n                                                          <div class=\"sheriff-slider-bodynav-nextarrow-btn-inner sheriff-btn sheriff-fr-nextbtn ion-activatable ripple-parent\" (click)=\"slideNext(slideWithNav)\">\n                                                            <div class=\"sheriff-btn-txt sheriff-nextbtn-txt\">SWIPE/TAP TO CONTINUE</div>\n                                                            <ion-icon class=\"sheriff-fr-btn-ico sheriff-fr-nextbtn-ico\" name=\"arrow-forward-outline\"></ion-icon>\n                                                            <ion-ripple-effect></ion-ripple-effect>\n                                                          </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- 1 WP ------------------------------------------------------------ -->\n                                                <div *ngIf=\"wpNoOf===1\" id=\"fr-s1-workplace-single\">\n                                                    <p class=\"notop-para dimable\"><span class=\"sheriff-brand-txt smaller\">Sheriff</span> has set your <span class=\"fr-primarywp\">primary workplace</span> to:</p>\n                                                    <ion-grid class=\"fr-singleworkplace-wrapper dimable\">\n                                                        <ion-row class=\"sheriff-row fr-singleworkplace-row\">\n                                                            <ion-col class=\"sheriff-col fr-singleworkplace-col block-col\">\n                                                                <div [ngStyle]=\"{background:wpWorkplaces[0].color}\" class=\"fr-workplace-portfolio-block\">\n                                                                    <ion-icon [ngStyle]=\"{color:wpWorkplaces[0].labelcolor}\" class=\"fr-workplace-ico\" name=\"business-outline\"></ion-icon>\n                                                                </div>\n                                                            </ion-col>\n                                                            <ion-col class=\"sheriff-col fr-singleworkplace-col deets-col\">\n                                                                <div class=\"fr-singleworkplace-nameandaddress-wrapper\">\n                                                                    <div class=\"fr-singleworkplace-name-wrapper\">{{wpWorkplaces[0].name}} <span class=\"fr-wp-code-span\" *ngIf=\"wpWorkplaces[0].code!==null\">({{wpWorkplaces[0].code}})</span></div>\n                                                                    <div *ngIf=\"wpWorkplaces[0].address!==null\" class=\"fr-singleworkplace-address-wrapper\">{{wpWorkplaces[0].address}}</div>\n                                                                </div>\n                                                            </ion-col>\n                                                        </ion-row>\n                                                    </ion-grid>\n                                                    <ion-grid class=\"sheriff-grid workplace-searchagain-grid\">\n                                                      <ion-row class=\"sheriff-row workplace-searchagain-row\">\n                                                        <ion-col class=\"sheriff-col workplace-searchagain-col\">\n                                                          <div *ngIf=\"wpSearchAgain\" class=\"fr-workplace-searchagain-wrapper\">\n                                                              <div *ngIf=\"wpSearchAgainStage==='waiting'\">\n                                                                <div id=\"fr-workplace-searchagain-spinner-wrapper\">\n                                                                  <ion-spinner id=\"fr-workplace-searchagain-spinner\" name=\"dots\"></ion-spinner>\n                                                                  <div class=\"fr-workplace-searchagain-spinner-txt\">Refreshing Workplaces</div>\n                                                                </div>\n                                                              </div>\n                                                              <div *ngIf=\"wpSearchAgainStage==='nonew'\" class=\"wpsearchagainresult-txt nonew\">\n                                                                  <ion-icon class=\"wpsearchagainresult-ico sheriff-red\" name=\"close-circle\"></ion-icon>No New Workplaces Found\n                                                              </div>\n                                                              <div *ngIf=\"wpSearchAgainStage==='gotnew'\" class=\"wpsearchagainresult-txt gotnew\">\n                                                                  <ion-icon class=\"wpsearchagainresult-ico sheriff-green\" name=\"checkmark-circle\"></ion-icon>{{newWPNo}} New Workplaces Found\n                                                              </div>\n                                                          </div>\n                                                        </ion-col>\n                                                      </ion-row>\n                                                    </ion-grid>\n                                                    <div class=\"fr-swipe2continue-wrapper dimable\"> \n                                                        <div *ngIf=\"wpNoOf>0||(hasBUDB&&mustRestoreStatus==='success')\" class=\"sheriff-slider-bodynav-nextarrow-div-wrapper\">\n                                                          <div class=\"sheriff-slider-bodynav-nextarrow-btn-inner sheriff-btn sheriff-fr-nextbtn ion-activatable ripple-parent\" (click)=\"slideNext(slideWithNav)\">\n                                                            <div class=\"sheriff-btn-txt sheriff-nextbtn-txt\">SWIPE/TAP TO CONTINUE</div>\n                                                            <ion-icon class=\"sheriff-fr-btn-ico sheriff-fr-nextbtn-ico\" name=\"arrow-forward-outline\"></ion-icon>\n                                                            <ion-ripple-effect></ion-ripple-effect>\n                                                          </div>\n                                                        </div>\n                                                    </div>\n                                                    <div id=\"fr-or-divider-wrapper dimable\">\n                                                        <div id=\"fr-or-divider-text\">OR</div>\n                                                    </div>\n                                                    <div class=\"fr-searchformissing-workplace-wrapper\">\n                                                        <ion-grid class=\"sheriff-grid fr-missingwp-grid\">\n                                                            <ion-row class=\"sheriff-row fr-missingwp-row\">\n                                                                <ion-col class=\"sheriff-col fr-missingwp-col1\">\n                                                                    <span *ngIf=\"!wpSearchAgain\" class=\"sheriff-search-again-red\">SEARCH AGAIN</span>\n                                                                    <span *ngIf=\"wpSearchAgain\" class=\"sheriff-search-again-red\">SEARCHING...</span>\n                                                                    <ion-icon class=\"fr-s2c-ico bad\" name=\"remove-outline\"></ion-icon>\n                                                                </ion-col>\n                                                                <ion-col class=\"sheriff-col fr-missingwp-col2\">\n                                                                    <div (click)=\"searchForMissingWP()\" class=\"firstrun-btn firstrun-corenavbtn skip ion-activatable ripple-parent\" id=\"firstrun-searchformissing-workplace-btn\">\n                                                                        <ion-icon class=\"fr-searchagain-ico\" name=\"search-outline\"></ion-icon>workplaces\n                                                                        <ion-ripple-effect></ion-ripple-effect>\n                                                                    </div>\n                                                                </ion-col>\n                                                            </ion-row>\n                                                        </ion-grid>\n                                                    </div>\n                                                </div>\n                                                <!-- ------------------------------------------------------------------- -->\n                                            </ion-col>\n                                        </ion-row>\n                                    </ion-grid>\n                                </div>\n                            </div>\n                        </ion-slide>\n                        <!-- /////////////////////////////////////////////////////////////////// -->\n                        <!-- SLIDE TWO ///////////////////////////////////////////////////////// -->\n                        <!-- /////////////////////////////////////////////////////////////////// -->\n                        <ion-slide class=\"frs-slide\" id=\"frslide2-yourrecords\">\n                            <div class=\"fr-slide-flexy-wrap slide2\" [ngClass]=\"{'frxtraoptsadjust':showMoreOpts,'alreadydone':dlDidComplete}\">\n                                <!-- ------------------------------------------------------------------- -->\n                                <div *ngIf=\"!showMoreOpts\" class=\"fr-top-mainslidetitle slide2-records\">\n                                    <ion-grid class=\"sheriff-grid modal-grid firstrun-grid heading-grid records\">\n                                      <ion-row class=\"sheriff-row modal-row mainheading-row records\">\n                                          <ion-col class=\"sheriff-col modal-col mainheading-col records\">\n                                              <div class=\"fr-slidetitle-wrapper-div records\">\n                                                  <div class=\"fr-your\">your</div>\n                                                  <div class=\"fr-titlebig workplace\">records</div>\n                                              </div>\n                                          </ion-col>\n                                      </ion-row>\n                                    </ion-grid>\n                                </div>\n                                <div *ngIf=\"backupCheckIsDone&&!dlDidComplete\" class=\"fr-backupcheck-hasfinished-wrapper\">\n                                    <!-- ------------------------------------------------------------------- -->\n                                    <div class=\"fr-top-infoblurb-wrapper slide2-records\">\n                                        <ion-grid *ngIf=\"!showMoreOpts&&!dloadInProgress&&!dlDidComplete&&!noBackupWillFail&&startFreshChecked\" class=\"sheriff-grid modal-grid firstrun-grid infocontent-grid records infoparagridtop\">\n                                            <ion-row class=\"sheriff-row modal-row firstrun-row infocontent-row records intro1\">\n                                                <ion-col class=\"sheriff-col modal-col firstrun-col infocontent-col records\">\n                                                    <p class=\"fr-rec-intro-p1\">By <span style=\"color:#ff9800\">default </span><span class=\"sheriff-brand-txt smaller\">Sheriff</span> will download and save <span style=\"color:#ff9800\">all</span> of your existing Deputy data so that your\n                                                        records are always available, even if you offline or leave your job.</p>\n                                                    <p class=\"fr-rec-intro-p2\">That said, if you want to <span style=\"color:#ff9800\">limit/change</span> the scope of the intial default download, you can do that too.</p>\n                                                </ion-col>\n                                            </ion-row>\n                                        </ion-grid>\n                                    </div>\n                                    <!-- ------------------------------------------------------------------- -->\n                                    <div *ngIf=\"!dloadInProgress&&!dlDidComplete&&!showMoreOpts&&!startFreshChecked\" class=\"backupdbfound-div-wrapper\">\n                                      <div class=\"fr-rec-budb-found-titletext\">\n                                        <span class=\"fr-records-bufound sheriff-brand-txt\">Sheriff</span><span class=\"fr-records-bufound hasfounda\"> has found a</span><span class=\"fr-records-bufound records-backup\"> Records Backup</span><span class=\"fr-records-bufound normal-txt\">:</span>\n                                      </div>\n                                      <ion-grid class=\"sheriff-grid fr-grid backupdbfound-grid\">\n                                        <ion-row class=\"sheriff-row fr-grid-row backupfound-row main-row\">\n                                          <ion-col class=\"sheriff-col fr-grid-col backupfound-col main-ico-col\">\n                                            <div [ngStyle]=\"{background:wpWorkplaces[0].color}\" class=\"fr-backupfound-ico-block\">\n                                              <ion-icon [ngStyle]=\"{color:wpWorkplaces[0].labelcolor}\" class=\"fr-backupfound-ico\" name=\"cloud-done\"></ion-icon>\n                                            </div>\n                                          </ion-col>\n                                          <ion-col class=\"sheriff-col fr-grid-col backupfound-col main-details-txt-block\">\n                                            <div class=\"budb-details-line1\">\n                                              <div class=\"budbfname\">{{buDBNiceFName}}</div>\n                                              <div class=\"budbbrackdeet budbfsize\"> ({{buDBFSize}})</div>\n                                            </div>\n                                            <div class=\"budb-details-line2\">\n                                              <div class=\"budbmoddate\">{{buDBModDate}}</div>\n                                              <div class=\"budbbrackdeet budbmodago\"> {{buDBModAgo}}</div>\n                                            </div>\n                                          </ion-col>\n                                        </ion-row>\n                                      </ion-grid>\n                                    </div>\n                                    <!-- ------------------------------------------------------------------- -->\n                                    <div *ngIf=\"!dloadInProgress&&!dlDidComplete&&!showMoreOpts&&!noBackupWillFail\" class=\"fr-backuporrefresh-choice-paratext-div\">\n                                      How should <span class=\"fr-records-bufound sheriff-brand-txt\">Sheriff</span> proceed?\n                                    </div>\n                                    <ion-grid *ngIf=\"!dloadInProgress&&!dlDidComplete&&!showMoreOpts&&!noBackupWillFail\" class=\"sheriff-grid fr-grid backuporfresh1-grid\">\n                                      <ion-row *ngIf=\"!noBackupWillFail\" class=\"sheriff-row fr-grid-row backupdbfound-row restoreorfresh-row restorerow\">\n                                        <ion-col [ngStyle]=\"{'opacity':startFreshChecked?'0.5':'1'}\" class=\"sheriff-col fr-grid-col backupfound-col restoreorfresh-col restorecb-col\">\n                                          <div class=\"fr-founddbbackup-restoreopt-wrapper restorebudbopt\" [ngClass]=\"{'fr-rec-opt-active':buDBChecked}\">\n                                            <ion-checkbox #restoreBUDBCB mode=\"ios\" checked={{buDBChecked}} class=\"sheriff-checkbox recordsrestoreorfresh-cb fr-restorebudbcb\"></ion-checkbox>\n                                            <div (click)=\"toggleBUDB(restoreBUDBCB.checked)\" class=\"restorebuorfreshlabel restore-label ion-activatable ripple-parent\" [ngStyle]=\"{'color':buDBChecked?'#ff9800':'#848484'}\">\n                                              <div class=\"resorfres-label-txt restore\">LOAD BACKUP</div>\n                                              <ion-ripple-effect></ion-ripple-effect>\n                                            </div>\n                                          </div>\n                                        </ion-col>\n                                        <ion-col [ngStyle]=\"{'opacity':buDBChecked||startFreshChecked?'0.5':'1'}\" size=\"1\" class=\"sheriff-col fr-grid-col backupfound-col restoreorfresh-col or-col\">\n                                          <div class=\"recordoptsorwrap\">OR</div>\n                                        </ion-col>\n                                        <ion-col [ngStyle]=\"{'opacity':buDBChecked?'0.5':'1'}\" class=\"sheriff-col fr-grid-col backupfound-col restoreorfresh-col freshstart-col\">\n                                          <div class=\"fr-founddbbackup-restoreopt-wrapper freshopt\" [ngClass]=\"{'fr-rec-opt-active':startFreshChecked}\">\n                                            <ion-checkbox #startFreshCB mode=\"ios\" checked={{startFreshChecked}} class=\"sheriff-checkbox recordsrestoreorfresh-cb fr-startfreshcb\"></ion-checkbox>\n                                            <div (click)=\"toggleStartFresh(startFreshCB.checked)\" class=\"restorebuorfreshlabel fresh-label ion-activatable ripple-parent\" [ngStyle]=\"{'color':startFreshChecked?'#ff9800':'#848484'}\">\n                                              <div class=\"resorfres-label-txt fresh\">START FRESH</div>\n                                              <ion-ripple-effect></ion-ripple-effect>\n                                            </div>\n                                          </div>\n                                        </ion-col>\n                                      </ion-row>\n                                    </ion-grid>\n                                    <!-- ------------------------------------------------------------------------- -->\n                                    <ion-grid *ngIf=\"buDBChecked&&!dloadInProgress&&!dlDidComplete&&!showMoreOpts\" class=\"sheriff-grid fr-grid restorebu-nextbtn-grid\">\n                                      <ion-row class=\"sheriff-row fr-grid restorebu-nextbtn-row\">\n                                        <ion-col size=\"12\" class=\"sheriff-col fr-grid-col backupfound-col restoreorfresh-col swipetapnext-col\">\n                                          <div class=\"sheriff-slider-bodynav-nextarrow-btn-inner sheriff-btn sheriff-fr-nextbtn ion-activatable ripple-parent restorebunextbtn\" (click)=\"restoreBUStart()\">\n                                            <ion-icon class=\"sheriff-fr-btn-ico sheriff-fr-nextbtn-ico\" name=\"download-outline\"></ion-icon>\n                                            <div class=\"sheriff-btn-txt sheriff-nextbtn-txt restorebutxt\">RESTORE BACKUP</div>\n                                            <ion-ripple-effect></ion-ripple-effect>\n                                          </div>\n                                        </ion-col>\n                                      </ion-row>\n                                    </ion-grid>\n                                    <!-- ------------------------------------------------------------------------- -->\n                                    <ion-grid *ngIf=\"startFreshChecked&&!dloadInProgress&&!dlDidComplete&&!showMoreOpts\" class=\"sheriff-grid fr-grid freshoptions-grid\">\n                                      <ion-row class=\"sheriff-row fr-grid-row freshoptions-row linediv-row\">\n                                        <ion-col class=\"sheriff-row fr-grid-row freshoptions-row linediv-col\">\n                                          <div class=\"sheriff-recopts-divline-div\"></div>\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row class=\"sheriff-row fr-grid-row freshoptions-row usedefaults-btn-row\">\n                                        <ion-col size=\"12\" class=\"sheriff-col fr-grid-col freshoptions-col usedefaults-btn-col\">\n                                          <div class=\"sheriff-slider-bodynav-nextarrow-btn-inner sheriff-btn sheriff-fr-nextbtn ion-activatable ripple-parent usedefaultsbtn\" (click)=\"freshStartDLStart('all')\">\n                                            <ion-icon class=\"sheriff-fr-btn-ico sheriff-fr-nextbtn-ico\" name=\"file-tray-full-outline\"></ion-icon>\n                                            <div class=\"sheriff-btn-txt sheriff-nextbtn-txt allrecordstxt\">ALL RECORDS<span class=\"freshoptlabelbrack all\">(Default)</span></div>\n                                            <ion-ripple-effect></ion-ripple-effect>\n                                          </div>\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row class=\"sheriff-row fr-grid-row freshoptions-row or-title-row\">\n                                        <ion-col class=\"sheriff-col fr-grid-col freshoptions-col or-title-col\">\n                                          <div class=\"ortitlewrapperdiv\">OR</div>\n                                        </ion-col>\n                                      </ion-row>\n                                      <ion-row class=\"sheriff-row fr-grid-row freshoptions-row moreopt-btn-row\">\n                                        <ion-col class=\"sheriff-col fr-grid-col freshoptions-col moreopt-btn-col\">\n                                          <div class=\"fr-records-options-limit-btn ion-activatable ripple-parent showmoreoptions\" (click)=\"showMoreOptions(true)\">\n                                            <ion-icon class=\"sheriff-fr-btn-ico sheriff-fr-nextbtn-ico optsico\" name=\"options-outline\"></ion-icon>\n                                            <div class=\"sheriff-btn-txt sheriff-dllimitopts-txt limitrecords\">LIMIT RECORDS<span class=\"freshoptlabelbrack options\">(Options)</span></div>\n                                            <ion-ripple-effect></ion-ripple-effect>\n                                          </div>\n                                        </ion-col>\n                                      </ion-row>\n                                    </ion-grid>\n                                    <!-- MUST RESTORE / NO API --------------------------------------------- -->\n                                    <div *ngIf=\"noBackupWillFail&&hasBUDB\" class=\"fr-records-maindiv-backupfound-wrapper\">\n                                      <ion-grid class=\"sheriff-grid mustrestorebu-grid\">\n                                        <ion-row class=\"sheriff-row mustrestorebu-row status-row\">\n                                          <ion-col size=\"12\" class=\"sheriff-col mustrestorebu-col status-col\">\n                                            <span *ngIf=\"mustRestoreStatus==='loading'\" style=\"color:var(--ion-color-primary-68)\">LOADING</span>\n                                            <span *ngIf=\"mustRestoreStatus==='loaded'\" style=\"color:var(--ion-color-primary)\">LOADED</span>\n                                            <span *ngIf=\"mustRestoreStatus==='failed'\" style=\"color:var(--ion-color-danger)\">FAILED</span>\n                                            <span *ngIf=\"mustRestoreStatus==='success'\" style=\"color:var(--ion-color-success)\">SUCCESS</span>\n                                          </ion-col>\n                                        </ion-row>\n                                        <ion-row class=\"sheriff-row mustrestorebu-row dbwplist-row\">\n                                          <ion-col *ngIf=\"mustRestoreStatus==='failed'\" size=\"12\" class=\"sheriff-col mustrestorebu-col importres-col failed-col\">\n                                            <div class=\"mustrestorebu-txt fail-l1\">Import Cloud Backup Failed</div>\n                                            <div class=\"mustrestorebu-txt fail-l2\">No Workplaces Detected</div>\n                                            <div class=\"mustrestorebu-txt fail-l3\"><span class=\"sheriff-brand-txt\">Sheriff</span> Setup Cannot Continue.</div>\n                                          </ion-col>\n                                          <ion-col *ngIf=\"mustRestoreStatus==='loaded'\" size=\"12\" class=\"sheriff-col mustrestorebu-col importres-col loaded-col\">\n                                            <div class=\"mustrestorebu-txt loaded-l1\"> Searching for Workplaces...</div>\n                                          </ion-col>    \n                                          <ion-col *ngIf=\"mustRestoreStatus==='success'\" size=\"12\" class=\"sheriff-col mustrestorebu-col importres-col success-col\">\n                                            <div class=\"mustrestorebu-txt success-count\"><span style=\"color:var(--ion-color-primary);font-weight:500\">{{forceRestoreWPArr.length}}</span> Workplaces Found</div>\n                                            <div class=\"mustrestorebu-txt success-wpitem-name\"><span style=\"font-weight:500;color:#eee\">{{forceRestoreWPName}}</span><span style=\"text-transform:uppercase\" *ngIf=\"forceRestoreWP.Code\"> ({{forceRestoreWP.Code}})</span></div>\n                                          </ion-col>                                      \n                                        </ion-row>\n                                      </ion-grid>\n                                    </div>                                   \n                                    <!-- ------------------------------------------------------------------- -->\n                                    <div *ngIf=\"dloadInProgress||dlDidComplete\" class=\"animate__animated animate__flipInX animate__faster\" id=\"downloading-selected-data-progress-wrapper-div records\">\n                                        <div *ngIf=\"dbImportDone\" class=\"dbimportdonebox\">\n                                            <ion-icon class=\"dbimportdone-ico\" name=\"shield-checkmark-outline\"></ion-icon>BACKUP RESTORED\n                                        </div>\n                                        <div class=\"fr-dl-startfreshmode-div-wrapper\">\n                                          <div class=\"fr-dl-startfreshmode-txt-div\">\n                                              <span class=\"dl-scope-txt label\">Download Scope:</span><span *ngIf=\"selectDataScope==='all'\" class=\"dl-scope-txt value default\">Default</span><span *ngIf=\"selectDataScope==='moreopts'\" class=\"dl-scope-txt value custom\">Custom</span>\n                                          </div> \n                                        </div>\n                                        <ion-grid *ngIf=\"!dbImportDone\" class=\"sheriff-grid modal-grid firstrun-grid dlprogress-grid records\">\n                                            <ion-row [ngStyle]=\"{'color': (dlBoxError) ? 'var(--ion-color-danger)' : 'var(--ion-color-success)'}\" class=\"sheriff-row modal-row firstrun-row dlprogress-row0 subheader records\">\n                                                <ion-col size=\"12\" class=\"sheriff-col modal-col firstrun-col dlprogress-colsubheader-col records\">\n                                                    <div class=\"dlprogress-subheader-wrapper\">\n                                                        <ion-icon *ngIf=\"dlBoxInProgress\" class=\"fr-inprogico first-run-btn getmyrecords-btn-ico subheader\" name=\"cloud-download\"></ion-icon>\n                                                        <ion-icon *ngIf=\"dlBoxError\" class=\"first-run-btn getmyrecords-btn-ico subheader\" name=\"alert-circle\"></ion-icon>\n                                                        <ion-icon *ngIf=\"dlBoxSuccess\" class=\"animate__animated animate__flipInX animate__faster first-run-btn getmyrecords-btn-ico subheader\" name=\"checkmark-circle\"></ion-icon>\n                                                        <span *ngIf=\"dlBoxInProgress\"><span id=\"ipt\"> {{dlInProgText}}</span></span>\n                                                        <span *ngIf=\"dlBoxError\"> failed</span>\n                                                        <span *ngIf=\"dlBoxSuccess\" class=\"animate__animated animate__flipInX animate__faster\"> success</span>\n                                                    </div>\n                                                </ion-col>\n                                            </ion-row>\n                                            <ion-row class=\"sheriff-row modal-row firstrun-row dlprogress-row1 statustexttop records\">\n                                                <ion-col size=\"12\" class=\"sheriff-col modal-col firstrun-col dlprogress-col statustexttop-action-mode-col records\">\n                                                    <div *ngIf=\"!dlBoxSuccess\">\n                                                        <span class=\"statustexttop-action-txt\" id=\"fr-dl-action-target\">{{nowDataTarget}}</span>\n                                                        <span *ngIf=\"!dlMyRunning&&thisDataValue!==-1&&thisDataMax!==-1\" class=\"statustexttop-action-txt lilsep\"> - </span>\n                                                        <span *ngIf=\"!dlMyRunning&&thisDataValue!==-1&&thisDataMax!==-1\" class=\"statustexttop-action-txt nowvalue\">{{thisDataValue}}</span>\n                                                        <span *ngIf=\"!dlMyRunning&&thisDataValue!==-1&&thisDataMax!==-1\" class=\"statustexttop-action-txt lilslash\">/</span>\n                                                        <span *ngIf=\"!dlMyRunning&&thisDataValue!==-1&&thisDataMax!==-1\" class=\"statustexttop-action-txt nowmax\">{{thisDataMax}}</span>\n                                                    </div>\n                                                    <div style=\"color:var(--ion-color-success)\" *ngIf=\"dlBoxSuccess\">All Records Completed</div>\n                                                </ion-col>\n                                            </ion-row>\n                                            <ion-row class=\"sheriff-row modal-row firstrun-row dlprogress-row1 progressbar-row\">\n                                                <ion-col size=\"12\" class=\"sheriff-col modal-col firstrun-col dlprogress-col progressbar-col\">\n                                                    <div id=\"fr-data-progressbar-wrapper-div\">\n                                                        <ion-progress-bar class=\"frpbar\" id=\"fr-dl-getthis-pbar\" value={{getThisPBar}} type=\"determinate\"></ion-progress-bar>\n                                                        <ion-progress-bar class=\"frpbar\" id=\"fr-dl-getall-pbar\" value={{getAllPBar}} type=\"determinate\"></ion-progress-bar>\n                                                        <div id=\"firstrun-download-progress-bar-perc-overlay\">{{getAllPerc}}<span id=\"fr-dl-getallpersign\">%</span></div>\n                                                    </div>\n                                                </ion-col>\n                                            </ion-row>\n                                            <ion-row class=\"sheriff-row modal-row firstrun-row dlprogress-row1 statustextbottom\">\n                                                <ion-col size=\"6\" class=\"sheriff-col modal-col firstrun-col dlprogress-col statustextbottom-1 xoutofy\">\n                                                    <div id=\"statustextbottom-xoutofy-wrapper\">\n                                                        <span class=\"xoy done\">{{getAllCount}}</span><span class=\"xoy sep\"> / </span><span class=\"xoy total\">{{getAllTotal}}</span>\n                                                    </div>\n                                                </ion-col>\n                                                <ion-col size=\"6\" class=\"sheriff-col modal-col firstrun-col dlprogress-col statustextbottom timeremain\">\n                                                    <div *ngIf=\"!dlBoxSuccess\" id=\"statustextbottom-timeremain-txt-wrapper\">Running</div>\n                                                    <div *ngIf=\"dlBoxSuccess\" style=\"color:var(--ion-color-success)\" id=\"statustextbottom-timeremain-txt-wrapper\">DONE</div>\n                                                </ion-col>\n                                            </ion-row>\n                                            <ion-row class=\"sheriff-row modal-row firstrun-row dlprogress-images images-bottom\">\n                                                <ion-col size=\"12\" class=\"sheriff-col fr-dl-images-col title-col\">\n                                                  <div class=\"fr-dl-images-col title-txt-wrap\"><span class=\"title-txt-wrap-label-span\">saved images:</span><span class=\"title-txt-wrap-label-count-span\">{{convImgs.length}}</span></div>\n                                                </ion-col>\n                                                <ion-col size=\"12\" class=\"sheriff-col fr-dl-images-col images-col\">\n                                                    <div class=\"fr-dl-images-wrapper\">\n                                                        <img *ngFor=\"let convImgUri of convImgs; let i = index\" src=\"{{convImgUri}}\" class=\"fr-conv-image fr-conv-img-{{i}} animate__animated animate__zoomIn animDel-{{((i+1)*50)+100}} animDur-200\">\n                                                    </div>\n                                                    <div class=\"fr-cl-images-gradient-cover-div\"></div>\n                                                </ion-col>\n                                            </ion-row>\n                                        </ion-grid>\n                                    </div>\n                                    <!-- ------------------------------------------------------------------- -->\n                                    <ion-grid *ngIf=\"showMoreOpts&&!dloadInProgress&&!dlDidComplete\" class=\"sheriff-grid firstrun-grid records-grid select-moreopts-grid\">\n                                        <ion-row class=\"sheriff-row firstrun-row records-row select-moreopts-row backbtnrow\">\n                                          <ion-col size=\"6\" class=\"sheriff-col firstrun-col records-col select-moreopts-col backbtn-col\">\n                                            <ion-button (click)=\"showMoreOptions(false)\" class=\"sheriff-btn sheriff-fr-moreopts-backbtn\">\n                                              <ion-icon class=\"sheriff-btn-ico sheriff-fr-moreopts-backbtn-ico\" name=\"arrow-back-outline\"></ion-icon>\n                                              <div class=\"sheriff-btn-txt sheriff-fr-moreopts-backbtn-txt\">cancel/back</div>\n                                            </ion-button>\n                                          </ion-col>\n                                          <ion-col size=\"6\" class=\"sheriff-col firstrun-col records-col select-moreopts-col startdl-col\">\n                                            <ion-button (click)=\"freshStartDLStart('moreopts')\" class=\"sheriff-btn sheriff-fr-moreopts-startdl\">\n                                              <div class=\"sheriff-btn-txt sheriff-fr-moreopts-startdl-txt\">save/start</div>\n                                              <ion-icon class=\"sheriff-btn-ico sheriff-fr-moreopts-startdl-ico\" name=\"play\"></ion-icon>\n                                            </ion-button>\n                                          </ion-col>\n                                        </ion-row>\n                                        <ion-row class=\"sheriff-row firstrun-row records-row select-moreopts-row row0\">\n                                            <ion-col size=\"2\" class=\"sheriff-col modal-col firstrun-col selectdata-col moreopts-col subheading-col skipoff\">\n                                                <div class=\"moreopts-subheading-wrapper recordtype\">skip</div>\n                                            </ion-col>\n                                            <ion-col size=\"4\" class=\"sheriff-col modal-col firstrun-col selectdata-col moreopts-col subheading-col recordtype\">\n                                                <div class=\"moreopts-subheading-wrapper recordtype\">limit by type</div>\n                                            </ion-col>\n                                            <ion-col size=\"6\" class=\"sheriff-col modal-col firstrun-col selectdata-col moreopts-col subheading-col itemlimit\">\n                                                <div class=\"moreopts-subheading-wrapper recordtype\">limit by no.</div>\n                                            </ion-col>\n                                        </ion-row>\n                                        <ion-row *ngFor=\"let record of recordsUserOptsArr;let i=index\" class=\"sheriff-row firstrun-row records-row select-moreopts-row row{{i+1}} {{record.ep}} animate__animated animate__zoomIn animDel-{{((i+1)*100)+200}} animDur-400 {{record.checked}}\">\n                                            <ion-col size=\"2\" class=\"sheriff-col modal-col firstrun-col selectdata-col moreopts-col dltype-toggle-col {{record.ep}}\">\n                                                <ion-toggle disabled=\"{{record.disabled}}\" (ionChange)=\"recordMOToggleChange(i,record.ep)\" checked=\"{{record.checked}}\" mode=\"ios\" class=\"sheriff-toggle firstrun-toggle records-toggle {{record.ep}}\"></ion-toggle>\n                                            </ion-col>\n                                            <ion-col size=\"4\" class=\"sheriff-col modal-col firstrun-col selectdata-col moreopts-col dltype-label-col {{record.ep}}\">\n                                                <span class=\"fr-records-moreopts-itemtypelabel {{record.checked}}\">{{record.ep}}</span>\n                                                <div *ngIf=\"!record.disabled&&record.checked\" class=\"fr-records-moreopts-itemcount-floater {{record.ep}} gotval\">\n                                                    <span [ngStyle]=\"{'color':(record.value<record.max)?'#ff9800':'var(--ion-color-success)'}\">{{record.value}}</span>\n                                                    <span style=\"color:#eee;font-weight:300\" class=\"dlnosdiv\"> / </span>{{record.max}}\n                                                </div>\n                                                <div *ngIf=\"record.disabled||!record.checked\" class=\"fr-records-moreopts-itemcount-floater {{record.ep}} noaccesszero\">\n                                                    <span style=\"color:#848484;font-weight:300\">0 / {{record.max}}</span>\n                                                </div>\n                                            </ion-col>\n                                            <ion-col size=\"6\" class=\"sheriff-col modal-col firstrun-col selectdata-col moreopts-col dltype-range-col {{record.ep}}\">\n                                                <ion-range *ngIf=\"!record.disabled&&record.checked\" pin=\"true\" (ionChange)=\"recordMORangeChange(i,record.ep)\" mode=\"ios\" class=\"swiper-no-swiping sheriff-range firstrun-range records-range {{record.ep}}\" min=\"{{record.min}}\" max=\"{{record.max}}\" value=\"{{record.value}}\"></ion-range>\n                                                <div class=\"records-range offlabel\" *ngIf=\"!record.checked&&record.max>=1\">off / skip</div>\n                                                <div class=\"records-range offlabel\" *ngIf=\"record.disabled&&record.max===0\">no access/records</div>\n                                            </ion-col>\n                                        </ion-row>\n                                    </ion-grid>\n                                    <!-- ------------------------------------------------------------------- -->\n                                </div>\n                                <div *ngIf=\"dlDidComplete\" class=\"fr-records-alreadydone-notice-wrapper\">\n                                    <div class=\"fr-records-alreadydone-notice-inner\">\n                                        <div class=\"fr-records-alreadydone-notice-text\">\n                                            <img class=\"fr-records-alreadydone-img completedstamp\" src=\"../../../assets/img/sheriff-fr-completed-stamp.svg\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </ion-slide>\n                        <!-- /////////////////////////////////////////////////////////////////// -->\n                        <!-- SLIDE THREE /////////////////////////////////////////////////////// -->\n                        <!-- /////////////////////////////////////////////////////////////////// -->\n                        <ion-slide class=\"frs-slide\" id=\"frslide3-youralerts\">\n                            <div class=\"fr-slide-flexy-wrap slide3\">\n                                <div class=\"frs-slide-grid-wrapper title-grid alerts\">\n                                    <ion-grid class=\"sheriff-grid modal-grid firstrun-grid heading-grid alerts\">\n                                        <ion-row class=\"sheriff-row modal-row mainheading-row alerts\">\n                                            <ion-col class=\"sheriff-col modal-col mainheading-co alerts\">\n                                                <div class=\"sheriff-modal-mainheading-title-txt alerts\"><span class=\"fr-your\">your</span>ALERTS</div>\n                                            </ion-col>\n                                        </ion-row>\n                                    </ion-grid>\n                                </div>\n                                <div class=\"infoandcontent-grid-wrapper-div alerts\">\n                                    <ion-grid class=\"sheriff-grid modal-grid firstrun-grid infocontent-grid alerts\">\n                                        <ion-row class=\"sheriff-row modal-row firstrun-row infocontent-row alerts\">\n                                            <ion-col class=\"sheriff-col modal-col firstrun-col infocontent-col alerts\">\n                                                <p class=\"fr-alerts-p1\">Notifications can be genuinely <span style=\"color:#ff9800\">helpful </span>but, done wrong, they can also be<span style=\"color:#ff9800\"> infuriating.</span>\n                                                    <p class=\"fr-alerts-p2\">You can always<span style=\"color:#ff9800\"> adjust </span><span class=\"sheriff-brand-txt smaller\">Sheriff</span> alerts via <span style=\"font-style:italic;color:#ff9800\">Settings</span> but, for a start,\n                                                        confirm or change our defaults:</p>\n                                            </ion-col>\n                                        </ion-row>\n                                    </ion-grid>\n                                </div>\n                                <div class=\"alertopts-grid-wrapper-div alerts methods\">\n                                    <ion-grid class=\"sheriff-grid modal-grid firstrun-grid alerts-grid alertmethods-grid\">\n                                        <ion-row class=\"sheriff-row modal-row firstrun-row alertssubheader-row alertmethods\">\n                                            <ion-col size=\"12\" class=\"sheriff-col modal-col firstrun-col alertssubheader-col\">\n                                                <div class=\"fr-alerts-subheader-text alertmethods\">alert methods</div>\n                                            </ion-col>\n                                        </ion-row>\n                                        <ion-row class=\"sheriff-row modal-row firstrun-row alerts-cb-row alertmethods phone\">\n                                            <ion-col size=\"4\" class=\"sheriff-col firstrun-col alertmethods-col phone\">\n                                                <div (click)=\"toggleAlertM($event,'phone')\" class=\"fr-alertmethods-wrapper phone {{finalModalData.alertOpts.alertMethods.value.phone}}\">\n                                                    <ion-checkbox class=\"sheriff-checkbox fr-alertmethods-cb\" [mode]=\"'ios'\" [checked]=\"finalModalData.alertOpts.alertMethods.value.phone\"></ion-checkbox>\n                                                    <ion-icon class=\"alertmethods-ico phone {{finalModalData.alertOpts.alertMethods.value.phone}}\" name=\"notifications\"></ion-icon>\n                                                    <div class=\"alertmethods-label phone {{finalModalData.alertOpts.alertMethods.value.phone}}\">Phone</div>\n                                                </div>\n                                            </ion-col>\n                                            <ion-col size=\"4\" class=\"sheriff-col firstrun-col alertmethods-col calendar\">\n                                              <div (click)=\"toggleAlertM($event,'calendar')\" class=\"fr-alertmethods-wrapper calendar {{finalModalData.alertOpts.alertMethods.value.calendar}}\">\n                                                  <ion-checkbox class=\"sheriff-checkbox fr-alertmethods-cb calendar\" [mode]=\"'ios'\" [checked]=\"finalModalData.alertOpts.alertMethods.value.calendar\"></ion-checkbox>\n                                                  <ion-icon class=\"alertmethods-ico calendar {{finalModalData.alertOpts.alertMethods.value.calendar}}\" name=\"calendar\"></ion-icon>\n                                                  <div class=\"alertmethods-label calendar {{finalModalData.alertOpts.alertMethods.value.calendar}}\">Calendar</div>\n                                              </div>\n                                          </ion-col>\n                                          <ion-col size=\"4\" class=\"sheriff-col firstrun-col alertmethods-col email\">\n                                            <div (click)=\"toggleAlertM($event,'email')\" class=\"fr-alertmethods-wrapper email {{finalModalData.alertOpts.alertMethods.value.email}}\">\n                                                <ion-checkbox class=\"sheriff-checkbox fr-alertmethods-cb email\" [mode]=\"'ios'\" [checked]=\"finalModalData.alertOpts.alertMethods.value.email\"></ion-checkbox>\n                                                <ion-icon class=\"alertmethods-ico email {{finalModalData.alertOpts.alertMethods.value.email}}\" name=\"mail\"></ion-icon>\n                                                <div class=\"alertmethods-label email {{finalModalData.alertOpts.alertMethods.value.email}}\">Email</div>\n                                            </div>\n                                          </ion-col>\n                                        </ion-row>\n                                    </ion-grid>\n                                </div>\n                                <div class=\"alertopts-grid-wrapper-div alerts events\">\n                                    <ion-grid class=\"sheriff-grid modal-grid firstrun-grid alerts-grid alertevents-grid\">\n                                        <ion-row class=\"sheriff-row modal-row firstrun-row alertssubheader-row alertevents\">\n                                            <ion-col size=\"12\" class=\"sheriff-col modal-col firstrun-col alertssubheader-col\">\n                                                <div class=\"fr-alerts-subheader-text alertmethods\">alert events</div>\n                                            </ion-col>\n                                        </ion-row>\n                                        <ion-row class=\"sheriff-row modal-row firstrun-row alerts-cb-row alertevents\">\n                                            <ion-col size=\"4\" class=\"sheriff-col firstrun-col alertevents-col shift\">\n                                                <div (click)=\"toggleAlertE($event,'shift')\" class=\"fr-alertevents-wrapper shift {{finalModalData.alertOpts.alertEvents.value.shift}}\">\n                                                    <ion-checkbox [ngStyle]=\"{'display':(finalModalData.alertOpts.alertEvents.value.shift)?'inline-block':'none'}\" class=\"sheriff-checkbox fr-alertevents-cb shift\" [mode]=\"'ios'\" [checked]=\"finalModalData.alertOpts.alertEvents.value.shift\"></ion-checkbox>\n                                                    <ion-icon class=\"alertevents-ico shift {{finalModalData.alertOpts.alertEvents.value.shift}}\" name=\"alarm\"></ion-icon>\n                                                    <div class=\"alertevents-label shift {{finalModalData.alertOpts.alertEvents.value.shift}}\">Shift</div>\n                                                </div>\n                                            </ion-col>\n                                            <ion-col size=\"4\" class=\"sheriff-col firstrun-col alertevents-col task\">\n                                              <div (click)=\"toggleAlertE($event,'task')\" class=\"fr-alertevents-wrapper task {{finalModalData.alertOpts.alertEvents.value.task}}\">\n                                                  <ion-checkbox [ngStyle]=\"{'display':(finalModalData.alertOpts.alertEvents.value.task)?'inline-block':'none'}\" class=\"sheriff-checkbox fr-alertevents-cb task\" [mode]=\"'ios'\" [checked]=\"finalModalData.alertOpts.alertEvents.value.task\"></ion-checkbox>\n                                                  <ion-icon class=\"alertevents-ico task {{finalModalData.alertOpts.alertEvents.value.task}}\" name=\"list\"></ion-icon>\n                                                  <div class=\"alertevents-label task {{finalModalData.alertOpts.alertEvents.value.task}}\">Task</div>\n                                              </div>\n                                          </ion-col>\n                                          <ion-col class=\"sheriff-col firstrun-col alertevents-col tsheet\">\n                                            <div (click)=\"toggleAlertE($event,'tsheet')\" class=\"fr-alertevents-wrapper tsheet {{finalModalData.alertOpts.alertEvents.value.tsheet}}\">\n                                                <ion-checkbox [ngStyle]=\"{'display':(finalModalData.alertOpts.alertEvents.value.tsheet)?'inline-block':'none'}\" class=\"sheriff-checkbox fr-alertevents-cb tsheet\" [mode]=\"'ios'\" [checked]=\"finalModalData.alertOpts.alertEvents.value.tsheet\"></ion-checkbox>\n                                                <ion-icon class=\"alertevents-ico tsheet {{finalModalData.alertOpts.alertEvents.value.tsheet}}\" name=\"stopwatch\"></ion-icon>\n                                                <div class=\"alertevents-label shift {{finalModalData.alertOpts.alertEvents.value.tsheet}}\">TSheet</div>\n                                            </div>\n                                        </ion-col>\n                                        </ion-row>\n                                    </ion-grid>\n                                </div>\n                                <div class=\"fr-swipe2continue-wrapper dimable\">\n                                    <span class=\"sheriff-green\">CHECK<span style=\"color:#aaa;padding:0px 2px\">/</span><span style=\"color:var(--ion-color-danger)\">CHANGE</span></span>\n                                    <ion-icon class=\"fr-s2c-ico\" name=\"remove-outline\"></ion-icon>\n                                    <span class=\"fr-continueref\">SWIPE TO FINISH</span>\n                                    <ion-icon class=\"fr-s2c-ico\" name=\"chevron-forward-outline\"></ion-icon>\n                                </div>\n                            </div>\n                        </ion-slide>\n                        <!-- /////////////////////////////////////////////////////////////////// -->\n                    </ion-slides>\n                    <div class=\"sheriff-pagination-backer\"></div>\n                    <div *ngIf=\"usingDefaults\" class=\"fr-using-defaults-notice-wrapper outter animate__animated animate__zoomIn\">\n                      <div class=\"fr-using-defaults-notice-wrapper inner\">\n                        <div class=\"fr-using-defaults-notice-content-wrapper\"> \n                          <ion-grid class=\"sheriff-grid using-defaults-grid\">\n                            <ion-row class=\"sheriff-row using-defaults-row\">\n                              <ion-col size=\"2\" class=\"sheriff-col using-defaults-col ico-col\">\n                                <ion-icon class=\"fr-using-defaults-bigico\" name=\"play-skip-forward\"></ion-icon>      \n                              </ion-col>\n                              <ion-col size=\"10\" class=\"sheriff-col using-defaults-col txt-col\">\n                                <div class=\"fr-using-defaults-txt line1\">\n                                  <span class=\"fr-fastfwd-txt\">using</span><span class=\"fr-ff-using-def-txt\">defaults</span>\n                                </div>\n                                <div class=\"fr-using-defaults-txt line2\">\n                                  <span class=\"fr-ff-sheriff-txt\">sheriff</span><span class=\"fr-ff-will-txt\">will auto-complete</span>\n                                </div>\n                                <div class=\"fr-using-defaults-txt line3\">\n                                  <span class=\"fr-ff-andenter-txt\">& enter main app</span><span class=\"fr-ff-sheriff-txt shortly\">shortly</span>\n                                </div>\n                              </ion-col>\n                            </ion-row>\n                          </ion-grid>\n                        </div>\n                      </div>\n                    </div>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n    </div>\n    <!-- SLIDER NAV START /////////////////////////////////////////////////////////////////// -->\n    <div class=\"sheriff-frmodal-slider-section-wrapper nav\">\n        <ion-grid *ngIf=\"!dloadInProgress&&!usingDefaults\" class=\"sheriff-grid frmodal-slider-nav-grid\">\n            <ion-row *ngIf=\"thisSlideNo!==3\" class=\"sheriff-row frmodal-slider-nav-row\">\n                <ion-col size=\"2\" class=\"sheriff-col sheriff-frmodal-slider-nav-col1 prev-arrow\">\n                    <div *ngIf=\"!lockPrev\" class=\"sheriff-slider-nav-arrow-wrapper back-arrow-outter-wrapper\" (click)=\"slidePrev(slideWithNav)\">\n                        <div class=\"sheriff-slider-nav-arrow-wrapper forward-arrow-inner-wrapper\">\n                            <img class=\"sheriff-slider-arrow-icon frslidericon backicon\" src=\"../../../assets/img/sheriff-firstrun-backarrow.svg\">\n                        </div>\n                    </div>\n                </ion-col>\n                <ion-col size=\"8\" class=\"sheriff-col sheriff-frmodal-slider-nav-col2 navbtns\">\n                    <div *ngIf=\"thisSlideNo===1&&wpNoOf<1\" (click)=\"exitSheriff()\" class=\"firstrun-searchformissing-workplace-btn firstrun-btn firstrun-corenavbtn nowps exitsheriff ion-activatable ripple-parent\">\n                        <div class=\"fr-exitsheriff-btn-inner-wrap\">\n                          <ion-icon class=\"fr-exitsheriff-ico\" name=\"exit-outline\"></ion-icon>\n                          <div class=\"fr-existsheriff-btn-txt\">Exit Sheriff</div>\n                        </div>\n                        <ion-ripple-effect></ion-ripple-effect>\n                    </div>\n                    <div *ngIf=\"thisSlideNo===1&&wpNoOf===1\" (click)=\"useDefaults()\" class=\"firstrun-btn firstrun-corenavbtn skip ion-activatable ripple-parent\" id=\"firstrun-skipdefault-btn\">\n                      <div class=\"fr-defaultsskipsheriff-btn-inner-wrap\">\n                        <div class=\"fr-defaultsskip-btn-txt\">Use Default/Skip</div>\n                        <ion-icon class=\"fr-skip-ico\" name=\"play-skip-forward-outline\"></ion-icon>\n                      </div>\n                      <ion-ripple-effect></ion-ripple-effect>\n                    </div>\n                </ion-col>\n                <ion-col size=\"2\" class=\"sheriff-col sheriff-frmodal-slider-nav-col3 next-arrow\">\n                    <div  *ngIf=\"!lockNext\" class=\"sheriff-slider-nav-arrow-wrapper forward-arrow-outter-wrapper\" (click)=\"slideNext(slideWithNav)\">\n                        <div class=\"sheriff-slider-nav-arrow-wrapper forward-arrow-inner-wrapper\">\n                            <img class=\"sheriff-slider-arrow-icon frslidericon forwardicon\" src=\"../../../assets/img/sheriff-firstrun-fwdarrow.svg\">\n                        </div>\n                    </div>\n                </ion-col>\n            </ion-row>\n            <!-- FINAL NAV ROW ---------------------------------------------------------- -->\n            <ion-row *ngIf=\"thisSlideNo===3\" class=\"sheriff-row frmodal-slider-nav-row\">\n                <ion-col size=\"2\" class=\"sheriff-col sheriff-frmodal-slider-nav-col1 prev-arrow\">\n                    <div *ngIf=\"!lockPrev\" class=\"sheriff-slider-nav-arrow-wrapper back-arrow-outter-wrapper\" (click)=\"slidePrev(slideWithNav)\">\n                        <div class=\"sheriff-slider-nav-arrow-wrapper forward-arrow-inner-wrapper\">\n                            <img class=\"sheriff-slider-arrow-icon frslidericon backicon\" src=\"../../../assets/img/sheriff-firstrun-backarrow.svg\">\n                        </div>\n                    </div>\n                </ion-col>\n                <ion-col size=\"4\" class=\"sheriff-col sheriff-frmodal-slider-nav-col2 navbtns skip\"></ion-col>\n                <ion-col size=\"6\" class=\"sheriff-col sheriff-frmodal-slider-nav-col3 next-arrow lastslidealigncolcenter\">\n                    <ion-button (click)=\"firstRunCompleted()\" class=\"animate__animated animate__pulse animate__infinite animate__slow firstrun-btn firstrun-corenavbtn closemodal\" id=\"firstrun-closemodal-btn\">\n                        <div class=\"fr-letsgobtn-txt1\"><span class=\"start\">SAVE</span><span class=\"andwha\">&</span><span class=\"enter\">ENTER<span style=\"font-weight:300;padding-left:1px;\">></span></span>\n                        </div>\n                        <div class=\"fr-letsgobtn-txt2\">SHERIFF</div>\n                        <ion-icon class=\"letsgoico\" name=\"rocket-outline\"></ion-icon>\n                    </ion-button>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n    </div>\n    <!-- SLIDER NAV END /////////////////////////////////////////////////////////////////// -->\n    <!-- MODAL FEAT PICS START //////////////////////////////////////////////////////////// -->\n    <div id=\"fr-featimages-wrapper\">\n        <!-- SLIDE 1 BACKGROUND -->\n        <div class=\"fr-featimg-wrapper slide1\">\n            <div class=\"slide1skybacker\"></div>\n            <div class=\"stars\"></div>\n            <div class=\"clouds\"></div>\n            <div class=\"slide-bg slide1 fore\"></div>\n        </div>\n        <!-- SLIDE 2 BACKGROUND -->\n        <div class=\"fr-featimg-wrapper slide2\">\n            <div class=\"slide-bg slide2\">\n                <div class=\"stars2\"></div>\n                <div id=\"slide2-sunlayer\"></div>\n                <div class=\"slide-bg slide2 shootingstar\">\n                    <div class=\"shooting\">\n                        <div class=\"core\"></div>\n                        <div class=\"trail\"></div>\n                    </div>\n                </div>\n                <div class=\"clouds2\"></div>\n                <div class=\"slide-bg slide2 fore\"></div>\n            </div>\n        </div>\n        <!-- SLIDE 3 BACKGROUND -->\n        <div class=\"fr-featimg-wrapper slide3\">\n            <div class=\"slide-bg slide3\">\n                <div class=\"stars\"></div>\n                <div class=\"clouds3\"></div>\n                <div class=\"slide-bg slide3 fore\"></div>\n            </div>\n        </div>\n    </div>\n    <!-- MODAL FEAT PICS END //////////////////////////////////////////////////////////// -->\n</ion-content>";
      /***/
    },

    /***/
    19234:
    /*!******************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/inapp-pushnote/inapp-pushnote.page.html ***!
      \******************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<div class=\"inapp-pushnote-outter-wrapper\">\n  <div *ngIf=\"modalTitle!==null&&modalBody!null\" class=\"inapp-pushnote-inner-wrapper\">\n    <ion-grid class=\"sheriff-grid inapp-pushnote-grid header-grid\">\n      <ion-row class=\"sheriff-row inapp-pushnote-header-row\">\n          <ion-col size=\"12\" class=\"sheriff-col inapp-pushnote-header-col title-col\">\n              <div class=\"inapp-pushnote-header-title-wrapper\">{{modalTitle}}</div> \n          </ion-col>\n      </ion-row>\n    </ion-grid>\n    <ion-grid class=\"sheriff-grid inapp-pushnote-grid message-grid\">\n      <ion-row class=\"sheriff-row inapp-pushnote-row message-row\">\n        <ion-col class=\"sheriff-col inapp-pushnote-col message-col\">\n          <div class=\"sheriff-inapppushnote-div\">{{modalBody}}</div>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n    <ion-grid class=\"sheriff-grid inapp-pushnote-grid footer-grid\">\n      <ion-row class=\"sheriff-row inapp-pushnote-footer-row\">\n          <ion-col size=\"12\" class=\"sheriff-col inapp-pushnote-footer-col closebtn-col\">\n              <ion-button (click)=\"closeModal()\" class=\"sheriff-btn settings-alertschedule-close-btn\">\n                <ion-icon name=\"close\" class=\"sheriff-btn-ico settings-alertschedule-close-btn-ico\"></ion-icon>\n                <div class=\"sheriff-btn-txt settings-alertschedule-close-btn-txt\">close</div>\n              </ion-button>\n          </ion-col>          \n      </ion-row>\n    </ion-grid>\n  </div>\n</div>";
      /***/
    },

    /***/
    2729:
    /*!********************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modals/profilecsselect/profilecsselect.page.html ***!
      \********************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-content class=\"profile-csselectlist-listcontent\">\n    <div slot=\"fixed\" class=\"profile-csselectlist-headerwrapper\">\n        <ion-grid class=\"sheriff-grid profile-csselectlist-header-grid\">\n            <ion-row class=\"sheriff-row profile-csselectlist-header-title-row\">\n                <ion-col size=\"2\" class=\"sheriff-col profile-csselectlist-header-space-col\"></ion-col>\n                <ion-col size=\"8\" class=\"sheriff-col profile-csselectlist-header-title-col\">\n                    <div class=\"profile-csselectlist-header-title-wrapper\">{{labelProp}}</div>\n                </ion-col>\n                <ion-col size=\"2\" class=\"sheriff-col profile-csselectlist-header-close-col\">\n                  <ion-button (click)=\"cancelChange()\" class=\"sheriff-btn profile-csselectlist-close-btn\">\n                    <ion-icon class=\"sheriff-btn-ico css-selectlist-close-ico\" name=\"close\"></ion-icon>\n                  </ion-button>\n                </ion-col>\n            </ion-row>\n            <ion-row class=\"sheriff-row profile-csselectlist-header-current-selection-row\">\n                <ion-col size=\"12\" class=\"sheriff-col profile-csselectlist-currentselection-col\">\n                    <div class=\"profile-csselectlist-currentselection-wrapper\"><span *ngIf=\"noSelection===false&&selectedSubT!==null\">Selected: {{selectedSubT}}</span><span *ngIf=\"noSelection===true\">Select a {{labelProp}}</span></div>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n    </div>\n    <div class=\"profile-csselectlist-list-outterwrapper-div\">\n      <ion-searchbar slot=\"fixed\" *ngIf=\"labelProp==='Country'\" #cSearchBar class=\"sheriff-searchbar profile-clist-searchbar\" [type]=\"'text'\" [showClearButton]=\"true\" [searchIcon]=\"'search'\" [placeholder]=\"'Start typing...'\" [mode]=\"'md'\" [inputmode]=\"'search'\" [debounce]=\"250\" [animated]=\"false\" [value] (ionInput)=\"countrySearch(cSearchBar.value)\"></ion-searchbar>\n        <div *ngIf=\"labelProp==='Country'\" class=\"sheriff-countrysb-status-wrapper\">\n          <div *ngIf=\"sbCs<minSBCs\" class=\"sheriff-countrysb-xmorechars-txt\">{{minSBCs-sbCs}} more characters</div>\n          <div *ngIf=\"sbCs>=minSBCs&&!isSearch\" class=\"sheriff-countrysb-results-txt\">\n            <span [ngStyle]=\"{'color':listData.length===0?'var(--ion-color-danger)':'#848484'}\" class=\"sb-noresults\">found {{listData.length}} matches</span>\n          </div>\n          <div *ngIf=\"sbCs>=minSBCs&&isSearch\" class=\"sheriff-countrysb-status-spinner-wrapper\">\n            <ion-spinner *ngIf=\"\" style=\"--color:#848484\" class=\"sheriff-countrysb-search-spinner\" [name]=\"'dots'\" [duration]=\"500\"></ion-spinner>\n          </div>\n        </div>\n        <ion-list *ngIf=\"listData.length>0&&!isSearch\" class=\"profile-csselectlist-list\">\n            <ion-item *ngFor=\"let cs of listData\" (click)=\"selectItem(cs)\" [disabled]=\"cs.isChecked\" [button]=\"true\" [lines]=\"'none'\" [ngClass]=\"{'csitem-ischecked':cs.isChecked}\" class=\"sheriff-item profile-csselectlist-item\">\n              <ion-grid class=\"sheriff-grid profile-csselectlist-item-grid\">\n                <ion-row class=\"sheriff-row profile-csselectlist-item-row\">\n                  <ion-col size=\"2\" class=\"sheriff-col profile-csselectlist-item-col cb-col\">\n                    <ion-checkbox class=\"profile-csselectlist-item-checkbox\" [mode]=\"'ios'\" [checked]=\"cs.isChecked\"></ion-checkbox>\n                  </ion-col>\n                  <ion-col size=\"10\" class=\"sheriff-col profile-csselectlist-item-col label-col\">\n                    <div class=\"profile-csselectlist-item-label-wrapper\">\n                      {{cs.label}}\n                    </div>\n                  </ion-col>\n                </ion-row>\n              </ion-grid>\n            </ion-item>\n        </ion-list>\n    </div>\n    <div slot=\"fixed\" class=\"profile-csselectlist-footerwrapper\">\n        <ion-grid slot=\"fixed\" class=\"sheriff-grid profile-csselectlist-footer-grid\">\n            <ion-row class=\"sheriff-row profile-csselectlist-footer-row\">\n              <ion-col size=\"12\" class=\"sheriff-col profile-cssselectlist-footer-col\">\n                <div class=\"profile-csselect-list-footer-div-wrapper\"></div>\n              </ion-col>\n            </ion-row>\n        </ion-grid>\n    </div>\n</ion-content>";
      /***/
    },

    /***/
    29695:
    /*!*******************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/popovers/datepresets/datepresets.component.html ***!
      \*******************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-grid class=\"sheriff-grid popover-grid dppop-grid\">\n    <ion-row (click)=\"presetSelect(preset.name,i)\" *ngFor=\"let preset of presets;let i = index\" class=\"ion-activatable ripple-parent sheriff-row dppop-row preset{{i}} preset{{preset.name}}\" [ngClass]=\"{'presetselected':preset.selected}\">\n        <ion-col size=\"12\" class=\"sheriff-col dppop-col dppop-label-col ion-activatable ripple-parent\" [ngStyle]=\"{'color': (preset.selected) ? '#aaaaaa' : '#848484'}\">\n            <div class=\"dppop-label\">{{preset.label}}</div>\n            <ion-ripple-effect></ion-ripple-effect>\n        </ion-col>\n        <div class=\"pop-selected-bar\" [ngClass]=\"{'on':preset.selected}\"></div>\n    </ion-row>\n</ion-grid>";
      /***/
    },

    /***/
    43482:
    /*!*****************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/popovers/detailmenu/detailmenu.component.html ***!
      \*****************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<div class=\"detail-edit-main-wrapper\">\n    <ion-grid class=\"sheriff-grid detail-edit-popover\">\n        <ion-row class=\"sheriff-row detail-edit-row save-row ion-activatable ripple-parent\">\n            <ion-col class=\"sheriff-col detail-edit-col save-label-col\">\n                <div (click)=\"closePopover('save')\" class=\"detail-edit-item update\">\n                    <ion-icon class=\"detail-pop-ico save-ico\" name=\"save-outline\"></ion-icon>\n                    <div class=\"detail-edit-menu-item-label update\">Update</div>\n                    <ion-ripple-effect></ion-ripple-effect>\n                </div>\n            </ion-col>\n        </ion-row>\n        <ion-row class=\"sheriff-row sheriff-detail-edit-row discard-row ion-activatable ripple-parent\">\n            <ion-col class=\"sheriff-col detail-edit-col discard-label-col\">\n                <div (click)=\"closePopover('discard')\" class=\"detail-edit-item discard\">\n                    <ion-icon class=\"detail-pop-ico discard-ico\" name=\"trash-outline\"></ion-icon>\n                    <div class=\"detail-edit-menu-item-label discard\">Discard</div>\n                    <ion-ripple-effect></ion-ripple-effect>\n                </div>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</div>";
      /***/
    },

    /***/
    6318:
    /*!*********************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/popovers/peopledetail/peopledetail.component.html ***!
      \*********************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<div class=\"pop-peopledetail-main-wrapper\">\n    <ion-grid class=\"sheriff-grid pop-people-detail-grid header-grid\">\n        <ion-row class=\"sheriff-row pop-people-detail-header-row\">\n            <ion-col size=\"2\" class=\"sheriff-col pop-people-detail-header-col title-col\">\n\n                <div class=\"pop-people-detail-header-closebtn-wrapper\">\n                    <ion-button (click)=\"closePopover()\" class=\"sheriff-btn pop-people-detail-close-btn\">\n                        <ion-icon name=\"close\" class=\"sheriff-btn-ico pop-people-detail-close-btn\"></ion-icon>\n                    </ion-button>\n                </div>\n\n            </ion-col>\n            <ion-col size=\"7\" class=\"sheriff-col pop-people-detail-header-col confirmreq-col\">\n                <div class=\"pop-people-detail-header-title-wrapper\">Recipients:</div>\n            </ion-col>\n            <ion-col size=\"3\" class=\"sheriff-col pop-people-detail-header-col closebtn-col\">\n                <div class=\"pop-people-detail-header-confirmreq-wrapper\">\n                    <div class=\"confreqtext\">Confirm</div>\n                </div>\n\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n    <ion-list class=\"sheriff-list pop-people-detail-item-list\">\n        <ion-item *ngFor=\"let person of people;let i=index\" [ngClass]=\"{'pop-people-detail-isyou':person.Employee===myEmpId}\" class=\"sheriff-item pop-people-detail-item\">\n            <ion-grid class=\"sheriff-grid pop-people-detail-grid person-grid\">\n                <ion-row class=\"sheriff-row pop-people-detail-row person-row\">\n                    <ion-col size=\"2\" class=\"sheriff-col pop-people-detail-col person-col person-ava-col\">\n                        <div class=\"pop-person-ava-wrapper\">\n                            <img src=\"{{person.Photo}}\" class=\"pop-person-ava-img\">\n                        </div>\n                    </ion-col>\n                    <ion-col size=\"8\" class=\"sheriff-col pop-people-detail-col person-col person-name-col\">\n                        <div class=\"pop-person-name-wrapper\">\n                            {{person.DisplayName}}\n                        </div>\n                    </ion-col>\n                    <ion-col size=\"2\" class=\"sheriff-col pop-people-detail-col person-col person-hasconf-col\">\n                        <div *ngIf=\"!confReq\" class=\"pop-person-hasconfirm-wrapper notreq\">\n                            N/A\n                        </div>\n                        <div *ngIf=\"confReq\" class=\"pop-person-hasconf-wrapper\">\n                            <ion-icon *ngIf=\"pplConfStatus[i]===true\" style=\"color:var(--ion-color-success)\" class=\"sheriff-ico pop-person-hasconf-ico yes-ico\" name=\"checkmark\"></ion-icon>\n                            <ion-icon *ngIf=\"pplConfStatus[i]===false\" style=\"color:var(--ion-color-danger)\" class=\"sheriff-ico pop-person-hasconf-ico no-ico\" name=\"close\"></ion-icon>\n                            <ion-icon *ngIf=\"pplConfStatus[i]!==true&&pplConfStatus[i]!==false\" style=\"color:var(--ion-color-warning)\" class=\"sheriff-ico pop-person-hasconf-ico nk-ico\" name=\"help\"></ion-icon>\n                        </div>\n                    </ion-col>\n                </ion-row>\n            </ion-grid>\n        </ion-item>\n    </ion-list>\n</div>";
      /***/
    }
  },
  /******/
  function (__webpack_require__) {
    // webpackRuntimeModules

    /******/
    "use strict";
    /******/

    /******/

    var __webpack_exec__ = function __webpack_exec__(moduleId) {
      return __webpack_require__(__webpack_require__.s = moduleId);
    };
    /******/


    __webpack_require__.O(0, ["vendor"], function () {
      return __webpack_exec__(14431);
    });
    /******/


    var __webpack_exports__ = __webpack_require__.O();
    /******/

  }]);
})();
//# sourceMappingURL=main-es5.js.map