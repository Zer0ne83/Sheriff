{"version":3,"sources":["webpack:///src/app/tabs/tabtasks/tabtasks.module.ts","webpack:///src/app/tabs/tabtasks/tabtasks.page.ts","webpack:///src/app/tabs/tabtasks/tabtasks.page.scss","webpack:///src/app/tabs/tabtasks/tabtasks.page.html"],"names":["routes","path","component","TabTasksPage","TabTasksPageModule","NgModule","imports","CommonModule","FormsModule","IonicModule","RouterModule","NgCircleProgressModule","DirectivesModule","declarations","plt","router","logger","modalCtrl","sqlServ","syncServ","evServ","deputy","dT","detailServ","dbDataTbl","myPpl","progCirc","responsive","showTitle","showSubtitle","showUnits","percent","radius","outerStrokeWidth","showInnerStroke","outerStrokeColor","animation","backgroundPadding","animationDuration","preventRefreshPull","tLists","dbTaskItems","myTasks","myTasksToDo","myTasksDone","assTasks","assTasksAssigned","assTasksDone","totalMyTasksToDo","totalMyTasksDone","totalAssTasksAssigned","totalAssTasksDone","tTSegProps","tTDisabled","tTMode","tTScrollable","tTSwipeGesture","tTValue","tTSegBtns","MyTasksProps","disabled","layout","mode","type","value","AssTasksProps","alertMethods","phone","calendar","email","alertEvents","shift","task","tsheet","tTReorderGroupProps","roDisabled","beforeROIds","afterROIds","deleteMode","addTaskModalOpts","animated","showBackdrop","backdropDismiss","cssClass","TaskAddPage","keyboardClose","addTaskModalOpen","taskProg","assignToSelectAlertOpts","header","globalToDoTaskListArr","globalCompletedTaskListArr","globalCWArr","taskInputAdd","addEditTaskDueDate","unsortedToDoListArr","info","urlArr","url","split","tabKey","length","initAlertOpts","initPrefs","subscribe","pplArr","myObj","meObj","meAvatar","meAva","workAvatar","workAva","syncTasks","getSettings","getDSSett","aMs","alerts","options","aEs","ready","then","doTasksSync","setTimeout","fetchTasks","getAllTableItems","getAllTasksRes","console","log","values","locAllTs","sortdAllTs","i","formatTask","updateListCounts","rawTaskObj","rTO","SortOrder","Question","undefined","Comment","uEntryArr","filter","p","EmpId","UserEntry","pO","meEmpId","FirstName","LastName","charAt","DisplayName","Photo","uAssignedArr","UserResponsible","createD","Date","Created","format","DueTimestamp","dueD","Dut","nowUT","getUT","DurAsObj","TsCompleted","compD","nCompleted","push","lN","toLowerCase","slice","tLNo","ev","detail","togV","event","isRefreshing","refresher","target","headerProgress","refreshTasksData","rStage","destroy","list","index","tO","Id","addClass","nKeys","duTRes","nIsDone","opTxt","undoTask","undRes","Promise","resolve","doTask","dRes","duT","result","data","hasOwnProperty","trimList","t","replaceItem","showToast","removeClass","aTMOpts","me","my","ppl","myTListLen","assTListLen","create","addTaskModal","document","addEventListener","onWillDismiss","onDidDismiss","role","newT","insertSingleItem","present","tlI","delRes","dbRes","apiRes","listFns","deleteTask","delApiRes","deleteItem","delDbRes","roDis","tasksReorderGroup","togDis","v","newList","compStrOld","join","compStrNew","nTO","reorderTask","apiRORes","apiNTO","updateTaskSortOrder","dbRORes","bT","complete","aT","titleBar","animBarEnd","titleText","css","action","circProgEle","starEle","sLogoEle","startRoutine","finishRoutine","myAniCSS","incPercEaLoop","rotStarEaLoop","starRotCount","timedProgLoop","setInterval","clearInterval","theEle","aniName","aniDel","aniDur","aniEnd","eleEnd","doAni","aniStr","delStr","durStr","on","remove","Platform","Router","NGXLogger","ModalController","SQLiteService","SyncService","EventsService","DeputyService","DateTimeService","DetailService","ViewChild","IonReorderGroup","IonSegment","IonSegmentButton","Component","selector","template"],"mappings":"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","file":"src_app_tabs_tabtasks_tabtasks_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport { TabTasksPage } from './tabtasks.page';\nimport { DirectivesModule } from './../../directives/directives.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabTasksPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    NgCircleProgressModule.forRoot(),\n    DirectivesModule\n  ],\n  declarations: [TabTasksPage]\n})\nexport class TabTasksPageModule {}\n","import { EventsService } from './../../services/events.service';\nimport { SQLiteService } from './../../services/sqlite.service';\nimport { DetailService } from './../../services/detail.service';\nimport { DateTimeService } from 'src/app/services/datetime.service';\nimport { SyncService } from 'src/app/services/sync.service';\nimport { DeputyService } from 'src/app/services/deputy.service';\nimport { TaskAddPage } from 'src/app/modals/detail/task-add/task-add.page';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Platform, IonReorderGroup, IonSegment, ModalController, LoadingController, IonSegmentButton, IonContent, IonRefresher } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { NGXLogger } from 'ngx-logger';\nimport { AppUserSettings } from './../../services/appTypes';\nimport * as $ from 'jquery';\nimport * as _ from 'lodash';\n////////////////////////////////////////////////////////////////////////////////////////\n@Component({ selector: 'app-tabtasks', templateUrl: './tabtasks.page.html', styleUrls: ['./tabtasks.page.scss'] })\n////////////////////////////////////////////////////////////////////////////////////////\nexport class TabTasksPage implements OnInit {\n////////////////////////////////////////////////////////////////////////////////////////\n  @ViewChild(IonReorderGroup,{static:false}) tasksReorderGroup:IonReorderGroup;\n  @ViewChild(IonSegment,{static:false}) tabTasksSegment:IonSegment;\n  @ViewChild(IonSegmentButton,{static:false}) tTSegBtnMyTasks:IonSegmentButton;\n  @ViewChild(IonSegmentButton,{static:false}) tTSegBtnAssTasks:IonSegmentButton;\n  @ViewChild('tasksContent',{static:false}) tasksContent: IonContent;\n  @ViewChild('tasksRefresher') tasksRefresher:IonRefresher;\n  // Page/Tab, Init Prefs, Prog Circ, Refresher\n  tabKey:string;dbDataTbl:string='tasks';splashIsShowing:boolean;\n  myPpl:any[]=[];myObj:any;meObj:any;meEmpId:number;meAvatar:string;workAvatar:string;\n  progCirc:any={responsive:true,showTitle:false,showSubtitle:false,showUnits:false,percent:0,radius:56,outerStrokeWidth:4,showInnerStroke:false,outerStrokeColor:'#FF9800',animation:true,backgroundPadding:2,animationDuration:400};\n  refresher:any;isRefreshing:boolean;\n  preventRefreshPull:boolean=false;\n  // Task List/Data/DB\n  tLists:any[]=['MyTasksToDo','MyTasksDone','AssTasksAssigned','AssTasksDone'];\n  dbTaskItems:any[]=[];\n  myTasks:any[]=[];myTasksToDo:any[]=[];myTasksDone:any[]=[];\n  assTasks:any[]=[];assTasksAssigned:any[]=[];assTasksDone:any[]=[];\n  totalMyTasksToDo:number=0;totalMyTasksDone:number=0;totalAssTasksAssigned:number=0;totalAssTasksDone:number=0;\n  // Tasks Segment/Buttons\n  tTSegProps:any={tTDisabled:false,tTMode:'md',tTScrollable:false,tTSwipeGesture:true,tTValue:'mytasks',tTSegBtns:{MyTasksProps:{disabled:false,layout:'icon-start',mode:'md',type:'button',value:'mytasks'},AssTasksProps:{disabled:false,layout:'icon-start',mode:'md',type:'button',value:'asstasks'}}};\n  // Alerts\n  alertMethods:any={phone:null,calendar:null,email:null};\n  alertEvents:any={shift:null,task:null,tsheet:null};\n  // ReOrder Mode\n  tTReorderGroupProps:any={roDisabled:true};\n  beforeROIds:any[]=[];\n  afterROIds:any[]=[];\n  // Delete Mode\n  deleteMode:boolean=false;\n  // Add Task\n  addTaskModalOpts:any={animated:false,showBackdrop:false,backdropDismiss:false,cssClass:'tsheet-detail-modal-class',component:TaskAddPage,keyboardClose:true};\n  addTaskModalOpen:boolean=false;\n  // Task Prog\n  taskProg:boolean=false;\n  // Doofy\n  assignToSelectAlertOpts:any={cssClass:'quickSelectClass',header:'Assign Task To'};\n  taskAssignTo;\n  assignSelectedCWName;\n  assignSelectedValue;\n  myFirstName;\n  recentNoteCount;\n  segment;\n  myTasksSegmentActive;\n  assignedSegmentActive;\n  currentTasksObj;\n  globalToDoTaskListArr = [];\n  globalCompletedTaskListArr = [];\n  globalCWArr = [];\n  taskInputAdd = true;\n  taskInputEdit;\n  addEditTaskDueDate = '';\n  newTaskDateTime;\n  reorderTasks:any;\n  unsortedToDoListArr = [];\n////////////////////////////////////////////////////////////////////////////////////////\n  constructor(\n    private plt: Platform,\n    private router: Router,\n    private logger: NGXLogger,\n    private modalCtrl: ModalController,\n    private sqlServ: SQLiteService,\n    private syncServ: SyncService,\n    private evServ: EventsService,\n    private deputy: DeputyService,\n    private dT: DateTimeService,\n    private detailServ:DetailService\n  ) { }\n////////////////////////////////////////////////////////////////////////////////////////\n  async ngOnInit() { this.logger.info('[TabTasks|ngOnInit] ()...');\n    const urlArr=this.router.url.split('/');this.tabKey=urlArr[urlArr.length-1];\n    this.initAlertOpts();\n    this.initPrefs();\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  ionViewWillEnter() { this.logger.info('[TabTasks|ionViewWillEnter] ()...') }\n////////////////////////////////////////////////////////////////////////////////////////\n  ionViewDidEnter() { this.logger.info('[TabTasks|ionViewDidEnter] ()...');\n    this.evServ.subscribe('alertsStatus',()=>{this.evServ.subscribe('alertsStatus',()=>{this.initAlertOpts()})});\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async initPrefs() { this.logger.info('[TabTasks|initPrefs] ()...');\n    this.myPpl=this.detailServ.pplArr;this.myObj=this.detailServ.myObj;this.meObj=this.detailServ.meObj;this.meAvatar=this.detailServ.meAva;this.workAvatar=this.detailServ.workAva;\n    this.syncTasks('init');\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async initAlertOpts() { this.logger.info('[TabTasks|initAlertOpts] ()...');\n    const getDSSett:AppUserSettings|null=await this.detailServ.getSettings();\n    if(getDSSett!==null){\n      const aMs:any=getDSSett.alerts.options.alertMethods.value;const aEs:any=getDSSett.alerts.options.alertEvents.value;\n      this.alertMethods.phone=aMs.phone;this.alertMethods.calendar=aMs.calendar;this.alertMethods.email=aMs.email;\n      this.alertEvents.task=aEs.task;\n    }\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async syncTasks(mode:string) { this.logger.info('[TabTasks|syncTasks] ('+mode+')...');\n    if(mode==='init'){\n      this.plt.ready().then(async()=>{\n        await this.syncServ.doTasksSync('init');\n        setTimeout(()=>{this.fetchTasks()},250);\n      })\n    }else{\n      this.dbTaskItems=[];\n      await this.syncServ.doTasksSync('refresh');\n      setTimeout(()=>{this.fetchTasks()},250)\n    }\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async fetchTasks() { this.logger.info('[TabTasks|initFetchTasks] ()...');\n    const getAllTasksRes:any=await this.sqlServ.getAllTableItems('tasks');\n    console.log(getAllTasksRes.values);\n    if(getAllTasksRes.values.length>0){const locAllTs:any[]=getAllTasksRes.values;const sortdAllTs:any[]=_.sortBy(locAllTs,'SortOrder');\n    for(let i=0;i<sortdAllTs.length;i++){this.formatTask(sortdAllTs[i])};\n    this.updateListCounts();\n    }else{for(let i=0;i<this.tLists.length;i++){this['total'+this.tLists[i]]=0}}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  formatTask(rawTaskObj:any):any { this.logger.info('[TabTasks|formatTask] (taskObject)...');\n    let rTO:any=rawTaskObj;\n    console.log('Start SortOrder: '+rTO.SortOrder);\n    rTO.Question===null||rTO.Question===undefined||rTO.Question===''||rTO.Question.length===0?rTO.Question=null:rTO.Question=rTO.Question;\n    rTO.Comment===null||rTO.Comment===undefined||rTO.Comment===''||rTO.Comment.length===0?rTO.Comment=null:rTO.Comment=rTO.Comment;\n    const uEntryArr:any[]=this.myPpl.filter(p=>p.EmpId===rTO.UserEntry);\n    if(uEntryArr.length>0){\n      const pO:any=uEntryArr[0];\n      if(pO.EmpId===this.meEmpId){rTO['nUserEntry']='You'}\n      else{\n        if(pO.FirstName.length>0&&pO.LastName.length>0){rTO['nUserEntry']=pO.FirstName+' '+pO.LastName.charAt(0)+'.'}\n        else{pO.DisplayName.length>0?rTO['nUserEntry']=pO.DisplayName:rTO['nUserEntry']='NK'}\n      };\n      rTO['nFromAvatar']=pO.Photo\n    }else{rTO['nUserEntry']='NK';rTO['nFromAvatar']='./../../assets/img/sheriff-tsheet-detail-unknown-sv-ico.png'};\n    const uAssignedArr:any[]=this.myPpl.filter(p=>p.EmpId===rTO.UserResponsible);\n    if(uAssignedArr.length>0){\n      const pO:any=uAssignedArr[0];\n      if(pO.EmpId===this.meEmpId){rTO['nAssigned']='You'}\n      else{\n        if(pO.FirstName.length>0&&pO.LastName.length>0){rTO['nAssigned']=pO.FirstName+' '+pO.LastName.charAt(0)+'.'}\n        else{pO.DisplayName.length>0?rTO['nAssigned']=pO.DisplayName:rTO['nAssigned']='NK'}\n      };\n      rTO['nAssignedAvatar']=pO.Photo\n    }else{rTO['nAssigned']='NK';rTO['nAssignedAvatar']='./../../assets/img/sheriff-tsheet-detail-unknown-sv-ico.png'};\n    const createD:Date=new Date(rTO.Created);rTO['nCreated']=this.dT.format(createD,'EEE, d MMM yyyy');\n    if(rTO.DueTimestamp!==-1&&rTO.DueTimestamp!==null&&rTO.DueTimestamp!==undefined&&rTO.DueTimestamp!==''){const dueD:Date=this.dT.Dut(rTO.DueTimestamp);rTO['nDue']=this.dT.format(dueD,'EEE, d MMM yyyy');const nowUT:number=this.dT.getUT(new Date());if(nowUT>rTO.DueTimestamp){rTO['nIsLate']=true;rTO['nOverDue']=this.dT.DurAsObj(new Date(),dueD)}else{rTO['nIsLate']=false}};\n    if(rTO.TsCompleted===-1||rTO.TsCompleted===null||rTO.TsCompleted===undefined||rTO.TsCompleted===''){rTO['nIsDone']=false}else{const compD:Date=this.dT.Dut(rTO.TsCompleted);rTO.nCompleted=this.dT.format(compD,'EEE, d MMM yyyy');rTO['nIsDone']=true};\n    if(rTO.UserEntry===rTO.UserResponsible){if(rTO['nIsDone']){this.myTasksDone.push(rTO)}else{this.myTasksToDo.push(rTO)}}\n    else{if(rTO['nIsDone']){this.assTasksDone.push(rTO)}else{this.assTasksAssigned.push(rTO)}}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  updateListCounts() { this.logger.info('[TabTasks|updateListCount] ()...');\n    for(let i=0;i<this.tLists.length;i++){const lN:string=this.tLists[i].charAt(0).toLowerCase()+this.tLists[i].slice(1);const tLNo:number=this[lN].length;this['total'+this.tLists[i]]=tLNo}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  tTSegChanged(ev:any) {\n    this.logger.info('[TabTasks|segmentChanged] ('+ev.detail.value+')...');\n    this.tTSegProps.tTValue=ev.detail.value;\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  disableRefresher(togV:boolean) { this.preventRefreshPull=togV }\n////////////////////////////////////////////////////////////////////////////////////////\n  async doRefresh(event) { this.logger.info('[TabTasks|doRefresh] (event)...');\n    this.isRefreshing=true;\n    this.refresher=event.target;\n    this.headerProgress('manual','start',null);\n    this.refreshTasksData()\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async refreshTasksData() { this.logger.info('[TabTasks|refreshTasksData] ()...');\n    let rStage:number=0;\n    this.logger.info('[TabTasks|refreshTasksData] (PROGRESS LISTEN SUBSCRIBED)...');\n    this.evServ.subscribe('refreshTasksProg',()=>{rStage+=25;this.logger.info('[TabTasks|refreshTasksData] (PROGRESS STAGE TRIGGER) STAGE #'+rStage);\n      if(rStage<100){this.headerProgress('manual','change',rStage)}\n      else{this.evServ.destroy('refreshTasksProg');this.headerProgress('manual','finish',null)}\n    });\n    setTimeout(()=>{this.syncServ.doTasksSync('refresh')},250);\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async changeCheckStatus(list:string,index:number,tO:any){ this.logger.info('[TabTasks|changeCheckStatus] ('+list+','+index+',taskObj)...');\n    if(this.tTReorderGroupProps.roDisabled&&!this.deleteMode){\n      this.taskProg=true;\n      $('taskitem-'+tO.Id).addClass('taskgreyed');\n      let opTxt:string;const nKeys:any[]=['nCreated','nDue','nIsLate','nIsDone','nCompleted'];\n      const duTRes=async():Promise<any>=>{\n        if(tO.nIsDone){opTxt='TO DO';const undRes:any=await this.deputy.undoTask(tO.Id,tO.UserResponsible);return Promise.resolve(undRes)}\n        else{opTxt='COMPLETED';const dRes:any=await this.deputy.doTask(tO.Id,tO.UserResponsible);return Promise.resolve(dRes)}};\n      const duT:any=await duTRes();\n      if(duT.result){\n        for(let i=0;i<nKeys.length;i++){if(duT.data.hasOwnProperty(nKeys[i])){delete duT.data[nKeys[i]]}};\n        const trimList:any[]=this[list].filter(t=>t.Id!==tO.Id);this[list]=trimList;\n        this.sqlServ.replaceItem('tasks','Id',duT.data.Id,duT.data);\n        this.formatTask(duT.data);this.evServ.showToast('success','Task Updated: '+opTxt);\n        this.logger.info('[TabTasks|changeCheckStatus] (Success) Update Task Succeeded @ API.');\n        this.updateListCounts();\n        $('taskitem-'+tO.Id).removeClass('taskgreyed');\n        this.taskProg=false\n      }else{\n        this.taskProg=false;\n        $('taskitem-'+tO.Id).removeClass('taskgreyed');\n        this.evServ.showToast('error','Task Update Error');\n        this.logger.info('[TabTasks|changeCheckStatus] (Error) Task Failed @ API.')\n      } \n    }else{this.logger.info('[TabTasks|changeCheckStatus] Ignoring While in Reorder/Delete Mode.')}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async addTask() { this.logger.info('[TabTasks|addTask] ()...');\n    let aTMOpts=this.addTaskModalOpts;\n    aTMOpts['componentProps']={me:this.meObj,my:this.myObj,meAva:this.meAvatar,workAva:this.workAvatar,meEmpId:this.meEmpId,ppl:this.myPpl,myTListLen:this.myTasksToDo.length,assTListLen:this.assTasksAssigned.length};\n    const addTaskModal:any=await this.modalCtrl.create(aTMOpts);\n    document.addEventListener('ionModalDidPresent',()=>{this.addTaskModalOpen=true;this.logger.info('[TabTasks|AddTask] (ionModalDidPresent)')});\n    addTaskModal.onWillDismiss().then(()=>{this.addTaskModalOpen=false;this.logger.info('[TabTasks|AddTask] (ionModalWillDismiss)')});\n    addTaskModal.onDidDismiss().then(({data,role})=>{this.logger.info('[TabTasks|AddTask] (ionModalDidDismiss) >>> (Data): '+data+' >>> (Role): '+role);\n      if(role==='cancel'){this.logger.info('[TabTasks|addTask] (CANCELLED) User Cancelled - No Data.');this.evServ.showToast('warning','Cancelled: Add New Task')}\n      else{const newT:any=data;\n        this.evServ.showToast('success','Success: Added Task #'+newT.Id);\n        this.formatTask(newT);\n        this.sqlServ.insertSingleItem('tasks',newT);\n        this.logger.info('[TabTasks|addTask] (Success) Added New Task #'+newT.Id)\n      }\n    });\n    return await addTaskModal.present();\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  toggleDeleteMode() { this.logger.info('[TabTasks|toggleDeleteMode] ()...');\n    if(this.tTReorderGroupProps.roDisabled){this.deleteMode?this.deleteMode=false:this.deleteMode=true}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async deleteTask(list:string,tlI:number,tO:any) { this.logger.info('[TabTasks|deleteTask] ('+list+','+tlI+',taskObj)...');\n    this.taskProg=true;\n    $('taskitem-'+tO.Id).addClass('taskgreyed');\n    const delRes=(dbRes:boolean,apiRes)=>{\n      const listFns=()=>{const trimList:any[]=this[list].filter(t=>t.Id!==tO.Id);this[list]=trimList;this.updateListCounts()};\n      if(dbRes&&apiRes){listFns();this.evServ.showToast('success','Task Deleted - OK')}\n      else{\n        if(!dbRes&&!apiRes){this.evServ.showToast('error','Task Delete Errors (DB+API)')}\n        else if(!dbRes&&apiRes){listFns();this.evServ.showToast('warning','Task Delete Error (DB)')}\n        else{listFns();this.evServ.showToast('warning','Task Delete Error (API)')}\n      };\n      this.taskProg=false;\n      $('taskitem-'+tO.Id).removeClass('taskgreyed');\n    };\n    const delApiRes:any=await this.deputy.deleteTask(tO.Id);\n    const delDbRes:boolean=await this.sqlServ.deleteItem('tasks','Id',tO.Id);\n    delRes(delApiRes.result,delDbRes)\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async toggleReorderList(){ this.logger.info('[TabTasks|reorderList] ()...');\n    console.log('On Click Reorder Btn');console.log(this.myTasksToDo);\n    const roDis=():boolean=>{return this.tasksReorderGroup.disabled};\n    const togDis=(v:boolean)=>{this.tasksReorderGroup.disabled=v;this.tTReorderGroupProps.roDisabled=v};\n    if(roDis()){ // ENABLE REORDER\n      togDis(false);\n      if(this.beforeROIds.length>0){this.beforeROIds=[]};\n      for(let i=0;i<this.myTasksToDo.length;i++){this.beforeROIds.push(this.myTasksToDo[i].Id)};\n    }else{ // DISABLE REORDER\n      togDis(true);\n      const newList:any[]=this.myTasksToDo;\n      if(this.afterROIds.length>0){this.afterROIds=[]};\n      for(let i=0;i<newList.length;i++){this.afterROIds.push(newList[i].Id)};\n      const compStrOld:string=this.beforeROIds.join(',');console.log(compStrOld);\n      const compStrNew:string=this.afterROIds.join(',');console.log(compStrNew);\n      if(compStrNew===compStrOld){this.logger.info('[TabTasks|reorderList|Disable] (SAME ORDER) - Not Saving/Chaning.')}\n      else{\n        this.logger.info('[TabTasks|reorderList|Disable] (NEW ORDER) - Doing Save @ API/DB Level...');\n        for(let i=0;i<newList.length;i++){ const nTO:any=newList[i];\n          const apiRORes:any=await this.deputy.reorderTask(this.meEmpId,nTO);\n          if(apiRORes.result){ const apiNTO:any=apiRORes.data;\n            this.logger.info('[TabTasks|toggleReorderList|API Update Order] (SUCCESS): '+apiNTO.Question+' (ID #'+apiNTO.Id+') - API Order = '+apiNTO.SortOrder);\n            const dbRORes:boolean=await this.sqlServ.updateTaskSortOrder(apiNTO.Id,apiNTO.SortOrder);\n            if(dbRORes){this.logger.info('[TabTasks|toggleReorderList|DB Update Order] (SUCCESS) Updated Order @ DB - OK')}\n            else{this.logger.info('[TabTasks|toggleReorderList|DB Update Order] (ERROR) Updating Order @ DB - BAD')}\n          }else{this.logger.info('[TabTasks|toggleReorderList|API Update Order] (ERROR): '+apiRORes.data)}\n        }\n      }\n    }\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async doReorder(event) {\n    this.logger.info('Before Reorder: ');\n    for(let i=0;i<this.myTasksToDo.length;i++){const bT:any=this.myTasksToDo[i];this.logger.info('['+i+'] '+bT.Question+' - Order: '+bT.SortOrder)};\n    this.myTasksToDo=event.detail.complete(this.myTasksToDo);\n    for(let i=0;i<this.myTasksToDo.length;i++){this.myTasksToDo[i].SortOrder=i};\n    this.logger.info('After Reorder: ');\n    for(let i=0;i<this.myTasksToDo.length;i++){const aT:any=this.myTasksToDo[i];this.logger.info('['+i+'] '+aT.Question+' - Order: '+aT.SortOrder)};\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  ionViewWillLeave() { this.logger.info('[TabTasks|ionViewWillLeave] ()...') }\n////////////////////////////////////////////////////////////////////////////////////////\n  ionViewDidLeave() { this.logger.info('[TabTasks|ionViewDidLeave] ()...');\n    const titleBar=$('.hcl-leftbar.'+this.tabKey);const animBarEnd=$('.sheriff-title-leftanimbar-inner.'+this.tabKey);const titleText=$('.sheriff-title.tight-wrap.'+this.tabKey);$(titleBar).css('width','0');$(animBarEnd).removeClass('showing');$(titleText).removeClass('scrolledin');$(titleBar).removeClass('dimmed')\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  headerProgress(mode, action, data) {\n    this.logger.info('[TabTasks|headerProgress] (' + mode + ', ' + action + ', ' + data + ')...');\n    const circProgEle = $('.hcl-progcirc.' + this.tabKey); const starEle = $('.hcl-star.' + this.tabKey); const sLogoEle = $('.hcl-slogo.' + this.tabKey);\n    const startRoutine = () => { $(sLogoEle).css('transform', 'scale(.9)'); this.progCirc.percent = 0; $(starEle).css('transform', 'rotate(0deg)'); if ($(circProgEle).css('display', 'none')) { $(circProgEle).css('display', 'unset') } this.progCirc.animation = false; this.progCirc.outerStrokeColor = '#FF9800'; }\n    const finishRoutine = () => { $(sLogoEle).css('transform', 'unset'); this.progCirc.percent = 100; $(starEle).css('transform', 'rotate(0deg)'); this.progCirc.outerStrokeColor = '#4caf50'; this.myAniCSS('.hcl-progcirc.' + this.tabKey, 'fadeOut', 0, 1400, 'remove', 'hide'); this.refresher.complete(); this.isRefreshing = false; }\n    if (mode === 'manual') {\n      if(action==='start'){startRoutine();this.progCirc.animation=true}\n      else if(action==='change'){this.progCirc.percent=data;$(starEle).css('transform','rotate('+((360*data)/100)+')deg')}\n      else if(action==='finish'){finishRoutine();this.progCirc.animation=false}\n    }\n    if (mode === 'timed') { startRoutine(); const incPercEaLoop = (20 / data) * 1000; const rotStarEaLoop = (72 / data) * 1000; let starRotCount = 0; const timedProgLoop = setInterval(() => { this.progCirc.percent += incPercEaLoop; starRotCount += rotStarEaLoop; $(starEle).css('transform', 'rotate(' + starRotCount + 'deg)'); if (this.progCirc.percent >= 100) { clearInterval(timedProgLoop); finishRoutine(); } }, 200); }\n  }\n //////////////////////////////////////////////////////////////////////////////////////// \n  myAniCSS(theEle, aniName, aniDel, aniDur, aniEnd, eleEnd) { // #myElement, tada, 0-1500, 0-1500, keep/remove, show/hide/remove\n    this.logger.info('[TabTasks|myAniCSS] (' + theEle + ', ' + aniName + ', ' + aniDel + ', ' + aniDur + ', ' + aniEnd + ', ' + eleEnd + ')...');\n    const doAni = () => new Promise((resolve) => {\n      const aniStr = 'animate__animated animate__' + aniName; const delStr = 'animDel-' + aniDel; const durStr = 'animDur-' + aniDur;\n      $(theEle).on('animationend', () => { \n        if ( aniEnd === 'remove' ) { $(theEle).removeClass(delStr).removeClass(durStr).removeClass(aniStr); }\n        if ( eleEnd === 'remove' ) { $(theEle).remove(); }\n        if ( eleEnd === 'hide' ) { $(theEle).css('display', 'none'); }\n        resolve(true);\n      });\n      if ( aniDel > 0 ) { $(theEle).addClass(delStr); }\n      if ( aniDur > 0 ) { $(theEle).addClass(durStr); }\n      if ( $(theEle).length > 0 ) { $(theEle).addClass(aniStr); }\n    });\n    doAni();\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YWJ0YXNrcy5wYWdlLnNjc3MifQ== */\";","export default \"<!-- TAB-PAGE MAIN HEADER - STARTS >>> -->\\n<ion-header class=\\\"sheriff-header sheriff-tabpage-header\\\">\\n    <ion-toolbar class=\\\"sheriff-toolbar\\\">\\n        <div class=\\\"sheriff-header-background-wrapper\\\">\\n            <div class=\\\"sheriff-header-droidstatus-padding-wrapper\\\"></div>\\n            <div class=\\\"sheriff-header-background-inner-wrapper\\\">\\n                <ion-grid class=\\\"sheriff-grid sheriff-page-header-grid\\\">\\n                    <ion-row class=\\\"sheriff-row sheriff-page-header-row\\\">\\n                        <ion-col class=\\\"sheriff-col sheriff-page-header-col left-col tabtasks\\\">\\n                            <div class=\\\"sheriff-title-leftanimbar-wrapper hcl-leftbar tabtasks\\\">\\n                                <div class=\\\"sheriff-title-leftanimbar-inner tabtasks\\\"></div>\\n                            </div>\\n                            <div class=\\\"sheriff-header-toolbar-btn-wrapper left-side\\\">\\n                                <div class=\\\"sheriff-page-title sheriff-heading-sansman hcl-title tabtasks\\\">\\n                                    <div class=\\\"sheriff-title tight-wrap tabtasks\\\">Tasks</div>\\n                                </div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col class=\\\"sheriff-col sheriff-page-header-col middle-logo-col2\\\">\\n                            <div class=\\\"sheriff-page-header-logo-wrapper\\\">\\n                                <div class=\\\"sheriff-page-header-logo-inner-wrapper\\\">\\n                                    <div class=\\\"sheriff-page-header-logo-highlight-layer hcl-ring tabtasks\\\"></div>\\n                                    <div id=\\\"sheriff-circle-progress-header-wrapper\\\" class=\\\"sheriff-progress-circle tabtasks hcl-progcirc tabtasks\\\">\\n                                        <circle-progress [responsive]=progCirc.responsive [showTitle]=progCirc.showTitle [showSubtitle]=progCirc.showSubtitle [showUnits]=progCirc.showUnits [percent]=progCirc.percent [radius]=progCirc.radius [outerStrokeWidth]=progCirc.outerStrokeWidth [showInnerStroke]=progCirc.showInnerStroke\\n                                            [outerStrokeColor]=progCirc.outerStrokeColor [animation]=progCirc.animation [backgroundPadding]=progCirc.backgroundPadding [animationDuration]=progCirc.animationDuration></circle-progress>\\n                                    </div>\\n                                    <img [ngClass]=\\\"{'lilblur-star':taskProg}\\\" src=\\\"../../../assets/img/loadingstar.png\\\" class=\\\"sheriff-page-header-starbadge-img hcl-star tabtasks\\\">\\n                                    <img [ngClass]=\\\"{'lilrotate-s':taskProg}\\\" src=\\\"../../../assets/img/slogo-w.png\\\" class=\\\"sheriff-page-header-main-logo-img hcl-slogo tabtasks\\\">\\n                                </div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col class=\\\"sheriff-col sheriff-page-header-col right-menubtns-col3\\\">\\n                            <ion-grid class=\\\"sheriff-grid tab-header-action-btn-grid tasks\\\">\\n                                <ion-row class=\\\"sheriff-row tab-header-action-btn-row tasks\\\">\\n                                    <ion-col class=\\\"sheriff-col tab-header-action-btn-col tasks reorder-btn-col\\\">\\n                                        <ion-button (click)=\\\"toggleReorderList()\\\" [disabled]=\\\"tTSegProps.tTValue==='asstasks'||deleteMode\\\" [ngClass]=\\\"{'headbtn-ro-active':!this.tTReorderGroupProps.roDisabled}\\\" class=\\\"sheriff-trans-btn tab-header-action-btn tasks reorder-btn\\\">\\n                                            <ion-icon *ngIf=\\\"this.tTReorderGroupProps.roDisabled\\\" class=\\\"sheriff-trans-btn-ico header-opt-btn-ico reorder-btn-ico\\\" name=\\\"shuffle\\\"></ion-icon>\\n                                            <ion-icon *ngIf=\\\"!this.tTReorderGroupProps.roDisabled\\\" class=\\\"sheriff-trans-btn-ico header-opt-btn-ico reorder-btn-ico close\\\" name=\\\"checkmark\\\"></ion-icon>\\n                                        </ion-button>\\n                                    </ion-col>\\n                                    <ion-col class=\\\"sheriff-col tab-header-action-btn-col tasks share-btn-col\\\">\\n                                        <ion-button (click)=\\\"toggleDeleteMode()\\\" [disabled]=\\\"!this.tTReorderGroupProps.roDisabled\\\" [ngClass]=\\\"{'headbtn-del-active':deleteMode}\\\" class=\\\"sheriff-trans-btn tab-header-action-btn tasks share-btn\\\">\\n                                            <ion-icon *ngIf=\\\"!deleteMode\\\" class=\\\"sheriff-trans-btn-ico header-opt-btn-ico share-btn-ico\\\" name=\\\"create\\\"></ion-icon>\\n                                            <ion-icon *ngIf=\\\"deleteMode\\\" class=\\\"sheriff-trans-btn-ico header-opt-btn-ico share-btn-ico close\\\" name=\\\"close\\\"></ion-icon>\\n                                        </ion-button>\\n                                    </ion-col>\\n                                    <ion-col class=\\\"sheriff-col tab-header-action-btn-col tasks main-menu-btn-col\\\">\\n                                        <div class=\\\"sheriff-header-toolbar-btn-wrapper right-side\\\">\\n                                            <div class=\\\"sheriff-menu-button-wrapper\\\">\\n                                                <ion-menu-button class=\\\"sheriff-menu-button tabtasks\\\" autoHide=\\\"false\\\">\\n                                                    <img src=\\\"../../../assets/img/sheriff-mainmenu-s.png\\\" class=\\\"sheriff-mainmenuico\\\">\\n                                                </ion-menu-button>\\n                                            </div>\\n                                        </div>\\n                                    </ion-col>\\n                                </ion-row>\\n                            </ion-grid>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </div>\\n        </div>\\n    </ion-toolbar>\\n</ion-header>\\n<!-- TAB-PAGE MAIN HEADER - ENDS <<< -->\\n<!-- TAB-PAGE MAIN CONTENT WRAPPER - STARTS >>> -->\\n<ion-content class=\\\"main-tabtasks-content-wrapper\\\" [scrollEvents]=\\\"false\\\">\\n    <!-- PAGE REFRESHER - STARTS >>> -->\\n    <ion-refresher #tasksRefresher class=\\\"sheriff-refresher tabs tasks\\\" slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\" disabled=\\\"{{preventRefreshPull}}\\\">\\n        <div class=\\\"sheriff-refresher-noise-wrapper\\\">\\n            <ion-refresher-content class=\\\"sheriff-refresher-content-class\\\" pullingIcon=\\\"arrow-down-circle\\\" refreshingSpinner=\\\"dots\\\"></ion-refresher-content>\\n        </div>\\n    </ion-refresher>\\n    <!-- PAGE REFRESHER - ENDS <<< -->\\n    <div class=\\\"sheriff-tabtasks-mainpage-section-wrapper top-section\\\">\\n        <!-- TAB-TASKS CONTENT HEADING - STARTS >>> -->\\n        <div slot=\\\"fixed\\\" class=\\\"sheriff-tabcontent-mainheading-wrapper tasks\\\">\\n            <ion-grid class=\\\"sheriff-grid sheriff-tabcontent-header-grid tasks\\\">\\n                <ion-row class=\\\"sheriff-row sheriff-tabcontent-header-row row1 tasks\\\">\\n                    <ion-col size=\\\"3\\\" class=\\\"sheriff-col sheriff-tabcontent-header-col col1 tasks\\\">\\n                        <div *ngIf=\\\"deleteMode\\\" class=\\\"tasks-editmode-header-txt-wrapper left\\\">edit mode</div>\\n                        <div *ngIf=\\\"!tTReorderGroupProps.roDisabled\\\" class=\\\"tasks-reordermode-header-txt-wrapper left\\\">reorder mode</div>\\n                    </ion-col>\\n                    <ion-col size=\\\"6\\\" class=\\\"sheriff-col sheriff-tabcontent-header-col col2 tasks\\\">\\n                        <img class=\\\"sheriff-reflect-title\\\" src=\\\"../../assets/img/sheriff-reflecttitle-tasks.png\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"3\\\" class=\\\"sheriff-col sheriff-tabcontent-header-col col3 sheets\\\">\\n                        <div *ngIf=\\\"deleteMode\\\" class=\\\"tasks-editmode-header-txt-wrapper right\\\">edit mode</div>\\n                        <div *ngIf=\\\"!tTReorderGroupProps.roDisabled\\\" class=\\\"tasks-reordermode-header-txt-wrapper right\\\">reorder mode</div>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-grid>\\n        </div>\\n        <!-- TAB-TASKS CONTENT HEADING - ENDS <<< -->\\n        <!-- TAB-TASKS SEGMENT SWITCHER - STARTS >>> -->\\n        <ion-segment slot=\\\"fixed\\\" #tabTasksSegment [disabled]=\\\"tTSegProps.tTDisabled\\\" [mode]=\\\"tTSegProps.tTMode\\\" [scrollable]=\\\"tTSegProps.tTScrollable\\\" [swipeGesture]=\\\"tTSegProps.tTSwipeGesture\\\" [value]=\\\"tTSegProps.tTValue\\\" (ionChange)=\\\"tTSegChanged($event)\\\"\\n            class=\\\"sheriff-segment tt-segment\\\">\\n            <ion-segment-button #tTSegBtnMyTasks [disabled]=\\\"tTSegProps.tTSegBtns.MyTasksProps.disabled\\\" [layout]=\\\"tTSegProps.tTSegBtns.MyTasksProps.layout\\\" [mode]=\\\"tTSegProps.tTSegBtns.MyTasksProps.mode\\\" [type]=\\\"tTSegProps.tTSegBtns.MyTasksProps.type\\\" [value]=\\\"tTSegProps.tTSegBtns.MyTasksProps.value\\\"\\n                class=\\\"sheriff-segment-button tt-segment-button mytasks-btn\\\">\\n                <div class=\\\"sheriff-icon-wrapper tt-segment-button-ico-label-wrapper mytasks-ico-label-wrapper\\\">\\n                    <ion-icon class=\\\"sheriff-icon tt-segment-button-ico mytasks-ico\\\" name=\\\"person\\\"></ion-icon>\\n                    <div class=\\\"sheriff-label tt-segment-label-txt mytasks-label-txt\\\">My Tasks<span class=\\\"tt-seg-total mytasks\\\">({{myTasksToDo.length+myTasksDone.length}})</span></div>\\n                </div>\\n            </ion-segment-button>\\n            <ion-segment-button #tTSegBtnAssTasks [disabled]=\\\"tTSegProps.tTSegBtns.AssTasksProps.disabled\\\" [layout]=\\\"tTSegProps.tTSegBtns.AssTasksProps.layout\\\" [mode]=\\\"tTSegProps.tTSegBtns.AssTasksProps.mode\\\" [type]=\\\"tTSegProps.tTSegBtns.AssTasksProps.type\\\" [value]=\\\"tTSegProps.tTSegBtns.AssTasksProps.value\\\"\\n                class=\\\"sheriff-segment-button tt-segment-button asstasks-btn\\\">\\n                <div class=\\\"sheriff-icon-wrapper tt-segment-button-ico-label-wrapper asstasks-ico-label-wrapper\\\">\\n                    <ion-icon class=\\\"sheriff-icon tt-segment-button-ico asstasks-ico\\\" name=\\\"people\\\"></ion-icon>\\n                    <div class=\\\"sheriff-label tt-segment-label-txt asstasks-label-txt\\\">Assigned<span class=\\\"tt-seg-total asstasks\\\">({{assTasksAssigned.length+assTasksDone.length}})</span></div>\\n                </div>\\n            </ion-segment-button>\\n        </ion-segment>\\n    </div>\\n    <ion-content [scrollEvents]=\\\"true\\\" class=\\\"sheriff-content tab-content tasks\\\" #tasksContent (ionScrollStart)=\\\"disableRefresher(true)\\\" (ionScrollEnd)=\\\"disableRefresher(false)\\\">\\n        <!-- MAIN LIST WRAPPER -->\\n        <div class=\\\"sheriff-tabcontent-itemlistcontent-wrapper tasks\\\">\\n            <!-- TAB-TASKS SEGMENT SWITCHER - ENDS <<< -->\\n            <!-- MY-TASKS LIST WRAPPER - STARTS >>> -->\\n            <div *ngIf=\\\"tTSegProps.tTValue==='mytasks'\\\" class=\\\"tabtasks-list-wrapper mytasks\\\">\\n                <ion-grid class=\\\"sheriff-grid tasks-group-grid mytasks todo\\\">\\n                    <ion-row class=\\\"sheriff-row tasks-group-row mytasks todo\\\">\\n                        <ion-col size=\\\"6\\\" class=\\\"sheriff-col tasks-group-col mytasks todo label-txt-ico-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalMyTasksToDo>0?'#848484':'#565656'}\\\" class=\\\"tasks-group-label-txt-ico-wrapper mytasks todo\\\">\\n                                <ion-icon class=\\\"sheriff-tasks-group-label-ico mytasks todo\\\" name=\\\"pin\\\"></ion-icon>\\n                                <div class=\\\"sheriff-tasks-group-label-txt mytasks todo\\\">to do</div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"4\\\" class=\\\"sheriff-col tasks-group-col mytasks todo alertsstatus-col\\\">\\n                          <div class=\\\"tasks-alerts-indic-inner-wrapper\\\">\\n                            <ion-icon *ngIf=\\\"(alertMethods.phone===null||alertEvents.task===null)||(alertMethods.phone===false||alertEvents.task===false)\\\" class=\\\"sslider-shift-alerts-indic notification-ico-off\\\" name=\\\"notifications-off-outline\\\"></ion-icon>\\n                            <ion-icon *ngIf=\\\"alertMethods.phone===true&&alertEvents.task===true\\\" class=\\\"sslider-shift-alerts-indic notification-ico-on\\\" name=\\\"notifications\\\"></ion-icon>\\n                            <ion-icon *ngIf=\\\"(alertMethods.calendar===null||alertEvents.task===null)||(alertMethods.calendar===false||alertEvents.task===false)\\\" class=\\\"sslider-shift-alerts-indic calendar-ico-off\\\" name=\\\"calendar-outline\\\"></ion-icon>\\n                            <ion-icon *ngIf=\\\"alertMethods.calendar===true&&alertEvents.task===true\\\" class=\\\"sslider-shift-alerts-indic calendar-ico-on\\\" name=\\\"calendar\\\"></ion-icon>\\n                          </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col tasks-group-col mytasks todo count-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalMyTasksToDo>0?'#848484':'#565656'}\\\" class=\\\"sheriff-tasks-group-countval mytasks todo\\\">\\n                                <span class=\\\"taskgroupcount-val thisgroup\\\">{{totalMyTasksToDo}}</span>\\n                                <span class=\\\"taskgroupcount-slash\\\">/</span>\\n                                <span class=\\\"taskgroupcount-val thissection\\\">{{myTasksToDo.length+myTasksDone.length}}</span>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <!-- TO DO TASK ITEMS HERE -->\\n                <div class=\\\"tabtasks-group-scrollwrapper calcheight mytasks todo\\\">\\n                    <div *ngIf=\\\"totalMyTasksToDo===0\\\" class=\\\"tabtasks-notask-wrapper mytasks todo\\\">no tasks to show</div>\\n                    <ion-reorder-group *ngIf=\\\"totalMyTasksToDo>0\\\" #tasksReorderGroup (ionItemReorder)=\\\"doReorder($event)\\\" class=\\\"tabtasks-tasklistgroup mytasks todo\\\" [disabled]=\\\"tTReorderGroupProps.roDisabled\\\">\\n                        <ion-item *ngFor=\\\"let mtToDo of myTasksToDo;let mtTDi = index\\\" [button]=\\\"true\\\" (click)=\\\"changeCheckStatus('myTasksToDo',mtTDi,mtToDo)\\\" class=\\\"sheriff-taskitem reorder-taskitem mytasks todo taskitem-{{mtToDo.Id}}\\\">\\n                            <ion-grid class=\\\"sheriff-grid sheriff-task-item-grid reorder-item-grid mytasks todo-item todo-{{mtTDi}}\\\">\\n                                <ion-row class=\\\"sheriff-row sheriff-task-item-row reorder-item-row mytasks todo-item-row\\\">\\n                                    <ion-col size=\\\"2\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col mytasks todo-item-cb-col\\\">\\n                                        <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-cb-wrapper ticbwrap-{{mtTDi}}\\\">\\n                                            <ion-checkbox [checked]=\\\"mtToDo.nIsDone\\\" [disabled]=\\\"true\\\" [mode]=\\\"'ios'\\\" class=\\\"sheriff-checkbox task-item-cb task-item-cb-{{mtTDi}}\\\"></ion-checkbox>\\n                                        </div>\\n                                        <div *ngIf=\\\"!tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-reorder-ico-wrapper tirowrap-{{mtTDi}}\\\">\\n                                            <ion-reorder class=\\\"sheriff-reorder tabtasks-reorder\\\">\\n                                                <ion-icon name=\\\"reorder-four\\\" class=\\\"sheriff-reorder-ico tabtasks-reorder-ico\\\"></ion-icon>\\n                                            </ion-reorder>\\n                                        </div>\\n                                        <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&deleteMode\\\" class=\\\"task-item-delete-ico-wrapper tidelwrap-{{mtTDi}}\\\">\\n                                            <ion-button (click)=\\\"deleteTask('myTasksToDo',mtTDi,mtToDo)\\\" [disabled]=\\\"mtToDo.UserEntry!==meEmpId\\\" class=\\\"sheriff-btn task-item-delete-btn\\\">\\n                                                <ion-icon name=\\\"trash\\\" class=\\\"sheriff-task-item-del-ico\\\"></ion-icon>\\n                                            </ion-button>\\n                                        </div>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"9\\\" [ngStyle]=\\\"{'filter':!tTReorderGroupProps.roDisabled?'brightness(.48)':'brightness(1)'}\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col mytasks todo-item-content-col\\\">\\n                                        <ion-grid class=\\\"sheriff-grid sheriff-task-item-label-grid mytasks todo\\\">\\n                                            <ion-row class=\\\"sheriff-task-item-label-row mytasks todo tasktitle-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col mytasks todo title-col\\\">\\n                                                    <div class=\\\"ti-label-title-div\\\">\\n                                                        <span class=\\\"ti-label-value\\\">{{mtToDo.Question}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row class=\\\"sheriff-task-item-label-row mytasks todo taskfrom-row\\\">\\n                                                <ion-col size=\\\"8\\\" class=\\\"sheriff-task-item-label-col mytasks todo from-col\\\">\\n                                                    <div class=\\\"ti-label-from-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico fromperson-ico\\\" name=\\\"person-add-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-prefix-span from\\\">From:</span>\\n                                                        <span class=\\\"ti-label-value\\\">{{mtToDo.nUserEntry}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                                <ion-col size=\\\"4\\\" class=\\\"sheriff-task-item-label-col mytasks todo taskid-col\\\">\\n                                                    <div class=\\\"ti-label-taskid-div\\\">\\n                                                        <span class=\\\"ti-taskid-label-value\\\">#{{mtToDo.Id}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row *ngIf=\\\"mtToDo.Comment!==null\\\" class=\\\"sheriff-task-item-label-row mytasks todo tasknotes-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col mytasks todo notes-col\\\">\\n                                                    <div class=\\\"ti-label-notes-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico notes-ico\\\" name=\\\"newspaper-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-prefix-span notes\\\">Notes:</span>\\n                                                        <span class=\\\"ti-label-value\\\">{{mtToDo.Comment}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row class=\\\"sheriff-task-item-label-row mytasks todo taskdue-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col mytasks todo due-col\\\">\\n                                                    <!-- DUE ON -->\\n                                                    <div *ngIf=\\\"!mtToDo.nIsDone&&mtToDo.DueTimestamp!==-1\\\" [ngStyle]=\\\"{'color':mtToDo.nIsLate?'var(--ion-color-danger)':'#eee'}\\\" class=\\\"ti-label-due-div\\\">\\n                                                        <div *ngIf=\\\"!mtToDo.nIsLate\\\" class=\\\"ti-label-dueon-wrapper std\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"alarm-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span dueon\\\">Due on:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{mtToDo.nDue}}</span>\\n                                                        </div>\\n                                                        <div *ngIf=\\\"mtToDo.nIsLate\\\" class=\\\"ti-label-dueon-wrapper islate\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico overdue\\\" name=\\\"alert-circle-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span dueon\\\">Was Due:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">\\n                                                          <span *ngIf=\\\"mtToDo.nOverDue.years>0||mtToDo.nOverDue.weeks>0||mtToDo.nOverDue.months>0\\\" class=\\\"odue-ago-group long\\\">\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.years>0\\\" class=\\\"ti-label-odue-ago-val years\\\">{{mtToDo.nOverDue.years}} years<span *ngIf=\\\"mtToDo.nOverDue.years>0&&mtToDo.nOverDue.months>0\\\" class=\\\"odue-comma\\\">,</span></span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.months>0\\\" class=\\\"ti-label-odue-ago-val months\\\">{{mtToDo.nOverDue.months}} months</span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.weeks>0&&mtToDo.nOverDue.months===0&&mtToDo.nOverDue.years===0\\\" class=\\\"ti-label-odue-ago-val weeks\\\">{{mtToDo.nOverDue.weeks}} weeks</span>\\n                                                            </span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.years===0&&mtToDo.nOverDue.weeks===0&&mtToDo.nOverDue.months===0\\\" class=\\\"odue-ago-group short\\\">\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.days>0\\\" class=\\\"ti-label-odue-ago-val days\\\">{{mtToDo.nOverDue.days}} days</span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.hours>0&&mtToDo.nOverDue.days===0\\\" class=\\\"ti-label-odue-ago-val hours\\\">{{mtToDo.nOverDue.hours}} hours<span *ngIf=\\\"mtToDo.nOverDue.hours>0&&mtToDo.nOverDue.minutes>0\\\" class=\\\"odue-comma\\\">,</span></span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.minutes>0&&mtToDo.nOverDue.days===0\\\" class=\\\"ti-label-odue-ago-val minutes\\\">{{mtToDo.nOverDue.minutes}} mins</span>\\n                                                            </span>\\n                                                            <span class=\\\"ti-label-odue-ago-suffix\\\">ago</span>\\n                                                            </span>\\n                                                        </div>\\n                                                    </div>\\n                                                    <!-- CREATED ON -->\\n                                                    <div *ngIf=\\\"!mtToDo.nIsDone&&mtToDo.DueTimestamp===-1\\\" class=\\\"ti-label-create-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"create-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span createdon\\\">Created:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{mtToDo.nCreated}}</span>\\n                                                    </div>\\n                                                    <!-- COMPLETED ON -->\\n                                                    <div *ngIf=\\\"mtToDo.nIsDone\\\" class=\\\"ti-label-complete-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span completedon\\\">Completed:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{mtToDo.nCompleted}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                        </ion-grid>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"1\\\" [ngStyle]=\\\"{'filter':!tTReorderGroupProps.roDisabled?'brightness(.48)':'brightness(1)'}\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col mytasks todo-item-reorderorava-col\\\">\\n                                        <ion-avatar class=\\\"tabtasks-from-avatar-avatar\\\">\\n                                            <img src=\\\"{{mtToDo.nFromAvatar}}\\\" class=\\\"tabtasks-from-avatar-img\\\">\\n                                        </ion-avatar>\\n                                    </ion-col>\\n                                </ion-row>\\n                            </ion-grid>\\n                        </ion-item>\\n                    </ion-reorder-group>\\n                </div>\\n                <!-- MY TASKS SPACER -->\\n                <div class=\\\"sheriff-tasks-mytasks-group-divider-spacer\\\"></div>\\n                <!-- MY TASKS - DONE GROUP HEADER -->\\n                <ion-grid *ngIf=\\\"tTReorderGroupProps.roDisabled\\\" class=\\\"sheriff-grid tasks-group-grid mytasks completed\\\">\\n                    <ion-row class=\\\"sheriff-row tasks-group-row mytasks completed\\\">\\n                        <ion-col size=\\\"6\\\" class=\\\"sheriff-col tasks-group-col mytasks completed label-txt-ico-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalMyTasksDone>0?'#848484':'#565656'}\\\" class=\\\"tasks-group-label-txt-ico-wrapper mytasks completed\\\">\\n                                <ion-icon class=\\\"sheriff-tasks-group-label-ico mytasks done\\\" name=\\\"checkmark\\\"></ion-icon>\\n                                <div class=\\\"sheriff-tasks-group-label-txt mytasks completed\\\">completed</div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"4\\\" class=\\\"sheriff-col tasks-group-col mytasks done label-spacer-col\\\"></ion-col>\\n                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col tasks-group-col mytasks todo count-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalMyTasksDone>0?'#848484':'#565656'}\\\" class=\\\"sheriff-tasks-group-countval mytasks done\\\">\\n                                <span class=\\\"taskgroupcount-val thisgroup\\\">{{totalMyTasksDone}}</span>\\n                                <span class=\\\"taskgroupcount-slash\\\">/</span>\\n                                <span class=\\\"taskgroupcount-val thissection\\\">{{myTasksToDo.length+myTasksDone.length}}</span>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <!-- MY TASKS - DONE LIST -->\\n                <div class=\\\"tabtasks-group-scrollwrapper calcheight mytasks done\\\">\\n                    <ion-item-group *ngIf=\\\"tTReorderGroupProps.roDisabled\\\" class=\\\"tabtasks-tasklistgroup mytasks done\\\">\\n                        <div *ngIf=\\\"totalMyTasksDone===0\\\" class=\\\"tabtasks-notask-wrapper mytasks completed\\\">no tasks to show</div>\\n                        <ion-list *ngIf=\\\"totalMyTasksDone>0\\\" class=\\\"sheriff-item-list tabtasks-item-list mytasks donetasks\\\">\\n                            <ion-item *ngFor=\\\"let mtDone of myTasksDone;let mtDi = index\\\" [button]=\\\"true\\\" (click)=\\\"changeCheckStatus('myTasksDone',mtDi,mtDone)\\\" class=\\\"sheriff-taskitem reorder-taskitem mytasks done taskitem-{{mtDone.Id}}\\\">\\n                                <ion-grid class=\\\"sheriff-grid sheriff-task-item-grid reorder-item-grid mytasks done-item done-{{mtDi}}\\\">\\n                                    <ion-row class=\\\"sheriff-row sheriff-task-item-row reorder-item-row mytasks done-item-row\\\">\\n                                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col sheriff-task-item-col mytasks done-item-cb-col\\\">\\n                                            <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-cb-wrapper ticbwrap-{{mtDi}}\\\">\\n                                                <ion-checkbox [checked]=\\\"mtDone.nIsDone\\\" [disabled]=\\\"true\\\" [mode]=\\\"'ios'\\\" class=\\\"sheriff-checkbox task-item-cb task-item-cb-{{mtDi}}\\\"></ion-checkbox>\\n                                            </div>\\n                                            <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&deleteMode\\\" class=\\\"task-item-delete-ico-wrapper tidelwrap-{{mtDi}}\\\">\\n                                                <ion-button (click)=\\\"deleteTask('myTasksDone',mtDi,mtDone)\\\" [disabled]=\\\"mtDone.UserEntry!==meEmpId\\\" class=\\\"sheriff-btn task-item-delete-btn\\\">\\n                                                    <ion-icon name=\\\"trash\\\" class=\\\"sheriff-task-item-del-ico\\\"></ion-icon>\\n                                                </ion-button>\\n                                            </div>\\n                                        </ion-col>\\n                                        <ion-col size=\\\"9\\\" class=\\\"sheriff-col sheriff-task-item-col mytasks done-item-content-col\\\">\\n                                            <ion-grid class=\\\"sheriff-grid sheriff-task-item-label-grid mytasks done\\\">\\n                                                <ion-row class=\\\"sheriff-task-item-label-row mytasks done tasktitle-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col mytasks done title-col\\\">\\n                                                        <div class=\\\"ti-label-title-div\\\">\\n                                                            <span class=\\\"ti-label-value\\\">{{mtDone.Question}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row class=\\\"sheriff-task-item-label-row mytasks done taskfrom-row\\\">\\n                                                    <ion-col size=\\\"8\\\" class=\\\"sheriff-task-item-label-col mytasks done from-col\\\">\\n                                                        <div class=\\\"ti-label-from-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico fromperson-ico\\\" name=\\\"person-add-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-prefix-span from\\\">From:</span>\\n                                                            <span class=\\\"ti-label-value\\\">{{mtDone.nUserEntry}}</span></div>\\n                                                    </ion-col>\\n                                                    <ion-col size=\\\"4\\\" class=\\\"sheriff-task-item-label-col mytasks done taskid-col\\\">\\n                                                        <div class=\\\"ti-label-taskid-div\\\">\\n                                                            <span class=\\\"ti-taskid-label-value\\\">#{{mtDone.Id}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row *ngIf=\\\"mtDone.Comment!==null\\\" class=\\\"sheriff-task-item-label-row mytasks done tasknotes-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col mytasks done notes-col\\\">\\n                                                        <div class=\\\"ti-label-notes-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico notes-ico\\\" name=\\\"newspaper-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-prefix-span notes\\\">Notes:</span>\\n                                                            <span class=\\\"ti-label-value\\\">{{mtDone.Comment}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row class=\\\"sheriff-task-item-label-row mytasks done taskdue-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col mytasks done due-col\\\">\\n                                                        <!-- DUE ON -->\\n                                                        <div *ngIf=\\\"!mtDone.nIsDone&&mtDone.DueTimestamp!==-1\\\" [ngStyle]=\\\"{'color':mtDone.nIsLate?'var(--ion-color-danger)':'#eee'}\\\" class=\\\"ti-label-due-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"alarm-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span dueon\\\">Due on:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{mtDone.nDue}}</span>\\n                                                        </div>\\n                                                        <!-- CREATED ON -->\\n                                                        <div *ngIf=\\\"!mtDone.nIsDone&&mtDone.DueTimestamp===-1\\\" class=\\\"ti-label-create-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"create-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span createdon\\\">Created:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{mtDone.nCreated}}</span>\\n                                                        </div>\\n                                                        <!-- COMPLETED ON -->\\n                                                        <div *ngIf=\\\"mtDone.nIsDone\\\" class=\\\"ti-label-complete-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span completedon\\\">Completed:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{mtDone.nCompleted}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                            </ion-grid>\\n                                        </ion-col>\\n                                        <ion-col size=\\\"1\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col mytasks todo-item-reorderorava-col\\\">\\n                                            <ion-avatar class=\\\"tabtasks-from-avatar-avatar\\\">\\n                                                <img src=\\\"{{mtDone.nFromAvatar}}\\\" class=\\\"tabtasks-from-avatar-img\\\">\\n                                            </ion-avatar>\\n                                        </ion-col>\\n                                    </ion-row>\\n                                </ion-grid>\\n                            </ion-item>\\n                        </ion-list>\\n                    </ion-item-group>\\n                </div>\\n            </div>\\n            <!-- MY-TASKS LIST WRAPPER - ENDS <<< -->\\n            <!-- ASS-TASKS LIST WRAPPER - STARTS >>> -->\\n            <div *ngIf=\\\"tTSegProps.tTValue==='asstasks'\\\" class=\\\"tabtasks-list-wrapper asstasks\\\">\\n                <ion-grid class=\\\"sheriff-grid tasks-group-grid asstasks assigned\\\">\\n                    <ion-row class=\\\"sheriff-row tasks-group-row asstasks assigned\\\">\\n                        <ion-col size=\\\"6\\\" class=\\\"sheriff-col tasks-group-col asstasks assigned label-txt-ico-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalAssTasksAssigned>0?'#848484':'#565656'}\\\" class=\\\"tasks-group-label-txt-ico-wrapper asstasks assigned\\\">\\n                                <ion-icon class=\\\"sheriff-tasks-group-label-ico asstasks assigned\\\" name=\\\"send\\\"></ion-icon>\\n                                <div class=\\\"sheriff-tasks-group-label-txt asstasks assigned\\\">assigned</div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"4\\\" class=\\\"sheriff-col tasks-group-col asstasks assigned label-spacer-col\\\"></ion-col>\\n                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col tasks-group-col asstasks assigned count-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalAssTasksAssigned>0?'#848484':'#565656'}\\\" class=\\\"sheriff-tasks-group-countval asstasks assigned\\\">\\n                                <span class=\\\"taskgroupcount-val thisgroup\\\">{{totalAssTasksAssigned}}</span>\\n                                <span class=\\\"taskgroupcount-slash\\\">/</span>\\n                                <span class=\\\"taskgroupcount-val thissection\\\">{{assTasksAssigned.length+assTasksDone.length}}</span>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <!-- ASSIGNED TASK ITEMS HERE -->\\n                <div class=\\\"tabtasks-group-scrollwrapper calcheight asstasks assigned\\\">\\n                    <div *ngIf=\\\"totalAssTasksAssigned===0\\\" class=\\\"tabtasks-notask-wrapper asstasks assigned\\\">no tasks to show</div>\\n                    <ion-item-group class=\\\"tabtasks-tasklistgroup asstasks assigned\\\">\\n                        <ion-item *ngFor=\\\"let atAssigned of assTasksAssigned;let atAi = index\\\" [button]=\\\"true\\\" (click)=\\\"changeCheckStatus('assTasksAssigned',atAi,atAssigned)\\\" class=\\\"sheriff-taskitem reorder-taskitem asstasks assigned taskitem-{{atAssigned.Id}}\\\">\\n                            <ion-grid class=\\\"sheriff-grid sheriff-task-item-grid reorder-item-grid asstasks assigned-item todo-{{atAi}}\\\">\\n                                <ion-row class=\\\"sheriff-row sheriff-task-item-row reorder-item-row asstasks assigned-item-row\\\">\\n                                    <ion-col size=\\\"2\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col asstasks assigned-item-cb-col\\\">\\n                                        <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-cb-wrapper ticbwrap-{{atAi}}\\\">\\n                                            <ion-checkbox [checked]=\\\"atAssigned.nIsDone\\\" [disabled]=\\\"true\\\" [mode]=\\\"'ios'\\\" class=\\\"sheriff-checkbox task-item-cb task-item-cb-{{atAi}}\\\"></ion-checkbox>\\n                                        </div>\\n                                        <div *ngIf=\\\"!tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-reorder-ico-wrapper tirowrap-{{atAi}}\\\">\\n                                            <ion-icon name=\\\"swap-vertical\\\" class=\\\"sheriff-reorder-ico tabtasks-reorder-ico\\\"></ion-icon>\\n                                        </div>\\n                                        <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&deleteMode\\\" class=\\\"task-item-delete-ico-wrapper tidelwrap-{{atAi}}\\\">\\n                                            <ion-button (click)=\\\"deleteTask('assTasksAssigned',atAi,atAssigned)\\\" [disabled]=\\\"atAssigned.UserEntry!==meEmpId\\\" class=\\\"sheriff-btn task-item-delete-btn\\\">\\n                                                <ion-icon name=\\\"trash\\\" class=\\\"sheriff-task-item-del-ico\\\"></ion-icon>\\n                                            </ion-button>\\n                                        </div>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"9\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col asstasks assigned-item-content-col\\\">\\n                                        <ion-grid class=\\\"sheriff-grid sheriff-task-item-label-grid asstasks assigned\\\">\\n                                            <ion-row class=\\\"sheriff-task-item-label-row asstasks assigned tasktitle-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col asstasks assigned title-col\\\">\\n                                                    <div class=\\\"ti-label-title-div\\\">\\n                                                        <span class=\\\"ti-label-value\\\">{{atAssigned.Question}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row class=\\\"sheriff-task-item-label-row asstasks assigned taskfrom-row\\\">\\n                                                <ion-col size=\\\"8\\\" class=\\\"sheriff-task-item-label-col asstasks assigned from-col\\\">\\n                                                    <div class=\\\"ti-label-from-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico fromperson-ico\\\" name=\\\"person-add-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-prefix-span from\\\">Assigned:</span>\\n                                                        <span class=\\\"ti-label-value\\\">{{atAssigned.nAssigned}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                                <ion-col size=\\\"4\\\" class=\\\"sheriff-task-item-label-col asstasks assigned taskid-col\\\">\\n                                                    <div class=\\\"ti-label-taskid-div\\\">\\n                                                        <span class=\\\"ti-taskid-label-value\\\">#{{atAssigned.Id}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row *ngIf=\\\"atAssigned.Comment!==null\\\" class=\\\"sheriff-task-item-label-row asstasks assigned tasknotes-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col asstasks assigned notes-col\\\">\\n                                                    <div class=\\\"ti-label-notes-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico notes-ico\\\" name=\\\"newspaper-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-prefix-span notes\\\">Notes:</span>\\n                                                        <span class=\\\"ti-label-value\\\">{{atAssigned.Comment}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row class=\\\"sheriff-task-item-label-row asstasks assigned taskdue-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col asstasks assigned due-col\\\">\\n                                                    <!-- DUE ON -->\\n                                                    <div *ngIf=\\\"!atAssigned.nIsDone&&atAssigned.DueTimestamp!==-1\\\" [ngStyle]=\\\"{'color':atAssigned.nIsLate?'var(--ion-color-danger)':'#eee'}\\\" class=\\\"ti-label-due-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"alarm-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span dueon\\\">Due on:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{atAssigned.nDue}}</span>\\n                                                    </div>\\n                                                    <!-- CREATED ON -->\\n                                                    <div *ngIf=\\\"!atAssigned.nIsDone&&atAssigned.DueTimestamp===-1\\\" class=\\\"ti-label-create-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"create-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span createdon\\\">Created:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{atAssigned.nCreated}}</span>\\n                                                    </div>\\n                                                    <!-- COMPLETED ON -->\\n                                                    <div *ngIf=\\\"atAssigned.nIsDone\\\" class=\\\"ti-label-complete-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span completedon\\\">Completed:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{atAssigned.nCompleted}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                        </ion-grid>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"1\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col asstasks assigned-item-reorderorava-col\\\">\\n                                        <ion-avatar class=\\\"tabtasks-from-avatar-avatar\\\">\\n                                            <img src=\\\"{{atAssigned.nAssignedAvatar}}\\\" class=\\\"tabtasks-from-avatar-img\\\">\\n                                        </ion-avatar>\\n                                    </ion-col>\\n                                </ion-row>\\n                            </ion-grid>\\n                        </ion-item>\\n                    </ion-item-group>\\n                </div>\\n                <!-- ASS TASKS SPACER -->\\n                <div class=\\\"sheriff-tasks-mytasks-group-divider-spacer\\\"></div>\\n                <!-- ASS TASKS - DONE GROUP HEADER -->\\n                <ion-grid class=\\\"sheriff-grid tasks-group-grid asstasks completed\\\">\\n                    <ion-row class=\\\"sheriff-row tasks-group-row asstasks completed\\\">\\n                        <ion-col size=\\\"6\\\" class=\\\"sheriff-col tasks-group-col asstasks completed label-txt-ico-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalAssTasksDone>0?'#848484':'#565656'}\\\" class=\\\"tasks-group-label-txt-ico-wrapper asstasks completed\\\">\\n                                <ion-icon class=\\\"sheriff-tasks-group-label-ico asstasks done\\\" name=\\\"checkmark\\\"></ion-icon>\\n                                <div class=\\\"sheriff-tasks-group-label-txt asstasks completed\\\">completed</div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"4\\\" class=\\\"sheriff-col tasks-group-col asstasks completed label-spacer-col\\\"></ion-col>\\n                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col tasks-group-col asstasks completed count-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalAssTasksDone>0?'#848484':'#565656'}\\\" class=\\\"sheriff-tasks-group-countval asstasks done\\\">\\n                                <span class=\\\"taskgroupcount-val thisgroup\\\">{{totalAssTasksDone}}</span>\\n                                <span class=\\\"taskgroupcount-slash\\\">/</span>\\n                                <span class=\\\"taskgroupcount-val thissection\\\">{{assTasksAssigned.length+assTasksDone.length}}</span>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <!-- ASS TASKS - DONE LIST -->\\n                <div class=\\\"tabtasks-group-scrollwrapper calcheight asstasks done\\\">\\n                    <ion-item-group class=\\\"tabtasks-tasklistgroup asstasks done\\\">\\n                        <div *ngIf=\\\"totalAssTasksDone===0\\\" class=\\\"tabtasks-notask-wrapper asstasks completed\\\">no tasks to show</div>\\n                        <ion-list *ngIf=\\\"totalAssTasksDone>0\\\" class=\\\"sheriff-item-list tabtasks-item-list asstasks donetasks\\\">\\n                            <ion-item *ngFor=\\\"let atDone of assTasksDone;let atDi = index\\\" [button]=\\\"true\\\" (click)=\\\"changeCheckStatus('assTasksDone',atDi,atDone)\\\" class=\\\"sheriff-taskitem reorder-taskitem asstasks done taskitem-{{atDone.Id}}\\\">\\n                                <ion-grid class=\\\"sheriff-grid sheriff-task-item-grid reorder-item-grid asstasks done-item done-{{atDi}}\\\">\\n                                    <ion-row class=\\\"sheriff-row sheriff-task-item-row reorder-item-row asstasks done-item-row\\\">\\n                                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col sheriff-task-item-col asstasks done-item-cb-col\\\">\\n                                            <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-cb-wrapper ticbwrap-{{atDi}}\\\">\\n                                                <ion-checkbox [checked]=\\\"atDone.nIsDone\\\" [disabled]=\\\"true\\\" [mode]=\\\"'ios'\\\" class=\\\"sheriff-checkbox task-item-cb task-item-cb-{{atDi}}\\\"></ion-checkbox>\\n                                            </div>\\n                                            <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&deleteMode\\\" class=\\\"task-item-delete-ico-wrapper tidelwrap-{{atDi}}\\\">\\n                                                <ion-button (click)=\\\"deleteTask('myTasksDone',atDi,atDone)\\\" [disabled]=\\\"atDone.UserEntry!==meEmpId\\\" class=\\\"sheriff-btn task-item-delete-btn\\\">\\n                                                    <ion-icon name=\\\"trash\\\" class=\\\"sheriff-task-item-del-ico\\\"></ion-icon>\\n                                                </ion-button>\\n                                            </div>\\n                                        </ion-col>\\n                                        <ion-col size=\\\"9\\\" class=\\\"sheriff-col sheriff-task-item-col asstasks done-item-content-col\\\">\\n                                            <ion-grid class=\\\"sheriff-grid sheriff-task-item-label-grid asstasks done\\\">\\n                                                <ion-row class=\\\"sheriff-task-item-label-row asstasks done tasktitle-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col asstasks done title-col\\\">\\n                                                        <div class=\\\"ti-label-title-div\\\">\\n                                                            <span class=\\\"ti-label-value\\\">{{atDone.Question}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row class=\\\"sheriff-task-item-label-row asstasks done taskfrom-row\\\">\\n                                                    <ion-col size=\\\"8\\\" class=\\\"sheriff-task-item-label-col asstasks done from-col\\\">\\n                                                        <div class=\\\"ti-label-from-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico fromperson-ico\\\" name=\\\"person-add-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-prefix-span from\\\">Assigned:</span>\\n                                                            <span class=\\\"ti-label-value\\\">{{atDone.nAssigned}}</span></div>\\n                                                    </ion-col>\\n                                                    <ion-col size=\\\"4\\\" class=\\\"sheriff-task-item-label-col asstasks done taskid-col\\\">\\n                                                        <div class=\\\"ti-label-taskid-div\\\">\\n                                                            <span class=\\\"ti-taskid-label-value\\\">#{{atDone.Id}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row *ngIf=\\\"atDone.Comment!==null\\\" class=\\\"sheriff-task-item-label-row asstasks done tasknotes-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col mytasks done notes-col\\\">\\n                                                        <div class=\\\"ti-label-notes-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico notes-ico\\\" name=\\\"newspaper-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-prefix-span notes\\\">Notes:</span>\\n                                                            <span class=\\\"ti-label-value\\\">{{atDone.Comment}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row class=\\\"sheriff-task-item-label-row asstasks done taskdue-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col asstasks done due-col\\\">\\n                                                        <!-- DUE ON -->\\n                                                        <div *ngIf=\\\"!atDone.nIsDone&&atDone.DueTimestamp!==-1\\\" [ngStyle]=\\\"{'color':atDone.nIsLate?'var(--ion-color-danger)':'#eee'}\\\" class=\\\"ti-label-due-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"alarm-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span dueon\\\">Due on:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{atDone.nDue}}</span>\\n                                                        </div>\\n                                                        <!-- CREATED ON -->\\n                                                        <div *ngIf=\\\"!atDone.nIsDone&&atDone.DueTimestamp===-1\\\" class=\\\"ti-label-create-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"create-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span createdon\\\">Created:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{atDone.nCreated}}</span>\\n                                                        </div>\\n                                                        <!-- COMPLETED ON -->\\n                                                        <div *ngIf=\\\"atDone.nIsDone\\\" class=\\\"ti-label-complete-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span completedon\\\">Completed:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{atDone.nCompleted}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                            </ion-grid>\\n                                        </ion-col>\\n                                        <ion-col size=\\\"1\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col asstasks done-item-reorderorava-col\\\">\\n                                            <ion-avatar class=\\\"tabtasks-from-avatar-avatar\\\">\\n                                                <img src=\\\"{{atDone.nAssignedAvatar}}\\\" class=\\\"tabtasks-from-avatar-img\\\">\\n                                            </ion-avatar>\\n                                        </ion-col>\\n                                    </ion-row>\\n                                </ion-grid>\\n                            </ion-item>\\n                        </ion-list>\\n                    </ion-item-group>\\n                </div>\\n            </div>\\n            <!-- ASS-TASKS LIST WRAPPER - ENDS <<< -->\\n        </div>\\n    </ion-content>\\n</ion-content>\\n<!-- /////////////////////////////////////////////// -->\\n<!-- TAB-TASKS ITEM LIST CONTENT - ENDS <<< -->\\n<!-- TAB-TASKS FAB BUTTON - STARTS -->\\n<ion-fab class=\\\"sheriff-fader-fab tabtasks\\\" [vertical]=\\\"'bottom'\\\" [horizontal]=\\\"'end'\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"addTask()\\\" class=\\\"sheriff-tab-fab tasks addtask\\\">\\n        <img src=\\\"../../../assets/img/sheriff-fab-addtask-ico.png\\\" class=\\\"addtaskfabimg\\\">\\n    </ion-fab-button>\\n</ion-fab>\\n<!-- TAB-TASKS FAB BUTTON - ENDS <<< -->\";"]}