{"version":3,"sources":["webpack:///node_modules/@capacitor-community/sqlite/dist/esm/web.js"],"names":["CapacitorSQLiteWeb","arguments","sqliteEl","isStoreOpen","customElements","whenDefined","document","querySelector","addEventListener","event","notifyListeners","detail","Promise","resolve","reject","options","saveToStore","unimplemented","echo","console","log","createConnection","open","closeConnection","getVersion","ret","checkConnectionsConsistency","close","execute","executeSet","run","query","isDBExists","isDBOpen","isDatabase","isTableExists","deleteDatabase","isJsonValid","importFromJson","exportToJson","createSyncTable","setSyncDate","getSyncDate","addUpgradeStatement","copyFromAssets","getDatabaseList","WebPlugin"],"mappings":"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","file":"node_modules_capacitor-community_sqlite_dist_esm_web_js-es5.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class CapacitorSQLiteWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.sqliteEl = null;\n        this.isStoreOpen = false;\n    }\n    async initWebStore() {\n        await customElements.whenDefined('jeep-sqlite');\n        this.sqliteEl = document.querySelector('jeep-sqlite');\n        if (this.sqliteEl != null) {\n            this.sqliteEl.addEventListener('jeepSqliteImportProgress', (event) => {\n                this.notifyListeners('sqliteImportProgressEvent', event.detail);\n            });\n            this.sqliteEl.addEventListener('jeepSqliteExportProgress', (event) => {\n                this.notifyListeners('sqliteExportProgressEvent', event.detail);\n            });\n            if (!this.isStoreOpen)\n                this.isStoreOpen = await this.sqliteEl.isStoreOpen();\n            return Promise.resolve();\n        }\n        else {\n            return Promise.reject('InitWeb: this.sqliteEl is null');\n        }\n    }\n    async saveToStore(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    await this.sqliteEl.saveToStore(options);\n                    return Promise.resolve();\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async echo(options) {\n        if (this.sqliteEl != null) {\n            const echo = await this.sqliteEl.echo(options);\n            return echo;\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async isSecretStored() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async setEncryptionSecret(options) {\n        console.log('setEncryptionSecret', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async changeEncryptionSecret(options) {\n        console.log('changeEncryptionSecret', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async createConnection(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    await this.sqliteEl.createConnection(options);\n                    return Promise.resolve();\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async open(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    await this.sqliteEl.open(options);\n                    return Promise.resolve();\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async closeConnection(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    await this.sqliteEl.closeConnection(options);\n                    return Promise.resolve();\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async getVersion(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.getVersion(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async checkConnectionsConsistency(options) {\n        if (this.sqliteEl != null) {\n            try {\n                const ret = await this.sqliteEl.checkConnectionsConsistency(options);\n                return Promise.resolve(ret);\n            }\n            catch (err) {\n                return Promise.reject(`${err}`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async close(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    await this.sqliteEl.close(options);\n                    return Promise.resolve();\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async execute(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.execute(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async executeSet(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.executeSet(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async run(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.run(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async query(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.query(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async isDBExists(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.isDBExists(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async isDBOpen(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.isDBOpen(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async isDatabase(options) {\n        if (this.sqliteEl != null) {\n            if (!this.isStoreOpen)\n                this.isStoreOpen = await this.sqliteEl.isStoreOpen();\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.isDatabase(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async isTableExists(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.isTableExists(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async deleteDatabase(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    await this.sqliteEl.deleteDatabase(options);\n                    return Promise.resolve();\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async isJsonValid(options) {\n        if (this.sqliteEl != null) {\n            if (!this.isStoreOpen)\n                this.isStoreOpen = await this.sqliteEl.isStoreOpen();\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.isJsonValid(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async importFromJson(options) {\n        if (this.sqliteEl != null) {\n            if (!this.isStoreOpen)\n                this.isStoreOpen = await this.sqliteEl.isStoreOpen();\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.importFromJson(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async exportToJson(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.exportToJson(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async createSyncTable(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.createSyncTable(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async setSyncDate(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    await this.sqliteEl.setSyncDate(options);\n                    return Promise.resolve();\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async getSyncDate(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.getSyncDate(options);\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async addUpgradeStatement(options) {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    await this.sqliteEl.addUpgradeStatement(options);\n                    return Promise.resolve();\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async copyFromAssets() {\n        if (this.sqliteEl != null) {\n            if (this.isStoreOpen) {\n                try {\n                    await this.sqliteEl.copyFromAssets();\n                    return Promise.resolve();\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async getDatabaseList() {\n        if (this.sqliteEl != null) {\n            if (!this.isStoreOpen)\n                this.isStoreOpen = await this.sqliteEl.isStoreOpen();\n            if (this.isStoreOpen) {\n                try {\n                    const ret = await this.sqliteEl.getDatabaseList();\n                    return Promise.resolve(ret);\n                }\n                catch (err) {\n                    return Promise.reject(`${err}`);\n                }\n            }\n            else {\n                return Promise.reject(`Store \"jeepSqliteStore\" failed to open`);\n            }\n        }\n        else {\n            throw this.unimplemented('Not implemented on web.');\n        }\n    }\n    async getMigratableDbList(options) {\n        console.log('getMigratableDbList', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async addSQLiteSuffix(options) {\n        console.log('addSQLiteSuffix', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async deleteOldDatabases(options) {\n        console.log('deleteOldDatabases', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\n//# sourceMappingURL=web.js.map"]}