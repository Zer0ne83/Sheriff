{"version":3,"sources":["./src/app/services/sync.service.ts"],"names":[],"mappings":"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","file":"default-src_app_services_sync_service_ts-es2015.js","sourcesContent":["import { StorageService } from './storage.service';\nimport { DateTimeService } from './datetime.service';\nimport { EventsService } from './events.service';\nimport { DeputyService } from './deputy.service';\nimport { SQLiteService } from './sqlite.service';\nimport { FirebaseService } from './firebase.service';\nimport { FileSystemService } from './filesystem.service';\nimport { Injectable } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\nimport * as _ from 'lodash';\nimport { DetailService } from './detail.service';\nimport { AppUserSettings } from './appTypes';\n////////////////////////////////////////////////////////////////\n@Injectable({ providedIn: 'root' })\n////////////////////////////////////////////////////////////////\nexport class SyncService {\n////////////////////////////////////////////////////////////////\n  apiTSheets:any[]=null;\n  runDelayOnce:number=1;\n////////////////////////////////////////////////////////////////\n  constructor(\n    private logger: NGXLogger,\n    private deputy: DeputyService,\n    private sqlServ: SQLiteService,\n    private evServ: EventsService,\n    private dT:DateTimeService,\n    private storeServ:StorageService,\n    private detailServ:DetailService,\n    private fileServ:FileSystemService,\n    private fireServ:FirebaseService\n    ) { }\n////////////////////////////////////////////////////////////////\n  checkServ():Promise<any> { this.logger.info('♻️ [syncServ|doSync] (TRUE)...');\n    return Promise.resolve(true);\n  }\n////////////////////////////////////////////////////////////////\n  async fireBackupDB() { this.logger.info('♻️ [syncServ|fireBackupDB] 🚒 ()...');\n    const settObj:AppUserSettings=await this.detailServ.getSettings();\n    if(settObj.database.options.backupMode.value==='auto'){\n      this.evServ.subscribe('dbbuBlob',blob=>{this.evServ.destroy('dbbuBlob');\n        this.evServ.subscribe('dbbuULProg',ulD=>{this.evServ.destroy('dbbuULProg');\n          switch(ulD.event){\n            case 'successData':this.logger.info('♻️ [syncServ|fireBackupDB] 🚒 (✔️ SUCCESS) Uploaded DBBU to Cloud');break;\n            case 'errorData':this.logger.info('♻️ [syncServ|fireBackupDB] 🚒 (❌ ERROR) Error Uploading DBBU to Cloud');break;\n          }\n        });this.fireServ.uploadFSDBBU(blob);\n      });this.fileServ.getFireDBBUFile(this.deputy.uUK)\n    }else{this.logger.info('♻️ [syncServ|fireBackupDB]  🚒 (🤞 SKIPPED) DB backupMode!==AUTO')}\n  }\n////////////////////////////////////////////////////////////////\n  async deepValCheck(dbVArr:any[],dpVArr:any[]){ this.logger.info('♻️ [syncServ|deepValCheck] (dbArr,dpArr)...');\n    const consFn=(r:string,m:string)=>{let rT;r==='s'?rT='🟢 SUCCESS':r==='w'?rT='⚠️ WARNING':rT='🔴 ERROR';const c=this.logger.info('♻️ [syncServ|deepValCheck] 🩺 ('+rT+'): '+m)};\n    const getTbl=(o:any):Promise<string>=>{if(o.hasOwnProperty('MatchedByTimesheet')){return Promise.resolve('rosters')}else if(o.hasOwnProperty('Disputed')){return Promise.resolve('timesheets')}else if(o.hasOwnProperty('UserPerformTask')){return Promise.resolve('tasks')}else if(o.hasOwnProperty('ShowFrom')){return Promise.resolve('memos')}};\n    let dbArr:any[]=dbVArr;let dpArr:any[]=dpVArr;const tblN:string=await getTbl(dbArr[0]);const sTblN:string=tblN.substring(0,tblN.length-1);\n    const remPs=async(o:object):Promise<boolean>=>{if(_.unset(o,'last_modified')){return Promise.resolve(true)}else{return Promise.resolve(false)}};\n    if(dbArr.length!==dpArr.length){consFn('e','Total no. of items !== (DB vs DP)');return};\n    let remPDB:boolean=true;for(let i=0;i<dbArr.length;i++){const tO:object=dbArr[i];if(!(await remPs(tO))){remPDB=false}};\n    if(!remPDB){consFn('e','Failed to remove last_modified pty from '+tblN+' DB obj');return};\n    let remPDP:boolean=true;for(let i=0;i<dpArr.length;i++){const tO:object=dpArr[i];if(!(await remPs(tO))){remPDP=false}};\n    if(!remPDP){consFn('e','Failed to remove last_modified pty from '+tblN+' DP obj');return};\n    for(let i=0;i<dbArr.length;i++){\n      const dbO:any=dbArr[i];const dbOId:number=dbO.Id;\n      const dpO:any=dpArr.filter(o=>o.Id===dbOId)[0];\n      if(!_.isEqual(dbO,dpO)){\n        consFn('w','Obj Mismatch: '+sTblN.toUpperCase()+' ID #'+dbOId+' - Checking values...');\n        const diffObj:object=await this.myDiff(dpO,dbO);\n        this.logger.info(diffObj);\n        let m:any=[];for(const[k,v]of Object.entries(diffObj)){m.push(k+'!=='+v)};m=m.join(', ');\n        consFn('w','Val Mismatch(s): '+m);\n        /* const fixSQL:string='UPDATE `'+tblN+'` SET ? WHERE `Id` = ?';\n        const fixVals:any[]=[diffObj,dbOId];\n        const dbRes:boolean=await this.sqlServ.syncUpdateItem(fixSQL,fixVals);\n        if(dbRes){consFn('s','🛠️ Fixed/Updated '+Object.keys(diffObj).join(', ')+' for '+sTblN.toUpperCase()+' ID #'+dbOId)}\n        else{consFn('e','🛠️ Failed to Update '+Object.keys(diffObj).join(', ')+' for '+sTblN.toUpperCase()+' ID #'+dbOId)} */\n      };\n    };\n  }\n  //////////////////////////////////////////////////\n  /**\n  // @param  {Object} object Obj compared (mySQL)\n  // @param  {Object} base   Obj to compare (Fire)\n  // @return {Object} return Obj the Difference\n  */\n  //////////////////////////////////////////////////\n  async myDiff(object:any,base:any) {\n    function changes(object:any,base:any) {\n      return _.transform(object,function(result:any,value:any,key:any) {\n        if (!_.isEqual(value, base[key])) {\n          result[key] = (_.isObject(value) && _.isObject(base[key])) ? changes(value, base[key]) : value;\n        }\n      });\n    }\n    return changes(object, base);\n  }\n////////////////////////////////////////////////////////////////\n  async doSingleSync(tableN:string):Promise<any>{ this.logger.info('♻️ [syncServ|doSingleSync] ('+tableN+')...');\n    let isDiff:boolean;let actReq:string;let isStaged:boolean;\n    const apiC:number=await this.deputy.getResSyncCount(tableN);\n    const dbC:number=await this.sqlServ.getItemCount(tableN);\n    apiC>500?isStaged=true:isStaged=false;\n    if(apiC>dbC){isDiff=true;actReq='down';this.logger.info('♻️ [syncServ|doSingleSync] (Count Diff): Need to [DOWNLOAD] '+Math.abs(apiC-dbC)+' '+tableN+' Item(s) from API.')}\n    else if(dbC>apiC){isDiff=true;actReq='up';this.logger.info('♻️ [syncServ|doSingleSync] (Count Diff): Need to [UPLOAD/SAVE] '+Math.abs(apiC-dbC)+' '+tableN+' Item(s) to API.')}\n    else{isDiff=false;this.logger.info('♻️ [syncServ|doSingleSync] (Count Diff): '+apiC+'(api) === '+dbC+'(db) - No Difference/Action Required.')};\n    //Prog #1\n    this.evServ.publish('refreshTSProg','getapi');\n    if(!isStaged){\n      const apiData:any[]=await this.deputy.getTSheetSyncRange(false,null,null,false);\n      const dbData:any[]=(await this.sqlServ.getAllTableItems(tableN)).values;\n      //Prog #2\n      this.evServ.publish('refreshTSProg','diffcheck');\n      if(apiData.length>0&&dbData.length>0){ \n        this.logger.info('♻️ [syncServ|Deputy|getTSheetSyncRange] (Success) - Comparing '+apiData.length+' API Items to '+dbData.length+' DB Items...');\n        if(isDiff){\n          let apiIds:any[]=[];let dbIds:any[]=[];\n          for(let i=0;i<apiData.length;i++){apiIds.push(apiData[i].Id)};\n          for(let i=0;i<dbData.length;i++){dbIds.push(dbData[i].Id)};\n          if(actReq==='down'){\n            let getFromAPI:any=[];let insCount:number=0; let insErr:boolean=false;\n            for(let i=0;i<apiIds.length;i++){if(!dbIds.includes(apiIds[i])){getFromAPI.push(apiIds[i])}};\n            this.logger.info('♻️ [syncServ|Diff] (Result): Download from API ('+tableN+') >>> Ids '+getFromAPI.join(', '));\n            for(let i=0;i<getFromAPI.length;i++){\n              const missingObj:any=apiData.filter(o=>o.Id===getFromAPI[i])[0];\n              const insRes:boolean = await this.sqlServ.insertSingleItem(tableN,missingObj);\n              if(insRes===true){insCount++}else{insCount++;insErr=true};\n              if(insCount===getFromAPI.length){\n                //Prog #3\n                this.evServ.publish('refreshTSProg','insertupload');\n                this.logger.info('♻️ [syncServ|InsertMissing] (Finished) ['+insCount+'/'+getFromAPI.length+']...');\n                this.logger.info('♻️ [syncServ|doSingleSync|Missing] (Insert Missing Objs Api=>DB) COMPLETED!'); \n                return Promise.resolve(getFromAPI);\n              }\n            };\n            if(insCount>0){this.fireBackupDB()};\n          }else{\n            let sendToAPI:any[]=[];for(let i=0;i<dbIds.length;i++){if(!apiIds.includes(dbIds[i])){sendToAPI.push(dbIds[i])}};\n            this.logger.info('♻️ [syncServ|Diff] (Result): Upload to API ('+tableN+') >>> Ids '+sendToAPI.join(','));\n            return Promise.resolve(sendToAPI);\n          }\n        }else{return Promise.resolve([])}\n      }else{this.logger.info('♻️ [syncServ|Deputy|getTSheetSyncRange] (Error) - NIL Items Returned by API and/or DB - Aborting.');return Promise.resolve([])}\n    }else{this.logger.info('♻️ [syncServ|doSingleSync] (All Mode) - Checking All '+tableN+' Items (New/Updated)...');return Promise.resolve([])}\n  }\n////////////////////////////////////////////////////////////////\n  async doTSheetsSync(mode:string):Promise<any> { this.logger.info('♻️ [syncServ|doTSheetSync] ('+mode+')...');\n    // Prep Promise/Return Vars\n    let syncRes:any={changed:<boolean>false,added:<any[]>[],modified:<any[]>[]};\n    // Get Now & Last Sync UTSs\n    const c=():boolean=>{if(mode==='refresh'){return true}else{return false}};const p=()=>{this.evServ.publish('refreshTSheetsProg',null)};\n    let lastSyncUTS:number=0;let lastSyncDate:Date;const lSDBVal:number=await this.sqlServ.getSync('timesheets');\n    if(lSDBVal&&lSDBVal!==null&&lSDBVal!==0&&lSDBVal!==undefined&&this.dT.isV(this.dT.Dut(lastSyncUTS))){lastSyncUTS=lSDBVal;lastSyncDate=this.dT.Dut(lastSyncUTS)}\n    else{lastSyncUTS=this.dT.getUT(this.dT.subYs(new Date(),1));lastSyncDate=this.dT.subYs(new Date(),1)};\n    if(c){p()};//Prog #1\n    // Get API & DB Object Lists for Comparison\n    let apiObs:any[]=[];let dbObs:any[]=[];let dbObIds:any=[];\n    if(this.apiTSheets!==null){apiObs=this.apiTSheets}else{apiObs=(await this.deputy.getAllTSheetsOrderById()).data};\n    dbObs=await this.sqlServ.getAllTSheetsOrderId();\n    if(c){p()};//Prog #2\n    // Check All API Obs Appear In DB - Add Missing\n    for(let i=0;i<dbObs.length;i++){dbObIds.push(dbObs[i].Id)};\n    const missAPIObs:any[]=apiObs.filter(apiOb=>!dbObIds.includes(apiOb.Id));\n    if(missAPIObs.length>0){\n      syncRes.changed=true;\n      for(let i=0;i<missAPIObs.length;i++){\n        const missOb:any=missAPIObs[i];\n        await this.sqlServ.insertSingleItem('timesheets',missOb);\n        syncRes.added.push(missOb.Id)\n      }  \n    }else{this.logger.info('♻️ [syncServ|doTSheetsSync] ['+missAPIObs.length+'] Timesheets Required [MISSING] Updates.')};\n    if(c){p()};//Prog #3\n    // Replace DB Ob if API Ob Has Later Modified Date\n    const modCompareAPIObs:any[]=apiObs.filter(apiOb=>!syncRes.added.includes(apiOb.Id));\n    if(modCompareAPIObs.length>0){\n      syncRes.changed=true;\n      for(let i=0;i<modCompareAPIObs.length;i++){\n        const modAPIOb:any=modCompareAPIObs[i];\n        const modDBObI:number=dbObs.findIndex(ts=>ts.Id===modAPIOb.Id);\n        const modAPIObDate:Date=new Date(modAPIOb.Modified);\n        let modDBObDate:Date=null;modDBObI!==-1?modDBObDate=new Date(dbObs[modDBObI].Modified):modDBObDate=null;\n        if(modDBObDate!==null){\n          if(this.dT.isA(modAPIObDate,modDBObDate)){\n            await this.sqlServ.replaceItem('timesheets','Id',modAPIOb.Id,modAPIOb);\n            syncRes.modified.push(modAPIOb.Id)\n          }\n        }\n      } \n    }else{this.logger.info('♻️ [syncServ|doTSheetsSync] ['+modCompareAPIObs.length+'] Timesheets Required [MODIFIED] Updates.')};\n    /////////////////////////////////////////////////////\n    this.logger.info('>>>>> SYNC: [RESULT]: Changes: '+syncRes.changed.toUpperCase+' - Added: '+syncRes.added.join(',')+' ('+syncRes.added.length+') | Modified: '+syncRes.modified.join(',')+' ('+syncRes.modified.length+')');\n    if(c){p()};//Prog #4\n    await this.sqlServ.setSync('timesheets');\n    if(syncRes.changed){this.fireBackupDB()};\n    return Promise.resolve(syncRes);\n  }\n//////////////////////////////////////////////////////////////// \n  delayedInitsFN(udbI:boolean) { this.logger.info('♻️ [syncServ|delayedInitsFN] ()...');\n    this.logger.info('♻️ [syncServ|delayedInitsFN] UDB Import Detected! ('+udbI+') >>> [DELAYED ALERT/INIT/SYNC ACTIVATED]...');\n    if(this.runDelayOnce===1){\n      this.runDelayOnce--;let dSIStageCount:number=0;\n      this.evServ.subscribe('delayedSyncInit',async dSIStage=>{dSIStageCount++;\n        this.logger.info('♻️ [syncServ|delayedInitsFN] - STAGE #'+dSIStageCount+'/2 = '+dSIStage.toUpperCase());\n        if(dSIStageCount===2){\n          this.evServ.destroy('delayedSyncInit');\n          await this.detailServ.setUDBWasImported(false);\n          this.evServ.publish('delayedSyncDone',true);\n        }\n      })\n    }else{this.logger.info('♻️ [syncServ|delayedInitsFN] ALREADY RUNNING - Ignoring Subsequent Request!')};\n  }\n////////////////////////////////////////////////////////////////\n  async doShiftsSync(mode:string):Promise<any> { this.logger.info('♻️ [syncServ|doShiftsSync] ('+mode+')...');\n    const udbImportd:boolean=await this.detailServ.getUDBWasImported();\n    if(udbImportd){this.delayedInitsFN(udbImportd)};\n    const c=():boolean=>{if(mode==='refresh'){return true}else{return false}};\n    const p=()=>{this.evServ.publish('refreshTSheetsProg',null)};\n    let syncRes:any={changed:<boolean>false,ids:<any[]>[],xtras:<any[]>[]};\n    // Get Now & Last Sync UTSs\n    let lastSyncUTS:number=0;const lSDBVal:number=await this.sqlServ.getSync('rosters');\n    if(lSDBVal&&lSDBVal!==null&&lSDBVal!==0&&lSDBVal!==undefined&&this.dT.isV(this.dT.Dut(lastSyncUTS))){lastSyncUTS=lSDBVal}\n    else{lastSyncUTS=this.dT.getUT(this.dT.subYs(new Date(),1))};\n    //////////////// Mock Old Sync\n    lastSyncUTS=this.dT.getUT(this.dT.subDays(new Date(),2));\n    ////////////////\n    const syncAgo:string=this.dT.fDtN(this.dT.Dut(lastSyncUTS)).replace('about','≈');\n    if(c){p()};//Prog #1\n    // Get API & DB Object Lists for Comparison\n    let apiObs:any[]=[];let dbObs:any[]=[];let dbObIds:any=[];\n    apiObs=(await this.deputy.getMy('roster')).data;\n    console.log(apiObs);\n    this.logger.info('♻️ [syncServ|delayedInitsFN] [ROSTERS] (ApiObs): '+apiObs.length);\n    // if earliest MY roster is more recent than last sync?\n    // convert all MY roster ob Dates to UTSs & find lowest\n    const lsMyObUTS:number=this.dT.getUT(new Date((_.minBy(apiObs,myO=>this.dT.getUT(new Date(myO.Date)))).Date));\n    const myObSyncAgo:string=this.dT.fDtN(this.dT.Dut(lsMyObUTS)).replace('about','≈');\n    this.logger.info('♻️ [syncServ|delayedInitsFN] [ROSTERS] (SyncUTS): '+lastSyncUTS+' ('+syncAgo+')');\n    this.logger.info('♻️ [syncServ|delayedInitsFN] [ROSTERS] (MyObUTS): '+lsMyObUTS+' ('+myObSyncAgo+')');\n    if(lastSyncUTS<lsMyObUTS){\n      const tDiffS=lsMyObUTS-lastSyncUTS;\n      const tDiffM=tDiffS/60;\n      const tDiffH=tDiffM/60;\n      const tDiffD=tDiffH/24;\n      if(tDiffH>24){console.log('Synced '+tDiffD.toFixed(1)+' days [BEFORE] MY data starts')}\n      else{console.log('Synced '+tDiffH.toFixed(1)+' hours [BEFORE] MY data starts')}\n    }else{\n      const tDiffS=lastSyncUTS-lsMyObUTS;\n      const tDiffM=tDiffS/60;\n      const tDiffH=tDiffM/60;\n      const tDiffD=tDiffH/24;\n      if(tDiffH>24){console.log('Synced '+tDiffD.toFixed(1)+' days [AFTER] MY data starts')}\n      else{console.log('Synced '+tDiffH.toFixed(1)+' hours [AFTER] MY data starts')}\n    };\n    dbObs=await this.sqlServ.getAllRosters();\n    if(c){p()};//Prog #2\n    // Check All API Obs Appear In DB List - Add Any Missing\n    let addedAPIObIds:any=[];\n    for(let i=0;i<dbObs.length;i++){dbObIds.push(dbObs[i].Id)};\n    const missAPIObs:any[]=apiObs.filter(apiOb=>!dbObIds.includes(apiOb.Id));\n    if(missAPIObs.length>0){\n      for(let i=0;i<missAPIObs.length;i++){const missOb:any=missAPIObs[i];await this.sqlServ.insertSingleItem('rosters',missOb);addedAPIObIds.push(missOb.Id)};if(addedAPIObIds.length>0){syncRes.changed=true;syncRes.ids=addedAPIObIds}\n    }\n    if(c){p()};//Prog #3\n    // Check All API (less new - above) & DB Modified Fields Match - Update DB With Modified API Obs \n    let updatedDBObIds:any[]=[];\n    const modedAPIObs:any[]=apiObs.filter(apiOb=>!addedAPIObIds.includes(apiOb.Id)&&this.dT.getUT(new Date(apiOb.Modified))>lastSyncUTS);\n    if(modedAPIObs.length>0){\n      const modIds:any[]=[];for(let i=0;i<modedAPIObs.length;i++){modIds.push(modedAPIObs[i].Id)};\n      for(let i=0;i<modedAPIObs.length;i++){\n        const modOb=modedAPIObs[i];\n        const updateRes:any=await this.sqlServ.replaceItem('rosters','Id',modOb.Id,modOb);\n        if(updateRes.result){updatedDBObIds.push(updateRes.id)}};\n      if(updatedDBObIds.length>0){syncRes.changed=true;if(syncRes.ids.length>0){let uIds:any[]=syncRes.concat(updatedDBObIds);uIds=_.uniq(uIds)}else{syncRes.ids=updatedDBObIds}};\n    };\n    /////////////////////////////////////////////////////\n    const weekTSArr:any=await this.deputy.getWeekTSheets();\n    const extraShiftTSArr:any=weekTSArr.filter(ts=>ts.Roster===null);\n    if(extraShiftTSArr.length>0){\n      for(let i=0;i<extraShiftTSArr.length;i++){\n        const xtraOb:any=extraShiftTSArr[i];\n        await this.sqlServ.insertSingleItem('timesheets',xtraOb);\n        syncRes.xtras.push(xtraOb);\n      }\n    }\n    /////////////////////////////////////////////////////\n    const notMatchedTS:any[]=dbObs.filter(rosO=>rosO.MatchedByTimesheet<1);\n    if(notMatchedTS.length>0){\n      for(let i=0;i<notMatchedTS.length;i++){\n        const nMRos:any=notMatchedTS[i];const nMRosDate:Date=new Date(nMRos.Date);const nMRosId:number=nMRos.Id;\n        const apiRes:any=await this.deputy.getMissTSRoster(nMRosDate);\n        if(apiRes.result&&apiRes.data.length>0){const modRosArr:any[]=apiRes.data.filter(r=>r.Id===nMRosId);\n          if(modRosArr.length>0){const modRosOb:any=modRosArr[0];await this.sqlServ.replaceItem('rosters','Id',modRosOb.Id,modRosOb)}\n        }\n      }  \n    }\n    /////////////////////////////////////////////////////\n    if(syncRes.changed){console.log('>>>>> SYNC: [RESULT]: { changed: '+syncRes.changed+', ids: '+syncRes.ids+' }.')}\n    else{console.log('>>>>> SYNC: [RESULT]: No New/Updated Items Found.');}\n    if(c){p()};//Prog #4\n    await this.sqlServ.setSync('rosters');\n    if(syncRes.changed){this.fireBackupDB()};\n    if(udbImportd){this.evServ.publish('delayedSyncInit','shifts');this.doTasksSync('delayed')};\n    return Promise.resolve(syncRes);\n  }\n////////////////////////////////////////////////////////////////\n  async doTasksSync(mode:string):Promise<any> { this.logger.info('♻️ [syncServ|doTasksSync] ('+mode+')...');\n    // Prep Promise/Return Vars\n    let syncRes:any={changed:<boolean>false,ids:<any[]>[]};\n    // Get Now & Last Sync UTSs\n    const c=():boolean=>{if(mode==='refresh'){return true}else{return false}};\n    const p=()=>{this.evServ.publish('refreshTasksProg',null)};\n    let lastSyncUTS:number=0;const lSDBVal:number=await this.sqlServ.getSync('tasks');\n    if(lSDBVal&&lSDBVal!==null&&lSDBVal!==0&&lSDBVal!==undefined&&this.dT.isV(this.dT.Dut(lastSyncUTS))){lastSyncUTS=lSDBVal}\n    else{lastSyncUTS=this.dT.getUT(this.dT.subYs(new Date(),1))};\n    if(c){p()};//Prog #1\n    // Get API & DB Object Lists for Comparison\n    let apiObs:any[]=[];let dbObs:any[]=[];let dbObIds:any=[];let apiObIds:any[]=[];\n    const {status,data}=await this.deputy.getResource('Task');if(status===200){apiObs=data};\n    dbObs=(await this.sqlServ.getAllTableItems('tasks')).values;\n    if(c){p()};//Prog #2\n    // Check All API Obs Appear In DB List - Add Any Missing\n    let addedAPIObIds:any=[];let deletedDBObIds:any[]=[];\n    for(let i=0;i<dbObs.length;i++){dbObIds.push(dbObs[i].Id)};\n    for(let i=0;i<apiObs.length;i++){apiObIds.push(apiObs[i].Id)};\n    const missAPIObs:any[]=apiObs.filter(apiOb=>!dbObIds.includes(apiOb.Id));\n    const missDBObs:any=dbObs.filter(dbOb=>!apiObIds.includes(dbOb.Id));\n    if(missDBObs.length>0){\n      for(let i=0;i<missDBObs.length;i++){\n        const missOb:any=missDBObs[i];\n        await this.sqlServ.deleteItem('tasks','Id',missOb.Id);\n        deletedDBObIds.push(missOb.Id)\n      }\n      if(deletedDBObIds.length>0){syncRes.changed=true;syncRes.ids=deletedDBObIds}\n    }\n    if(missAPIObs.length>0){\n      for(let i=0;i<missAPIObs.length;i++){\n        const missOb:any=missAPIObs[i];\n        await this.sqlServ.insertSingleItem('tasks',missOb);\n        addedAPIObIds.push(missOb.Id)\n      }\n      if(addedAPIObIds.length>0){syncRes.changed=true;syncRes.ids=addedAPIObIds}\n    }\n    if(c){p()};//Prog #3\n    // Check All API (less new - above) & DB Modified Fields Match - Update DB With Modified API Obs \n    let updatedDBObIds:any[]=[];\n    const modedAPIObs:any[]=apiObs.filter(apiOb=>!addedAPIObIds.includes(apiOb.Id)&&!deletedDBObIds.includes(apiOb.Id)&&this.dT.getUT(new Date(apiOb.Modified))>lastSyncUTS);\n    if(modedAPIObs.length>0){\n      const modIds:any[]=[];for(let i=0;i<modedAPIObs.length;i++){modIds.push(modedAPIObs[i].Id)};\n      for(let i=0;i<modedAPIObs.length;i++){\n        const modOb=modedAPIObs[i];\n        const updateRes:any=await this.sqlServ.replaceItem('tasks','Id',modOb.Id,modOb);\n        if(updateRes.result){updatedDBObIds.push(updateRes.id)}\n      };\n      if(updatedDBObIds.length>0){\n        syncRes.changed=true;\n        if(syncRes.ids.length>0){\n          let uIds:any[]=syncRes.ids.concat(updatedDBObIds);\n          uIds=_.uniq(uIds)\n        }else{syncRes.ids=updatedDBObIds}};\n    };\n    if(syncRes.changed){console.log('>>>>> SYNC: [RESULT]: { changed: '+syncRes.changed+', ids: '+syncRes.ids+' }.')}\n    else{console.log('>>>>> SYNC: [RESULT]: No New/Updated Items Found.');}\n    if(c){p()};//Prog #4\n    await this.sqlServ.setSync('tasks');\n    if(syncRes.changed){this.fireBackupDB()};\n    if(mode==='delayed'){this.evServ.publish('delayedSyncInit','tasks')};\n    return Promise.resolve(syncRes);\n  }\n////////////////////////////////////////////////////////////////\n  async doMemosSync(mode:string):Promise<any> { this.logger.info('♻️ [syncServ|doMemosSync] ('+mode+')...');\n    // Prep Promise/Return Vars\n    let syncRes:any={changed:<boolean>false,ids:<any[]>[]};\n    // Get Now & Last Sync UTSs\n    const c=():boolean=>{if(mode==='refresh'){return true}else{return false}};\n    const p=()=>{this.evServ.publish('refreshTasksProg',null)};\n    let lastSyncUTS:number=0;const lSDBVal:number=await this.sqlServ.getSync('memos');\n    if(lSDBVal&&lSDBVal!==null&&lSDBVal!==0&&lSDBVal!==undefined&&this.dT.isV(this.dT.Dut(lastSyncUTS))){lastSyncUTS=lSDBVal}\n    else{lastSyncUTS=this.dT.getUT(this.dT.subYs(new Date(),1))};\n    if(c){p()};//Prog #1\n    // Get API & DB Object Lists for Comparison\n    let apiObs:any[]=[];let dbObs:any[]=[];let dbObIds:any=[];let apiObIds:any[]=[];\n    const {status,data}=await this.deputy.getResource('Memo');if(status===200){apiObs=data};\n    dbObs=(await this.sqlServ.getAllTableItems('memos')).values;\n    if(c){p()};//Prog #2\n    // Check All API Obs Appear In DB List - Add Any Missing\n    let addedAPIObIds:any=[];let deletedDBObIds:any[]=[];\n    for(let i=0;i<dbObs.length;i++){dbObIds.push(dbObs[i].Id)};\n    for(let i=0;i<apiObs.length;i++){apiObIds.push(apiObs[i].Id)};\n    const missAPIObs:any[]=apiObs.filter(apiOb=>!dbObIds.includes(apiOb.Id));\n    const missDBObs:any=dbObs.filter(dbOb=>!apiObIds.includes(dbOb.Id));\n    if(missDBObs.length>0){\n      for(let i=0;i<missDBObs.length;i++){\n        const missOb:any=missDBObs[i];\n        await this.sqlServ.deleteItem('memos','Id',missOb.Id);\n        deletedDBObIds.push(missOb.Id)\n      }\n      if(deletedDBObIds.length>0){syncRes.changed=true;syncRes.ids=deletedDBObIds}\n    }\n    if(missAPIObs.length>0){\n      for(let i=0;i<missAPIObs.length;i++){\n        const missOb:any=missAPIObs[i];\n        await this.sqlServ.insertSingleItem('tasks',missOb);\n        addedAPIObIds.push(missOb.Id)\n      }\n      if(addedAPIObIds.length>0){syncRes.changed=true;syncRes.ids=addedAPIObIds}\n    }\n    if(c){p()};//Prog #3\n    // Check All API (less new - above) & DB Modified Fields Match - Update DB With Modified API Obs \n    let updatedDBObIds:any[]=[];\n    const modedAPIObs:any[]=apiObs.filter(apiOb=>!addedAPIObIds.includes(apiOb.Id)&&!deletedDBObIds.includes(apiOb.Id)&&this.dT.getUT(new Date(apiOb.Modified))>lastSyncUTS);\n    if(modedAPIObs.length>0){\n      const modIds:any[]=[];for(let i=0;i<modedAPIObs.length;i++){modIds.push(modedAPIObs[i].Id)};\n      for(let i=0;i<modedAPIObs.length;i++){\n        const modOb=modedAPIObs[i];\n        const updateRes:any=await this.sqlServ.replaceItem('memos','Id',modOb.Id,modOb);\n        if(updateRes.result){updatedDBObIds.push(updateRes.id)}\n      };\n      if(updatedDBObIds.length>0){\n        syncRes.changed=true;\n        if(syncRes.ids.length>0){\n          let uIds:any[]=syncRes.ids.concat(updatedDBObIds);\n          uIds=_.uniq(uIds)\n        }else{syncRes.ids=updatedDBObIds}};\n    };\n    if(syncRes.changed){console.log('>>>>> SYNC: [RESULT]: { changed: '+syncRes.changed+', ids: '+syncRes.ids+' }.')}\n    else{console.log('>>>>> SYNC: [RESULT]: No New/Updated Items Found.');}\n    if(c){p()};//Prog #4\n    await this.sqlServ.setSync('tasks');\n    if(syncRes.changed){this.fireBackupDB()};\n    return Promise.resolve(syncRes);\n  }\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n}\n\n\n"],"sourceRoot":"webpack:///"}