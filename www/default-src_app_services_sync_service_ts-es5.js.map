{"version":3,"sources":["webpack:///src/app/services/sync.service.ts"],"names":["SyncService","logger","deputy","sqlServ","evServ","dT","storeServ","detailServ","fileServ","fireServ","apiTSheets","runDelayOnce","info","Promise","resolve","getSettings","settObj","database","options","backupMode","value","subscribe","blob","destroy","ulD","event","uploadFSDBBU","getFireDBBUFile","uUK","dbVArr","dpVArr","consFn","r","m","rT","c","getTbl","o","hasOwnProperty","dbArr","dpArr","tblN","sTblN","substring","length","remPs","remPDB","i","tO","remPDP","dbO","dbOId","Id","dpO","filter","toUpperCase","myDiff","diffObj","Object","entries","k","v","push","join","object","base","changes","result","key","tableN","getResSyncCount","apiC","getItemCount","dbC","isStaged","isDiff","actReq","Math","abs","publish","getTSheetSyncRange","apiData","getAllTableItems","dbData","values","apiIds","dbIds","getFromAPI","insCount","insErr","includes","missingObj","insertSingleItem","insRes","fireBackupDB","sendToAPI","mode","syncRes","changed","added","modified","p","lastSyncUTS","getSync","lSDBVal","undefined","isV","Dut","lastSyncDate","getUT","subYs","Date","apiObs","dbObs","dbObIds","getAllTSheetsOrderById","data","getAllTSheetsOrderId","missAPIObs","apiOb","missOb","modCompareAPIObs","modAPIOb","modDBObI","findIndex","ts","modAPIObDate","Modified","modDBObDate","isA","replaceItem","setSync","udbI","dSIStageCount","dSIStage","setUDBWasImported","getUDBWasImported","udbImportd","delayedInitsFN","ids","xtras","subDays","syncAgo","fDtN","replace","getMy","console","log","lsMyObUTS","myO","myObSyncAgo","tDiffS","tDiffM","tDiffH","tDiffD","toFixed","getAllRosters","addedAPIObIds","updatedDBObIds","modedAPIObs","modIds","modOb","updateRes","id","uIds","concat","getWeekTSheets","weekTSArr","extraShiftTSArr","Roster","xtraOb","notMatchedTS","rosO","MatchedByTimesheet","nMRos","nMRosDate","nMRosId","getMissTSRoster","apiRes","modRosArr","modRosOb","doTasksSync","apiObIds","getResource","status","deletedDBObIds","missDBObs","dbOb","deleteItem","NGXLogger","DeputyService","SQLiteService","EventsService","DateTimeService","StorageService","DetailService","FileSystemService","FirebaseService","Injectable","providedIn"],"mappings":"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","file":"default-src_app_services_sync_service_ts-es5.js","sourcesContent":["import { StorageService } from './storage.service';\nimport { DateTimeService } from './datetime.service';\nimport { EventsService } from './events.service';\nimport { DeputyService } from './deputy.service';\nimport { SQLiteService } from './sqlite.service';\nimport { FirebaseService } from './firebase.service';\nimport { FileSystemService } from './filesystem.service';\nimport { Injectable } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\nimport * as _ from 'lodash';\nimport { DetailService } from './detail.service';\nimport { AppUserSettings } from './appTypes';\n////////////////////////////////////////////////////////////////\n@Injectable({ providedIn: 'root' })\n////////////////////////////////////////////////////////////////\nexport class SyncService {\n////////////////////////////////////////////////////////////////\n  apiTSheets:any[]=null;\n  runDelayOnce:number=1;\n////////////////////////////////////////////////////////////////\n  constructor(\n    private logger: NGXLogger,\n    private deputy: DeputyService,\n    private sqlServ: SQLiteService,\n    private evServ: EventsService,\n    private dT:DateTimeService,\n    private storeServ:StorageService,\n    private detailServ:DetailService,\n    private fileServ:FileSystemService,\n    private fireServ:FirebaseService\n    ) { }\n////////////////////////////////////////////////////////////////\n  checkServ():Promise<any> { this.logger.info('♻️ [syncServ|doSync] (TRUE)...');\n    return Promise.resolve(true);\n  }\n////////////////////////////////////////////////////////////////\n  async fireBackupDB() { this.logger.info('♻️ [syncServ|fireBackupDB] 🚒 ()...');\n    const settObj:AppUserSettings=await this.detailServ.getSettings();\n    if(settObj.database.options.backupMode.value==='auto'){\n      this.evServ.subscribe('dbbuBlob',blob=>{this.evServ.destroy('dbbuBlob');\n        this.evServ.subscribe('dbbuULProg',ulD=>{this.evServ.destroy('dbbuULProg');\n          switch(ulD.event){\n            case 'successData':this.logger.info('♻️ [syncServ|fireBackupDB] 🚒 (✔️ SUCCESS) Uploaded DBBU to Cloud');break;\n            case 'errorData':this.logger.info('♻️ [syncServ|fireBackupDB] 🚒 (❌ ERROR) Error Uploading DBBU to Cloud');break;\n          }\n        });this.fireServ.uploadFSDBBU(blob);\n      });this.fileServ.getFireDBBUFile(this.deputy.uUK)\n    }else{this.logger.info('♻️ [syncServ|fireBackupDB]  🚒 (🤞 SKIPPED) DB backupMode!==AUTO')}\n  }\n////////////////////////////////////////////////////////////////\n  async deepValCheck(dbVArr:any[],dpVArr:any[]){ this.logger.info('♻️ [syncServ|deepValCheck] (dbArr,dpArr)...');\n    const consFn=(r:string,m:string)=>{let rT;r==='s'?rT='🟢 SUCCESS':r==='w'?rT='⚠️ WARNING':rT='🔴 ERROR';const c=this.logger.info('♻️ [syncServ|deepValCheck] 🩺 ('+rT+'): '+m)};\n    const getTbl=(o:any):Promise<string>=>{if(o.hasOwnProperty('MatchedByTimesheet')){return Promise.resolve('rosters')}else if(o.hasOwnProperty('Disputed')){return Promise.resolve('timesheets')}else if(o.hasOwnProperty('UserPerformTask')){return Promise.resolve('tasks')}else if(o.hasOwnProperty('ShowFrom')){return Promise.resolve('memos')}};\n    let dbArr:any[]=dbVArr;let dpArr:any[]=dpVArr;const tblN:string=await getTbl(dbArr[0]);const sTblN:string=tblN.substring(0,tblN.length-1);\n    const remPs=async(o:object):Promise<boolean>=>{if(_.unset(o,'last_modified')){return Promise.resolve(true)}else{return Promise.resolve(false)}};\n    if(dbArr.length!==dpArr.length){consFn('e','Total no. of items !== (DB vs DP)');return};\n    let remPDB:boolean=true;for(let i=0;i<dbArr.length;i++){const tO:object=dbArr[i];if(!(await remPs(tO))){remPDB=false}};\n    if(!remPDB){consFn('e','Failed to remove last_modified pty from '+tblN+' DB obj');return};\n    let remPDP:boolean=true;for(let i=0;i<dpArr.length;i++){const tO:object=dpArr[i];if(!(await remPs(tO))){remPDP=false}};\n    if(!remPDP){consFn('e','Failed to remove last_modified pty from '+tblN+' DP obj');return};\n    for(let i=0;i<dbArr.length;i++){\n      const dbO:any=dbArr[i];const dbOId:number=dbO.Id;\n      const dpO:any=dpArr.filter(o=>o.Id===dbOId)[0];\n      if(!_.isEqual(dbO,dpO)){\n        consFn('w','Obj Mismatch: '+sTblN.toUpperCase()+' ID #'+dbOId+' - Checking values...');\n        const diffObj:object=await this.myDiff(dpO,dbO);\n        this.logger.info(diffObj);\n        let m:any=[];for(const[k,v]of Object.entries(diffObj)){m.push(k+'!=='+v)};m=m.join(', ');\n        consFn('w','Val Mismatch(s): '+m);\n        /* const fixSQL:string='UPDATE `'+tblN+'` SET ? WHERE `Id` = ?';\n        const fixVals:any[]=[diffObj,dbOId];\n        const dbRes:boolean=await this.sqlServ.syncUpdateItem(fixSQL,fixVals);\n        if(dbRes){consFn('s','🛠️ Fixed/Updated '+Object.keys(diffObj).join(', ')+' for '+sTblN.toUpperCase()+' ID #'+dbOId)}\n        else{consFn('e','🛠️ Failed to Update '+Object.keys(diffObj).join(', ')+' for '+sTblN.toUpperCase()+' ID #'+dbOId)} */\n      };\n    };\n  }\n  //////////////////////////////////////////////////\n  /**\n  // @param  {Object} object Obj compared (mySQL)\n  // @param  {Object} base   Obj to compare (Fire)\n  // @return {Object} return Obj the Difference\n  */\n  //////////////////////////////////////////////////\n  async myDiff(object:any,base:any) {\n    function changes(object:any,base:any) {\n      return _.transform(object,function(result:any,value:any,key:any) {\n        if (!_.isEqual(value, base[key])) {\n          result[key] = (_.isObject(value) && _.isObject(base[key])) ? changes(value, base[key]) : value;\n        }\n      });\n    }\n    return changes(object, base);\n  }\n////////////////////////////////////////////////////////////////\n  async doSingleSync(tableN:string):Promise<any>{ this.logger.info('♻️ [syncServ|doSingleSync] ('+tableN+')...');\n    let isDiff:boolean;let actReq:string;let isStaged:boolean;\n    const apiC:number=await this.deputy.getResSyncCount(tableN);\n    const dbC:number=await this.sqlServ.getItemCount(tableN);\n    apiC>500?isStaged=true:isStaged=false;\n    if(apiC>dbC){isDiff=true;actReq='down';this.logger.info('♻️ [syncServ|doSingleSync] (Count Diff): Need to [DOWNLOAD] '+Math.abs(apiC-dbC)+' '+tableN+' Item(s) from API.')}\n    else if(dbC>apiC){isDiff=true;actReq='up';this.logger.info('♻️ [syncServ|doSingleSync] (Count Diff): Need to [UPLOAD/SAVE] '+Math.abs(apiC-dbC)+' '+tableN+' Item(s) to API.')}\n    else{isDiff=false;this.logger.info('♻️ [syncServ|doSingleSync] (Count Diff): '+apiC+'(api) === '+dbC+'(db) - No Difference/Action Required.')};\n    //Prog #1\n    this.evServ.publish('refreshTSProg','getapi');\n    if(!isStaged){\n      const apiData:any[]=await this.deputy.getTSheetSyncRange(false,null,null,false);\n      const dbData:any[]=(await this.sqlServ.getAllTableItems(tableN)).values;\n      //Prog #2\n      this.evServ.publish('refreshTSProg','diffcheck');\n      if(apiData.length>0&&dbData.length>0){ \n        this.logger.info('♻️ [syncServ|Deputy|getTSheetSyncRange] (Success) - Comparing '+apiData.length+' API Items to '+dbData.length+' DB Items...');\n        if(isDiff){\n          let apiIds:any[]=[];let dbIds:any[]=[];\n          for(let i=0;i<apiData.length;i++){apiIds.push(apiData[i].Id)};\n          for(let i=0;i<dbData.length;i++){dbIds.push(dbData[i].Id)};\n          if(actReq==='down'){\n            let getFromAPI:any=[];let insCount:number=0; let insErr:boolean=false;\n            for(let i=0;i<apiIds.length;i++){if(!dbIds.includes(apiIds[i])){getFromAPI.push(apiIds[i])}};\n            this.logger.info('♻️ [syncServ|Diff] (Result): Download from API ('+tableN+') >>> Ids '+getFromAPI.join(', '));\n            for(let i=0;i<getFromAPI.length;i++){\n              const missingObj:any=apiData.filter(o=>o.Id===getFromAPI[i])[0];\n              const insRes:boolean = await this.sqlServ.insertSingleItem(tableN,missingObj);\n              if(insRes===true){insCount++}else{insCount++;insErr=true};\n              if(insCount===getFromAPI.length){\n                //Prog #3\n                this.evServ.publish('refreshTSProg','insertupload');\n                this.logger.info('♻️ [syncServ|InsertMissing] (Finished) ['+insCount+'/'+getFromAPI.length+']...');\n                this.logger.info('♻️ [syncServ|doSingleSync|Missing] (Insert Missing Objs Api=>DB) COMPLETED!'); \n                return Promise.resolve(getFromAPI);\n              }\n            };\n            if(insCount>0){this.fireBackupDB()};\n          }else{\n            let sendToAPI:any[]=[];for(let i=0;i<dbIds.length;i++){if(!apiIds.includes(dbIds[i])){sendToAPI.push(dbIds[i])}};\n            this.logger.info('♻️ [syncServ|Diff] (Result): Upload to API ('+tableN+') >>> Ids '+sendToAPI.join(','));\n            return Promise.resolve(sendToAPI);\n          }\n        }else{return Promise.resolve([])}\n      }else{this.logger.info('♻️ [syncServ|Deputy|getTSheetSyncRange] (Error) - NIL Items Returned by API and/or DB - Aborting.');return Promise.resolve([])}\n    }else{this.logger.info('♻️ [syncServ|doSingleSync] (All Mode) - Checking All '+tableN+' Items (New/Updated)...');return Promise.resolve([])}\n  }\n////////////////////////////////////////////////////////////////\n  async doTSheetsSync(mode:string):Promise<any> { this.logger.info('♻️ [syncServ|doTSheetSync] ('+mode+')...');\n    // Prep Promise/Return Vars\n    let syncRes:any={changed:<boolean>false,added:<any[]>[],modified:<any[]>[]};\n    // Get Now & Last Sync UTSs\n    const c=():boolean=>{if(mode==='refresh'){return true}else{return false}};const p=()=>{this.evServ.publish('refreshTSheetsProg',null)};\n    let lastSyncUTS:number=0;let lastSyncDate:Date;const lSDBVal:number=await this.sqlServ.getSync('timesheets');\n    if(lSDBVal&&lSDBVal!==null&&lSDBVal!==0&&lSDBVal!==undefined&&this.dT.isV(this.dT.Dut(lastSyncUTS))){lastSyncUTS=lSDBVal;lastSyncDate=this.dT.Dut(lastSyncUTS)}\n    else{lastSyncUTS=this.dT.getUT(this.dT.subYs(new Date(),1));lastSyncDate=this.dT.subYs(new Date(),1)};\n    if(c){p()};//Prog #1\n    // Get API & DB Object Lists for Comparison\n    let apiObs:any[]=[];let dbObs:any[]=[];let dbObIds:any=[];\n    if(this.apiTSheets!==null){apiObs=this.apiTSheets}else{apiObs=(await this.deputy.getAllTSheetsOrderById()).data};\n    dbObs=await this.sqlServ.getAllTSheetsOrderId();\n    if(c){p()};//Prog #2\n    // Check All API Obs Appear In DB - Add Missing\n    for(let i=0;i<dbObs.length;i++){dbObIds.push(dbObs[i].Id)};\n    const missAPIObs:any[]=apiObs.filter(apiOb=>!dbObIds.includes(apiOb.Id));\n    if(missAPIObs.length>0){\n      syncRes.changed=true;\n      for(let i=0;i<missAPIObs.length;i++){\n        const missOb:any=missAPIObs[i];\n        await this.sqlServ.insertSingleItem('timesheets',missOb);\n        syncRes.added.push(missOb.Id)\n      }  \n    }else{this.logger.info('♻️ [syncServ|doTSheetsSync] ['+missAPIObs.length+'] Timesheets Required [MISSING] Updates.')};\n    if(c){p()};//Prog #3\n    // Replace DB Ob if API Ob Has Later Modified Date\n    const modCompareAPIObs:any[]=apiObs.filter(apiOb=>!syncRes.added.includes(apiOb.Id));\n    if(modCompareAPIObs.length>0){\n      syncRes.changed=true;\n      for(let i=0;i<modCompareAPIObs.length;i++){\n        const modAPIOb:any=modCompareAPIObs[i];\n        const modDBObI:number=dbObs.findIndex(ts=>ts.Id===modAPIOb.Id);\n        const modAPIObDate:Date=new Date(modAPIOb.Modified);\n        let modDBObDate:Date=null;modDBObI!==-1?modDBObDate=new Date(dbObs[modDBObI].Modified):modDBObDate=null;\n        if(modDBObDate!==null){\n          if(this.dT.isA(modAPIObDate,modDBObDate)){\n            await this.sqlServ.replaceItem('timesheets','Id',modAPIOb.Id,modAPIOb);\n            syncRes.modified.push(modAPIOb.Id)\n          }\n        }\n      } \n    }else{this.logger.info('♻️ [syncServ|doTSheetsSync] ['+modCompareAPIObs.length+'] Timesheets Required [MODIFIED] Updates.')};\n    /////////////////////////////////////////////////////\n    this.logger.info('>>>>> SYNC: [RESULT]: Changes: '+syncRes.changed.toUpperCase+' - Added: '+syncRes.added.join(',')+' ('+syncRes.added.length+') | Modified: '+syncRes.modified.join(',')+' ('+syncRes.modified.length+')');\n    if(c){p()};//Prog #4\n    await this.sqlServ.setSync('timesheets');\n    if(syncRes.changed){this.fireBackupDB()};\n    return Promise.resolve(syncRes);\n  }\n//////////////////////////////////////////////////////////////// \n  delayedInitsFN(udbI:boolean) { this.logger.info('♻️ [syncServ|delayedInitsFN] ()...');\n    this.logger.info('♻️ [syncServ|delayedInitsFN] UDB Import Detected! ('+udbI+') >>> [DELAYED ALERT/INIT/SYNC ACTIVATED]...');\n    if(this.runDelayOnce===1){\n      this.runDelayOnce--;let dSIStageCount:number=0;\n      this.evServ.subscribe('delayedSyncInit',async dSIStage=>{dSIStageCount++;\n        this.logger.info('♻️ [syncServ|delayedInitsFN] - STAGE #'+dSIStageCount+'/2 = '+dSIStage.toUpperCase());\n        if(dSIStageCount===2){\n          this.evServ.destroy('delayedSyncInit');\n          await this.detailServ.setUDBWasImported(false);\n          this.evServ.publish('delayedSyncDone',true);\n        }\n      })\n    }else{this.logger.info('♻️ [syncServ|delayedInitsFN] ALREADY RUNNING - Ignoring Subsequent Request!')};\n  }\n////////////////////////////////////////////////////////////////\n  async doShiftsSync(mode:string):Promise<any> { this.logger.info('♻️ [syncServ|doShiftsSync] ('+mode+')...');\n    const udbImportd:boolean=await this.detailServ.getUDBWasImported();\n    if(udbImportd){this.delayedInitsFN(udbImportd)};\n    const c=():boolean=>{if(mode==='refresh'){return true}else{return false}};\n    const p=()=>{this.evServ.publish('refreshTSheetsProg',null)};\n    let syncRes:any={changed:<boolean>false,ids:<any[]>[],xtras:<any[]>[]};\n    // Get Now & Last Sync UTSs\n    let lastSyncUTS:number=0;const lSDBVal:number=await this.sqlServ.getSync('rosters');\n    if(lSDBVal&&lSDBVal!==null&&lSDBVal!==0&&lSDBVal!==undefined&&this.dT.isV(this.dT.Dut(lastSyncUTS))){lastSyncUTS=lSDBVal}\n    else{lastSyncUTS=this.dT.getUT(this.dT.subYs(new Date(),1))};\n    //////////////// Mock Old Sync\n    lastSyncUTS=this.dT.getUT(this.dT.subDays(new Date(),2));\n    ////////////////\n    const syncAgo:string=this.dT.fDtN(this.dT.Dut(lastSyncUTS)).replace('about','≈');\n    if(c){p()};//Prog #1\n    // Get API & DB Object Lists for Comparison\n    let apiObs:any[]=[];let dbObs:any[]=[];let dbObIds:any=[];\n    apiObs=(await this.deputy.getMy('roster')).data;\n    console.log(apiObs);\n    this.logger.info('♻️ [syncServ|delayedInitsFN] [ROSTERS] (ApiObs): '+apiObs.length);\n    // if earliest MY roster is more recent than last sync?\n    // convert all MY roster ob Dates to UTSs & find lowest\n    const lsMyObUTS:number=this.dT.getUT(new Date((_.minBy(apiObs,myO=>this.dT.getUT(new Date(myO.Date)))).Date));\n    const myObSyncAgo:string=this.dT.fDtN(this.dT.Dut(lsMyObUTS)).replace('about','≈');\n    this.logger.info('♻️ [syncServ|delayedInitsFN] [ROSTERS] (SyncUTS): '+lastSyncUTS+' ('+syncAgo+')');\n    this.logger.info('♻️ [syncServ|delayedInitsFN] [ROSTERS] (MyObUTS): '+lsMyObUTS+' ('+myObSyncAgo+')');\n    if(lastSyncUTS<lsMyObUTS){\n      const tDiffS=lsMyObUTS-lastSyncUTS;\n      const tDiffM=tDiffS/60;\n      const tDiffH=tDiffM/60;\n      const tDiffD=tDiffH/24;\n      if(tDiffH>24){console.log('Synced '+tDiffD.toFixed(1)+' days [BEFORE] MY data starts')}\n      else{console.log('Synced '+tDiffH.toFixed(1)+' hours [BEFORE] MY data starts')}\n    }else{\n      const tDiffS=lastSyncUTS-lsMyObUTS;\n      const tDiffM=tDiffS/60;\n      const tDiffH=tDiffM/60;\n      const tDiffD=tDiffH/24;\n      if(tDiffH>24){console.log('Synced '+tDiffD.toFixed(1)+' days [AFTER] MY data starts')}\n      else{console.log('Synced '+tDiffH.toFixed(1)+' hours [AFTER] MY data starts')}\n    };\n    dbObs=await this.sqlServ.getAllRosters();\n    if(c){p()};//Prog #2\n    // Check All API Obs Appear In DB List - Add Any Missing\n    let addedAPIObIds:any=[];\n    for(let i=0;i<dbObs.length;i++){dbObIds.push(dbObs[i].Id)};\n    const missAPIObs:any[]=apiObs.filter(apiOb=>!dbObIds.includes(apiOb.Id));\n    if(missAPIObs.length>0){\n      for(let i=0;i<missAPIObs.length;i++){const missOb:any=missAPIObs[i];await this.sqlServ.insertSingleItem('rosters',missOb);addedAPIObIds.push(missOb.Id)};if(addedAPIObIds.length>0){syncRes.changed=true;syncRes.ids=addedAPIObIds}\n    }\n    if(c){p()};//Prog #3\n    // Check All API (less new - above) & DB Modified Fields Match - Update DB With Modified API Obs \n    let updatedDBObIds:any[]=[];\n    const modedAPIObs:any[]=apiObs.filter(apiOb=>!addedAPIObIds.includes(apiOb.Id)&&this.dT.getUT(new Date(apiOb.Modified))>lastSyncUTS);\n    if(modedAPIObs.length>0){\n      const modIds:any[]=[];for(let i=0;i<modedAPIObs.length;i++){modIds.push(modedAPIObs[i].Id)};\n      for(let i=0;i<modedAPIObs.length;i++){\n        const modOb=modedAPIObs[i];\n        const updateRes:any=await this.sqlServ.replaceItem('rosters','Id',modOb.Id,modOb);\n        if(updateRes.result){updatedDBObIds.push(updateRes.id)}};\n      if(updatedDBObIds.length>0){syncRes.changed=true;if(syncRes.ids.length>0){let uIds:any[]=syncRes.concat(updatedDBObIds);uIds=_.uniq(uIds)}else{syncRes.ids=updatedDBObIds}};\n    };\n    /////////////////////////////////////////////////////\n    const weekTSArr:any=await this.deputy.getWeekTSheets();\n    const extraShiftTSArr:any=weekTSArr.filter(ts=>ts.Roster===null);\n    if(extraShiftTSArr.length>0){\n      for(let i=0;i<extraShiftTSArr.length;i++){\n        const xtraOb:any=extraShiftTSArr[i];\n        await this.sqlServ.insertSingleItem('timesheets',xtraOb);\n        syncRes.xtras.push(xtraOb);\n      }\n    }\n    /////////////////////////////////////////////////////\n    const notMatchedTS:any[]=dbObs.filter(rosO=>rosO.MatchedByTimesheet<1);\n    if(notMatchedTS.length>0){\n      for(let i=0;i<notMatchedTS.length;i++){\n        const nMRos:any=notMatchedTS[i];const nMRosDate:Date=new Date(nMRos.Date);const nMRosId:number=nMRos.Id;\n        const apiRes:any=await this.deputy.getMissTSRoster(nMRosDate);\n        if(apiRes.result&&apiRes.data.length>0){const modRosArr:any[]=apiRes.data.filter(r=>r.Id===nMRosId);\n          if(modRosArr.length>0){const modRosOb:any=modRosArr[0];await this.sqlServ.replaceItem('rosters','Id',modRosOb.Id,modRosOb)}\n        }\n      }  \n    }\n    /////////////////////////////////////////////////////\n    if(syncRes.changed){console.log('>>>>> SYNC: [RESULT]: { changed: '+syncRes.changed+', ids: '+syncRes.ids+' }.')}\n    else{console.log('>>>>> SYNC: [RESULT]: No New/Updated Items Found.');}\n    if(c){p()};//Prog #4\n    await this.sqlServ.setSync('rosters');\n    if(syncRes.changed){this.fireBackupDB()};\n    if(udbImportd){this.evServ.publish('delayedSyncInit','shifts');this.doTasksSync('delayed')};\n    return Promise.resolve(syncRes);\n  }\n////////////////////////////////////////////////////////////////\n  async doTasksSync(mode:string):Promise<any> { this.logger.info('♻️ [syncServ|doTasksSync] ('+mode+')...');\n    // Prep Promise/Return Vars\n    let syncRes:any={changed:<boolean>false,ids:<any[]>[]};\n    // Get Now & Last Sync UTSs\n    const c=():boolean=>{if(mode==='refresh'){return true}else{return false}};\n    const p=()=>{this.evServ.publish('refreshTasksProg',null)};\n    let lastSyncUTS:number=0;const lSDBVal:number=await this.sqlServ.getSync('tasks');\n    if(lSDBVal&&lSDBVal!==null&&lSDBVal!==0&&lSDBVal!==undefined&&this.dT.isV(this.dT.Dut(lastSyncUTS))){lastSyncUTS=lSDBVal}\n    else{lastSyncUTS=this.dT.getUT(this.dT.subYs(new Date(),1))};\n    if(c){p()};//Prog #1\n    // Get API & DB Object Lists for Comparison\n    let apiObs:any[]=[];let dbObs:any[]=[];let dbObIds:any=[];let apiObIds:any[]=[];\n    const {status,data}=await this.deputy.getResource('Task');if(status===200){apiObs=data};\n    dbObs=(await this.sqlServ.getAllTableItems('tasks')).values;\n    if(c){p()};//Prog #2\n    // Check All API Obs Appear In DB List - Add Any Missing\n    let addedAPIObIds:any=[];let deletedDBObIds:any[]=[];\n    for(let i=0;i<dbObs.length;i++){dbObIds.push(dbObs[i].Id)};\n    for(let i=0;i<apiObs.length;i++){apiObIds.push(apiObs[i].Id)};\n    const missAPIObs:any[]=apiObs.filter(apiOb=>!dbObIds.includes(apiOb.Id));\n    const missDBObs:any=dbObs.filter(dbOb=>!apiObIds.includes(dbOb.Id));\n    if(missDBObs.length>0){\n      for(let i=0;i<missDBObs.length;i++){\n        const missOb:any=missDBObs[i];\n        await this.sqlServ.deleteItem('tasks','Id',missOb.Id);\n        deletedDBObIds.push(missOb.Id)\n      }\n      if(deletedDBObIds.length>0){syncRes.changed=true;syncRes.ids=deletedDBObIds}\n    }\n    if(missAPIObs.length>0){\n      for(let i=0;i<missAPIObs.length;i++){\n        const missOb:any=missAPIObs[i];\n        await this.sqlServ.insertSingleItem('tasks',missOb);\n        addedAPIObIds.push(missOb.Id)\n      }\n      if(addedAPIObIds.length>0){syncRes.changed=true;syncRes.ids=addedAPIObIds}\n    }\n    if(c){p()};//Prog #3\n    // Check All API (less new - above) & DB Modified Fields Match - Update DB With Modified API Obs \n    let updatedDBObIds:any[]=[];\n    const modedAPIObs:any[]=apiObs.filter(apiOb=>!addedAPIObIds.includes(apiOb.Id)&&!deletedDBObIds.includes(apiOb.Id)&&this.dT.getUT(new Date(apiOb.Modified))>lastSyncUTS);\n    if(modedAPIObs.length>0){\n      const modIds:any[]=[];for(let i=0;i<modedAPIObs.length;i++){modIds.push(modedAPIObs[i].Id)};\n      for(let i=0;i<modedAPIObs.length;i++){\n        const modOb=modedAPIObs[i];\n        const updateRes:any=await this.sqlServ.replaceItem('tasks','Id',modOb.Id,modOb);\n        if(updateRes.result){updatedDBObIds.push(updateRes.id)}\n      };\n      if(updatedDBObIds.length>0){\n        syncRes.changed=true;\n        if(syncRes.ids.length>0){\n          let uIds:any[]=syncRes.ids.concat(updatedDBObIds);\n          uIds=_.uniq(uIds)\n        }else{syncRes.ids=updatedDBObIds}};\n    };\n    if(syncRes.changed){console.log('>>>>> SYNC: [RESULT]: { changed: '+syncRes.changed+', ids: '+syncRes.ids+' }.')}\n    else{console.log('>>>>> SYNC: [RESULT]: No New/Updated Items Found.');}\n    if(c){p()};//Prog #4\n    await this.sqlServ.setSync('tasks');\n    if(syncRes.changed){this.fireBackupDB()};\n    if(mode==='delayed'){this.evServ.publish('delayedSyncInit','tasks')};\n    return Promise.resolve(syncRes);\n  }\n////////////////////////////////////////////////////////////////\n  async doMemosSync(mode:string):Promise<any> { this.logger.info('♻️ [syncServ|doMemosSync] ('+mode+')...');\n    // Prep Promise/Return Vars\n    let syncRes:any={changed:<boolean>false,ids:<any[]>[]};\n    // Get Now & Last Sync UTSs\n    const c=():boolean=>{if(mode==='refresh'){return true}else{return false}};\n    const p=()=>{this.evServ.publish('refreshTasksProg',null)};\n    let lastSyncUTS:number=0;const lSDBVal:number=await this.sqlServ.getSync('memos');\n    if(lSDBVal&&lSDBVal!==null&&lSDBVal!==0&&lSDBVal!==undefined&&this.dT.isV(this.dT.Dut(lastSyncUTS))){lastSyncUTS=lSDBVal}\n    else{lastSyncUTS=this.dT.getUT(this.dT.subYs(new Date(),1))};\n    if(c){p()};//Prog #1\n    // Get API & DB Object Lists for Comparison\n    let apiObs:any[]=[];let dbObs:any[]=[];let dbObIds:any=[];let apiObIds:any[]=[];\n    const {status,data}=await this.deputy.getResource('Memo');if(status===200){apiObs=data};\n    dbObs=(await this.sqlServ.getAllTableItems('memos')).values;\n    if(c){p()};//Prog #2\n    // Check All API Obs Appear In DB List - Add Any Missing\n    let addedAPIObIds:any=[];let deletedDBObIds:any[]=[];\n    for(let i=0;i<dbObs.length;i++){dbObIds.push(dbObs[i].Id)};\n    for(let i=0;i<apiObs.length;i++){apiObIds.push(apiObs[i].Id)};\n    const missAPIObs:any[]=apiObs.filter(apiOb=>!dbObIds.includes(apiOb.Id));\n    const missDBObs:any=dbObs.filter(dbOb=>!apiObIds.includes(dbOb.Id));\n    if(missDBObs.length>0){\n      for(let i=0;i<missDBObs.length;i++){\n        const missOb:any=missDBObs[i];\n        await this.sqlServ.deleteItem('memos','Id',missOb.Id);\n        deletedDBObIds.push(missOb.Id)\n      }\n      if(deletedDBObIds.length>0){syncRes.changed=true;syncRes.ids=deletedDBObIds}\n    }\n    if(missAPIObs.length>0){\n      for(let i=0;i<missAPIObs.length;i++){\n        const missOb:any=missAPIObs[i];\n        await this.sqlServ.insertSingleItem('tasks',missOb);\n        addedAPIObIds.push(missOb.Id)\n      }\n      if(addedAPIObIds.length>0){syncRes.changed=true;syncRes.ids=addedAPIObIds}\n    }\n    if(c){p()};//Prog #3\n    // Check All API (less new - above) & DB Modified Fields Match - Update DB With Modified API Obs \n    let updatedDBObIds:any[]=[];\n    const modedAPIObs:any[]=apiObs.filter(apiOb=>!addedAPIObIds.includes(apiOb.Id)&&!deletedDBObIds.includes(apiOb.Id)&&this.dT.getUT(new Date(apiOb.Modified))>lastSyncUTS);\n    if(modedAPIObs.length>0){\n      const modIds:any[]=[];for(let i=0;i<modedAPIObs.length;i++){modIds.push(modedAPIObs[i].Id)};\n      for(let i=0;i<modedAPIObs.length;i++){\n        const modOb=modedAPIObs[i];\n        const updateRes:any=await this.sqlServ.replaceItem('memos','Id',modOb.Id,modOb);\n        if(updateRes.result){updatedDBObIds.push(updateRes.id)}\n      };\n      if(updatedDBObIds.length>0){\n        syncRes.changed=true;\n        if(syncRes.ids.length>0){\n          let uIds:any[]=syncRes.ids.concat(updatedDBObIds);\n          uIds=_.uniq(uIds)\n        }else{syncRes.ids=updatedDBObIds}};\n    };\n    if(syncRes.changed){console.log('>>>>> SYNC: [RESULT]: { changed: '+syncRes.changed+', ids: '+syncRes.ids+' }.')}\n    else{console.log('>>>>> SYNC: [RESULT]: No New/Updated Items Found.');}\n    if(c){p()};//Prog #4\n    await this.sqlServ.setSync('tasks');\n    if(syncRes.changed){this.fireBackupDB()};\n    return Promise.resolve(syncRes);\n  }\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n}\n\n\n"]}