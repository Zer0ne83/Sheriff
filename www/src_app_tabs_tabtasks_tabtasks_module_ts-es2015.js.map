{"version":3,"sources":["./src/app/tabs/tabtasks/tabtasks.module.ts","./src/app/tabs/tabtasks/tabtasks.page.ts","./src/app/tabs/tabtasks/tabtasks.page.scss","./src/app/tabs/tabtasks/tabtasks.page.html"],"names":[],"mappings":"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","file":"src_app_tabs_tabtasks_tabtasks_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport { TabTasksPage } from './tabtasks.page';\nimport { DirectivesModule } from './../../directives/directives.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabTasksPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    NgCircleProgressModule.forRoot(),\n    DirectivesModule\n  ],\n  declarations: [TabTasksPage]\n})\nexport class TabTasksPageModule {}\n","import { EventsService } from './../../services/events.service';\nimport { SQLiteService } from './../../services/sqlite.service';\nimport { DetailService } from './../../services/detail.service';\nimport { DateTimeService } from 'src/app/services/datetime.service';\nimport { SyncService } from 'src/app/services/sync.service';\nimport { DeputyService } from 'src/app/services/deputy.service';\nimport { TaskAddPage } from 'src/app/modals/detail/task-add/task-add.page';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Platform, IonReorderGroup, IonSegment, ModalController, LoadingController, IonSegmentButton, IonContent, IonRefresher } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { NGXLogger } from 'ngx-logger';\nimport { AppUserSettings } from './../../services/appTypes';\nimport * as $ from 'jquery';\nimport * as _ from 'lodash';\n////////////////////////////////////////////////////////////////////////////////////////\n@Component({ selector: 'app-tabtasks', templateUrl: './tabtasks.page.html', styleUrls: ['./tabtasks.page.scss'] })\n////////////////////////////////////////////////////////////////////////////////////////\nexport class TabTasksPage implements OnInit {\n////////////////////////////////////////////////////////////////////////////////////////\n  @ViewChild(IonReorderGroup,{static:false}) tasksReorderGroup:IonReorderGroup;\n  @ViewChild(IonSegment,{static:false}) tabTasksSegment:IonSegment;\n  @ViewChild(IonSegmentButton,{static:false}) tTSegBtnMyTasks:IonSegmentButton;\n  @ViewChild(IonSegmentButton,{static:false}) tTSegBtnAssTasks:IonSegmentButton;\n  @ViewChild('tasksContent',{static:false}) tasksContent: IonContent;\n  @ViewChild('tasksRefresher') tasksRefresher:IonRefresher;\n  // Page/Tab, Init Prefs, Prog Circ, Refresher\n  tabKey:string;dbDataTbl:string='tasks';splashIsShowing:boolean;\n  myPpl:any[]=[];myObj:any;meObj:any;meEmpId:number;meAvatar:string;workAvatar:string;\n  progCirc:any={responsive:true,showTitle:false,showSubtitle:false,showUnits:false,percent:0,radius:56,outerStrokeWidth:4,showInnerStroke:false,outerStrokeColor:'#FF9800',animation:true,backgroundPadding:2,animationDuration:400};\n  refresher:any;isRefreshing:boolean;\n  preventRefreshPull:boolean=false;\n  // Task List/Data/DB\n  tLists:any[]=['MyTasksToDo','MyTasksDone','AssTasksAssigned','AssTasksDone'];\n  dbTaskItems:any[]=[];\n  myTasks:any[]=[];myTasksToDo:any[]=[];myTasksDone:any[]=[];\n  assTasks:any[]=[];assTasksAssigned:any[]=[];assTasksDone:any[]=[];\n  totalMyTasksToDo:number=0;totalMyTasksDone:number=0;totalAssTasksAssigned:number=0;totalAssTasksDone:number=0;\n  // Tasks Segment/Buttons\n  tTSegProps:any={tTDisabled:false,tTMode:'md',tTScrollable:false,tTSwipeGesture:true,tTValue:'mytasks',tTSegBtns:{MyTasksProps:{disabled:false,layout:'icon-start',mode:'md',type:'button',value:'mytasks'},AssTasksProps:{disabled:false,layout:'icon-start',mode:'md',type:'button',value:'asstasks'}}};\n  // Alerts\n  alertMethods:any={phone:null,calendar:null,email:null};\n  alertEvents:any={shift:null,task:null,tsheet:null};\n  // ReOrder Mode\n  tTReorderGroupProps:any={roDisabled:true};\n  beforeROIds:any[]=[];\n  afterROIds:any[]=[];\n  // Delete Mode\n  deleteMode:boolean=false;\n  // Add Task\n  addTaskModalOpts:any={animated:false,showBackdrop:false,backdropDismiss:false,cssClass:'tsheet-detail-modal-class',component:TaskAddPage,keyboardClose:true};\n  addTaskModalOpen:boolean=false;\n  // Task Prog\n  taskProg:boolean=false;\n  // Doofy\n  assignToSelectAlertOpts:any={cssClass:'quickSelectClass',header:'Assign Task To'};\n  taskAssignTo;\n  assignSelectedCWName;\n  assignSelectedValue;\n  myFirstName;\n  recentNoteCount;\n  segment;\n  myTasksSegmentActive;\n  assignedSegmentActive;\n  currentTasksObj;\n  globalToDoTaskListArr = [];\n  globalCompletedTaskListArr = [];\n  globalCWArr = [];\n  taskInputAdd = true;\n  taskInputEdit;\n  addEditTaskDueDate = '';\n  newTaskDateTime;\n  reorderTasks:any;\n  unsortedToDoListArr = [];\n////////////////////////////////////////////////////////////////////////////////////////\n  constructor(\n    private plt: Platform,\n    private router: Router,\n    private logger: NGXLogger,\n    private modalCtrl: ModalController,\n    private sqlServ: SQLiteService,\n    private syncServ: SyncService,\n    private evServ: EventsService,\n    private deputy: DeputyService,\n    private dT: DateTimeService,\n    private detailServ:DetailService\n  ) { }\n////////////////////////////////////////////////////////////////////////////////////////\n  async ngOnInit() { this.logger.info('[TabTasks|ngOnInit] ()...');\n    const urlArr=this.router.url.split('/');this.tabKey=urlArr[urlArr.length-1];\n    this.initAlertOpts();\n    this.initPrefs();\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  ionViewWillEnter() { this.logger.info('[TabTasks|ionViewWillEnter] ()...') }\n////////////////////////////////////////////////////////////////////////////////////////\n  ionViewDidEnter() { this.logger.info('[TabTasks|ionViewDidEnter] ()...');\n    this.evServ.subscribe('alertsStatus',()=>{this.evServ.subscribe('alertsStatus',()=>{this.initAlertOpts()})});\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async initPrefs() { this.logger.info('[TabTasks|initPrefs] ()...');\n    this.myPpl=this.detailServ.pplArr;this.myObj=this.detailServ.myObj;this.meObj=this.detailServ.meObj;this.meAvatar=this.detailServ.meAva;this.workAvatar=this.detailServ.workAva;\n    this.syncTasks('init');\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async initAlertOpts() { this.logger.info('[TabTasks|initAlertOpts] ()...');\n    const getDSSett:AppUserSettings|null=await this.detailServ.getSettings();\n    if(getDSSett!==null){\n      const aMs:any=getDSSett.alerts.options.alertMethods.value;const aEs:any=getDSSett.alerts.options.alertEvents.value;\n      this.alertMethods.phone=aMs.phone;this.alertMethods.calendar=aMs.calendar;this.alertMethods.email=aMs.email;\n      this.alertEvents.task=aEs.task;\n    }\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async syncTasks(mode:string) { this.logger.info('[TabTasks|syncTasks] ('+mode+')...');\n    if(mode==='init'){\n      this.plt.ready().then(async()=>{\n        await this.syncServ.doTasksSync('init');\n        setTimeout(()=>{this.fetchTasks()},250);\n      })\n    }else{\n      this.dbTaskItems=[];\n      await this.syncServ.doTasksSync('refresh');\n      setTimeout(()=>{this.fetchTasks()},250)\n    }\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async fetchTasks() { this.logger.info('[TabTasks|initFetchTasks] ()...');\n    const getAllTasksRes:any=await this.sqlServ.getAllTableItems('tasks');\n    console.log(getAllTasksRes.values);\n    if(getAllTasksRes.values.length>0){const locAllTs:any[]=getAllTasksRes.values;const sortdAllTs:any[]=_.sortBy(locAllTs,'SortOrder');\n    for(let i=0;i<sortdAllTs.length;i++){this.formatTask(sortdAllTs[i])};\n    this.updateListCounts();\n    }else{for(let i=0;i<this.tLists.length;i++){this['total'+this.tLists[i]]=0}}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  formatTask(rawTaskObj:any):any { this.logger.info('[TabTasks|formatTask] (taskObject)...');\n    let rTO:any=rawTaskObj;\n    console.log('Start SortOrder: '+rTO.SortOrder);\n    rTO.Question===null||rTO.Question===undefined||rTO.Question===''||rTO.Question.length===0?rTO.Question=null:rTO.Question=rTO.Question;\n    rTO.Comment===null||rTO.Comment===undefined||rTO.Comment===''||rTO.Comment.length===0?rTO.Comment=null:rTO.Comment=rTO.Comment;\n    const uEntryArr:any[]=this.myPpl.filter(p=>p.EmpId===rTO.UserEntry);\n    if(uEntryArr.length>0){\n      const pO:any=uEntryArr[0];\n      if(pO.EmpId===this.meEmpId){rTO['nUserEntry']='You'}\n      else{\n        if(pO.FirstName.length>0&&pO.LastName.length>0){rTO['nUserEntry']=pO.FirstName+' '+pO.LastName.charAt(0)+'.'}\n        else{pO.DisplayName.length>0?rTO['nUserEntry']=pO.DisplayName:rTO['nUserEntry']='NK'}\n      };\n      rTO['nFromAvatar']=pO.Photo\n    }else{rTO['nUserEntry']='NK';rTO['nFromAvatar']='./../../assets/img/sheriff-tsheet-detail-unknown-sv-ico.png'};\n    const uAssignedArr:any[]=this.myPpl.filter(p=>p.EmpId===rTO.UserResponsible);\n    if(uAssignedArr.length>0){\n      const pO:any=uAssignedArr[0];\n      if(pO.EmpId===this.meEmpId){rTO['nAssigned']='You'}\n      else{\n        if(pO.FirstName.length>0&&pO.LastName.length>0){rTO['nAssigned']=pO.FirstName+' '+pO.LastName.charAt(0)+'.'}\n        else{pO.DisplayName.length>0?rTO['nAssigned']=pO.DisplayName:rTO['nAssigned']='NK'}\n      };\n      rTO['nAssignedAvatar']=pO.Photo\n    }else{rTO['nAssigned']='NK';rTO['nAssignedAvatar']='./../../assets/img/sheriff-tsheet-detail-unknown-sv-ico.png'};\n    const createD:Date=new Date(rTO.Created);rTO['nCreated']=this.dT.format(createD,'EEE, d MMM yyyy');\n    if(rTO.DueTimestamp!==-1&&rTO.DueTimestamp!==null&&rTO.DueTimestamp!==undefined&&rTO.DueTimestamp!==''){const dueD:Date=this.dT.Dut(rTO.DueTimestamp);rTO['nDue']=this.dT.format(dueD,'EEE, d MMM yyyy');const nowUT:number=this.dT.getUT(new Date());if(nowUT>rTO.DueTimestamp){rTO['nIsLate']=true;rTO['nOverDue']=this.dT.DurAsObj(new Date(),dueD)}else{rTO['nIsLate']=false}};\n    if(rTO.TsCompleted===-1||rTO.TsCompleted===null||rTO.TsCompleted===undefined||rTO.TsCompleted===''){rTO['nIsDone']=false}else{const compD:Date=this.dT.Dut(rTO.TsCompleted);rTO.nCompleted=this.dT.format(compD,'EEE, d MMM yyyy');rTO['nIsDone']=true};\n    if(rTO.UserEntry===rTO.UserResponsible){if(rTO['nIsDone']){this.myTasksDone.push(rTO)}else{this.myTasksToDo.push(rTO)}}\n    else{if(rTO['nIsDone']){this.assTasksDone.push(rTO)}else{this.assTasksAssigned.push(rTO)}}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  updateListCounts() { this.logger.info('[TabTasks|updateListCount] ()...');\n    for(let i=0;i<this.tLists.length;i++){const lN:string=this.tLists[i].charAt(0).toLowerCase()+this.tLists[i].slice(1);const tLNo:number=this[lN].length;this['total'+this.tLists[i]]=tLNo}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  tTSegChanged(ev:any) {\n    this.logger.info('[TabTasks|segmentChanged] ('+ev.detail.value+')...');\n    this.tTSegProps.tTValue=ev.detail.value;\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  disableRefresher(togV:boolean) { this.preventRefreshPull=togV }\n////////////////////////////////////////////////////////////////////////////////////////\n  async doRefresh(event) { this.logger.info('[TabTasks|doRefresh] (event)...');\n    this.isRefreshing=true;\n    this.refresher=event.target;\n    this.headerProgress('manual','start',null);\n    this.refreshTasksData()\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async refreshTasksData() { this.logger.info('[TabTasks|refreshTasksData] ()...');\n    let rStage:number=0;\n    this.logger.info('[TabTasks|refreshTasksData] (PROGRESS LISTEN SUBSCRIBED)...');\n    this.evServ.subscribe('refreshTasksProg',()=>{rStage+=25;this.logger.info('[TabTasks|refreshTasksData] (PROGRESS STAGE TRIGGER) STAGE #'+rStage);\n      if(rStage<100){this.headerProgress('manual','change',rStage)}\n      else{this.evServ.destroy('refreshTasksProg');this.headerProgress('manual','finish',null)}\n    });\n    setTimeout(()=>{this.syncServ.doTasksSync('refresh')},250);\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async changeCheckStatus(list:string,index:number,tO:any){ this.logger.info('[TabTasks|changeCheckStatus] ('+list+','+index+',taskObj)...');\n    if(this.tTReorderGroupProps.roDisabled&&!this.deleteMode){\n      this.taskProg=true;\n      $('taskitem-'+tO.Id).addClass('taskgreyed');\n      let opTxt:string;const nKeys:any[]=['nCreated','nDue','nIsLate','nIsDone','nCompleted'];\n      const duTRes=async():Promise<any>=>{\n        if(tO.nIsDone){opTxt='TO DO';const undRes:any=await this.deputy.undoTask(tO.Id,tO.UserResponsible);return Promise.resolve(undRes)}\n        else{opTxt='COMPLETED';const dRes:any=await this.deputy.doTask(tO.Id,tO.UserResponsible);return Promise.resolve(dRes)}};\n      const duT:any=await duTRes();\n      if(duT.result){\n        for(let i=0;i<nKeys.length;i++){if(duT.data.hasOwnProperty(nKeys[i])){delete duT.data[nKeys[i]]}};\n        const trimList:any[]=this[list].filter(t=>t.Id!==tO.Id);this[list]=trimList;\n        this.sqlServ.replaceItem('tasks','Id',duT.data.Id,duT.data);\n        this.formatTask(duT.data);this.evServ.showToast('success','Task Updated: '+opTxt);\n        this.logger.info('[TabTasks|changeCheckStatus] (Success) Update Task Succeeded @ API.');\n        this.updateListCounts();\n        $('taskitem-'+tO.Id).removeClass('taskgreyed');\n        this.taskProg=false\n      }else{\n        this.taskProg=false;\n        $('taskitem-'+tO.Id).removeClass('taskgreyed');\n        this.evServ.showToast('error','Task Update Error');\n        this.logger.info('[TabTasks|changeCheckStatus] (Error) Task Failed @ API.')\n      } \n    }else{this.logger.info('[TabTasks|changeCheckStatus] Ignoring While in Reorder/Delete Mode.')}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async addTask() { this.logger.info('[TabTasks|addTask] ()...');\n    let aTMOpts=this.addTaskModalOpts;\n    aTMOpts['componentProps']={me:this.meObj,my:this.myObj,meAva:this.meAvatar,workAva:this.workAvatar,meEmpId:this.meEmpId,ppl:this.myPpl,myTListLen:this.myTasksToDo.length,assTListLen:this.assTasksAssigned.length};\n    const addTaskModal:any=await this.modalCtrl.create(aTMOpts);\n    document.addEventListener('ionModalDidPresent',()=>{this.addTaskModalOpen=true;this.logger.info('[TabTasks|AddTask] (ionModalDidPresent)')});\n    addTaskModal.onWillDismiss().then(()=>{this.addTaskModalOpen=false;this.logger.info('[TabTasks|AddTask] (ionModalWillDismiss)')});\n    addTaskModal.onDidDismiss().then(({data,role})=>{this.logger.info('[TabTasks|AddTask] (ionModalDidDismiss) >>> (Data): '+data+' >>> (Role): '+role);\n      if(role==='cancel'){this.logger.info('[TabTasks|addTask] (CANCELLED) User Cancelled - No Data.');this.evServ.showToast('warning','Cancelled: Add New Task')}\n      else{const newT:any=data;\n        this.evServ.showToast('success','Success: Added Task #'+newT.Id);\n        this.formatTask(newT);\n        this.sqlServ.insertSingleItem('tasks',newT);\n        this.logger.info('[TabTasks|addTask] (Success) Added New Task #'+newT.Id)\n      }\n    });\n    return await addTaskModal.present();\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  toggleDeleteMode() { this.logger.info('[TabTasks|toggleDeleteMode] ()...');\n    if(this.tTReorderGroupProps.roDisabled){this.deleteMode?this.deleteMode=false:this.deleteMode=true}\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async deleteTask(list:string,tlI:number,tO:any) { this.logger.info('[TabTasks|deleteTask] ('+list+','+tlI+',taskObj)...');\n    this.taskProg=true;\n    $('taskitem-'+tO.Id).addClass('taskgreyed');\n    const delRes=(dbRes:boolean,apiRes)=>{\n      const listFns=()=>{const trimList:any[]=this[list].filter(t=>t.Id!==tO.Id);this[list]=trimList;this.updateListCounts()};\n      if(dbRes&&apiRes){listFns();this.evServ.showToast('success','Task Deleted - OK')}\n      else{\n        if(!dbRes&&!apiRes){this.evServ.showToast('error','Task Delete Errors (DB+API)')}\n        else if(!dbRes&&apiRes){listFns();this.evServ.showToast('warning','Task Delete Error (DB)')}\n        else{listFns();this.evServ.showToast('warning','Task Delete Error (API)')}\n      };\n      this.taskProg=false;\n      $('taskitem-'+tO.Id).removeClass('taskgreyed');\n    };\n    const delApiRes:any=await this.deputy.deleteTask(tO.Id);\n    const delDbRes:boolean=await this.sqlServ.deleteItem('tasks','Id',tO.Id);\n    delRes(delApiRes.result,delDbRes)\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async toggleReorderList(){ this.logger.info('[TabTasks|reorderList] ()...');\n    console.log('On Click Reorder Btn');console.log(this.myTasksToDo);\n    const roDis=():boolean=>{return this.tasksReorderGroup.disabled};\n    const togDis=(v:boolean)=>{this.tasksReorderGroup.disabled=v;this.tTReorderGroupProps.roDisabled=v};\n    if(roDis()){ // ENABLE REORDER\n      togDis(false);\n      if(this.beforeROIds.length>0){this.beforeROIds=[]};\n      for(let i=0;i<this.myTasksToDo.length;i++){this.beforeROIds.push(this.myTasksToDo[i].Id)};\n    }else{ // DISABLE REORDER\n      togDis(true);\n      const newList:any[]=this.myTasksToDo;\n      if(this.afterROIds.length>0){this.afterROIds=[]};\n      for(let i=0;i<newList.length;i++){this.afterROIds.push(newList[i].Id)};\n      const compStrOld:string=this.beforeROIds.join(',');console.log(compStrOld);\n      const compStrNew:string=this.afterROIds.join(',');console.log(compStrNew);\n      if(compStrNew===compStrOld){this.logger.info('[TabTasks|reorderList|Disable] (SAME ORDER) - Not Saving/Chaning.')}\n      else{\n        this.logger.info('[TabTasks|reorderList|Disable] (NEW ORDER) - Doing Save @ API/DB Level...');\n        for(let i=0;i<newList.length;i++){ const nTO:any=newList[i];\n          const apiRORes:any=await this.deputy.reorderTask(this.meEmpId,nTO);\n          if(apiRORes.result){ const apiNTO:any=apiRORes.data;\n            this.logger.info('[TabTasks|toggleReorderList|API Update Order] (SUCCESS): '+apiNTO.Question+' (ID #'+apiNTO.Id+') - API Order = '+apiNTO.SortOrder);\n            const dbRORes:boolean=await this.sqlServ.updateTaskSortOrder(apiNTO.Id,apiNTO.SortOrder);\n            if(dbRORes){this.logger.info('[TabTasks|toggleReorderList|DB Update Order] (SUCCESS) Updated Order @ DB - OK')}\n            else{this.logger.info('[TabTasks|toggleReorderList|DB Update Order] (ERROR) Updating Order @ DB - BAD')}\n          }else{this.logger.info('[TabTasks|toggleReorderList|API Update Order] (ERROR): '+apiRORes.data)}\n        }\n      }\n    }\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  async doReorder(event) {\n    this.logger.info('Before Reorder: ');\n    for(let i=0;i<this.myTasksToDo.length;i++){const bT:any=this.myTasksToDo[i];this.logger.info('['+i+'] '+bT.Question+' - Order: '+bT.SortOrder)};\n    this.myTasksToDo=event.detail.complete(this.myTasksToDo);\n    for(let i=0;i<this.myTasksToDo.length;i++){this.myTasksToDo[i].SortOrder=i};\n    this.logger.info('After Reorder: ');\n    for(let i=0;i<this.myTasksToDo.length;i++){const aT:any=this.myTasksToDo[i];this.logger.info('['+i+'] '+aT.Question+' - Order: '+aT.SortOrder)};\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  ionViewWillLeave() { this.logger.info('[TabTasks|ionViewWillLeave] ()...') }\n////////////////////////////////////////////////////////////////////////////////////////\n  ionViewDidLeave() { this.logger.info('[TabTasks|ionViewDidLeave] ()...');\n    const titleBar=$('.hcl-leftbar.'+this.tabKey);const animBarEnd=$('.sheriff-title-leftanimbar-inner.'+this.tabKey);const titleText=$('.sheriff-title.tight-wrap.'+this.tabKey);$(titleBar).css('width','0');$(animBarEnd).removeClass('showing');$(titleText).removeClass('scrolledin');$(titleBar).removeClass('dimmed')\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n  headerProgress(mode, action, data) {\n    this.logger.info('[TabTasks|headerProgress] (' + mode + ', ' + action + ', ' + data + ')...');\n    const circProgEle = $('.hcl-progcirc.' + this.tabKey); const starEle = $('.hcl-star.' + this.tabKey); const sLogoEle = $('.hcl-slogo.' + this.tabKey);\n    const startRoutine = () => { $(sLogoEle).css('transform', 'scale(.9)'); this.progCirc.percent = 0; $(starEle).css('transform', 'rotate(0deg)'); if ($(circProgEle).css('display', 'none')) { $(circProgEle).css('display', 'unset') } this.progCirc.animation = false; this.progCirc.outerStrokeColor = '#FF9800'; }\n    const finishRoutine = () => { $(sLogoEle).css('transform', 'unset'); this.progCirc.percent = 100; $(starEle).css('transform', 'rotate(0deg)'); this.progCirc.outerStrokeColor = '#4caf50'; this.myAniCSS('.hcl-progcirc.' + this.tabKey, 'fadeOut', 0, 1400, 'remove', 'hide'); this.refresher.complete(); this.isRefreshing = false; }\n    if (mode === 'manual') {\n      if(action==='start'){startRoutine();this.progCirc.animation=true}\n      else if(action==='change'){this.progCirc.percent=data;$(starEle).css('transform','rotate('+((360*data)/100)+')deg')}\n      else if(action==='finish'){finishRoutine();this.progCirc.animation=false}\n    }\n    if (mode === 'timed') { startRoutine(); const incPercEaLoop = (20 / data) * 1000; const rotStarEaLoop = (72 / data) * 1000; let starRotCount = 0; const timedProgLoop = setInterval(() => { this.progCirc.percent += incPercEaLoop; starRotCount += rotStarEaLoop; $(starEle).css('transform', 'rotate(' + starRotCount + 'deg)'); if (this.progCirc.percent >= 100) { clearInterval(timedProgLoop); finishRoutine(); } }, 200); }\n  }\n //////////////////////////////////////////////////////////////////////////////////////// \n  myAniCSS(theEle, aniName, aniDel, aniDur, aniEnd, eleEnd) { // #myElement, tada, 0-1500, 0-1500, keep/remove, show/hide/remove\n    this.logger.info('[TabTasks|myAniCSS] (' + theEle + ', ' + aniName + ', ' + aniDel + ', ' + aniDur + ', ' + aniEnd + ', ' + eleEnd + ')...');\n    const doAni = () => new Promise((resolve) => {\n      const aniStr = 'animate__animated animate__' + aniName; const delStr = 'animDel-' + aniDel; const durStr = 'animDur-' + aniDur;\n      $(theEle).on('animationend', () => { \n        if ( aniEnd === 'remove' ) { $(theEle).removeClass(delStr).removeClass(durStr).removeClass(aniStr); }\n        if ( eleEnd === 'remove' ) { $(theEle).remove(); }\n        if ( eleEnd === 'hide' ) { $(theEle).css('display', 'none'); }\n        resolve(true);\n      });\n      if ( aniDel > 0 ) { $(theEle).addClass(delStr); }\n      if ( aniDur > 0 ) { $(theEle).addClass(durStr); }\n      if ( $(theEle).length > 0 ) { $(theEle).addClass(aniStr); }\n    });\n    doAni();\n  }\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YWJ0YXNrcy5wYWdlLnNjc3MifQ== */\";","export default \"<!-- TAB-PAGE MAIN HEADER - STARTS >>> -->\\n<ion-header class=\\\"sheriff-header sheriff-tabpage-header\\\">\\n    <ion-toolbar class=\\\"sheriff-toolbar\\\">\\n        <div class=\\\"sheriff-header-background-wrapper\\\">\\n            <div class=\\\"sheriff-header-droidstatus-padding-wrapper\\\"></div>\\n            <div class=\\\"sheriff-header-background-inner-wrapper\\\">\\n                <ion-grid class=\\\"sheriff-grid sheriff-page-header-grid\\\">\\n                    <ion-row class=\\\"sheriff-row sheriff-page-header-row\\\">\\n                        <ion-col class=\\\"sheriff-col sheriff-page-header-col left-col tabtasks\\\">\\n                            <div class=\\\"sheriff-title-leftanimbar-wrapper hcl-leftbar tabtasks\\\">\\n                                <div class=\\\"sheriff-title-leftanimbar-inner tabtasks\\\"></div>\\n                            </div>\\n                            <div class=\\\"sheriff-header-toolbar-btn-wrapper left-side\\\">\\n                                <div class=\\\"sheriff-page-title sheriff-heading-sansman hcl-title tabtasks\\\">\\n                                    <div class=\\\"sheriff-title tight-wrap tabtasks\\\">Tasks</div>\\n                                </div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col class=\\\"sheriff-col sheriff-page-header-col middle-logo-col2\\\">\\n                            <div class=\\\"sheriff-page-header-logo-wrapper\\\">\\n                                <div class=\\\"sheriff-page-header-logo-inner-wrapper\\\">\\n                                    <div class=\\\"sheriff-page-header-logo-highlight-layer hcl-ring tabtasks\\\"></div>\\n                                    <div id=\\\"sheriff-circle-progress-header-wrapper\\\" class=\\\"sheriff-progress-circle tabtasks hcl-progcirc tabtasks\\\">\\n                                        <circle-progress [responsive]=progCirc.responsive [showTitle]=progCirc.showTitle [showSubtitle]=progCirc.showSubtitle [showUnits]=progCirc.showUnits [percent]=progCirc.percent [radius]=progCirc.radius [outerStrokeWidth]=progCirc.outerStrokeWidth [showInnerStroke]=progCirc.showInnerStroke\\n                                            [outerStrokeColor]=progCirc.outerStrokeColor [animation]=progCirc.animation [backgroundPadding]=progCirc.backgroundPadding [animationDuration]=progCirc.animationDuration></circle-progress>\\n                                    </div>\\n                                    <img [ngClass]=\\\"{'lilblur-star':taskProg}\\\" src=\\\"../../../assets/img/loadingstar.png\\\" class=\\\"sheriff-page-header-starbadge-img hcl-star tabtasks\\\">\\n                                    <img [ngClass]=\\\"{'lilrotate-s':taskProg}\\\" src=\\\"../../../assets/img/slogo-w.png\\\" class=\\\"sheriff-page-header-main-logo-img hcl-slogo tabtasks\\\">\\n                                </div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col class=\\\"sheriff-col sheriff-page-header-col right-menubtns-col3\\\">\\n                            <ion-grid class=\\\"sheriff-grid tab-header-action-btn-grid tasks\\\">\\n                                <ion-row class=\\\"sheriff-row tab-header-action-btn-row tasks\\\">\\n                                    <ion-col class=\\\"sheriff-col tab-header-action-btn-col tasks reorder-btn-col\\\">\\n                                        <ion-button (click)=\\\"toggleReorderList()\\\" [disabled]=\\\"tTSegProps.tTValue==='asstasks'||deleteMode\\\" [ngClass]=\\\"{'headbtn-ro-active':!this.tTReorderGroupProps.roDisabled}\\\" class=\\\"sheriff-trans-btn tab-header-action-btn tasks reorder-btn\\\">\\n                                            <ion-icon *ngIf=\\\"this.tTReorderGroupProps.roDisabled\\\" class=\\\"sheriff-trans-btn-ico header-opt-btn-ico reorder-btn-ico\\\" name=\\\"shuffle\\\"></ion-icon>\\n                                            <ion-icon *ngIf=\\\"!this.tTReorderGroupProps.roDisabled\\\" class=\\\"sheriff-trans-btn-ico header-opt-btn-ico reorder-btn-ico close\\\" name=\\\"checkmark\\\"></ion-icon>\\n                                        </ion-button>\\n                                    </ion-col>\\n                                    <ion-col class=\\\"sheriff-col tab-header-action-btn-col tasks share-btn-col\\\">\\n                                        <ion-button (click)=\\\"toggleDeleteMode()\\\" [disabled]=\\\"!this.tTReorderGroupProps.roDisabled\\\" [ngClass]=\\\"{'headbtn-del-active':deleteMode}\\\" class=\\\"sheriff-trans-btn tab-header-action-btn tasks share-btn\\\">\\n                                            <ion-icon *ngIf=\\\"!deleteMode\\\" class=\\\"sheriff-trans-btn-ico header-opt-btn-ico share-btn-ico\\\" name=\\\"create\\\"></ion-icon>\\n                                            <ion-icon *ngIf=\\\"deleteMode\\\" class=\\\"sheriff-trans-btn-ico header-opt-btn-ico share-btn-ico close\\\" name=\\\"close\\\"></ion-icon>\\n                                        </ion-button>\\n                                    </ion-col>\\n                                    <ion-col class=\\\"sheriff-col tab-header-action-btn-col tasks main-menu-btn-col\\\">\\n                                        <div class=\\\"sheriff-header-toolbar-btn-wrapper right-side\\\">\\n                                            <div class=\\\"sheriff-menu-button-wrapper\\\">\\n                                                <ion-menu-button class=\\\"sheriff-menu-button tabtasks\\\" autoHide=\\\"false\\\">\\n                                                    <img src=\\\"../../../assets/img/sheriff-mainmenu-s.png\\\" class=\\\"sheriff-mainmenuico\\\">\\n                                                </ion-menu-button>\\n                                            </div>\\n                                        </div>\\n                                    </ion-col>\\n                                </ion-row>\\n                            </ion-grid>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </div>\\n        </div>\\n    </ion-toolbar>\\n</ion-header>\\n<!-- TAB-PAGE MAIN HEADER - ENDS <<< -->\\n<!-- TAB-PAGE MAIN CONTENT WRAPPER - STARTS >>> -->\\n<ion-content class=\\\"main-tabtasks-content-wrapper\\\" [scrollEvents]=\\\"false\\\">\\n    <!-- PAGE REFRESHER - STARTS >>> -->\\n    <ion-refresher #tasksRefresher class=\\\"sheriff-refresher tabs tasks\\\" slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\" disabled=\\\"{{preventRefreshPull}}\\\">\\n        <div class=\\\"sheriff-refresher-noise-wrapper\\\">\\n            <ion-refresher-content class=\\\"sheriff-refresher-content-class\\\" pullingIcon=\\\"arrow-down-circle\\\" refreshingSpinner=\\\"dots\\\"></ion-refresher-content>\\n        </div>\\n    </ion-refresher>\\n    <!-- PAGE REFRESHER - ENDS <<< -->\\n    <div class=\\\"sheriff-tabtasks-mainpage-section-wrapper top-section\\\">\\n        <!-- TAB-TASKS CONTENT HEADING - STARTS >>> -->\\n        <div slot=\\\"fixed\\\" class=\\\"sheriff-tabcontent-mainheading-wrapper tasks\\\">\\n            <ion-grid class=\\\"sheriff-grid sheriff-tabcontent-header-grid tasks\\\">\\n                <ion-row class=\\\"sheriff-row sheriff-tabcontent-header-row row1 tasks\\\">\\n                    <ion-col size=\\\"3\\\" class=\\\"sheriff-col sheriff-tabcontent-header-col col1 tasks\\\">\\n                        <div *ngIf=\\\"deleteMode\\\" class=\\\"tasks-editmode-header-txt-wrapper left\\\">edit mode</div>\\n                        <div *ngIf=\\\"!tTReorderGroupProps.roDisabled\\\" class=\\\"tasks-reordermode-header-txt-wrapper left\\\">reorder mode</div>\\n                    </ion-col>\\n                    <ion-col size=\\\"6\\\" class=\\\"sheriff-col sheriff-tabcontent-header-col col2 tasks\\\">\\n                        <img class=\\\"sheriff-reflect-title\\\" src=\\\"../../assets/img/sheriff-reflecttitle-tasks.png\\\">\\n                    </ion-col>\\n                    <ion-col size=\\\"3\\\" class=\\\"sheriff-col sheriff-tabcontent-header-col col3 sheets\\\">\\n                        <div *ngIf=\\\"deleteMode\\\" class=\\\"tasks-editmode-header-txt-wrapper right\\\">edit mode</div>\\n                        <div *ngIf=\\\"!tTReorderGroupProps.roDisabled\\\" class=\\\"tasks-reordermode-header-txt-wrapper right\\\">reorder mode</div>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-grid>\\n        </div>\\n        <!-- TAB-TASKS CONTENT HEADING - ENDS <<< -->\\n        <!-- TAB-TASKS SEGMENT SWITCHER - STARTS >>> -->\\n        <ion-segment slot=\\\"fixed\\\" #tabTasksSegment [disabled]=\\\"tTSegProps.tTDisabled\\\" [mode]=\\\"tTSegProps.tTMode\\\" [scrollable]=\\\"tTSegProps.tTScrollable\\\" [swipeGesture]=\\\"tTSegProps.tTSwipeGesture\\\" [value]=\\\"tTSegProps.tTValue\\\" (ionChange)=\\\"tTSegChanged($event)\\\"\\n            class=\\\"sheriff-segment tt-segment\\\">\\n            <ion-segment-button #tTSegBtnMyTasks [disabled]=\\\"tTSegProps.tTSegBtns.MyTasksProps.disabled\\\" [layout]=\\\"tTSegProps.tTSegBtns.MyTasksProps.layout\\\" [mode]=\\\"tTSegProps.tTSegBtns.MyTasksProps.mode\\\" [type]=\\\"tTSegProps.tTSegBtns.MyTasksProps.type\\\" [value]=\\\"tTSegProps.tTSegBtns.MyTasksProps.value\\\"\\n                class=\\\"sheriff-segment-button tt-segment-button mytasks-btn\\\">\\n                <div class=\\\"sheriff-icon-wrapper tt-segment-button-ico-label-wrapper mytasks-ico-label-wrapper\\\">\\n                    <ion-icon class=\\\"sheriff-icon tt-segment-button-ico mytasks-ico\\\" name=\\\"person\\\"></ion-icon>\\n                    <div class=\\\"sheriff-label tt-segment-label-txt mytasks-label-txt\\\">My Tasks<span class=\\\"tt-seg-total mytasks\\\">({{myTasksToDo.length+myTasksDone.length}})</span></div>\\n                </div>\\n            </ion-segment-button>\\n            <ion-segment-button #tTSegBtnAssTasks [disabled]=\\\"tTSegProps.tTSegBtns.AssTasksProps.disabled\\\" [layout]=\\\"tTSegProps.tTSegBtns.AssTasksProps.layout\\\" [mode]=\\\"tTSegProps.tTSegBtns.AssTasksProps.mode\\\" [type]=\\\"tTSegProps.tTSegBtns.AssTasksProps.type\\\" [value]=\\\"tTSegProps.tTSegBtns.AssTasksProps.value\\\"\\n                class=\\\"sheriff-segment-button tt-segment-button asstasks-btn\\\">\\n                <div class=\\\"sheriff-icon-wrapper tt-segment-button-ico-label-wrapper asstasks-ico-label-wrapper\\\">\\n                    <ion-icon class=\\\"sheriff-icon tt-segment-button-ico asstasks-ico\\\" name=\\\"people\\\"></ion-icon>\\n                    <div class=\\\"sheriff-label tt-segment-label-txt asstasks-label-txt\\\">Assigned<span class=\\\"tt-seg-total asstasks\\\">({{assTasksAssigned.length+assTasksDone.length}})</span></div>\\n                </div>\\n            </ion-segment-button>\\n        </ion-segment>\\n    </div>\\n    <ion-content [scrollEvents]=\\\"true\\\" class=\\\"sheriff-content tab-content tasks\\\" #tasksContent (ionScrollStart)=\\\"disableRefresher(true)\\\" (ionScrollEnd)=\\\"disableRefresher(false)\\\">\\n        <!-- MAIN LIST WRAPPER -->\\n        <div class=\\\"sheriff-tabcontent-itemlistcontent-wrapper tasks\\\">\\n            <!-- TAB-TASKS SEGMENT SWITCHER - ENDS <<< -->\\n            <!-- MY-TASKS LIST WRAPPER - STARTS >>> -->\\n            <div *ngIf=\\\"tTSegProps.tTValue==='mytasks'\\\" class=\\\"tabtasks-list-wrapper mytasks\\\">\\n                <ion-grid class=\\\"sheriff-grid tasks-group-grid mytasks todo\\\">\\n                    <ion-row class=\\\"sheriff-row tasks-group-row mytasks todo\\\">\\n                        <ion-col size=\\\"6\\\" class=\\\"sheriff-col tasks-group-col mytasks todo label-txt-ico-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalMyTasksToDo>0?'#848484':'#565656'}\\\" class=\\\"tasks-group-label-txt-ico-wrapper mytasks todo\\\">\\n                                <ion-icon class=\\\"sheriff-tasks-group-label-ico mytasks todo\\\" name=\\\"pin\\\"></ion-icon>\\n                                <div class=\\\"sheriff-tasks-group-label-txt mytasks todo\\\">to do</div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"4\\\" class=\\\"sheriff-col tasks-group-col mytasks todo alertsstatus-col\\\">\\n                          <div class=\\\"tasks-alerts-indic-inner-wrapper\\\">\\n                            <ion-icon *ngIf=\\\"(alertMethods.phone===null||alertEvents.task===null)||(alertMethods.phone===false||alertEvents.task===false)\\\" class=\\\"sslider-shift-alerts-indic notification-ico-off\\\" name=\\\"notifications-off-outline\\\"></ion-icon>\\n                            <ion-icon *ngIf=\\\"alertMethods.phone===true&&alertEvents.task===true\\\" class=\\\"sslider-shift-alerts-indic notification-ico-on\\\" name=\\\"notifications\\\"></ion-icon>\\n                            <ion-icon *ngIf=\\\"(alertMethods.calendar===null||alertEvents.task===null)||(alertMethods.calendar===false||alertEvents.task===false)\\\" class=\\\"sslider-shift-alerts-indic calendar-ico-off\\\" name=\\\"calendar-outline\\\"></ion-icon>\\n                            <ion-icon *ngIf=\\\"alertMethods.calendar===true&&alertEvents.task===true\\\" class=\\\"sslider-shift-alerts-indic calendar-ico-on\\\" name=\\\"calendar\\\"></ion-icon>\\n                          </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col tasks-group-col mytasks todo count-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalMyTasksToDo>0?'#848484':'#565656'}\\\" class=\\\"sheriff-tasks-group-countval mytasks todo\\\">\\n                                <span class=\\\"taskgroupcount-val thisgroup\\\">{{totalMyTasksToDo}}</span>\\n                                <span class=\\\"taskgroupcount-slash\\\">/</span>\\n                                <span class=\\\"taskgroupcount-val thissection\\\">{{myTasksToDo.length+myTasksDone.length}}</span>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <!-- TO DO TASK ITEMS HERE -->\\n                <div class=\\\"tabtasks-group-scrollwrapper calcheight mytasks todo\\\">\\n                    <div *ngIf=\\\"totalMyTasksToDo===0\\\" class=\\\"tabtasks-notask-wrapper mytasks todo\\\">no tasks to show</div>\\n                    <ion-reorder-group *ngIf=\\\"totalMyTasksToDo>0\\\" #tasksReorderGroup (ionItemReorder)=\\\"doReorder($event)\\\" class=\\\"tabtasks-tasklistgroup mytasks todo\\\" [disabled]=\\\"tTReorderGroupProps.roDisabled\\\">\\n                        <ion-item *ngFor=\\\"let mtToDo of myTasksToDo;let mtTDi = index\\\" [button]=\\\"true\\\" (click)=\\\"changeCheckStatus('myTasksToDo',mtTDi,mtToDo)\\\" class=\\\"sheriff-taskitem reorder-taskitem mytasks todo taskitem-{{mtToDo.Id}}\\\">\\n                            <ion-grid class=\\\"sheriff-grid sheriff-task-item-grid reorder-item-grid mytasks todo-item todo-{{mtTDi}}\\\">\\n                                <ion-row class=\\\"sheriff-row sheriff-task-item-row reorder-item-row mytasks todo-item-row\\\">\\n                                    <ion-col size=\\\"2\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col mytasks todo-item-cb-col\\\">\\n                                        <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-cb-wrapper ticbwrap-{{mtTDi}}\\\">\\n                                            <ion-checkbox [checked]=\\\"mtToDo.nIsDone\\\" [disabled]=\\\"true\\\" [mode]=\\\"'ios'\\\" class=\\\"sheriff-checkbox task-item-cb task-item-cb-{{mtTDi}}\\\"></ion-checkbox>\\n                                        </div>\\n                                        <div *ngIf=\\\"!tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-reorder-ico-wrapper tirowrap-{{mtTDi}}\\\">\\n                                            <ion-reorder class=\\\"sheriff-reorder tabtasks-reorder\\\">\\n                                                <ion-icon name=\\\"reorder-four\\\" class=\\\"sheriff-reorder-ico tabtasks-reorder-ico\\\"></ion-icon>\\n                                            </ion-reorder>\\n                                        </div>\\n                                        <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&deleteMode\\\" class=\\\"task-item-delete-ico-wrapper tidelwrap-{{mtTDi}}\\\">\\n                                            <ion-button (click)=\\\"deleteTask('myTasksToDo',mtTDi,mtToDo)\\\" [disabled]=\\\"mtToDo.UserEntry!==meEmpId\\\" class=\\\"sheriff-btn task-item-delete-btn\\\">\\n                                                <ion-icon name=\\\"trash\\\" class=\\\"sheriff-task-item-del-ico\\\"></ion-icon>\\n                                            </ion-button>\\n                                        </div>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"9\\\" [ngStyle]=\\\"{'filter':!tTReorderGroupProps.roDisabled?'brightness(.48)':'brightness(1)'}\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col mytasks todo-item-content-col\\\">\\n                                        <ion-grid class=\\\"sheriff-grid sheriff-task-item-label-grid mytasks todo\\\">\\n                                            <ion-row class=\\\"sheriff-task-item-label-row mytasks todo tasktitle-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col mytasks todo title-col\\\">\\n                                                    <div class=\\\"ti-label-title-div\\\">\\n                                                        <span class=\\\"ti-label-value\\\">{{mtToDo.Question}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row class=\\\"sheriff-task-item-label-row mytasks todo taskfrom-row\\\">\\n                                                <ion-col size=\\\"8\\\" class=\\\"sheriff-task-item-label-col mytasks todo from-col\\\">\\n                                                    <div class=\\\"ti-label-from-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico fromperson-ico\\\" name=\\\"person-add-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-prefix-span from\\\">From:</span>\\n                                                        <span class=\\\"ti-label-value\\\">{{mtToDo.nUserEntry}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                                <ion-col size=\\\"4\\\" class=\\\"sheriff-task-item-label-col mytasks todo taskid-col\\\">\\n                                                    <div class=\\\"ti-label-taskid-div\\\">\\n                                                        <span class=\\\"ti-taskid-label-value\\\">#{{mtToDo.Id}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row *ngIf=\\\"mtToDo.Comment!==null\\\" class=\\\"sheriff-task-item-label-row mytasks todo tasknotes-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col mytasks todo notes-col\\\">\\n                                                    <div class=\\\"ti-label-notes-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico notes-ico\\\" name=\\\"newspaper-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-prefix-span notes\\\">Notes:</span>\\n                                                        <span class=\\\"ti-label-value\\\">{{mtToDo.Comment}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row class=\\\"sheriff-task-item-label-row mytasks todo taskdue-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col mytasks todo due-col\\\">\\n                                                    <!-- DUE ON -->\\n                                                    <div *ngIf=\\\"!mtToDo.nIsDone&&mtToDo.DueTimestamp!==-1\\\" [ngStyle]=\\\"{'color':mtToDo.nIsLate?'var(--ion-color-danger)':'#eee'}\\\" class=\\\"ti-label-due-div\\\">\\n                                                        <div *ngIf=\\\"!mtToDo.nIsLate\\\" class=\\\"ti-label-dueon-wrapper std\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"alarm-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span dueon\\\">Due on:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{mtToDo.nDue}}</span>\\n                                                        </div>\\n                                                        <div *ngIf=\\\"mtToDo.nIsLate\\\" class=\\\"ti-label-dueon-wrapper islate\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico overdue\\\" name=\\\"alert-circle-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span dueon\\\">Was Due:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">\\n                                                          <span *ngIf=\\\"mtToDo.nOverDue.years>0||mtToDo.nOverDue.weeks>0||mtToDo.nOverDue.months>0\\\" class=\\\"odue-ago-group long\\\">\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.years>0\\\" class=\\\"ti-label-odue-ago-val years\\\">{{mtToDo.nOverDue.years}} years<span *ngIf=\\\"mtToDo.nOverDue.years>0&&mtToDo.nOverDue.months>0\\\" class=\\\"odue-comma\\\">,</span></span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.months>0\\\" class=\\\"ti-label-odue-ago-val months\\\">{{mtToDo.nOverDue.months}} months</span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.weeks>0&&mtToDo.nOverDue.months===0&&mtToDo.nOverDue.years===0\\\" class=\\\"ti-label-odue-ago-val weeks\\\">{{mtToDo.nOverDue.weeks}} weeks</span>\\n                                                            </span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.years===0&&mtToDo.nOverDue.weeks===0&&mtToDo.nOverDue.months===0\\\" class=\\\"odue-ago-group short\\\">\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.days>0\\\" class=\\\"ti-label-odue-ago-val days\\\">{{mtToDo.nOverDue.days}} days</span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.hours>0&&mtToDo.nOverDue.days===0\\\" class=\\\"ti-label-odue-ago-val hours\\\">{{mtToDo.nOverDue.hours}} hours<span *ngIf=\\\"mtToDo.nOverDue.hours>0&&mtToDo.nOverDue.minutes>0\\\" class=\\\"odue-comma\\\">,</span></span>\\n                                                            <span *ngIf=\\\"mtToDo.nOverDue.minutes>0&&mtToDo.nOverDue.days===0\\\" class=\\\"ti-label-odue-ago-val minutes\\\">{{mtToDo.nOverDue.minutes}} mins</span>\\n                                                            </span>\\n                                                            <span class=\\\"ti-label-odue-ago-suffix\\\">ago</span>\\n                                                            </span>\\n                                                        </div>\\n                                                    </div>\\n                                                    <!-- CREATED ON -->\\n                                                    <div *ngIf=\\\"!mtToDo.nIsDone&&mtToDo.DueTimestamp===-1\\\" class=\\\"ti-label-create-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"create-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span createdon\\\">Created:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{mtToDo.nCreated}}</span>\\n                                                    </div>\\n                                                    <!-- COMPLETED ON -->\\n                                                    <div *ngIf=\\\"mtToDo.nIsDone\\\" class=\\\"ti-label-complete-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span completedon\\\">Completed:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{mtToDo.nCompleted}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                        </ion-grid>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"1\\\" [ngStyle]=\\\"{'filter':!tTReorderGroupProps.roDisabled?'brightness(.48)':'brightness(1)'}\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col mytasks todo-item-reorderorava-col\\\">\\n                                        <ion-avatar class=\\\"tabtasks-from-avatar-avatar\\\">\\n                                            <img src=\\\"{{mtToDo.nFromAvatar}}\\\" class=\\\"tabtasks-from-avatar-img\\\">\\n                                        </ion-avatar>\\n                                    </ion-col>\\n                                </ion-row>\\n                            </ion-grid>\\n                        </ion-item>\\n                    </ion-reorder-group>\\n                </div>\\n                <!-- MY TASKS SPACER -->\\n                <div class=\\\"sheriff-tasks-mytasks-group-divider-spacer\\\"></div>\\n                <!-- MY TASKS - DONE GROUP HEADER -->\\n                <ion-grid *ngIf=\\\"tTReorderGroupProps.roDisabled\\\" class=\\\"sheriff-grid tasks-group-grid mytasks completed\\\">\\n                    <ion-row class=\\\"sheriff-row tasks-group-row mytasks completed\\\">\\n                        <ion-col size=\\\"6\\\" class=\\\"sheriff-col tasks-group-col mytasks completed label-txt-ico-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalMyTasksDone>0?'#848484':'#565656'}\\\" class=\\\"tasks-group-label-txt-ico-wrapper mytasks completed\\\">\\n                                <ion-icon class=\\\"sheriff-tasks-group-label-ico mytasks done\\\" name=\\\"checkmark\\\"></ion-icon>\\n                                <div class=\\\"sheriff-tasks-group-label-txt mytasks completed\\\">completed</div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"4\\\" class=\\\"sheriff-col tasks-group-col mytasks done label-spacer-col\\\"></ion-col>\\n                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col tasks-group-col mytasks todo count-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalMyTasksDone>0?'#848484':'#565656'}\\\" class=\\\"sheriff-tasks-group-countval mytasks done\\\">\\n                                <span class=\\\"taskgroupcount-val thisgroup\\\">{{totalMyTasksDone}}</span>\\n                                <span class=\\\"taskgroupcount-slash\\\">/</span>\\n                                <span class=\\\"taskgroupcount-val thissection\\\">{{myTasksToDo.length+myTasksDone.length}}</span>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <!-- MY TASKS - DONE LIST -->\\n                <div class=\\\"tabtasks-group-scrollwrapper calcheight mytasks done\\\">\\n                    <ion-item-group *ngIf=\\\"tTReorderGroupProps.roDisabled\\\" class=\\\"tabtasks-tasklistgroup mytasks done\\\">\\n                        <div *ngIf=\\\"totalMyTasksDone===0\\\" class=\\\"tabtasks-notask-wrapper mytasks completed\\\">no tasks to show</div>\\n                        <ion-list *ngIf=\\\"totalMyTasksDone>0\\\" class=\\\"sheriff-item-list tabtasks-item-list mytasks donetasks\\\">\\n                            <ion-item *ngFor=\\\"let mtDone of myTasksDone;let mtDi = index\\\" [button]=\\\"true\\\" (click)=\\\"changeCheckStatus('myTasksDone',mtDi,mtDone)\\\" class=\\\"sheriff-taskitem reorder-taskitem mytasks done taskitem-{{mtDone.Id}}\\\">\\n                                <ion-grid class=\\\"sheriff-grid sheriff-task-item-grid reorder-item-grid mytasks done-item done-{{mtDi}}\\\">\\n                                    <ion-row class=\\\"sheriff-row sheriff-task-item-row reorder-item-row mytasks done-item-row\\\">\\n                                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col sheriff-task-item-col mytasks done-item-cb-col\\\">\\n                                            <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-cb-wrapper ticbwrap-{{mtDi}}\\\">\\n                                                <ion-checkbox [checked]=\\\"mtDone.nIsDone\\\" [disabled]=\\\"true\\\" [mode]=\\\"'ios'\\\" class=\\\"sheriff-checkbox task-item-cb task-item-cb-{{mtDi}}\\\"></ion-checkbox>\\n                                            </div>\\n                                            <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&deleteMode\\\" class=\\\"task-item-delete-ico-wrapper tidelwrap-{{mtDi}}\\\">\\n                                                <ion-button (click)=\\\"deleteTask('myTasksDone',mtDi,mtDone)\\\" [disabled]=\\\"mtDone.UserEntry!==meEmpId\\\" class=\\\"sheriff-btn task-item-delete-btn\\\">\\n                                                    <ion-icon name=\\\"trash\\\" class=\\\"sheriff-task-item-del-ico\\\"></ion-icon>\\n                                                </ion-button>\\n                                            </div>\\n                                        </ion-col>\\n                                        <ion-col size=\\\"9\\\" class=\\\"sheriff-col sheriff-task-item-col mytasks done-item-content-col\\\">\\n                                            <ion-grid class=\\\"sheriff-grid sheriff-task-item-label-grid mytasks done\\\">\\n                                                <ion-row class=\\\"sheriff-task-item-label-row mytasks done tasktitle-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col mytasks done title-col\\\">\\n                                                        <div class=\\\"ti-label-title-div\\\">\\n                                                            <span class=\\\"ti-label-value\\\">{{mtDone.Question}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row class=\\\"sheriff-task-item-label-row mytasks done taskfrom-row\\\">\\n                                                    <ion-col size=\\\"8\\\" class=\\\"sheriff-task-item-label-col mytasks done from-col\\\">\\n                                                        <div class=\\\"ti-label-from-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico fromperson-ico\\\" name=\\\"person-add-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-prefix-span from\\\">From:</span>\\n                                                            <span class=\\\"ti-label-value\\\">{{mtDone.nUserEntry}}</span></div>\\n                                                    </ion-col>\\n                                                    <ion-col size=\\\"4\\\" class=\\\"sheriff-task-item-label-col mytasks done taskid-col\\\">\\n                                                        <div class=\\\"ti-label-taskid-div\\\">\\n                                                            <span class=\\\"ti-taskid-label-value\\\">#{{mtDone.Id}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row *ngIf=\\\"mtDone.Comment!==null\\\" class=\\\"sheriff-task-item-label-row mytasks done tasknotes-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col mytasks done notes-col\\\">\\n                                                        <div class=\\\"ti-label-notes-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico notes-ico\\\" name=\\\"newspaper-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-prefix-span notes\\\">Notes:</span>\\n                                                            <span class=\\\"ti-label-value\\\">{{mtDone.Comment}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row class=\\\"sheriff-task-item-label-row mytasks done taskdue-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col mytasks done due-col\\\">\\n                                                        <!-- DUE ON -->\\n                                                        <div *ngIf=\\\"!mtDone.nIsDone&&mtDone.DueTimestamp!==-1\\\" [ngStyle]=\\\"{'color':mtDone.nIsLate?'var(--ion-color-danger)':'#eee'}\\\" class=\\\"ti-label-due-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"alarm-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span dueon\\\">Due on:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{mtDone.nDue}}</span>\\n                                                        </div>\\n                                                        <!-- CREATED ON -->\\n                                                        <div *ngIf=\\\"!mtDone.nIsDone&&mtDone.DueTimestamp===-1\\\" class=\\\"ti-label-create-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"create-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span createdon\\\">Created:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{mtDone.nCreated}}</span>\\n                                                        </div>\\n                                                        <!-- COMPLETED ON -->\\n                                                        <div *ngIf=\\\"mtDone.nIsDone\\\" class=\\\"ti-label-complete-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span completedon\\\">Completed:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{mtDone.nCompleted}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                            </ion-grid>\\n                                        </ion-col>\\n                                        <ion-col size=\\\"1\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col mytasks todo-item-reorderorava-col\\\">\\n                                            <ion-avatar class=\\\"tabtasks-from-avatar-avatar\\\">\\n                                                <img src=\\\"{{mtDone.nFromAvatar}}\\\" class=\\\"tabtasks-from-avatar-img\\\">\\n                                            </ion-avatar>\\n                                        </ion-col>\\n                                    </ion-row>\\n                                </ion-grid>\\n                            </ion-item>\\n                        </ion-list>\\n                    </ion-item-group>\\n                </div>\\n            </div>\\n            <!-- MY-TASKS LIST WRAPPER - ENDS <<< -->\\n            <!-- ASS-TASKS LIST WRAPPER - STARTS >>> -->\\n            <div *ngIf=\\\"tTSegProps.tTValue==='asstasks'\\\" class=\\\"tabtasks-list-wrapper asstasks\\\">\\n                <ion-grid class=\\\"sheriff-grid tasks-group-grid asstasks assigned\\\">\\n                    <ion-row class=\\\"sheriff-row tasks-group-row asstasks assigned\\\">\\n                        <ion-col size=\\\"6\\\" class=\\\"sheriff-col tasks-group-col asstasks assigned label-txt-ico-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalAssTasksAssigned>0?'#848484':'#565656'}\\\" class=\\\"tasks-group-label-txt-ico-wrapper asstasks assigned\\\">\\n                                <ion-icon class=\\\"sheriff-tasks-group-label-ico asstasks assigned\\\" name=\\\"send\\\"></ion-icon>\\n                                <div class=\\\"sheriff-tasks-group-label-txt asstasks assigned\\\">assigned</div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"4\\\" class=\\\"sheriff-col tasks-group-col asstasks assigned label-spacer-col\\\"></ion-col>\\n                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col tasks-group-col asstasks assigned count-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalAssTasksAssigned>0?'#848484':'#565656'}\\\" class=\\\"sheriff-tasks-group-countval asstasks assigned\\\">\\n                                <span class=\\\"taskgroupcount-val thisgroup\\\">{{totalAssTasksAssigned}}</span>\\n                                <span class=\\\"taskgroupcount-slash\\\">/</span>\\n                                <span class=\\\"taskgroupcount-val thissection\\\">{{assTasksAssigned.length+assTasksDone.length}}</span>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <!-- ASSIGNED TASK ITEMS HERE -->\\n                <div class=\\\"tabtasks-group-scrollwrapper calcheight asstasks assigned\\\">\\n                    <div *ngIf=\\\"totalAssTasksAssigned===0\\\" class=\\\"tabtasks-notask-wrapper asstasks assigned\\\">no tasks to show</div>\\n                    <ion-item-group class=\\\"tabtasks-tasklistgroup asstasks assigned\\\">\\n                        <ion-item *ngFor=\\\"let atAssigned of assTasksAssigned;let atAi = index\\\" [button]=\\\"true\\\" (click)=\\\"changeCheckStatus('assTasksAssigned',atAi,atAssigned)\\\" class=\\\"sheriff-taskitem reorder-taskitem asstasks assigned taskitem-{{atAssigned.Id}}\\\">\\n                            <ion-grid class=\\\"sheriff-grid sheriff-task-item-grid reorder-item-grid asstasks assigned-item todo-{{atAi}}\\\">\\n                                <ion-row class=\\\"sheriff-row sheriff-task-item-row reorder-item-row asstasks assigned-item-row\\\">\\n                                    <ion-col size=\\\"2\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col asstasks assigned-item-cb-col\\\">\\n                                        <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-cb-wrapper ticbwrap-{{atAi}}\\\">\\n                                            <ion-checkbox [checked]=\\\"atAssigned.nIsDone\\\" [disabled]=\\\"true\\\" [mode]=\\\"'ios'\\\" class=\\\"sheriff-checkbox task-item-cb task-item-cb-{{atAi}}\\\"></ion-checkbox>\\n                                        </div>\\n                                        <div *ngIf=\\\"!tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-reorder-ico-wrapper tirowrap-{{atAi}}\\\">\\n                                            <ion-icon name=\\\"swap-vertical\\\" class=\\\"sheriff-reorder-ico tabtasks-reorder-ico\\\"></ion-icon>\\n                                        </div>\\n                                        <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&deleteMode\\\" class=\\\"task-item-delete-ico-wrapper tidelwrap-{{atAi}}\\\">\\n                                            <ion-button (click)=\\\"deleteTask('assTasksAssigned',atAi,atAssigned)\\\" [disabled]=\\\"atAssigned.UserEntry!==meEmpId\\\" class=\\\"sheriff-btn task-item-delete-btn\\\">\\n                                                <ion-icon name=\\\"trash\\\" class=\\\"sheriff-task-item-del-ico\\\"></ion-icon>\\n                                            </ion-button>\\n                                        </div>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"9\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col asstasks assigned-item-content-col\\\">\\n                                        <ion-grid class=\\\"sheriff-grid sheriff-task-item-label-grid asstasks assigned\\\">\\n                                            <ion-row class=\\\"sheriff-task-item-label-row asstasks assigned tasktitle-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col asstasks assigned title-col\\\">\\n                                                    <div class=\\\"ti-label-title-div\\\">\\n                                                        <span class=\\\"ti-label-value\\\">{{atAssigned.Question}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row class=\\\"sheriff-task-item-label-row asstasks assigned taskfrom-row\\\">\\n                                                <ion-col size=\\\"8\\\" class=\\\"sheriff-task-item-label-col asstasks assigned from-col\\\">\\n                                                    <div class=\\\"ti-label-from-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico fromperson-ico\\\" name=\\\"person-add-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-prefix-span from\\\">Assigned:</span>\\n                                                        <span class=\\\"ti-label-value\\\">{{atAssigned.nAssigned}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                                <ion-col size=\\\"4\\\" class=\\\"sheriff-task-item-label-col asstasks assigned taskid-col\\\">\\n                                                    <div class=\\\"ti-label-taskid-div\\\">\\n                                                        <span class=\\\"ti-taskid-label-value\\\">#{{atAssigned.Id}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row *ngIf=\\\"atAssigned.Comment!==null\\\" class=\\\"sheriff-task-item-label-row asstasks assigned tasknotes-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col asstasks assigned notes-col\\\">\\n                                                    <div class=\\\"ti-label-notes-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico notes-ico\\\" name=\\\"newspaper-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-prefix-span notes\\\">Notes:</span>\\n                                                        <span class=\\\"ti-label-value\\\">{{atAssigned.Comment}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                            <ion-row class=\\\"sheriff-task-item-label-row asstasks assigned taskdue-row\\\">\\n                                                <ion-col class=\\\"sheriff-task-item-label-col asstasks assigned due-col\\\">\\n                                                    <!-- DUE ON -->\\n                                                    <div *ngIf=\\\"!atAssigned.nIsDone&&atAssigned.DueTimestamp!==-1\\\" [ngStyle]=\\\"{'color':atAssigned.nIsLate?'var(--ion-color-danger)':'#eee'}\\\" class=\\\"ti-label-due-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"alarm-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span dueon\\\">Due on:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{atAssigned.nDue}}</span>\\n                                                    </div>\\n                                                    <!-- CREATED ON -->\\n                                                    <div *ngIf=\\\"!atAssigned.nIsDone&&atAssigned.DueTimestamp===-1\\\" class=\\\"ti-label-create-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"create-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span createdon\\\">Created:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{atAssigned.nCreated}}</span>\\n                                                    </div>\\n                                                    <!-- COMPLETED ON -->\\n                                                    <div *ngIf=\\\"atAssigned.nIsDone\\\" class=\\\"ti-label-complete-div\\\">\\n                                                        <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n                                                        <span class=\\\"ti-label-due-prefix-span completedon\\\">Completed:</span>\\n                                                        <span class=\\\"ti-label-due-datetime-span time\\\">{{atAssigned.nCompleted}}</span>\\n                                                    </div>\\n                                                </ion-col>\\n                                            </ion-row>\\n                                        </ion-grid>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"1\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col asstasks assigned-item-reorderorava-col\\\">\\n                                        <ion-avatar class=\\\"tabtasks-from-avatar-avatar\\\">\\n                                            <img src=\\\"{{atAssigned.nAssignedAvatar}}\\\" class=\\\"tabtasks-from-avatar-img\\\">\\n                                        </ion-avatar>\\n                                    </ion-col>\\n                                </ion-row>\\n                            </ion-grid>\\n                        </ion-item>\\n                    </ion-item-group>\\n                </div>\\n                <!-- ASS TASKS SPACER -->\\n                <div class=\\\"sheriff-tasks-mytasks-group-divider-spacer\\\"></div>\\n                <!-- ASS TASKS - DONE GROUP HEADER -->\\n                <ion-grid class=\\\"sheriff-grid tasks-group-grid asstasks completed\\\">\\n                    <ion-row class=\\\"sheriff-row tasks-group-row asstasks completed\\\">\\n                        <ion-col size=\\\"6\\\" class=\\\"sheriff-col tasks-group-col asstasks completed label-txt-ico-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalAssTasksDone>0?'#848484':'#565656'}\\\" class=\\\"tasks-group-label-txt-ico-wrapper asstasks completed\\\">\\n                                <ion-icon class=\\\"sheriff-tasks-group-label-ico asstasks done\\\" name=\\\"checkmark\\\"></ion-icon>\\n                                <div class=\\\"sheriff-tasks-group-label-txt asstasks completed\\\">completed</div>\\n                            </div>\\n                        </ion-col>\\n                        <ion-col size=\\\"4\\\" class=\\\"sheriff-col tasks-group-col asstasks completed label-spacer-col\\\"></ion-col>\\n                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col tasks-group-col asstasks completed count-col\\\">\\n                            <div [ngStyle]=\\\"{'color':totalAssTasksDone>0?'#848484':'#565656'}\\\" class=\\\"sheriff-tasks-group-countval asstasks done\\\">\\n                                <span class=\\\"taskgroupcount-val thisgroup\\\">{{totalAssTasksDone}}</span>\\n                                <span class=\\\"taskgroupcount-slash\\\">/</span>\\n                                <span class=\\\"taskgroupcount-val thissection\\\">{{assTasksAssigned.length+assTasksDone.length}}</span>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <!-- ASS TASKS - DONE LIST -->\\n                <div class=\\\"tabtasks-group-scrollwrapper calcheight asstasks done\\\">\\n                    <ion-item-group class=\\\"tabtasks-tasklistgroup asstasks done\\\">\\n                        <div *ngIf=\\\"totalAssTasksDone===0\\\" class=\\\"tabtasks-notask-wrapper asstasks completed\\\">no tasks to show</div>\\n                        <ion-list *ngIf=\\\"totalAssTasksDone>0\\\" class=\\\"sheriff-item-list tabtasks-item-list asstasks donetasks\\\">\\n                            <ion-item *ngFor=\\\"let atDone of assTasksDone;let atDi = index\\\" [button]=\\\"true\\\" (click)=\\\"changeCheckStatus('assTasksDone',atDi,atDone)\\\" class=\\\"sheriff-taskitem reorder-taskitem asstasks done taskitem-{{atDone.Id}}\\\">\\n                                <ion-grid class=\\\"sheriff-grid sheriff-task-item-grid reorder-item-grid asstasks done-item done-{{atDi}}\\\">\\n                                    <ion-row class=\\\"sheriff-row sheriff-task-item-row reorder-item-row asstasks done-item-row\\\">\\n                                        <ion-col size=\\\"2\\\" class=\\\"sheriff-col sheriff-task-item-col asstasks done-item-cb-col\\\">\\n                                            <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&!deleteMode\\\" class=\\\"task-item-cb-wrapper ticbwrap-{{atDi}}\\\">\\n                                                <ion-checkbox [checked]=\\\"atDone.nIsDone\\\" [disabled]=\\\"true\\\" [mode]=\\\"'ios'\\\" class=\\\"sheriff-checkbox task-item-cb task-item-cb-{{atDi}}\\\"></ion-checkbox>\\n                                            </div>\\n                                            <div *ngIf=\\\"tTReorderGroupProps.roDisabled&&deleteMode\\\" class=\\\"task-item-delete-ico-wrapper tidelwrap-{{atDi}}\\\">\\n                                                <ion-button (click)=\\\"deleteTask('myTasksDone',atDi,atDone)\\\" [disabled]=\\\"atDone.UserEntry!==meEmpId\\\" class=\\\"sheriff-btn task-item-delete-btn\\\">\\n                                                    <ion-icon name=\\\"trash\\\" class=\\\"sheriff-task-item-del-ico\\\"></ion-icon>\\n                                                </ion-button>\\n                                            </div>\\n                                        </ion-col>\\n                                        <ion-col size=\\\"9\\\" class=\\\"sheriff-col sheriff-task-item-col asstasks done-item-content-col\\\">\\n                                            <ion-grid class=\\\"sheriff-grid sheriff-task-item-label-grid asstasks done\\\">\\n                                                <ion-row class=\\\"sheriff-task-item-label-row asstasks done tasktitle-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col asstasks done title-col\\\">\\n                                                        <div class=\\\"ti-label-title-div\\\">\\n                                                            <span class=\\\"ti-label-value\\\">{{atDone.Question}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row class=\\\"sheriff-task-item-label-row asstasks done taskfrom-row\\\">\\n                                                    <ion-col size=\\\"8\\\" class=\\\"sheriff-task-item-label-col asstasks done from-col\\\">\\n                                                        <div class=\\\"ti-label-from-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico fromperson-ico\\\" name=\\\"person-add-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-prefix-span from\\\">Assigned:</span>\\n                                                            <span class=\\\"ti-label-value\\\">{{atDone.nAssigned}}</span></div>\\n                                                    </ion-col>\\n                                                    <ion-col size=\\\"4\\\" class=\\\"sheriff-task-item-label-col asstasks done taskid-col\\\">\\n                                                        <div class=\\\"ti-label-taskid-div\\\">\\n                                                            <span class=\\\"ti-taskid-label-value\\\">#{{atDone.Id}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row *ngIf=\\\"atDone.Comment!==null\\\" class=\\\"sheriff-task-item-label-row asstasks done tasknotes-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col mytasks done notes-col\\\">\\n                                                        <div class=\\\"ti-label-notes-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico notes-ico\\\" name=\\\"newspaper-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-prefix-span notes\\\">Notes:</span>\\n                                                            <span class=\\\"ti-label-value\\\">{{atDone.Comment}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                                <ion-row class=\\\"sheriff-task-item-label-row asstasks done taskdue-row\\\">\\n                                                    <ion-col class=\\\"sheriff-task-item-label-col asstasks done due-col\\\">\\n                                                        <!-- DUE ON -->\\n                                                        <div *ngIf=\\\"!atDone.nIsDone&&atDone.DueTimestamp!==-1\\\" [ngStyle]=\\\"{'color':atDone.nIsLate?'var(--ion-color-danger)':'#eee'}\\\" class=\\\"ti-label-due-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"alarm-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span dueon\\\">Due on:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{atDone.nDue}}</span>\\n                                                        </div>\\n                                                        <!-- CREATED ON -->\\n                                                        <div *ngIf=\\\"!atDone.nIsDone&&atDone.DueTimestamp===-1\\\" class=\\\"ti-label-create-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"create-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span createdon\\\">Created:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{atDone.nCreated}}</span>\\n                                                        </div>\\n                                                        <!-- COMPLETED ON -->\\n                                                        <div *ngIf=\\\"atDone.nIsDone\\\" class=\\\"ti-label-complete-div\\\">\\n                                                            <ion-icon class=\\\"ti-label-ico due-date-ico\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n                                                            <span class=\\\"ti-label-due-prefix-span completedon\\\">Completed:</span>\\n                                                            <span class=\\\"ti-label-due-datetime-span time\\\">{{atDone.nCompleted}}</span>\\n                                                        </div>\\n                                                    </ion-col>\\n                                                </ion-row>\\n                                            </ion-grid>\\n                                        </ion-col>\\n                                        <ion-col size=\\\"1\\\" class=\\\"sheriff-col sheriff-task-item-col reorder-item-col asstasks done-item-reorderorava-col\\\">\\n                                            <ion-avatar class=\\\"tabtasks-from-avatar-avatar\\\">\\n                                                <img src=\\\"{{atDone.nAssignedAvatar}}\\\" class=\\\"tabtasks-from-avatar-img\\\">\\n                                            </ion-avatar>\\n                                        </ion-col>\\n                                    </ion-row>\\n                                </ion-grid>\\n                            </ion-item>\\n                        </ion-list>\\n                    </ion-item-group>\\n                </div>\\n            </div>\\n            <!-- ASS-TASKS LIST WRAPPER - ENDS <<< -->\\n        </div>\\n    </ion-content>\\n</ion-content>\\n<!-- /////////////////////////////////////////////// -->\\n<!-- TAB-TASKS ITEM LIST CONTENT - ENDS <<< -->\\n<!-- TAB-TASKS FAB BUTTON - STARTS -->\\n<ion-fab class=\\\"sheriff-fader-fab tabtasks\\\" [vertical]=\\\"'bottom'\\\" [horizontal]=\\\"'end'\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"addTask()\\\" class=\\\"sheriff-tab-fab tasks addtask\\\">\\n        <img src=\\\"../../../assets/img/sheriff-fab-addtask-ico.png\\\" class=\\\"addtaskfabimg\\\">\\n    </ion-fab-button>\\n</ion-fab>\\n<!-- TAB-TASKS FAB BUTTON - ENDS <<< -->\";"],"sourceRoot":"webpack:///"}